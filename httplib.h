





<!DOCTYPE html>
<html
  lang="en"
  
  data-color-mode="auto" data-light-theme="light" data-dark-theme="dark"
  data-a11y-animated-images="system" data-a11y-link-underlines="true"
  
  >



  <head>
    <meta charset="utf-8">
  <link rel="dns-prefetch" href="https://github.githubassets.com">
  <link rel="dns-prefetch" href="https://avatars.githubusercontent.com">
  <link rel="dns-prefetch" href="https://github-cloud.s3.amazonaws.com">
  <link rel="dns-prefetch" href="https://user-images.githubusercontent.com/">
  <link rel="preconnect" href="https://github.githubassets.com" crossorigin>
  <link rel="preconnect" href="https://avatars.githubusercontent.com">

  


  <link crossorigin="anonymous" media="all" rel="stylesheet" href="https://github.githubassets.com/assets/light-74231a1f3bbb.css" /><link crossorigin="anonymous" media="all" rel="stylesheet" href="https://github.githubassets.com/assets/light_high_contrast-83beb16e0ecf.css" /><link crossorigin="anonymous" media="all" rel="stylesheet" href="https://github.githubassets.com/assets/dark-8a995f0bacd4.css" /><link crossorigin="anonymous" media="all" rel="stylesheet" href="https://github.githubassets.com/assets/dark_high_contrast-9ac301c3ebe5.css" /><link data-color-theme="light" crossorigin="anonymous" media="all" rel="stylesheet" data-href="https://github.githubassets.com/assets/light-74231a1f3bbb.css" /><link data-color-theme="light_high_contrast" crossorigin="anonymous" media="all" rel="stylesheet" data-href="https://github.githubassets.com/assets/light_high_contrast-83beb16e0ecf.css" /><link data-color-theme="light_colorblind" crossorigin="anonymous" media="all" rel="stylesheet" data-href="https://github.githubassets.com/assets/light_colorblind-f91b0f603451.css" /><link data-color-theme="light_colorblind_high_contrast" crossorigin="anonymous" media="all" rel="stylesheet" data-href="https://github.githubassets.com/assets/light_colorblind_high_contrast-5aebfa54b215.css" /><link data-color-theme="light_tritanopia" crossorigin="anonymous" media="all" rel="stylesheet" data-href="https://github.githubassets.com/assets/light_tritanopia-6e122dab64fc.css" /><link data-color-theme="light_tritanopia_high_contrast" crossorigin="anonymous" media="all" rel="stylesheet" data-href="https://github.githubassets.com/assets/light_tritanopia_high_contrast-b32664e28b79.css" /><link data-color-theme="dark" crossorigin="anonymous" media="all" rel="stylesheet" data-href="https://github.githubassets.com/assets/dark-8a995f0bacd4.css" /><link data-color-theme="dark_high_contrast" crossorigin="anonymous" media="all" rel="stylesheet" data-href="https://github.githubassets.com/assets/dark_high_contrast-9ac301c3ebe5.css" /><link data-color-theme="dark_colorblind" crossorigin="anonymous" media="all" rel="stylesheet" data-href="https://github.githubassets.com/assets/dark_colorblind-cd826e8636dc.css" /><link data-color-theme="dark_colorblind_high_contrast" crossorigin="anonymous" media="all" rel="stylesheet" data-href="https://github.githubassets.com/assets/dark_colorblind_high_contrast-131d53fe187c.css" /><link data-color-theme="dark_tritanopia" crossorigin="anonymous" media="all" rel="stylesheet" data-href="https://github.githubassets.com/assets/dark_tritanopia-18119e682df0.css" /><link data-color-theme="dark_tritanopia_high_contrast" crossorigin="anonymous" media="all" rel="stylesheet" data-href="https://github.githubassets.com/assets/dark_tritanopia_high_contrast-63c0358957ba.css" /><link data-color-theme="dark_dimmed" crossorigin="anonymous" media="all" rel="stylesheet" data-href="https://github.githubassets.com/assets/dark_dimmed-f37fb7684b1f.css" /><link data-color-theme="dark_dimmed_high_contrast" crossorigin="anonymous" media="all" rel="stylesheet" data-href="https://github.githubassets.com/assets/dark_dimmed_high_contrast-8f371c75debd.css" />

    <link crossorigin="anonymous" media="all" rel="stylesheet" href="https://github.githubassets.com/assets/primer-primitives-225433424a87.css" />
    <link crossorigin="anonymous" media="all" rel="stylesheet" href="https://github.githubassets.com/assets/primer-b8b91660c29d.css" />
    <link crossorigin="anonymous" media="all" rel="stylesheet" href="https://github.githubassets.com/assets/global-3ccbd788fe33.css" />
    <link crossorigin="anonymous" media="all" rel="stylesheet" href="https://github.githubassets.com/assets/github-685f3d1c0424.css" />
  <link crossorigin="anonymous" media="all" rel="stylesheet" href="https://github.githubassets.com/assets/repository-197a21528ff0.css" />
<link crossorigin="anonymous" media="all" rel="stylesheet" href="https://github.githubassets.com/assets/code-177d21388df8.css" />

  


  <script type="application/json" id="client-env">{"locale":"en","featureFlags":["alternate_user_config_repo","api_insights_show_missing_data_banner","codespaces_prebuild_region_target_update","contentful_lp_flex_features_actions","contentful_lp_flex_features_code_review","contentful_lp_flex_features_code_search","contentful_lp_flex_features_codespaces","contentful_lp_flex_features_discussions","contentful_lp_flex_features_issues","contentful_lp_footnotes","copilot_chat_custom_instructions","copilot_chat_repo_custom_instructions_preview","copilot_chat_vision_in_claude","copilot_chat_wholearea_dd","copilot_duplicate_thread","copilot_free_to_paid_telem","copilot_header_button_to_immersive","copilot_immersive_draft_issue_metadata_location","copilot_immersive_draft_issue_template_required","copilot_immersive_issue_preview","copilot_new_immersive_references_ui","copilot_no_floating_button","copilot_read_shared_conversation","copilot_scroll_container_query","copilot_showcase_icebreakers","copilot_task_oriented_assistive_prompts","copilot_topics_as_references","copilot_ui_refs","direct_to_salesforce","dotcom_chat_client_side_skills","ghost_pilot_confidence_truncation_25","ghost_pilot_confidence_truncation_40","github_models_grok_3_mini_json","github_models_grok_3_mini_json_schema","github_models_o3_streaming","insert_before_patch","issues_dashboard_no_redirects","issues_react_blur_item_picker_on_close","issues_react_create_milestone","issues_react_dashboard_save_query_refresh","issues_react_prohibit_title_fallback","issues_react_remove_placeholders","lifecycle_label_name_updates","link_contact_sales_swp_marketo","marketing_pages_search_explore_provider","memex_mwl_filter_field_delimiter","nonreporting_relay_graphql_status_codes","primer_react_css_modules_ga","primer_react_select_panel_with_modern_action_list","remove_child_patch","sample_network_conn_type","site_msbuild_hide_integrations","site_msbuild_launch","site_msbuild_webgl_hero","site_proxima_australia_update","site_proxima_usa_update","swp_enterprise_contact_form","use_copilot_avatar","use_paginated_repo_picker_cost_center_form","viewscreen_sandbox"]}</script>
<script crossorigin="anonymous" defer="defer" type="application/javascript" src="https://github.githubassets.com/assets/wp-runtime-94e13a04df35.js"></script>
<script crossorigin="anonymous" defer="defer" type="application/javascript" src="https://github.githubassets.com/assets/vendors-node_modules_oddbird_popover-polyfill_dist_popover-fn_js-81211bd82278.js"></script>
<script crossorigin="anonymous" defer="defer" type="application/javascript" src="https://github.githubassets.com/assets/vendors-node_modules_github_mini-throttle_dist_index_js-node_modules_stacktrace-parser_dist_s-1d3d52-4be8ffe9a34a.js"></script>
<script crossorigin="anonymous" defer="defer" type="application/javascript" src="https://github.githubassets.com/assets/ui_packages_failbot_failbot_ts-f0df83c858f4.js"></script>
<script crossorigin="anonymous" defer="defer" type="application/javascript" src="https://github.githubassets.com/assets/environment-d607485791a5.js"></script>
<script crossorigin="anonymous" defer="defer" type="application/javascript" src="https://github.githubassets.com/assets/vendors-node_modules_primer_behaviors_dist_esm_index_mjs-0dbb79f97f8f.js"></script>
<script crossorigin="anonymous" defer="defer" type="application/javascript" src="https://github.githubassets.com/assets/vendors-node_modules_github_selector-observer_dist_index_esm_js-f690fd9ae3d5.js"></script>
<script crossorigin="anonymous" defer="defer" type="application/javascript" src="https://github.githubassets.com/assets/vendors-node_modules_github_relative-time-element_dist_index_js-fd884d19bf73.js"></script>
<script crossorigin="anonymous" defer="defer" type="application/javascript" src="https://github.githubassets.com/assets/vendors-node_modules_github_text-expander-element_dist_index_js-78748950cb0c.js"></script>
<script crossorigin="anonymous" defer="defer" type="application/javascript" src="https://github.githubassets.com/assets/vendors-node_modules_github_auto-complete-element_dist_index_js-node_modules_github_catalyst_-8e9f78-a90ac05d2469.js"></script>
<script crossorigin="anonymous" defer="defer" type="application/javascript" src="https://github.githubassets.com/assets/vendors-node_modules_github_filter-input-element_dist_index_js-node_modules_github_remote-inp-d8c643-f5192902810f.js"></script>
<script crossorigin="anonymous" defer="defer" type="application/javascript" src="https://github.githubassets.com/assets/vendors-node_modules_github_markdown-toolbar-element_dist_index_js-ceef33f593fa.js"></script>
<script crossorigin="anonymous" defer="defer" type="application/javascript" src="https://github.githubassets.com/assets/vendors-node_modules_github_mini-throttle_dist_index_js-node_modules_github_combobox-nav_dist-97536f-0a0158d4c78e.js"></script>
<script crossorigin="anonymous" defer="defer" type="application/javascript" src="https://github.githubassets.com/assets/vendors-node_modules_github_file-attachment-element_dist_index_js-node_modules_primer_view-co-63644b-8389d8c5493d.js"></script>
<script crossorigin="anonymous" defer="defer" type="application/javascript" src="https://github.githubassets.com/assets/github-elements-2c6b561fd398.js"></script>
<script crossorigin="anonymous" defer="defer" type="application/javascript" src="https://github.githubassets.com/assets/element-registry-759bd527e556.js"></script>
<script crossorigin="anonymous" defer="defer" type="application/javascript" src="https://github.githubassets.com/assets/vendors-node_modules_braintree_browser-detection_dist_browser-detection_js-node_modules_githu-bb80ec-72267f4e3ff9.js"></script>
<script crossorigin="anonymous" defer="defer" type="application/javascript" src="https://github.githubassets.com/assets/vendors-node_modules_lit-html_lit-html_js-be8cb88f481b.js"></script>
<script crossorigin="anonymous" defer="defer" type="application/javascript" src="https://github.githubassets.com/assets/vendors-node_modules_morphdom_dist_morphdom-esm_js-0c08218c7d5f.js"></script>
<script crossorigin="anonymous" defer="defer" type="application/javascript" src="https://github.githubassets.com/assets/vendors-node_modules_fzy_js_index_js-node_modules_github_paste-markdown_dist_index_js-6c00013a3dc4.js"></script>
<script crossorigin="anonymous" defer="defer" type="application/javascript" src="https://github.githubassets.com/assets/vendors-node_modules_github_turbo_dist_turbo_es2017-esm_js-a03ee12d659a.js"></script>
<script crossorigin="anonymous" defer="defer" type="application/javascript" src="https://github.githubassets.com/assets/vendors-node_modules_github_remote-form_dist_index_js-node_modules_delegated-events_dist_inde-893f9f-b6294cf703b7.js"></script>
<script crossorigin="anonymous" defer="defer" type="application/javascript" src="https://github.githubassets.com/assets/vendors-node_modules_color-convert_index_js-e3180fe3bcb3.js"></script>
<script crossorigin="anonymous" defer="defer" type="application/javascript" src="https://github.githubassets.com/assets/vendors-node_modules_github_quote-selection_dist_index_js-node_modules_github_session-resume_-c1aa61-97c8ff49bc41.js"></script>
<script crossorigin="anonymous" defer="defer" type="application/javascript" src="https://github.githubassets.com/assets/ui_packages_updatable-content_updatable-content_ts-f4e60782b52d.js"></script>
<script crossorigin="anonymous" defer="defer" type="application/javascript" src="https://github.githubassets.com/assets/app_assets_modules_github_behaviors_task-list_ts-app_assets_modules_github_sso_ts-ui_packages-900dde-c84fbefd392e.js"></script>
<script crossorigin="anonymous" defer="defer" type="application/javascript" src="https://github.githubassets.com/assets/app_assets_modules_github_sticky-scroll-into-view_ts-3e000c5d31a9.js"></script>
<script crossorigin="anonymous" defer="defer" type="application/javascript" src="https://github.githubassets.com/assets/app_assets_modules_github_behaviors_ajax-error_ts-app_assets_modules_github_behaviors_include-d0d0a6-9dc4ed803189.js"></script>
<script crossorigin="anonymous" defer="defer" type="application/javascript" src="https://github.githubassets.com/assets/app_assets_modules_github_behaviors_commenting_edit_ts-app_assets_modules_github_behaviors_ht-83c235-ce8979e4f922.js"></script>
<script crossorigin="anonymous" defer="defer" type="application/javascript" src="https://github.githubassets.com/assets/behaviors-26f5fa9fe37f.js"></script>
<script crossorigin="anonymous" defer="defer" type="application/javascript" src="https://github.githubassets.com/assets/vendors-node_modules_delegated-events_dist_index_js-node_modules_github_catalyst_lib_index_js-ea8eaa-ae0dbe787ad8.js"></script>
<script crossorigin="anonymous" defer="defer" type="application/javascript" src="https://github.githubassets.com/assets/notifications-global-7f3748c0d76b.js"></script>
<script crossorigin="anonymous" defer="defer" type="application/javascript" src="https://github.githubassets.com/assets/vendors-node_modules_github_mini-throttle_dist_index_js-node_modules_github_catalyst_lib_inde-dbbea9-4adcaf6c1c40.js"></script>
<script crossorigin="anonymous" defer="defer" type="application/javascript" src="https://github.githubassets.com/assets/code-menu-906f56af9b01.js"></script>
  
  <script crossorigin="anonymous" defer="defer" type="application/javascript" src="https://github.githubassets.com/assets/primer-react-5c26f1a581a7.js"></script>
<script crossorigin="anonymous" defer="defer" type="application/javascript" src="https://github.githubassets.com/assets/react-core-2d17b940397e.js"></script>
<script crossorigin="anonymous" defer="defer" type="application/javascript" src="https://github.githubassets.com/assets/react-lib-80430c87778a.js"></script>
<script crossorigin="anonymous" defer="defer" type="application/javascript" src="https://github.githubassets.com/assets/octicons-react-cf2f2ab8dab4.js"></script>
<script crossorigin="anonymous" defer="defer" type="application/javascript" src="https://github.githubassets.com/assets/vendors-node_modules_emotion_is-prop-valid_dist_emotion-is-prop-valid_esm_js-node_modules_emo-b1c483-30bc59af3a76.js"></script>
<script crossorigin="anonymous" defer="defer" type="application/javascript" src="https://github.githubassets.com/assets/vendors-node_modules_github_catalyst_lib_index_js-node_modules_primer_live-region-element_dis-b2aea6-22827f205bdc.js"></script>
<script crossorigin="anonymous" defer="defer" type="application/javascript" src="https://github.githubassets.com/assets/vendors-node_modules_dompurify_dist_purify_es_mjs-dd1d3ea6a436.js"></script>
<script crossorigin="anonymous" defer="defer" type="application/javascript" src="https://github.githubassets.com/assets/vendors-node_modules_lodash-es__Stack_js-node_modules_lodash-es__Uint8Array_js-node_modules_l-4faaa6-4a736fde5c2f.js"></script>
<script crossorigin="anonymous" defer="defer" type="application/javascript" src="https://github.githubassets.com/assets/vendors-node_modules_lodash-es_isEqual_js-92a85ab8c568.js"></script>
<script crossorigin="anonymous" defer="defer" type="application/javascript" src="https://github.githubassets.com/assets/vendors-node_modules_tanstack_react-virtual_dist_esm_index_js-node_modules_react-virtual_dist-19a6be-f0cf337af5df.js"></script>
<script crossorigin="anonymous" defer="defer" type="application/javascript" src="https://github.githubassets.com/assets/vendors-node_modules_focus-visible_dist_focus-visible_js-node_modules_github_hydro-analytics--e21ffd-3c9d2ac3e1ad.js"></script>
<script crossorigin="anonymous" defer="defer" type="application/javascript" src="https://github.githubassets.com/assets/vendors-node_modules_fzy_js_index_js-node_modules_react-reverse-portal_dist_web_index_js-node-e0551b-12901247dcff.js"></script>
<script crossorigin="anonymous" defer="defer" type="application/javascript" src="https://github.githubassets.com/assets/ui_packages_document-metadata_document-metadata_ts-ui_packages_history_history_ts-ui_packages-417c81-50b9bb07478c.js"></script>
<script crossorigin="anonymous" defer="defer" type="application/javascript" src="https://github.githubassets.com/assets/ui_packages_paths_index_ts-3d2b07827323.js"></script>
<script crossorigin="anonymous" defer="defer" type="application/javascript" src="https://github.githubassets.com/assets/ui_packages_ref-selector_RefSelector_tsx-cd14487ff967.js"></script>
<script crossorigin="anonymous" defer="defer" type="application/javascript" src="https://github.githubassets.com/assets/ui_packages_commit-attribution_index_ts-ui_packages_commit-checks-status_index_ts-ui_packages-762eaa-b9321ed019f0.js"></script>
<script crossorigin="anonymous" defer="defer" type="application/javascript" src="https://github.githubassets.com/assets/ui_packages_app-uuid_app-uuid_ts-ui_packages_repos-file-tree-view_repos-file-tree-view_ts-4239cbf37c05.js"></script>
<script crossorigin="anonymous" defer="defer" type="application/javascript" src="https://github.githubassets.com/assets/ui_packages_hydro-analytics_hydro-analytics_ts-ui_packages_use-client-value_use-client-value_-6f712e-d59b35038b54.js"></script>
<script crossorigin="anonymous" defer="defer" type="application/javascript" src="https://github.githubassets.com/assets/ui_packages_code-view-shared_hooks_use-canonical-object_ts-ui_packages_code-view-shared_hooks-7b64b1-e9366a95354b.js"></script>
<script crossorigin="anonymous" defer="defer" type="application/javascript" src="https://github.githubassets.com/assets/app_assets_modules_github_blob-anchor_ts-ui_packages_code-nav_code-nav_ts-ui_packages_filter--8253c1-91468a3354f9.js"></script>
<script crossorigin="anonymous" defer="defer" type="application/javascript" src="https://github.githubassets.com/assets/react-code-view-cdf73e330df5.js"></script>
<link crossorigin="anonymous" media="all" rel="stylesheet" href="https://github.githubassets.com/assets/primer-react.19291721a114332ad118.module.css" />
<link crossorigin="anonymous" media="all" rel="stylesheet" href="https://github.githubassets.com/assets/react-code-view.3904ff40d7b98a92de4b.module.css" />

  <script crossorigin="anonymous" defer="defer" type="application/javascript" src="https://github.githubassets.com/assets/notifications-subscriptions-menu-289430569e8f.js"></script>
<link crossorigin="anonymous" media="all" rel="stylesheet" href="https://github.githubassets.com/assets/primer-react.19291721a114332ad118.module.css" />
<link crossorigin="anonymous" media="all" rel="stylesheet" href="https://github.githubassets.com/assets/notifications-subscriptions-menu.e5e6e593370c808590a5.module.css" />


  <title>cpp-httplib/httplib.h at master · yhirose/cpp-httplib · GitHub</title>



  <meta name="route-pattern" content="/:user_id/:repository/blob/*name(/*path)" data-turbo-transient>
  <meta name="route-controller" content="blob" data-turbo-transient>
  <meta name="route-action" content="show" data-turbo-transient>
  <meta name="fetch-nonce" content="v2:f148a192-1eb2-31df-a536-f55f2cbc92db">

    
  <meta name="current-catalog-service-hash" content="f3abb0cc802f3d7b95fc8762b94bdcb13bf39634c40c357301c4aa1d67a256fb">


  <meta name="request-id" content="D6B1:AA625:C4A002:EB3884:6832C637" data-pjax-transient="true"/><meta name="html-safe-nonce" content="93b190e0fb0bc64088908d93cc5d1b6efa07a1ce526f3e2b456fe97b46c5c573" data-pjax-transient="true"/><meta name="visitor-payload" content="eyJyZWZlcnJlciI6IiIsInJlcXVlc3RfaWQiOiJENkIxOkFBNjI1OkM0QTAwMjpFQjM4ODQ6NjgzMkM2MzciLCJ2aXNpdG9yX2lkIjoiOTA2NDA2NzAzMjk2NDg0MzA2MyIsInJlZ2lvbl9lZGdlIjoic291dGhlYXN0YXNpYSIsInJlZ2lvbl9yZW5kZXIiOiJzb3V0aGVhc3Rhc2lhIn0=" data-pjax-transient="true"/><meta name="visitor-hmac" content="59dcc1d27d97928d0067552f8ff248ea56c513ebdd00705f6ca262cc9a45b716" data-pjax-transient="true"/>


    <meta name="hovercard-subject-tag" content="repository:5909706" data-turbo-transient>


  <meta name="github-keyboard-shortcuts" content="repository,source-code,file-tree,copilot" data-turbo-transient="true" />
  

  <meta name="selected-link" value="repo_source" data-turbo-transient>
  <link rel="assets" href="https://github.githubassets.com/">

    <meta name="google-site-verification" content="Apib7-x98H0j5cPqHWwSMm6dNU4GmODRoqxLiDzdx9I">

<meta name="octolytics-url" content="https://collector.github.com/github/collect" />

  <meta name="analytics-location" content="/&lt;user-name&gt;/&lt;repo-name&gt;/blob/show" data-turbo-transient="true" />

  




    <meta name="user-login" content="">

  

    <meta name="viewport" content="width=device-width">

    

      <meta name="description" content="A C++ header-only HTTP/HTTPS server and client library - cpp-httplib/httplib.h at master · yhirose/cpp-httplib">

      <link rel="search" type="application/opensearchdescription+xml" href="/opensearch.xml" title="GitHub">

    <link rel="fluid-icon" href="https://github.com/fluidicon.png" title="GitHub">
    <meta property="fb:app_id" content="1401488693436528">
    <meta name="apple-itunes-app" content="app-id=1477376905, app-argument=https://github.com/yhirose/cpp-httplib/blob/master/httplib.h" />

      <meta name="twitter:image" content="https://opengraph.githubassets.com/756aabfe53b64470a09158919f7b3022cbce3f6a353ab48b83203f822e56eddf/yhirose/cpp-httplib" /><meta name="twitter:site" content="@github" /><meta name="twitter:card" content="summary_large_image" /><meta name="twitter:title" content="cpp-httplib/httplib.h at master · yhirose/cpp-httplib" /><meta name="twitter:description" content="A C++ header-only HTTP/HTTPS server and client library - yhirose/cpp-httplib" />
  <meta property="og:image" content="https://opengraph.githubassets.com/756aabfe53b64470a09158919f7b3022cbce3f6a353ab48b83203f822e56eddf/yhirose/cpp-httplib" /><meta property="og:image:alt" content="A C++ header-only HTTP/HTTPS server and client library - yhirose/cpp-httplib" /><meta property="og:image:width" content="1200" /><meta property="og:image:height" content="600" /><meta property="og:site_name" content="GitHub" /><meta property="og:type" content="object" /><meta property="og:title" content="cpp-httplib/httplib.h at master · yhirose/cpp-httplib" /><meta property="og:url" content="https://github.com/yhirose/cpp-httplib/blob/master/httplib.h" /><meta property="og:description" content="A C++ header-only HTTP/HTTPS server and client library - yhirose/cpp-httplib" />
  




      <meta name="hostname" content="github.com">



        <meta name="expected-hostname" content="github.com">


  <meta http-equiv="x-pjax-version" content="d3140525ddda415bbd962b41e39886f942fef75490a027c12521f04c056f86b4" data-turbo-track="reload">
  <meta http-equiv="x-pjax-csp-version" content="352e51c42d5f5727a7c545752bf34d1f83f40219e7036c6959817149a51651bc" data-turbo-track="reload">
  <meta http-equiv="x-pjax-css-version" content="c0e42e5011948d4563bd0a2d88d73995458c29c3c37dab6cc7fd04d681a8d2eb" data-turbo-track="reload">
  <meta http-equiv="x-pjax-js-version" content="4fa667050b343ce26e23d907f20ea8215a5abe17bba7e7fd7b1be73c098bbeda" data-turbo-track="reload">

  <meta name="turbo-cache-control" content="no-preview" data-turbo-transient="">

      <meta name="turbo-cache-control" content="no-cache" data-turbo-transient>

    <meta data-hydrostats="publish">
  <meta name="go-import" content="github.com/yhirose/cpp-httplib git https://github.com/yhirose/cpp-httplib.git">

  <meta name="octolytics-dimension-user_id" content="357397" /><meta name="octolytics-dimension-user_login" content="yhirose" /><meta name="octolytics-dimension-repository_id" content="5909706" /><meta name="octolytics-dimension-repository_nwo" content="yhirose/cpp-httplib" /><meta name="octolytics-dimension-repository_public" content="true" /><meta name="octolytics-dimension-repository_is_fork" content="false" /><meta name="octolytics-dimension-repository_network_root_id" content="5909706" /><meta name="octolytics-dimension-repository_network_root_nwo" content="yhirose/cpp-httplib" />



    

    <meta name="turbo-body-classes" content="logged-out env-production page-responsive">


  <meta name="browser-stats-url" content="https://api.github.com/_private/browser/stats">

  <meta name="browser-errors-url" content="https://api.github.com/_private/browser/errors">

  <meta name="release" content="93f30fb5c7ac1ea222db6808c776f7e5cca44cc4">

  <link rel="mask-icon" href="https://github.githubassets.com/assets/pinned-octocat-093da3e6fa40.svg" color="#000000">
  <link rel="alternate icon" class="js-site-favicon" type="image/png" href="https://github.githubassets.com/favicons/favicon.png">
  <link rel="icon" class="js-site-favicon" type="image/svg+xml" href="https://github.githubassets.com/favicons/favicon.svg" data-base-href="https://github.githubassets.com/favicons/favicon">

<meta name="theme-color" content="#1e2327">
<meta name="color-scheme" content="light dark" />


  <link rel="manifest" href="/manifest.json" crossOrigin="use-credentials">

  </head>

  <body class="logged-out env-production page-responsive" style="word-wrap: break-word;">
    <div data-turbo-body class="logged-out env-production page-responsive" style="word-wrap: break-word;">
      



    <div class="position-relative header-wrapper js-header-wrapper ">
      <a href="#start-of-content" data-skip-target-assigned="false" class="px-2 py-4 color-bg-accent-emphasis color-fg-on-emphasis show-on-focus js-skip-to-content">Skip to content</a>

      <span data-view-component="true" class="progress-pjax-loader Progress position-fixed width-full">
    <span style="width: 0%;" data-view-component="true" class="Progress-item progress-pjax-loader-bar left-0 top-0 color-bg-accent-emphasis"></span>
</span>      
      
      <script crossorigin="anonymous" defer="defer" type="application/javascript" src="https://github.githubassets.com/assets/ui_packages_ui-commands_ui-commands_ts-392f523dd6f6.js"></script>
<script crossorigin="anonymous" defer="defer" type="application/javascript" src="https://github.githubassets.com/assets/keyboard-shortcuts-dialog-da52b1ba42ce.js"></script>
<link crossorigin="anonymous" media="all" rel="stylesheet" href="https://github.githubassets.com/assets/primer-react.19291721a114332ad118.module.css" />
<link crossorigin="anonymous" media="all" rel="stylesheet" href="https://github.githubassets.com/assets/keyboard-shortcuts-dialog.ed4e3b169113df45fe67.module.css" />

<react-partial
  partial-name="keyboard-shortcuts-dialog"
  data-ssr="false"
  data-attempted-ssr="false"
>
  
  <script type="application/json" data-target="react-partial.embeddedData">{"props":{"docsUrl":"https://docs.github.com/get-started/accessibility/keyboard-shortcuts"}}</script>
  <div data-target="react-partial.reactRoot"></div>
</react-partial>




      

          

              
<script crossorigin="anonymous" defer="defer" type="application/javascript" src="https://github.githubassets.com/assets/vendors-node_modules_github_remote-form_dist_index_js-node_modules_delegated-events_dist_inde-94fd67-e789af5a4655.js"></script>
<script crossorigin="anonymous" defer="defer" type="application/javascript" src="https://github.githubassets.com/assets/sessions-46647179a751.js"></script>
<header class="HeaderMktg header-logged-out js-details-container js-header Details f4 py-3" role="banner" data-is-top="true" data-color-mode=light data-light-theme=light data-dark-theme=dark>
  <h2 class="sr-only">Navigation Menu</h2>

  <button type="button" class="HeaderMktg-backdrop d-lg-none border-0 position-fixed top-0 left-0 width-full height-full js-details-target" aria-label="Toggle navigation">
    <span class="d-none">Toggle navigation</span>
  </button>

  <div class="d-flex flex-column flex-lg-row flex-items-center px-3 px-md-4 px-lg-5 height-full position-relative z-1">
    <div class="d-flex flex-justify-between flex-items-center width-full width-lg-auto">
      <div class="flex-1">
        <button aria-label="Toggle navigation" aria-expanded="false" type="button" data-view-component="true" class="js-details-target js-nav-padding-recalculate js-header-menu-toggle Button--link Button--medium Button d-lg-none color-fg-inherit p-1">  <span class="Button-content">
    <span class="Button-label"><div class="HeaderMenu-toggle-bar rounded my-1"></div>
            <div class="HeaderMenu-toggle-bar rounded my-1"></div>
            <div class="HeaderMenu-toggle-bar rounded my-1"></div></span>
  </span>
</button>
      </div>

      <a class="mr-lg-3 color-fg-inherit flex-order-2 js-prevent-focus-on-mobile-nav"
        href="/"
        aria-label="Homepage"
        data-analytics-event="{&quot;category&quot;:&quot;Marketing nav&quot;,&quot;action&quot;:&quot;click to go to homepage&quot;,&quot;label&quot;:&quot;ref_page:Marketing;ref_cta:Logomark;ref_loc:Header&quot;}">
        <svg height="32" aria-hidden="true" viewBox="0 0 24 24" version="1.1" width="32" data-view-component="true" class="octicon octicon-mark-github">
    <path d="M12 1C5.9225 1 1 5.9225 1 12C1 16.8675 4.14875 20.9787 8.52125 22.4362C9.07125 22.5325 9.2775 22.2025 9.2775 21.9137C9.2775 21.6525 9.26375 20.7862 9.26375 19.865C6.5 20.3737 5.785 19.1912 5.565 18.5725C5.44125 18.2562 4.905 17.28 4.4375 17.0187C4.0525 16.8125 3.5025 16.3037 4.42375 16.29C5.29 16.2762 5.90875 17.0875 6.115 17.4175C7.105 19.0812 8.68625 18.6137 9.31875 18.325C9.415 17.61 9.70375 17.1287 10.02 16.8537C7.5725 16.5787 5.015 15.63 5.015 11.4225C5.015 10.2262 5.44125 9.23625 6.1425 8.46625C6.0325 8.19125 5.6475 7.06375 6.2525 5.55125C6.2525 5.55125 7.17375 5.2625 9.2775 6.67875C10.1575 6.43125 11.0925 6.3075 12.0275 6.3075C12.9625 6.3075 13.8975 6.43125 14.7775 6.67875C16.8813 5.24875 17.8025 5.55125 17.8025 5.55125C18.4075 7.06375 18.0225 8.19125 17.9125 8.46625C18.6138 9.23625 19.04 10.2125 19.04 11.4225C19.04 15.6437 16.4688 16.5787 14.0213 16.8537C14.42 17.1975 14.7638 17.8575 14.7638 18.8887C14.7638 20.36 14.75 21.5425 14.75 21.9137C14.75 22.2025 14.9563 22.5462 15.5063 22.4362C19.8513 20.9787 23 16.8537 23 12C23 5.9225 18.0775 1 12 1Z"></path>
</svg>
      </a>

      <div class="d-flex flex-1 flex-order-2 text-right d-lg-none gap-2 flex-justify-end">
          <a
            href="/login?return_to=https%3A%2F%2Fgithub.com%2Fyhirose%2Fcpp-httplib%2Fblob%2Fmaster%2Fhttplib.h"
            class="HeaderMenu-link HeaderMenu-button d-inline-flex f5 no-underline border color-border-default rounded-2 px-2 py-1 color-fg-inherit js-prevent-focus-on-mobile-nav"
            data-hydro-click="{&quot;event_type&quot;:&quot;authentication.click&quot;,&quot;payload&quot;:{&quot;location_in_page&quot;:&quot;site header menu&quot;,&quot;repository_id&quot;:null,&quot;auth_type&quot;:&quot;SIGN_UP&quot;,&quot;originating_url&quot;:&quot;https://github.com/yhirose/cpp-httplib/blob/master/httplib.h&quot;,&quot;user_id&quot;:null}}" data-hydro-click-hmac="c8d1529a1f46d434d21d3e6deaf3d5d20d35fd8160941375c79f1a331fd80111"
            data-analytics-event="{&quot;category&quot;:&quot;Marketing nav&quot;,&quot;action&quot;:&quot;click to Sign in&quot;,&quot;label&quot;:&quot;ref_page:Marketing;ref_cta:Sign in;ref_loc:Header&quot;}"
          >
            Sign in
          </a>
              <div class="AppHeader-appearanceSettings">
    <react-partial-anchor>
      <button data-target="react-partial-anchor.anchor" id="icon-button-121df43f-1cf4-410c-920b-1cee92ff1832" aria-labelledby="tooltip-0b35307a-3003-4544-ab0a-8ed383c05ffa" type="button" disabled="disabled" data-view-component="true" class="Button Button--iconOnly Button--invisible Button--medium AppHeader-button HeaderMenu-link border cursor-wait">  <svg aria-hidden="true" height="16" viewBox="0 0 16 16" version="1.1" width="16" data-view-component="true" class="octicon octicon-sliders Button-visual">
    <path d="M15 2.75a.75.75 0 0 1-.75.75h-4a.75.75 0 0 1 0-1.5h4a.75.75 0 0 1 .75.75Zm-8.5.75v1.25a.75.75 0 0 0 1.5 0v-4a.75.75 0 0 0-1.5 0V2H1.75a.75.75 0 0 0 0 1.5H6.5Zm1.25 5.25a.75.75 0 0 0 0-1.5h-6a.75.75 0 0 0 0 1.5h6ZM15 8a.75.75 0 0 1-.75.75H11.5V10a.75.75 0 1 1-1.5 0V6a.75.75 0 0 1 1.5 0v1.25h2.75A.75.75 0 0 1 15 8Zm-9 5.25v-2a.75.75 0 0 0-1.5 0v1.25H1.75a.75.75 0 0 0 0 1.5H4.5v1.25a.75.75 0 0 0 1.5 0v-2Zm9 0a.75.75 0 0 1-.75.75h-6a.75.75 0 0 1 0-1.5h6a.75.75 0 0 1 .75.75Z"></path>
</svg>
</button><tool-tip id="tooltip-0b35307a-3003-4544-ab0a-8ed383c05ffa" for="icon-button-121df43f-1cf4-410c-920b-1cee92ff1832" popover="manual" data-direction="s" data-type="label" data-view-component="true" class="sr-only position-absolute">Appearance settings</tool-tip>

      <template data-target="react-partial-anchor.template">
        <script crossorigin="anonymous" defer="defer" type="application/javascript" src="https://github.githubassets.com/assets/ui_packages_document-metadata_document-metadata_ts-ui_packages_promise-with-resolvers-polyfil-40d47c-83bb4d2a9499.js"></script>
<script crossorigin="anonymous" defer="defer" type="application/javascript" src="https://github.githubassets.com/assets/appearance-settings-99fa071d4285.js"></script>
<link crossorigin="anonymous" media="all" rel="stylesheet" href="https://github.githubassets.com/assets/primer-react.19291721a114332ad118.module.css" />
<link crossorigin="anonymous" media="all" rel="stylesheet" href="https://github.githubassets.com/assets/appearance-settings.22dfbc22ef0a2bf02523.module.css" />

<react-partial
  partial-name="appearance-settings"
  data-ssr="false"
  data-attempted-ssr="false"
>
  
  <script type="application/json" data-target="react-partial.embeddedData">{"props":{}}</script>
  <div data-target="react-partial.reactRoot"></div>
</react-partial>

      </template>
    </react-partial-anchor>
  </div>

      </div>
    </div>


    <div class="HeaderMenu js-header-menu height-fit position-lg-relative d-lg-flex flex-column flex-auto top-0">
      <div class="HeaderMenu-wrapper d-flex flex-column flex-self-start flex-lg-row flex-auto rounded rounded-lg-0">
          <nav class="HeaderMenu-nav" aria-label="Global">
            <ul class="d-lg-flex list-style-none">


                <li class="HeaderMenu-item position-relative flex-wrap flex-justify-between flex-items-center d-block d-lg-flex flex-lg-nowrap flex-lg-items-center js-details-container js-header-menu-item">
      <button type="button" class="HeaderMenu-link border-0 width-full width-lg-auto px-0 px-lg-2 py-lg-2 no-wrap d-flex flex-items-center flex-justify-between js-details-target" aria-expanded="false">
        Product
        <svg opacity="0.5" aria-hidden="true" height="16" viewBox="0 0 16 16" version="1.1" width="16" data-view-component="true" class="octicon octicon-chevron-down HeaderMenu-icon ml-1">
    <path d="M12.78 5.22a.749.749 0 0 1 0 1.06l-4.25 4.25a.749.749 0 0 1-1.06 0L3.22 6.28a.749.749 0 1 1 1.06-1.06L8 8.939l3.72-3.719a.749.749 0 0 1 1.06 0Z"></path>
</svg>
      </button>

      <div class="HeaderMenu-dropdown dropdown-menu rounded m-0 p-0 pt-2 pt-lg-4 position-relative position-lg-absolute left-0 left-lg-n3 pb-2 pb-lg-4 d-lg-flex flex-wrap dropdown-menu-wide">
          <div class="HeaderMenu-column px-lg-4 border-lg-right mb-4 mb-lg-0 pr-lg-7">
              <div class="border-bottom pb-3 pb-lg-0 border-lg-bottom-0">

                <ul class="list-style-none f5" >
                    <li>
  <a class="HeaderMenu-dropdown-link d-block no-underline position-relative py-2 Link--secondary d-flex flex-items-center Link--has-description pb-lg-3" data-analytics-event="{&quot;location&quot;:&quot;navbar&quot;,&quot;action&quot;:&quot;github_copilot&quot;,&quot;context&quot;:&quot;product&quot;,&quot;tag&quot;:&quot;link&quot;,&quot;label&quot;:&quot;github_copilot_link_product_navbar&quot;}" href="https://github.com/features/copilot">
      <svg aria-hidden="true" height="24" viewBox="0 0 24 24" version="1.1" width="24" data-view-component="true" class="octicon octicon-copilot color-fg-subtle mr-3">
    <path d="M23.922 16.992c-.861 1.495-5.859 5.023-11.922 5.023-6.063 0-11.061-3.528-11.922-5.023A.641.641 0 0 1 0 16.736v-2.869a.841.841 0 0 1 .053-.22c.372-.935 1.347-2.292 2.605-2.656.167-.429.414-1.055.644-1.517a10.195 10.195 0 0 1-.052-1.086c0-1.331.282-2.499 1.132-3.368.397-.406.89-.717 1.474-.952 1.399-1.136 3.392-2.093 6.122-2.093 2.731 0 4.767.957 6.166 2.093.584.235 1.077.546 1.474.952.85.869 1.132 2.037 1.132 3.368 0 .368-.014.733-.052 1.086.23.462.477 1.088.644 1.517 1.258.364 2.233 1.721 2.605 2.656a.832.832 0 0 1 .053.22v2.869a.641.641 0 0 1-.078.256ZM12.172 11h-.344a4.323 4.323 0 0 1-.355.508C10.703 12.455 9.555 13 7.965 13c-1.725 0-2.989-.359-3.782-1.259a2.005 2.005 0 0 1-.085-.104L4 11.741v6.585c1.435.779 4.514 2.179 8 2.179 3.486 0 6.565-1.4 8-2.179v-6.585l-.098-.104s-.033.045-.085.104c-.793.9-2.057 1.259-3.782 1.259-1.59 0-2.738-.545-3.508-1.492a4.323 4.323 0 0 1-.355-.508h-.016.016Zm.641-2.935c.136 1.057.403 1.913.878 2.497.442.544 1.134.938 2.344.938 1.573 0 2.292-.337 2.657-.751.384-.435.558-1.15.558-2.361 0-1.14-.243-1.847-.705-2.319-.477-.488-1.319-.862-2.824-1.025-1.487-.161-2.192.138-2.533.529-.269.307-.437.808-.438 1.578v.021c0 .265.021.562.063.893Zm-1.626 0c.042-.331.063-.628.063-.894v-.02c-.001-.77-.169-1.271-.438-1.578-.341-.391-1.046-.69-2.533-.529-1.505.163-2.347.537-2.824 1.025-.462.472-.705 1.179-.705 2.319 0 1.211.175 1.926.558 2.361.365.414 1.084.751 2.657.751 1.21 0 1.902-.394 2.344-.938.475-.584.742-1.44.878-2.497Z"></path><path d="M14.5 14.25a1 1 0 0 1 1 1v2a1 1 0 0 1-2 0v-2a1 1 0 0 1 1-1Zm-5 0a1 1 0 0 1 1 1v2a1 1 0 0 1-2 0v-2a1 1 0 0 1 1-1Z"></path>
</svg>
      <div>
          <div class="color-fg-default h4">
            GitHub Copilot
          </div>
        Write better code with AI
      </div>

    
</a></li>

                    <li>
  <a class="HeaderMenu-dropdown-link d-block no-underline position-relative py-2 Link--secondary d-flex flex-items-center Link--has-description pb-lg-3" data-analytics-event="{&quot;location&quot;:&quot;navbar&quot;,&quot;action&quot;:&quot;github_models&quot;,&quot;context&quot;:&quot;product&quot;,&quot;tag&quot;:&quot;link&quot;,&quot;label&quot;:&quot;github_models_link_product_navbar&quot;}" href="https://github.com/features/models">
      <svg aria-hidden="true" height="24" viewBox="0 0 24 24" version="1.1" width="24" data-view-component="true" class="octicon octicon-ai-model color-fg-subtle mr-3">
    <path d="M19.375 8.5a3.25 3.25 0 1 1-3.163 4h-3a3.252 3.252 0 0 1-4.443 2.509L7.214 17.76a3.25 3.25 0 1 1-1.342-.674l1.672-2.957A3.238 3.238 0 0 1 6.75 12c0-.907.371-1.727.97-2.316L6.117 6.846A3.253 3.253 0 0 1 1.875 3.75a3.25 3.25 0 1 1 5.526 2.32l1.603 2.836A3.25 3.25 0 0 1 13.093 11h3.119a3.252 3.252 0 0 1 3.163-2.5ZM10 10.25a1.75 1.75 0 1 0-.001 3.499A1.75 1.75 0 0 0 10 10.25ZM5.125 2a1.75 1.75 0 1 0 0 3.5 1.75 1.75 0 0 0 0-3.5Zm12.5 9.75a1.75 1.75 0 1 0 3.5 0 1.75 1.75 0 0 0-3.5 0Zm-14.25 8.5a1.75 1.75 0 1 0 3.501-.001 1.75 1.75 0 0 0-3.501.001Z"></path>
</svg>
      <div>
          <div class="color-fg-default h4">
            GitHub Models
              <span class="HeaderMenu-label">
                New
              </span>
          </div>
        Manage and compare prompts
      </div>

    
</a></li>

                    <li>
  <a class="HeaderMenu-dropdown-link d-block no-underline position-relative py-2 Link--secondary d-flex flex-items-center Link--has-description pb-lg-3" data-analytics-event="{&quot;location&quot;:&quot;navbar&quot;,&quot;action&quot;:&quot;github_advanced_security&quot;,&quot;context&quot;:&quot;product&quot;,&quot;tag&quot;:&quot;link&quot;,&quot;label&quot;:&quot;github_advanced_security_link_product_navbar&quot;}" href="https://github.com/security/advanced-security">
      <svg aria-hidden="true" height="24" viewBox="0 0 24 24" version="1.1" width="24" data-view-component="true" class="octicon octicon-shield-check color-fg-subtle mr-3">
    <path d="M16.53 9.78a.75.75 0 0 0-1.06-1.06L11 13.19l-1.97-1.97a.75.75 0 0 0-1.06 1.06l2.5 2.5a.75.75 0 0 0 1.06 0l5-5Z"></path><path d="m12.54.637 8.25 2.675A1.75 1.75 0 0 1 22 4.976V10c0 6.19-3.771 10.704-9.401 12.83a1.704 1.704 0 0 1-1.198 0C5.77 20.705 2 16.19 2 10V4.976c0-.758.489-1.43 1.21-1.664L11.46.637a1.748 1.748 0 0 1 1.08 0Zm-.617 1.426-8.25 2.676a.249.249 0 0 0-.173.237V10c0 5.46 3.28 9.483 8.43 11.426a.199.199 0 0 0 .14 0C17.22 19.483 20.5 15.461 20.5 10V4.976a.25.25 0 0 0-.173-.237l-8.25-2.676a.253.253 0 0 0-.154 0Z"></path>
</svg>
      <div>
          <div class="color-fg-default h4">
            GitHub Advanced Security
          </div>
        Find and fix vulnerabilities
      </div>

    
</a></li>

                    <li>
  <a class="HeaderMenu-dropdown-link d-block no-underline position-relative py-2 Link--secondary d-flex flex-items-center Link--has-description pb-lg-3" data-analytics-event="{&quot;location&quot;:&quot;navbar&quot;,&quot;action&quot;:&quot;actions&quot;,&quot;context&quot;:&quot;product&quot;,&quot;tag&quot;:&quot;link&quot;,&quot;label&quot;:&quot;actions_link_product_navbar&quot;}" href="https://github.com/features/actions">
      <svg aria-hidden="true" height="24" viewBox="0 0 24 24" version="1.1" width="24" data-view-component="true" class="octicon octicon-workflow color-fg-subtle mr-3">
    <path d="M1 3a2 2 0 0 1 2-2h6.5a2 2 0 0 1 2 2v6.5a2 2 0 0 1-2 2H7v4.063C7 16.355 7.644 17 8.438 17H12.5v-2.5a2 2 0 0 1 2-2H21a2 2 0 0 1 2 2V21a2 2 0 0 1-2 2h-6.5a2 2 0 0 1-2-2v-2.5H8.437A2.939 2.939 0 0 1 5.5 15.562V11.5H3a2 2 0 0 1-2-2Zm2-.5a.5.5 0 0 0-.5.5v6.5a.5.5 0 0 0 .5.5h6.5a.5.5 0 0 0 .5-.5V3a.5.5 0 0 0-.5-.5ZM14.5 14a.5.5 0 0 0-.5.5V21a.5.5 0 0 0 .5.5H21a.5.5 0 0 0 .5-.5v-6.5a.5.5 0 0 0-.5-.5Z"></path>
</svg>
      <div>
          <div class="color-fg-default h4">
            Actions
          </div>
        Automate any workflow
      </div>

    
</a></li>

                    <li>
  <a class="HeaderMenu-dropdown-link d-block no-underline position-relative py-2 Link--secondary d-flex flex-items-center Link--has-description" data-analytics-event="{&quot;location&quot;:&quot;navbar&quot;,&quot;action&quot;:&quot;codespaces&quot;,&quot;context&quot;:&quot;product&quot;,&quot;tag&quot;:&quot;link&quot;,&quot;label&quot;:&quot;codespaces_link_product_navbar&quot;}" href="https://github.com/features/codespaces">
      <svg aria-hidden="true" height="24" viewBox="0 0 24 24" version="1.1" width="24" data-view-component="true" class="octicon octicon-codespaces color-fg-subtle mr-3">
    <path d="M3.5 3.75C3.5 2.784 4.284 2 5.25 2h13.5c.966 0 1.75.784 1.75 1.75v7.5A1.75 1.75 0 0 1 18.75 13H5.25a1.75 1.75 0 0 1-1.75-1.75Zm-2 12c0-.966.784-1.75 1.75-1.75h17.5c.966 0 1.75.784 1.75 1.75v4a1.75 1.75 0 0 1-1.75 1.75H3.25a1.75 1.75 0 0 1-1.75-1.75ZM5.25 3.5a.25.25 0 0 0-.25.25v7.5c0 .138.112.25.25.25h13.5a.25.25 0 0 0 .25-.25v-7.5a.25.25 0 0 0-.25-.25Zm-2 12a.25.25 0 0 0-.25.25v4c0 .138.112.25.25.25h17.5a.25.25 0 0 0 .25-.25v-4a.25.25 0 0 0-.25-.25Z"></path><path d="M10 17.75a.75.75 0 0 1 .75-.75h6.5a.75.75 0 0 1 0 1.5h-6.5a.75.75 0 0 1-.75-.75Zm-4 0a.75.75 0 0 1 .75-.75h.5a.75.75 0 0 1 0 1.5h-.5a.75.75 0 0 1-.75-.75Z"></path>
</svg>
      <div>
          <div class="color-fg-default h4">
            Codespaces
          </div>
        Instant dev environments
      </div>

    
</a></li>

                </ul>
              </div>
          </div>
          <div class="HeaderMenu-column px-lg-4 border-lg-right mb-4 mb-lg-0 pr-lg-7">
              <div class="border-bottom pb-3 pb-lg-0 border-lg-bottom-0">

                <ul class="list-style-none f5" >
                    <li>
  <a class="HeaderMenu-dropdown-link d-block no-underline position-relative py-2 Link--secondary d-flex flex-items-center Link--has-description pb-lg-3" data-analytics-event="{&quot;location&quot;:&quot;navbar&quot;,&quot;action&quot;:&quot;issues&quot;,&quot;context&quot;:&quot;product&quot;,&quot;tag&quot;:&quot;link&quot;,&quot;label&quot;:&quot;issues_link_product_navbar&quot;}" href="https://github.com/features/issues">
      <svg aria-hidden="true" height="24" viewBox="0 0 24 24" version="1.1" width="24" data-view-component="true" class="octicon octicon-issue-opened color-fg-subtle mr-3">
    <path d="M12 1c6.075 0 11 4.925 11 11s-4.925 11-11 11S1 18.075 1 12 5.925 1 12 1ZM2.5 12a9.5 9.5 0 0 0 9.5 9.5 9.5 9.5 0 0 0 9.5-9.5A9.5 9.5 0 0 0 12 2.5 9.5 9.5 0 0 0 2.5 12Zm9.5 2a2 2 0 1 1-.001-3.999A2 2 0 0 1 12 14Z"></path>
</svg>
      <div>
          <div class="color-fg-default h4">
            Issues
          </div>
        Plan and track work
      </div>

    
</a></li>

                    <li>
  <a class="HeaderMenu-dropdown-link d-block no-underline position-relative py-2 Link--secondary d-flex flex-items-center Link--has-description pb-lg-3" data-analytics-event="{&quot;location&quot;:&quot;navbar&quot;,&quot;action&quot;:&quot;code_review&quot;,&quot;context&quot;:&quot;product&quot;,&quot;tag&quot;:&quot;link&quot;,&quot;label&quot;:&quot;code_review_link_product_navbar&quot;}" href="https://github.com/features/code-review">
      <svg aria-hidden="true" height="24" viewBox="0 0 24 24" version="1.1" width="24" data-view-component="true" class="octicon octicon-code-review color-fg-subtle mr-3">
    <path d="M10.3 6.74a.75.75 0 0 1-.04 1.06l-2.908 2.7 2.908 2.7a.75.75 0 1 1-1.02 1.1l-3.5-3.25a.75.75 0 0 1 0-1.1l3.5-3.25a.75.75 0 0 1 1.06.04Zm3.44 1.06a.75.75 0 1 1 1.02-1.1l3.5 3.25a.75.75 0 0 1 0 1.1l-3.5 3.25a.75.75 0 1 1-1.02-1.1l2.908-2.7-2.908-2.7Z"></path><path d="M1.5 4.25c0-.966.784-1.75 1.75-1.75h17.5c.966 0 1.75.784 1.75 1.75v12.5a1.75 1.75 0 0 1-1.75 1.75h-9.69l-3.573 3.573A1.458 1.458 0 0 1 5 21.043V18.5H3.25a1.75 1.75 0 0 1-1.75-1.75ZM3.25 4a.25.25 0 0 0-.25.25v12.5c0 .138.112.25.25.25h2.5a.75.75 0 0 1 .75.75v3.19l3.72-3.72a.749.749 0 0 1 .53-.22h10a.25.25 0 0 0 .25-.25V4.25a.25.25 0 0 0-.25-.25Z"></path>
</svg>
      <div>
          <div class="color-fg-default h4">
            Code Review
          </div>
        Manage code changes
      </div>

    
</a></li>

                    <li>
  <a class="HeaderMenu-dropdown-link d-block no-underline position-relative py-2 Link--secondary d-flex flex-items-center Link--has-description pb-lg-3" data-analytics-event="{&quot;location&quot;:&quot;navbar&quot;,&quot;action&quot;:&quot;discussions&quot;,&quot;context&quot;:&quot;product&quot;,&quot;tag&quot;:&quot;link&quot;,&quot;label&quot;:&quot;discussions_link_product_navbar&quot;}" href="https://github.com/features/discussions">
      <svg aria-hidden="true" height="24" viewBox="0 0 24 24" version="1.1" width="24" data-view-component="true" class="octicon octicon-comment-discussion color-fg-subtle mr-3">
    <path d="M1.75 1h12.5c.966 0 1.75.784 1.75 1.75v9.5A1.75 1.75 0 0 1 14.25 14H8.061l-2.574 2.573A1.458 1.458 0 0 1 3 15.543V14H1.75A1.75 1.75 0 0 1 0 12.25v-9.5C0 1.784.784 1 1.75 1ZM1.5 2.75v9.5c0 .138.112.25.25.25h2a.75.75 0 0 1 .75.75v2.19l2.72-2.72a.749.749 0 0 1 .53-.22h6.5a.25.25 0 0 0 .25-.25v-9.5a.25.25 0 0 0-.25-.25H1.75a.25.25 0 0 0-.25.25Z"></path><path d="M22.5 8.75a.25.25 0 0 0-.25-.25h-3.5a.75.75 0 0 1 0-1.5h3.5c.966 0 1.75.784 1.75 1.75v9.5A1.75 1.75 0 0 1 22.25 20H21v1.543a1.457 1.457 0 0 1-2.487 1.03L15.939 20H10.75A1.75 1.75 0 0 1 9 18.25v-1.465a.75.75 0 0 1 1.5 0v1.465c0 .138.112.25.25.25h5.5a.75.75 0 0 1 .53.22l2.72 2.72v-2.19a.75.75 0 0 1 .75-.75h2a.25.25 0 0 0 .25-.25v-9.5Z"></path>
</svg>
      <div>
          <div class="color-fg-default h4">
            Discussions
          </div>
        Collaborate outside of code
      </div>

    
</a></li>

                    <li>
  <a class="HeaderMenu-dropdown-link d-block no-underline position-relative py-2 Link--secondary d-flex flex-items-center Link--has-description" data-analytics-event="{&quot;location&quot;:&quot;navbar&quot;,&quot;action&quot;:&quot;code_search&quot;,&quot;context&quot;:&quot;product&quot;,&quot;tag&quot;:&quot;link&quot;,&quot;label&quot;:&quot;code_search_link_product_navbar&quot;}" href="https://github.com/features/code-search">
      <svg aria-hidden="true" height="24" viewBox="0 0 24 24" version="1.1" width="24" data-view-component="true" class="octicon octicon-code-square color-fg-subtle mr-3">
    <path d="M10.3 8.24a.75.75 0 0 1-.04 1.06L7.352 12l2.908 2.7a.75.75 0 1 1-1.02 1.1l-3.5-3.25a.75.75 0 0 1 0-1.1l3.5-3.25a.75.75 0 0 1 1.06.04Zm3.44 1.06a.75.75 0 1 1 1.02-1.1l3.5 3.25a.75.75 0 0 1 0 1.1l-3.5 3.25a.75.75 0 1 1-1.02-1.1l2.908-2.7-2.908-2.7Z"></path><path d="M2 3.75C2 2.784 2.784 2 3.75 2h16.5c.966 0 1.75.784 1.75 1.75v16.5A1.75 1.75 0 0 1 20.25 22H3.75A1.75 1.75 0 0 1 2 20.25Zm1.75-.25a.25.25 0 0 0-.25.25v16.5c0 .138.112.25.25.25h16.5a.25.25 0 0 0 .25-.25V3.75a.25.25 0 0 0-.25-.25Z"></path>
</svg>
      <div>
          <div class="color-fg-default h4">
            Code Search
          </div>
        Find more, search less
      </div>

    
</a></li>

                </ul>
              </div>
          </div>
          <div class="HeaderMenu-column px-lg-4">
              <div class="border-bottom pb-3 pb-lg-0 border-lg-bottom-0 border-bottom-0">
                    <span class="d-block h4 color-fg-default my-1" id="product-explore-heading">Explore</span>

                <ul class="list-style-none f5" aria-labelledby="product-explore-heading">
                    <li>
  <a class="HeaderMenu-dropdown-link d-block no-underline position-relative py-2 Link--secondary" data-analytics-event="{&quot;location&quot;:&quot;navbar&quot;,&quot;action&quot;:&quot;why_github&quot;,&quot;context&quot;:&quot;product&quot;,&quot;tag&quot;:&quot;link&quot;,&quot;label&quot;:&quot;why_github_link_product_navbar&quot;}" href="https://github.com/why-github">
      Why GitHub

    
</a></li>

                    <li>
  <a class="HeaderMenu-dropdown-link d-block no-underline position-relative py-2 Link--secondary" data-analytics-event="{&quot;location&quot;:&quot;navbar&quot;,&quot;action&quot;:&quot;all_features&quot;,&quot;context&quot;:&quot;product&quot;,&quot;tag&quot;:&quot;link&quot;,&quot;label&quot;:&quot;all_features_link_product_navbar&quot;}" href="https://github.com/features">
      All features

    
</a></li>

                    <li>
  <a class="HeaderMenu-dropdown-link d-block no-underline position-relative py-2 Link--secondary Link--external" target="_blank" data-analytics-event="{&quot;location&quot;:&quot;navbar&quot;,&quot;action&quot;:&quot;documentation&quot;,&quot;context&quot;:&quot;product&quot;,&quot;tag&quot;:&quot;link&quot;,&quot;label&quot;:&quot;documentation_link_product_navbar&quot;}" href="https://docs.github.com">
      Documentation

    <svg aria-hidden="true" height="16" viewBox="0 0 16 16" version="1.1" width="16" data-view-component="true" class="octicon octicon-link-external HeaderMenu-external-icon color-fg-subtle">
    <path d="M3.75 2h3.5a.75.75 0 0 1 0 1.5h-3.5a.25.25 0 0 0-.25.25v8.5c0 .138.112.25.25.25h8.5a.25.25 0 0 0 .25-.25v-3.5a.75.75 0 0 1 1.5 0v3.5A1.75 1.75 0 0 1 12.25 14h-8.5A1.75 1.75 0 0 1 2 12.25v-8.5C2 2.784 2.784 2 3.75 2Zm6.854-1h4.146a.25.25 0 0 1 .25.25v4.146a.25.25 0 0 1-.427.177L13.03 4.03 9.28 7.78a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042l3.75-3.75-1.543-1.543A.25.25 0 0 1 10.604 1Z"></path>
</svg>
</a></li>

                    <li>
  <a class="HeaderMenu-dropdown-link d-block no-underline position-relative py-2 Link--secondary Link--external" target="_blank" data-analytics-event="{&quot;location&quot;:&quot;navbar&quot;,&quot;action&quot;:&quot;github_skills&quot;,&quot;context&quot;:&quot;product&quot;,&quot;tag&quot;:&quot;link&quot;,&quot;label&quot;:&quot;github_skills_link_product_navbar&quot;}" href="https://skills.github.com">
      GitHub Skills

    <svg aria-hidden="true" height="16" viewBox="0 0 16 16" version="1.1" width="16" data-view-component="true" class="octicon octicon-link-external HeaderMenu-external-icon color-fg-subtle">
    <path d="M3.75 2h3.5a.75.75 0 0 1 0 1.5h-3.5a.25.25 0 0 0-.25.25v8.5c0 .138.112.25.25.25h8.5a.25.25 0 0 0 .25-.25v-3.5a.75.75 0 0 1 1.5 0v3.5A1.75 1.75 0 0 1 12.25 14h-8.5A1.75 1.75 0 0 1 2 12.25v-8.5C2 2.784 2.784 2 3.75 2Zm6.854-1h4.146a.25.25 0 0 1 .25.25v4.146a.25.25 0 0 1-.427.177L13.03 4.03 9.28 7.78a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042l3.75-3.75-1.543-1.543A.25.25 0 0 1 10.604 1Z"></path>
</svg>
</a></li>

                    <li>
  <a class="HeaderMenu-dropdown-link d-block no-underline position-relative py-2 Link--secondary Link--external" target="_blank" data-analytics-event="{&quot;location&quot;:&quot;navbar&quot;,&quot;action&quot;:&quot;blog&quot;,&quot;context&quot;:&quot;product&quot;,&quot;tag&quot;:&quot;link&quot;,&quot;label&quot;:&quot;blog_link_product_navbar&quot;}" href="https://github.blog">
      Blog

    <svg aria-hidden="true" height="16" viewBox="0 0 16 16" version="1.1" width="16" data-view-component="true" class="octicon octicon-link-external HeaderMenu-external-icon color-fg-subtle">
    <path d="M3.75 2h3.5a.75.75 0 0 1 0 1.5h-3.5a.25.25 0 0 0-.25.25v8.5c0 .138.112.25.25.25h8.5a.25.25 0 0 0 .25-.25v-3.5a.75.75 0 0 1 1.5 0v3.5A1.75 1.75 0 0 1 12.25 14h-8.5A1.75 1.75 0 0 1 2 12.25v-8.5C2 2.784 2.784 2 3.75 2Zm6.854-1h4.146a.25.25 0 0 1 .25.25v4.146a.25.25 0 0 1-.427.177L13.03 4.03 9.28 7.78a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042l3.75-3.75-1.543-1.543A.25.25 0 0 1 10.604 1Z"></path>
</svg>
</a></li>

                </ul>
              </div>
          </div>

      </div>
</li>


                <li class="HeaderMenu-item position-relative flex-wrap flex-justify-between flex-items-center d-block d-lg-flex flex-lg-nowrap flex-lg-items-center js-details-container js-header-menu-item">
      <button type="button" class="HeaderMenu-link border-0 width-full width-lg-auto px-0 px-lg-2 py-lg-2 no-wrap d-flex flex-items-center flex-justify-between js-details-target" aria-expanded="false">
        Solutions
        <svg opacity="0.5" aria-hidden="true" height="16" viewBox="0 0 16 16" version="1.1" width="16" data-view-component="true" class="octicon octicon-chevron-down HeaderMenu-icon ml-1">
    <path d="M12.78 5.22a.749.749 0 0 1 0 1.06l-4.25 4.25a.749.749 0 0 1-1.06 0L3.22 6.28a.749.749 0 1 1 1.06-1.06L8 8.939l3.72-3.719a.749.749 0 0 1 1.06 0Z"></path>
</svg>
      </button>

      <div class="HeaderMenu-dropdown dropdown-menu rounded m-0 p-0 pt-2 pt-lg-4 position-relative position-lg-absolute left-0 left-lg-n3 d-lg-flex flex-wrap dropdown-menu-wide">
          <div class="HeaderMenu-column px-lg-4 border-lg-right mb-4 mb-lg-0 pr-lg-7">
              <div class="border-bottom pb-3 pb-lg-0 border-lg-bottom-0 pb-lg-3 mb-3 mb-lg-0">
                    <span class="d-block h4 color-fg-default my-1" id="solutions-by-company-size-heading">By company size</span>

                <ul class="list-style-none f5" aria-labelledby="solutions-by-company-size-heading">
                    <li>
  <a class="HeaderMenu-dropdown-link d-block no-underline position-relative py-2 Link--secondary" data-analytics-event="{&quot;location&quot;:&quot;navbar&quot;,&quot;action&quot;:&quot;enterprises&quot;,&quot;context&quot;:&quot;solutions&quot;,&quot;tag&quot;:&quot;link&quot;,&quot;label&quot;:&quot;enterprises_link_solutions_navbar&quot;}" href="https://github.com/enterprise">
      Enterprises

    
</a></li>

                    <li>
  <a class="HeaderMenu-dropdown-link d-block no-underline position-relative py-2 Link--secondary" data-analytics-event="{&quot;location&quot;:&quot;navbar&quot;,&quot;action&quot;:&quot;small_and_medium_teams&quot;,&quot;context&quot;:&quot;solutions&quot;,&quot;tag&quot;:&quot;link&quot;,&quot;label&quot;:&quot;small_and_medium_teams_link_solutions_navbar&quot;}" href="https://github.com/team">
      Small and medium teams

    
</a></li>

                    <li>
  <a class="HeaderMenu-dropdown-link d-block no-underline position-relative py-2 Link--secondary" data-analytics-event="{&quot;location&quot;:&quot;navbar&quot;,&quot;action&quot;:&quot;startups&quot;,&quot;context&quot;:&quot;solutions&quot;,&quot;tag&quot;:&quot;link&quot;,&quot;label&quot;:&quot;startups_link_solutions_navbar&quot;}" href="https://github.com/enterprise/startups">
      Startups

    
</a></li>

                    <li>
  <a class="HeaderMenu-dropdown-link d-block no-underline position-relative py-2 Link--secondary" data-analytics-event="{&quot;location&quot;:&quot;navbar&quot;,&quot;action&quot;:&quot;nonprofits&quot;,&quot;context&quot;:&quot;solutions&quot;,&quot;tag&quot;:&quot;link&quot;,&quot;label&quot;:&quot;nonprofits_link_solutions_navbar&quot;}" href="/solutions/industry/nonprofits">
      Nonprofits

    
</a></li>

                </ul>
              </div>
              <div class="border-bottom pb-3 pb-lg-0 border-lg-bottom-0">
                    <span class="d-block h4 color-fg-default my-1" id="solutions-by-use-case-heading">By use case</span>

                <ul class="list-style-none f5" aria-labelledby="solutions-by-use-case-heading">
                    <li>
  <a class="HeaderMenu-dropdown-link d-block no-underline position-relative py-2 Link--secondary" data-analytics-event="{&quot;location&quot;:&quot;navbar&quot;,&quot;action&quot;:&quot;devsecops&quot;,&quot;context&quot;:&quot;solutions&quot;,&quot;tag&quot;:&quot;link&quot;,&quot;label&quot;:&quot;devsecops_link_solutions_navbar&quot;}" href="/solutions/use-case/devsecops">
      DevSecOps

    
</a></li>

                    <li>
  <a class="HeaderMenu-dropdown-link d-block no-underline position-relative py-2 Link--secondary" data-analytics-event="{&quot;location&quot;:&quot;navbar&quot;,&quot;action&quot;:&quot;devops&quot;,&quot;context&quot;:&quot;solutions&quot;,&quot;tag&quot;:&quot;link&quot;,&quot;label&quot;:&quot;devops_link_solutions_navbar&quot;}" href="/solutions/use-case/devops">
      DevOps

    
</a></li>

                    <li>
  <a class="HeaderMenu-dropdown-link d-block no-underline position-relative py-2 Link--secondary" data-analytics-event="{&quot;location&quot;:&quot;navbar&quot;,&quot;action&quot;:&quot;ci_cd&quot;,&quot;context&quot;:&quot;solutions&quot;,&quot;tag&quot;:&quot;link&quot;,&quot;label&quot;:&quot;ci_cd_link_solutions_navbar&quot;}" href="/solutions/use-case/ci-cd">
      CI/CD

    
</a></li>

                    <li>
  <a class="HeaderMenu-dropdown-link d-block no-underline position-relative py-2 Link--secondary" data-analytics-event="{&quot;location&quot;:&quot;navbar&quot;,&quot;action&quot;:&quot;view_all_use_cases&quot;,&quot;context&quot;:&quot;solutions&quot;,&quot;tag&quot;:&quot;link&quot;,&quot;label&quot;:&quot;view_all_use_cases_link_solutions_navbar&quot;}" href="/solutions/use-case">
      View all use cases

    
</a></li>

                </ul>
              </div>
          </div>
          <div class="HeaderMenu-column px-lg-4">
              <div class="border-bottom pb-3 pb-lg-0 border-lg-bottom-0">
                    <span class="d-block h4 color-fg-default my-1" id="solutions-by-industry-heading">By industry</span>

                <ul class="list-style-none f5" aria-labelledby="solutions-by-industry-heading">
                    <li>
  <a class="HeaderMenu-dropdown-link d-block no-underline position-relative py-2 Link--secondary" data-analytics-event="{&quot;location&quot;:&quot;navbar&quot;,&quot;action&quot;:&quot;healthcare&quot;,&quot;context&quot;:&quot;solutions&quot;,&quot;tag&quot;:&quot;link&quot;,&quot;label&quot;:&quot;healthcare_link_solutions_navbar&quot;}" href="/solutions/industry/healthcare">
      Healthcare

    
</a></li>

                    <li>
  <a class="HeaderMenu-dropdown-link d-block no-underline position-relative py-2 Link--secondary" data-analytics-event="{&quot;location&quot;:&quot;navbar&quot;,&quot;action&quot;:&quot;financial_services&quot;,&quot;context&quot;:&quot;solutions&quot;,&quot;tag&quot;:&quot;link&quot;,&quot;label&quot;:&quot;financial_services_link_solutions_navbar&quot;}" href="/solutions/industry/financial-services">
      Financial services

    
</a></li>

                    <li>
  <a class="HeaderMenu-dropdown-link d-block no-underline position-relative py-2 Link--secondary" data-analytics-event="{&quot;location&quot;:&quot;navbar&quot;,&quot;action&quot;:&quot;manufacturing&quot;,&quot;context&quot;:&quot;solutions&quot;,&quot;tag&quot;:&quot;link&quot;,&quot;label&quot;:&quot;manufacturing_link_solutions_navbar&quot;}" href="/solutions/industry/manufacturing">
      Manufacturing

    
</a></li>

                    <li>
  <a class="HeaderMenu-dropdown-link d-block no-underline position-relative py-2 Link--secondary" data-analytics-event="{&quot;location&quot;:&quot;navbar&quot;,&quot;action&quot;:&quot;government&quot;,&quot;context&quot;:&quot;solutions&quot;,&quot;tag&quot;:&quot;link&quot;,&quot;label&quot;:&quot;government_link_solutions_navbar&quot;}" href="/solutions/industry/government">
      Government

    
</a></li>

                    <li>
  <a class="HeaderMenu-dropdown-link d-block no-underline position-relative py-2 Link--secondary" data-analytics-event="{&quot;location&quot;:&quot;navbar&quot;,&quot;action&quot;:&quot;view_all_industries&quot;,&quot;context&quot;:&quot;solutions&quot;,&quot;tag&quot;:&quot;link&quot;,&quot;label&quot;:&quot;view_all_industries_link_solutions_navbar&quot;}" href="/solutions/industry">
      View all industries

    
</a></li>

                </ul>
              </div>
          </div>

         <div class="HeaderMenu-trailing-link rounded-bottom-2 flex-shrink-0 mt-lg-4 px-lg-4 py-4 py-lg-3 f5 text-semibold">
            <a href="/solutions">
              View all solutions
              <svg aria-hidden="true" height="16" viewBox="0 0 16 16" version="1.1" width="16" data-view-component="true" class="octicon octicon-chevron-right HeaderMenu-trailing-link-icon">
    <path d="M6.22 3.22a.75.75 0 0 1 1.06 0l4.25 4.25a.75.75 0 0 1 0 1.06l-4.25 4.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042L9.94 8 6.22 4.28a.75.75 0 0 1 0-1.06Z"></path>
</svg>
</a>         </div>
      </div>
</li>


                <li class="HeaderMenu-item position-relative flex-wrap flex-justify-between flex-items-center d-block d-lg-flex flex-lg-nowrap flex-lg-items-center js-details-container js-header-menu-item">
      <button type="button" class="HeaderMenu-link border-0 width-full width-lg-auto px-0 px-lg-2 py-lg-2 no-wrap d-flex flex-items-center flex-justify-between js-details-target" aria-expanded="false">
        Resources
        <svg opacity="0.5" aria-hidden="true" height="16" viewBox="0 0 16 16" version="1.1" width="16" data-view-component="true" class="octicon octicon-chevron-down HeaderMenu-icon ml-1">
    <path d="M12.78 5.22a.749.749 0 0 1 0 1.06l-4.25 4.25a.749.749 0 0 1-1.06 0L3.22 6.28a.749.749 0 1 1 1.06-1.06L8 8.939l3.72-3.719a.749.749 0 0 1 1.06 0Z"></path>
</svg>
      </button>

      <div class="HeaderMenu-dropdown dropdown-menu rounded m-0 p-0 pt-2 pt-lg-4 position-relative position-lg-absolute left-0 left-lg-n3 pb-2 pb-lg-4 d-lg-flex flex-wrap dropdown-menu-wide">
          <div class="HeaderMenu-column px-lg-4 border-lg-right mb-4 mb-lg-0 pr-lg-7">
              <div class="border-bottom pb-3 pb-lg-0 border-lg-bottom-0">
                    <span class="d-block h4 color-fg-default my-1" id="resources-topics-heading">Topics</span>

                <ul class="list-style-none f5" aria-labelledby="resources-topics-heading">
                    <li>
  <a class="HeaderMenu-dropdown-link d-block no-underline position-relative py-2 Link--secondary" data-analytics-event="{&quot;location&quot;:&quot;navbar&quot;,&quot;action&quot;:&quot;ai&quot;,&quot;context&quot;:&quot;resources&quot;,&quot;tag&quot;:&quot;link&quot;,&quot;label&quot;:&quot;ai_link_resources_navbar&quot;}" href="/resources/articles/ai">
      AI

    
</a></li>

                    <li>
  <a class="HeaderMenu-dropdown-link d-block no-underline position-relative py-2 Link--secondary" data-analytics-event="{&quot;location&quot;:&quot;navbar&quot;,&quot;action&quot;:&quot;devops&quot;,&quot;context&quot;:&quot;resources&quot;,&quot;tag&quot;:&quot;link&quot;,&quot;label&quot;:&quot;devops_link_resources_navbar&quot;}" href="/resources/articles/devops">
      DevOps

    
</a></li>

                    <li>
  <a class="HeaderMenu-dropdown-link d-block no-underline position-relative py-2 Link--secondary" data-analytics-event="{&quot;location&quot;:&quot;navbar&quot;,&quot;action&quot;:&quot;security&quot;,&quot;context&quot;:&quot;resources&quot;,&quot;tag&quot;:&quot;link&quot;,&quot;label&quot;:&quot;security_link_resources_navbar&quot;}" href="/resources/articles/security">
      Security

    
</a></li>

                    <li>
  <a class="HeaderMenu-dropdown-link d-block no-underline position-relative py-2 Link--secondary" data-analytics-event="{&quot;location&quot;:&quot;navbar&quot;,&quot;action&quot;:&quot;software_development&quot;,&quot;context&quot;:&quot;resources&quot;,&quot;tag&quot;:&quot;link&quot;,&quot;label&quot;:&quot;software_development_link_resources_navbar&quot;}" href="/resources/articles/software-development">
      Software Development

    
</a></li>

                    <li>
  <a class="HeaderMenu-dropdown-link d-block no-underline position-relative py-2 Link--secondary" data-analytics-event="{&quot;location&quot;:&quot;navbar&quot;,&quot;action&quot;:&quot;view_all&quot;,&quot;context&quot;:&quot;resources&quot;,&quot;tag&quot;:&quot;link&quot;,&quot;label&quot;:&quot;view_all_link_resources_navbar&quot;}" href="/resources/articles">
      View all

    
</a></li>

                </ul>
              </div>
          </div>
          <div class="HeaderMenu-column px-lg-4">
              <div class="border-bottom pb-3 pb-lg-0 border-lg-bottom-0 border-bottom-0">
                    <span class="d-block h4 color-fg-default my-1" id="resources-explore-heading">Explore</span>

                <ul class="list-style-none f5" aria-labelledby="resources-explore-heading">
                    <li>
  <a class="HeaderMenu-dropdown-link d-block no-underline position-relative py-2 Link--secondary Link--external" target="_blank" data-analytics-event="{&quot;location&quot;:&quot;navbar&quot;,&quot;action&quot;:&quot;learning_pathways&quot;,&quot;context&quot;:&quot;resources&quot;,&quot;tag&quot;:&quot;link&quot;,&quot;label&quot;:&quot;learning_pathways_link_resources_navbar&quot;}" href="https://resources.github.com/learn/pathways">
      Learning Pathways

    <svg aria-hidden="true" height="16" viewBox="0 0 16 16" version="1.1" width="16" data-view-component="true" class="octicon octicon-link-external HeaderMenu-external-icon color-fg-subtle">
    <path d="M3.75 2h3.5a.75.75 0 0 1 0 1.5h-3.5a.25.25 0 0 0-.25.25v8.5c0 .138.112.25.25.25h8.5a.25.25 0 0 0 .25-.25v-3.5a.75.75 0 0 1 1.5 0v3.5A1.75 1.75 0 0 1 12.25 14h-8.5A1.75 1.75 0 0 1 2 12.25v-8.5C2 2.784 2.784 2 3.75 2Zm6.854-1h4.146a.25.25 0 0 1 .25.25v4.146a.25.25 0 0 1-.427.177L13.03 4.03 9.28 7.78a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042l3.75-3.75-1.543-1.543A.25.25 0 0 1 10.604 1Z"></path>
</svg>
</a></li>

                    <li>
  <a class="HeaderMenu-dropdown-link d-block no-underline position-relative py-2 Link--secondary Link--external" target="_blank" data-analytics-event="{&quot;location&quot;:&quot;navbar&quot;,&quot;action&quot;:&quot;events_amp_webinars&quot;,&quot;context&quot;:&quot;resources&quot;,&quot;tag&quot;:&quot;link&quot;,&quot;label&quot;:&quot;events_amp_webinars_link_resources_navbar&quot;}" href="https://resources.github.com">
      Events &amp; Webinars

    <svg aria-hidden="true" height="16" viewBox="0 0 16 16" version="1.1" width="16" data-view-component="true" class="octicon octicon-link-external HeaderMenu-external-icon color-fg-subtle">
    <path d="M3.75 2h3.5a.75.75 0 0 1 0 1.5h-3.5a.25.25 0 0 0-.25.25v8.5c0 .138.112.25.25.25h8.5a.25.25 0 0 0 .25-.25v-3.5a.75.75 0 0 1 1.5 0v3.5A1.75 1.75 0 0 1 12.25 14h-8.5A1.75 1.75 0 0 1 2 12.25v-8.5C2 2.784 2.784 2 3.75 2Zm6.854-1h4.146a.25.25 0 0 1 .25.25v4.146a.25.25 0 0 1-.427.177L13.03 4.03 9.28 7.78a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042l3.75-3.75-1.543-1.543A.25.25 0 0 1 10.604 1Z"></path>
</svg>
</a></li>

                    <li>
  <a class="HeaderMenu-dropdown-link d-block no-underline position-relative py-2 Link--secondary" data-analytics-event="{&quot;location&quot;:&quot;navbar&quot;,&quot;action&quot;:&quot;ebooks_amp_whitepapers&quot;,&quot;context&quot;:&quot;resources&quot;,&quot;tag&quot;:&quot;link&quot;,&quot;label&quot;:&quot;ebooks_amp_whitepapers_link_resources_navbar&quot;}" href="https://github.com/resources/whitepapers">
      Ebooks &amp; Whitepapers

    
</a></li>

                    <li>
  <a class="HeaderMenu-dropdown-link d-block no-underline position-relative py-2 Link--secondary" data-analytics-event="{&quot;location&quot;:&quot;navbar&quot;,&quot;action&quot;:&quot;customer_stories&quot;,&quot;context&quot;:&quot;resources&quot;,&quot;tag&quot;:&quot;link&quot;,&quot;label&quot;:&quot;customer_stories_link_resources_navbar&quot;}" href="https://github.com/customer-stories">
      Customer Stories

    
</a></li>

                    <li>
  <a class="HeaderMenu-dropdown-link d-block no-underline position-relative py-2 Link--secondary Link--external" target="_blank" data-analytics-event="{&quot;location&quot;:&quot;navbar&quot;,&quot;action&quot;:&quot;partners&quot;,&quot;context&quot;:&quot;resources&quot;,&quot;tag&quot;:&quot;link&quot;,&quot;label&quot;:&quot;partners_link_resources_navbar&quot;}" href="https://partner.github.com">
      Partners

    <svg aria-hidden="true" height="16" viewBox="0 0 16 16" version="1.1" width="16" data-view-component="true" class="octicon octicon-link-external HeaderMenu-external-icon color-fg-subtle">
    <path d="M3.75 2h3.5a.75.75 0 0 1 0 1.5h-3.5a.25.25 0 0 0-.25.25v8.5c0 .138.112.25.25.25h8.5a.25.25 0 0 0 .25-.25v-3.5a.75.75 0 0 1 1.5 0v3.5A1.75 1.75 0 0 1 12.25 14h-8.5A1.75 1.75 0 0 1 2 12.25v-8.5C2 2.784 2.784 2 3.75 2Zm6.854-1h4.146a.25.25 0 0 1 .25.25v4.146a.25.25 0 0 1-.427.177L13.03 4.03 9.28 7.78a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042l3.75-3.75-1.543-1.543A.25.25 0 0 1 10.604 1Z"></path>
</svg>
</a></li>

                    <li>
  <a class="HeaderMenu-dropdown-link d-block no-underline position-relative py-2 Link--secondary" data-analytics-event="{&quot;location&quot;:&quot;navbar&quot;,&quot;action&quot;:&quot;executive_insights&quot;,&quot;context&quot;:&quot;resources&quot;,&quot;tag&quot;:&quot;link&quot;,&quot;label&quot;:&quot;executive_insights_link_resources_navbar&quot;}" href="https://github.com/solutions/executive-insights">
      Executive Insights

    
</a></li>

                </ul>
              </div>
          </div>

      </div>
</li>


                <li class="HeaderMenu-item position-relative flex-wrap flex-justify-between flex-items-center d-block d-lg-flex flex-lg-nowrap flex-lg-items-center js-details-container js-header-menu-item">
      <button type="button" class="HeaderMenu-link border-0 width-full width-lg-auto px-0 px-lg-2 py-lg-2 no-wrap d-flex flex-items-center flex-justify-between js-details-target" aria-expanded="false">
        Open Source
        <svg opacity="0.5" aria-hidden="true" height="16" viewBox="0 0 16 16" version="1.1" width="16" data-view-component="true" class="octicon octicon-chevron-down HeaderMenu-icon ml-1">
    <path d="M12.78 5.22a.749.749 0 0 1 0 1.06l-4.25 4.25a.749.749 0 0 1-1.06 0L3.22 6.28a.749.749 0 1 1 1.06-1.06L8 8.939l3.72-3.719a.749.749 0 0 1 1.06 0Z"></path>
</svg>
      </button>

      <div class="HeaderMenu-dropdown dropdown-menu rounded m-0 p-0 pt-2 pt-lg-4 position-relative position-lg-absolute left-0 left-lg-n3 pb-2 pb-lg-4 px-lg-4">
          <div class="HeaderMenu-column">
              <div class="border-bottom pb-3 pb-lg-0 pb-lg-3 mb-3 mb-lg-0 mb-lg-3">

                <ul class="list-style-none f5" >
                    <li>
  <a class="HeaderMenu-dropdown-link d-block no-underline position-relative py-2 Link--secondary d-flex flex-items-center Link--has-description" data-analytics-event="{&quot;location&quot;:&quot;navbar&quot;,&quot;action&quot;:&quot;github_sponsors&quot;,&quot;context&quot;:&quot;open_source&quot;,&quot;tag&quot;:&quot;link&quot;,&quot;label&quot;:&quot;github_sponsors_link_open_source_navbar&quot;}" href="/sponsors">
      
      <div>
          <div class="color-fg-default h4">
            GitHub Sponsors
          </div>
        Fund open source developers
      </div>

    
</a></li>

                </ul>
              </div>
              <div class="border-bottom pb-3 pb-lg-0 pb-lg-3 mb-3 mb-lg-0 mb-lg-3">

                <ul class="list-style-none f5" >
                    <li>
  <a class="HeaderMenu-dropdown-link d-block no-underline position-relative py-2 Link--secondary d-flex flex-items-center Link--has-description" data-analytics-event="{&quot;location&quot;:&quot;navbar&quot;,&quot;action&quot;:&quot;the_readme_project&quot;,&quot;context&quot;:&quot;open_source&quot;,&quot;tag&quot;:&quot;link&quot;,&quot;label&quot;:&quot;the_readme_project_link_open_source_navbar&quot;}" href="https://github.com/readme">
      
      <div>
          <div class="color-fg-default h4">
            The ReadME Project
          </div>
        GitHub community articles
      </div>

    
</a></li>

                </ul>
              </div>
              <div class="border-bottom pb-3 pb-lg-0 border-bottom-0">
                    <span class="d-block h4 color-fg-default my-1" id="open-source-repositories-heading">Repositories</span>

                <ul class="list-style-none f5" aria-labelledby="open-source-repositories-heading">
                    <li>
  <a class="HeaderMenu-dropdown-link d-block no-underline position-relative py-2 Link--secondary" data-analytics-event="{&quot;location&quot;:&quot;navbar&quot;,&quot;action&quot;:&quot;topics&quot;,&quot;context&quot;:&quot;open_source&quot;,&quot;tag&quot;:&quot;link&quot;,&quot;label&quot;:&quot;topics_link_open_source_navbar&quot;}" href="https://github.com/topics">
      Topics

    
</a></li>

                    <li>
  <a class="HeaderMenu-dropdown-link d-block no-underline position-relative py-2 Link--secondary" data-analytics-event="{&quot;location&quot;:&quot;navbar&quot;,&quot;action&quot;:&quot;trending&quot;,&quot;context&quot;:&quot;open_source&quot;,&quot;tag&quot;:&quot;link&quot;,&quot;label&quot;:&quot;trending_link_open_source_navbar&quot;}" href="https://github.com/trending">
      Trending

    
</a></li>

                    <li>
  <a class="HeaderMenu-dropdown-link d-block no-underline position-relative py-2 Link--secondary" data-analytics-event="{&quot;location&quot;:&quot;navbar&quot;,&quot;action&quot;:&quot;collections&quot;,&quot;context&quot;:&quot;open_source&quot;,&quot;tag&quot;:&quot;link&quot;,&quot;label&quot;:&quot;collections_link_open_source_navbar&quot;}" href="https://github.com/collections">
      Collections

    
</a></li>

                </ul>
              </div>
          </div>

      </div>
</li>


                <li class="HeaderMenu-item position-relative flex-wrap flex-justify-between flex-items-center d-block d-lg-flex flex-lg-nowrap flex-lg-items-center js-details-container js-header-menu-item">
      <button type="button" class="HeaderMenu-link border-0 width-full width-lg-auto px-0 px-lg-2 py-lg-2 no-wrap d-flex flex-items-center flex-justify-between js-details-target" aria-expanded="false">
        Enterprise
        <svg opacity="0.5" aria-hidden="true" height="16" viewBox="0 0 16 16" version="1.1" width="16" data-view-component="true" class="octicon octicon-chevron-down HeaderMenu-icon ml-1">
    <path d="M12.78 5.22a.749.749 0 0 1 0 1.06l-4.25 4.25a.749.749 0 0 1-1.06 0L3.22 6.28a.749.749 0 1 1 1.06-1.06L8 8.939l3.72-3.719a.749.749 0 0 1 1.06 0Z"></path>
</svg>
      </button>

      <div class="HeaderMenu-dropdown dropdown-menu rounded m-0 p-0 pt-2 pt-lg-4 position-relative position-lg-absolute left-0 left-lg-n3 pb-2 pb-lg-4 px-lg-4">
          <div class="HeaderMenu-column">
              <div class="border-bottom pb-3 pb-lg-0 pb-lg-3 mb-3 mb-lg-0 mb-lg-3">

                <ul class="list-style-none f5" >
                    <li>
  <a class="HeaderMenu-dropdown-link d-block no-underline position-relative py-2 Link--secondary d-flex flex-items-center Link--has-description" data-analytics-event="{&quot;location&quot;:&quot;navbar&quot;,&quot;action&quot;:&quot;enterprise_platform&quot;,&quot;context&quot;:&quot;enterprise&quot;,&quot;tag&quot;:&quot;link&quot;,&quot;label&quot;:&quot;enterprise_platform_link_enterprise_navbar&quot;}" href="/enterprise">
      <svg aria-hidden="true" height="24" viewBox="0 0 24 24" version="1.1" width="24" data-view-component="true" class="octicon octicon-stack color-fg-subtle mr-3">
    <path d="M11.063 1.456a1.749 1.749 0 0 1 1.874 0l8.383 5.316a1.751 1.751 0 0 1 0 2.956l-8.383 5.316a1.749 1.749 0 0 1-1.874 0L2.68 9.728a1.751 1.751 0 0 1 0-2.956Zm1.071 1.267a.25.25 0 0 0-.268 0L3.483 8.039a.25.25 0 0 0 0 .422l8.383 5.316a.25.25 0 0 0 .268 0l8.383-5.316a.25.25 0 0 0 0-.422Z"></path><path d="M1.867 12.324a.75.75 0 0 1 1.035-.232l8.964 5.685a.25.25 0 0 0 .268 0l8.964-5.685a.75.75 0 0 1 .804 1.267l-8.965 5.685a1.749 1.749 0 0 1-1.874 0l-8.965-5.685a.75.75 0 0 1-.231-1.035Z"></path><path d="M1.867 16.324a.75.75 0 0 1 1.035-.232l8.964 5.685a.25.25 0 0 0 .268 0l8.964-5.685a.75.75 0 0 1 .804 1.267l-8.965 5.685a1.749 1.749 0 0 1-1.874 0l-8.965-5.685a.75.75 0 0 1-.231-1.035Z"></path>
</svg>
      <div>
          <div class="color-fg-default h4">
            Enterprise platform
          </div>
        AI-powered developer platform
      </div>

    
</a></li>

                </ul>
              </div>
              <div class="border-bottom pb-3 pb-lg-0 border-bottom-0">
                    <span class="d-block h4 color-fg-default my-1" id="enterprise-available-add-ons-heading">Available add-ons</span>

                <ul class="list-style-none f5" aria-labelledby="enterprise-available-add-ons-heading">
                    <li>
  <a class="HeaderMenu-dropdown-link d-block no-underline position-relative py-2 Link--secondary d-flex flex-items-center Link--has-description pb-lg-3" data-analytics-event="{&quot;location&quot;:&quot;navbar&quot;,&quot;action&quot;:&quot;github_advanced_security&quot;,&quot;context&quot;:&quot;enterprise&quot;,&quot;tag&quot;:&quot;link&quot;,&quot;label&quot;:&quot;github_advanced_security_link_enterprise_navbar&quot;}" href="https://github.com/security/advanced-security">
      <svg aria-hidden="true" height="24" viewBox="0 0 24 24" version="1.1" width="24" data-view-component="true" class="octicon octicon-shield-check color-fg-subtle mr-3">
    <path d="M16.53 9.78a.75.75 0 0 0-1.06-1.06L11 13.19l-1.97-1.97a.75.75 0 0 0-1.06 1.06l2.5 2.5a.75.75 0 0 0 1.06 0l5-5Z"></path><path d="m12.54.637 8.25 2.675A1.75 1.75 0 0 1 22 4.976V10c0 6.19-3.771 10.704-9.401 12.83a1.704 1.704 0 0 1-1.198 0C5.77 20.705 2 16.19 2 10V4.976c0-.758.489-1.43 1.21-1.664L11.46.637a1.748 1.748 0 0 1 1.08 0Zm-.617 1.426-8.25 2.676a.249.249 0 0 0-.173.237V10c0 5.46 3.28 9.483 8.43 11.426a.199.199 0 0 0 .14 0C17.22 19.483 20.5 15.461 20.5 10V4.976a.25.25 0 0 0-.173-.237l-8.25-2.676a.253.253 0 0 0-.154 0Z"></path>
</svg>
      <div>
          <div class="color-fg-default h4">
            GitHub Advanced Security
          </div>
        Enterprise-grade security features
      </div>

    
</a></li>

                    <li>
  <a class="HeaderMenu-dropdown-link d-block no-underline position-relative py-2 Link--secondary d-flex flex-items-center Link--has-description pb-lg-3" data-analytics-event="{&quot;location&quot;:&quot;navbar&quot;,&quot;action&quot;:&quot;copilot_for_business&quot;,&quot;context&quot;:&quot;enterprise&quot;,&quot;tag&quot;:&quot;link&quot;,&quot;label&quot;:&quot;copilot_for_business_link_enterprise_navbar&quot;}" href="/features/copilot/copilot-business">
      <svg aria-hidden="true" height="24" viewBox="0 0 24 24" version="1.1" width="24" data-view-component="true" class="octicon octicon-copilot color-fg-subtle mr-3">
    <path d="M23.922 16.992c-.861 1.495-5.859 5.023-11.922 5.023-6.063 0-11.061-3.528-11.922-5.023A.641.641 0 0 1 0 16.736v-2.869a.841.841 0 0 1 .053-.22c.372-.935 1.347-2.292 2.605-2.656.167-.429.414-1.055.644-1.517a10.195 10.195 0 0 1-.052-1.086c0-1.331.282-2.499 1.132-3.368.397-.406.89-.717 1.474-.952 1.399-1.136 3.392-2.093 6.122-2.093 2.731 0 4.767.957 6.166 2.093.584.235 1.077.546 1.474.952.85.869 1.132 2.037 1.132 3.368 0 .368-.014.733-.052 1.086.23.462.477 1.088.644 1.517 1.258.364 2.233 1.721 2.605 2.656a.832.832 0 0 1 .053.22v2.869a.641.641 0 0 1-.078.256ZM12.172 11h-.344a4.323 4.323 0 0 1-.355.508C10.703 12.455 9.555 13 7.965 13c-1.725 0-2.989-.359-3.782-1.259a2.005 2.005 0 0 1-.085-.104L4 11.741v6.585c1.435.779 4.514 2.179 8 2.179 3.486 0 6.565-1.4 8-2.179v-6.585l-.098-.104s-.033.045-.085.104c-.793.9-2.057 1.259-3.782 1.259-1.59 0-2.738-.545-3.508-1.492a4.323 4.323 0 0 1-.355-.508h-.016.016Zm.641-2.935c.136 1.057.403 1.913.878 2.497.442.544 1.134.938 2.344.938 1.573 0 2.292-.337 2.657-.751.384-.435.558-1.15.558-2.361 0-1.14-.243-1.847-.705-2.319-.477-.488-1.319-.862-2.824-1.025-1.487-.161-2.192.138-2.533.529-.269.307-.437.808-.438 1.578v.021c0 .265.021.562.063.893Zm-1.626 0c.042-.331.063-.628.063-.894v-.02c-.001-.77-.169-1.271-.438-1.578-.341-.391-1.046-.69-2.533-.529-1.505.163-2.347.537-2.824 1.025-.462.472-.705 1.179-.705 2.319 0 1.211.175 1.926.558 2.361.365.414 1.084.751 2.657.751 1.21 0 1.902-.394 2.344-.938.475-.584.742-1.44.878-2.497Z"></path><path d="M14.5 14.25a1 1 0 0 1 1 1v2a1 1 0 0 1-2 0v-2a1 1 0 0 1 1-1Zm-5 0a1 1 0 0 1 1 1v2a1 1 0 0 1-2 0v-2a1 1 0 0 1 1-1Z"></path>
</svg>
      <div>
          <div class="color-fg-default h4">
            Copilot for business
          </div>
        Enterprise-grade AI features
      </div>

    
</a></li>

                    <li>
  <a class="HeaderMenu-dropdown-link d-block no-underline position-relative py-2 Link--secondary d-flex flex-items-center Link--has-description" data-analytics-event="{&quot;location&quot;:&quot;navbar&quot;,&quot;action&quot;:&quot;premium_support&quot;,&quot;context&quot;:&quot;enterprise&quot;,&quot;tag&quot;:&quot;link&quot;,&quot;label&quot;:&quot;premium_support_link_enterprise_navbar&quot;}" href="/premium-support">
      <svg aria-hidden="true" height="24" viewBox="0 0 24 24" version="1.1" width="24" data-view-component="true" class="octicon octicon-comment-discussion color-fg-subtle mr-3">
    <path d="M1.75 1h12.5c.966 0 1.75.784 1.75 1.75v9.5A1.75 1.75 0 0 1 14.25 14H8.061l-2.574 2.573A1.458 1.458 0 0 1 3 15.543V14H1.75A1.75 1.75 0 0 1 0 12.25v-9.5C0 1.784.784 1 1.75 1ZM1.5 2.75v9.5c0 .138.112.25.25.25h2a.75.75 0 0 1 .75.75v2.19l2.72-2.72a.749.749 0 0 1 .53-.22h6.5a.25.25 0 0 0 .25-.25v-9.5a.25.25 0 0 0-.25-.25H1.75a.25.25 0 0 0-.25.25Z"></path><path d="M22.5 8.75a.25.25 0 0 0-.25-.25h-3.5a.75.75 0 0 1 0-1.5h3.5c.966 0 1.75.784 1.75 1.75v9.5A1.75 1.75 0 0 1 22.25 20H21v1.543a1.457 1.457 0 0 1-2.487 1.03L15.939 20H10.75A1.75 1.75 0 0 1 9 18.25v-1.465a.75.75 0 0 1 1.5 0v1.465c0 .138.112.25.25.25h5.5a.75.75 0 0 1 .53.22l2.72 2.72v-2.19a.75.75 0 0 1 .75-.75h2a.25.25 0 0 0 .25-.25v-9.5Z"></path>
</svg>
      <div>
          <div class="color-fg-default h4">
            Premium Support
          </div>
        Enterprise-grade 24/7 support
      </div>

    
</a></li>

                </ul>
              </div>
          </div>

      </div>
</li>


                <li class="HeaderMenu-item position-relative flex-wrap flex-justify-between flex-items-center d-block d-lg-flex flex-lg-nowrap flex-lg-items-center js-details-container js-header-menu-item">
    <a class="HeaderMenu-link no-underline px-0 px-lg-2 py-3 py-lg-2 d-block d-lg-inline-block" data-analytics-event="{&quot;location&quot;:&quot;navbar&quot;,&quot;action&quot;:&quot;pricing&quot;,&quot;context&quot;:&quot;global&quot;,&quot;tag&quot;:&quot;link&quot;,&quot;label&quot;:&quot;pricing_link_global_navbar&quot;}" href="https://github.com/pricing">Pricing</a>
</li>

            </ul>
          </nav>

        <div class="d-flex flex-column flex-lg-row width-full flex-justify-end flex-lg-items-center text-center mt-3 mt-lg-0 text-lg-left ml-lg-3">
                


<qbsearch-input class="search-input" data-scope="repo:yhirose/cpp-httplib" data-custom-scopes-path="/search/custom_scopes" data-delete-custom-scopes-csrf="QX6mc6mUx2GBndiZ3QgMdmDYdacVjboA4hriGi_i1EPZFowl1GDFwQu8m3HAvM-0Ft2VVPsixYBdyRBpBIGCNg" data-max-custom-scopes="10" data-header-redesign-enabled="false" data-initial-value="" data-blackbird-suggestions-path="/search/suggestions" data-jump-to-suggestions-path="/_graphql/GetSuggestedNavigationDestinations" data-current-repository="yhirose/cpp-httplib" data-current-org="" data-current-owner="yhirose" data-logged-in="false" data-copilot-chat-enabled="false" data-nl-search-enabled="false" data-retain-scroll-position="true">
  <div
    class="search-input-container search-with-dialog position-relative d-flex flex-row flex-items-center mr-4 rounded"
    data-action="click:qbsearch-input#searchInputContainerClicked"
  >
      <button
        type="button"
        class="header-search-button placeholder  input-button form-control d-flex flex-1 flex-self-stretch flex-items-center no-wrap width-full py-0 pl-2 pr-0 text-left border-0 box-shadow-none"
        data-target="qbsearch-input.inputButton"
        aria-label="Search or jump to…"
        aria-haspopup="dialog"
        placeholder="Search or jump to..."
        data-hotkey=s,/
        autocapitalize="off"
        data-analytics-event="{&quot;location&quot;:&quot;navbar&quot;,&quot;action&quot;:&quot;searchbar&quot;,&quot;context&quot;:&quot;global&quot;,&quot;tag&quot;:&quot;input&quot;,&quot;label&quot;:&quot;searchbar_input_global_navbar&quot;}"
        data-action="click:qbsearch-input#handleExpand"
      >
        <div class="mr-2 color-fg-muted">
          <svg aria-hidden="true" height="16" viewBox="0 0 16 16" version="1.1" width="16" data-view-component="true" class="octicon octicon-search">
    <path d="M10.68 11.74a6 6 0 0 1-7.922-8.982 6 6 0 0 1 8.982 7.922l3.04 3.04a.749.749 0 0 1-.326 1.275.749.749 0 0 1-.734-.215ZM11.5 7a4.499 4.499 0 1 0-8.997 0A4.499 4.499 0 0 0 11.5 7Z"></path>
</svg>
        </div>
        <span class="flex-1" data-target="qbsearch-input.inputButtonText">Search or jump to...</span>
          <div class="d-flex" data-target="qbsearch-input.hotkeyIndicator">
            <svg xmlns="http://www.w3.org/2000/svg" width="22" height="20" aria-hidden="true" class="mr-1"><path fill="none" stroke="#979A9C" opacity=".4" d="M3.5.5h12c1.7 0 3 1.3 3 3v13c0 1.7-1.3 3-3 3h-12c-1.7 0-3-1.3-3-3v-13c0-1.7 1.3-3 3-3z"></path><path fill="#979A9C" d="M11.8 6L8 15.1h-.9L10.8 6h1z"></path></svg>

          </div>
      </button>

    <input type="hidden" name="type" class="js-site-search-type-field">

    
<div class="Overlay--hidden " data-modal-dialog-overlay>
  <modal-dialog data-action="close:qbsearch-input#handleClose cancel:qbsearch-input#handleClose" data-target="qbsearch-input.searchSuggestionsDialog" role="dialog" id="search-suggestions-dialog" aria-modal="true" aria-labelledby="search-suggestions-dialog-header" data-view-component="true" class="Overlay Overlay--width-large Overlay--height-auto">
      <h1 id="search-suggestions-dialog-header" class="sr-only">Search code, repositories, users, issues, pull requests...</h1>
    <div class="Overlay-body Overlay-body--paddingNone">
      
          <div data-view-component="true">        <div class="search-suggestions position-fixed width-full color-shadow-large border color-fg-default color-bg-default overflow-hidden d-flex flex-column query-builder-container"
          style="border-radius: 12px;"
          data-target="qbsearch-input.queryBuilderContainer"
          hidden
        >
          <!-- '"` --><!-- </textarea></xmp> --></option></form><form id="query-builder-test-form" action="" accept-charset="UTF-8" method="get">
  <query-builder data-target="qbsearch-input.queryBuilder" id="query-builder-query-builder-test" data-filter-key=":" data-view-component="true" class="QueryBuilder search-query-builder">
    <div class="FormControl FormControl--fullWidth">
      <label id="query-builder-test-label" for="query-builder-test" class="FormControl-label sr-only">
        Search
      </label>
      <div
        class="QueryBuilder-StyledInput width-fit "
        data-target="query-builder.styledInput"
      >
          <span id="query-builder-test-leadingvisual-wrap" class="FormControl-input-leadingVisualWrap QueryBuilder-leadingVisualWrap">
            <svg aria-hidden="true" height="16" viewBox="0 0 16 16" version="1.1" width="16" data-view-component="true" class="octicon octicon-search FormControl-input-leadingVisual">
    <path d="M10.68 11.74a6 6 0 0 1-7.922-8.982 6 6 0 0 1 8.982 7.922l3.04 3.04a.749.749 0 0 1-.326 1.275.749.749 0 0 1-.734-.215ZM11.5 7a4.499 4.499 0 1 0-8.997 0A4.499 4.499 0 0 0 11.5 7Z"></path>
</svg>
          </span>
        <div data-target="query-builder.styledInputContainer" class="QueryBuilder-StyledInputContainer">
          <div
            aria-hidden="true"
            class="QueryBuilder-StyledInputContent"
            data-target="query-builder.styledInputContent"
          ></div>
          <div class="QueryBuilder-InputWrapper">
            <div aria-hidden="true" class="QueryBuilder-Sizer" data-target="query-builder.sizer"></div>
            <input id="query-builder-test" name="query-builder-test" value="" autocomplete="off" type="text" role="combobox" spellcheck="false" aria-expanded="false" aria-describedby="validation-c6cdbebe-a6c0-4926-ae40-a3fc8cbbea24" data-target="query-builder.input" data-action="
          input:query-builder#inputChange
          blur:query-builder#inputBlur
          keydown:query-builder#inputKeydown
          focus:query-builder#inputFocus
        " data-view-component="true" class="FormControl-input QueryBuilder-Input FormControl-medium" />
          </div>
        </div>
          <span class="sr-only" id="query-builder-test-clear">Clear</span>
          <button role="button" id="query-builder-test-clear-button" aria-labelledby="query-builder-test-clear query-builder-test-label" data-target="query-builder.clearButton" data-action="
                click:query-builder#clear
                focus:query-builder#clearButtonFocus
                blur:query-builder#clearButtonBlur
              " variant="small" hidden="hidden" type="button" data-view-component="true" class="Button Button--iconOnly Button--invisible Button--medium mr-1 px-2 py-0 d-flex flex-items-center rounded-1 color-fg-muted">  <svg aria-hidden="true" height="16" viewBox="0 0 16 16" version="1.1" width="16" data-view-component="true" class="octicon octicon-x-circle-fill Button-visual">
    <path d="M2.343 13.657A8 8 0 1 1 13.658 2.343 8 8 0 0 1 2.343 13.657ZM6.03 4.97a.751.751 0 0 0-1.042.018.751.751 0 0 0-.018 1.042L6.94 8 4.97 9.97a.749.749 0 0 0 .326 1.275.749.749 0 0 0 .734-.215L8 9.06l1.97 1.97a.749.749 0 0 0 1.275-.326.749.749 0 0 0-.215-.734L9.06 8l1.97-1.97a.749.749 0 0 0-.326-1.275.749.749 0 0 0-.734.215L8 6.94Z"></path>
</svg>
</button>

      </div>
      <template id="search-icon">
  <svg aria-hidden="true" height="16" viewBox="0 0 16 16" version="1.1" width="16" data-view-component="true" class="octicon octicon-search">
    <path d="M10.68 11.74a6 6 0 0 1-7.922-8.982 6 6 0 0 1 8.982 7.922l3.04 3.04a.749.749 0 0 1-.326 1.275.749.749 0 0 1-.734-.215ZM11.5 7a4.499 4.499 0 1 0-8.997 0A4.499 4.499 0 0 0 11.5 7Z"></path>
</svg>
</template>

<template id="code-icon">
  <svg aria-hidden="true" height="16" viewBox="0 0 16 16" version="1.1" width="16" data-view-component="true" class="octicon octicon-code">
    <path d="m11.28 3.22 4.25 4.25a.75.75 0 0 1 0 1.06l-4.25 4.25a.749.749 0 0 1-1.275-.326.749.749 0 0 1 .215-.734L13.94 8l-3.72-3.72a.749.749 0 0 1 .326-1.275.749.749 0 0 1 .734.215Zm-6.56 0a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042L2.06 8l3.72 3.72a.749.749 0 0 1-.326 1.275.749.749 0 0 1-.734-.215L.47 8.53a.75.75 0 0 1 0-1.06Z"></path>
</svg>
</template>

<template id="file-code-icon">
  <svg aria-hidden="true" height="16" viewBox="0 0 16 16" version="1.1" width="16" data-view-component="true" class="octicon octicon-file-code">
    <path d="M4 1.75C4 .784 4.784 0 5.75 0h5.586c.464 0 .909.184 1.237.513l2.914 2.914c.329.328.513.773.513 1.237v8.586A1.75 1.75 0 0 1 14.25 15h-9a.75.75 0 0 1 0-1.5h9a.25.25 0 0 0 .25-.25V6h-2.75A1.75 1.75 0 0 1 10 4.25V1.5H5.75a.25.25 0 0 0-.25.25v2.5a.75.75 0 0 1-1.5 0Zm1.72 4.97a.75.75 0 0 1 1.06 0l2 2a.75.75 0 0 1 0 1.06l-2 2a.749.749 0 0 1-1.275-.326.749.749 0 0 1 .215-.734l1.47-1.47-1.47-1.47a.75.75 0 0 1 0-1.06ZM3.28 7.78 1.81 9.25l1.47 1.47a.751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018l-2-2a.75.75 0 0 1 0-1.06l2-2a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042Zm8.22-6.218V4.25c0 .138.112.25.25.25h2.688l-.011-.013-2.914-2.914-.013-.011Z"></path>
</svg>
</template>

<template id="history-icon">
  <svg aria-hidden="true" height="16" viewBox="0 0 16 16" version="1.1" width="16" data-view-component="true" class="octicon octicon-history">
    <path d="m.427 1.927 1.215 1.215a8.002 8.002 0 1 1-1.6 5.685.75.75 0 1 1 1.493-.154 6.5 6.5 0 1 0 1.18-4.458l1.358 1.358A.25.25 0 0 1 3.896 6H.25A.25.25 0 0 1 0 5.75V2.104a.25.25 0 0 1 .427-.177ZM7.75 4a.75.75 0 0 1 .75.75v2.992l2.028.812a.75.75 0 0 1-.557 1.392l-2.5-1A.751.751 0 0 1 7 8.25v-3.5A.75.75 0 0 1 7.75 4Z"></path>
</svg>
</template>

<template id="repo-icon">
  <svg aria-hidden="true" height="16" viewBox="0 0 16 16" version="1.1" width="16" data-view-component="true" class="octicon octicon-repo">
    <path d="M2 2.5A2.5 2.5 0 0 1 4.5 0h8.75a.75.75 0 0 1 .75.75v12.5a.75.75 0 0 1-.75.75h-2.5a.75.75 0 0 1 0-1.5h1.75v-2h-8a1 1 0 0 0-.714 1.7.75.75 0 1 1-1.072 1.05A2.495 2.495 0 0 1 2 11.5Zm10.5-1h-8a1 1 0 0 0-1 1v6.708A2.486 2.486 0 0 1 4.5 9h8ZM5 12.25a.25.25 0 0 1 .25-.25h3.5a.25.25 0 0 1 .25.25v3.25a.25.25 0 0 1-.4.2l-1.45-1.087a.249.249 0 0 0-.3 0L5.4 15.7a.25.25 0 0 1-.4-.2Z"></path>
</svg>
</template>

<template id="bookmark-icon">
  <svg aria-hidden="true" height="16" viewBox="0 0 16 16" version="1.1" width="16" data-view-component="true" class="octicon octicon-bookmark">
    <path d="M3 2.75C3 1.784 3.784 1 4.75 1h6.5c.966 0 1.75.784 1.75 1.75v11.5a.75.75 0 0 1-1.227.579L8 11.722l-3.773 3.107A.751.751 0 0 1 3 14.25Zm1.75-.25a.25.25 0 0 0-.25.25v9.91l3.023-2.489a.75.75 0 0 1 .954 0l3.023 2.49V2.75a.25.25 0 0 0-.25-.25Z"></path>
</svg>
</template>

<template id="plus-circle-icon">
  <svg aria-hidden="true" height="16" viewBox="0 0 16 16" version="1.1" width="16" data-view-component="true" class="octicon octicon-plus-circle">
    <path d="M8 0a8 8 0 1 1 0 16A8 8 0 0 1 8 0ZM1.5 8a6.5 6.5 0 1 0 13 0 6.5 6.5 0 0 0-13 0Zm7.25-3.25v2.5h2.5a.75.75 0 0 1 0 1.5h-2.5v2.5a.75.75 0 0 1-1.5 0v-2.5h-2.5a.75.75 0 0 1 0-1.5h2.5v-2.5a.75.75 0 0 1 1.5 0Z"></path>
</svg>
</template>

<template id="circle-icon">
  <svg aria-hidden="true" height="16" viewBox="0 0 16 16" version="1.1" width="16" data-view-component="true" class="octicon octicon-dot-fill">
    <path d="M8 4a4 4 0 1 1 0 8 4 4 0 0 1 0-8Z"></path>
</svg>
</template>

<template id="trash-icon">
  <svg aria-hidden="true" height="16" viewBox="0 0 16 16" version="1.1" width="16" data-view-component="true" class="octicon octicon-trash">
    <path d="M11 1.75V3h2.25a.75.75 0 0 1 0 1.5H2.75a.75.75 0 0 1 0-1.5H5V1.75C5 .784 5.784 0 6.75 0h2.5C10.216 0 11 .784 11 1.75ZM4.496 6.675l.66 6.6a.25.25 0 0 0 .249.225h5.19a.25.25 0 0 0 .249-.225l.66-6.6a.75.75 0 0 1 1.492.149l-.66 6.6A1.748 1.748 0 0 1 10.595 15h-5.19a1.75 1.75 0 0 1-1.741-1.575l-.66-6.6a.75.75 0 1 1 1.492-.15ZM6.5 1.75V3h3V1.75a.25.25 0 0 0-.25-.25h-2.5a.25.25 0 0 0-.25.25Z"></path>
</svg>
</template>

<template id="team-icon">
  <svg aria-hidden="true" height="16" viewBox="0 0 16 16" version="1.1" width="16" data-view-component="true" class="octicon octicon-people">
    <path d="M2 5.5a3.5 3.5 0 1 1 5.898 2.549 5.508 5.508 0 0 1 3.034 4.084.75.75 0 1 1-1.482.235 4 4 0 0 0-7.9 0 .75.75 0 0 1-1.482-.236A5.507 5.507 0 0 1 3.102 8.05 3.493 3.493 0 0 1 2 5.5ZM11 4a3.001 3.001 0 0 1 2.22 5.018 5.01 5.01 0 0 1 2.56 3.012.749.749 0 0 1-.885.954.752.752 0 0 1-.549-.514 3.507 3.507 0 0 0-2.522-2.372.75.75 0 0 1-.574-.73v-.352a.75.75 0 0 1 .416-.672A1.5 1.5 0 0 0 11 5.5.75.75 0 0 1 11 4Zm-5.5-.5a2 2 0 1 0-.001 3.999A2 2 0 0 0 5.5 3.5Z"></path>
</svg>
</template>

<template id="project-icon">
  <svg aria-hidden="true" height="16" viewBox="0 0 16 16" version="1.1" width="16" data-view-component="true" class="octicon octicon-project">
    <path d="M1.75 0h12.5C15.216 0 16 .784 16 1.75v12.5A1.75 1.75 0 0 1 14.25 16H1.75A1.75 1.75 0 0 1 0 14.25V1.75C0 .784.784 0 1.75 0ZM1.5 1.75v12.5c0 .138.112.25.25.25h12.5a.25.25 0 0 0 .25-.25V1.75a.25.25 0 0 0-.25-.25H1.75a.25.25 0 0 0-.25.25ZM11.75 3a.75.75 0 0 1 .75.75v7.5a.75.75 0 0 1-1.5 0v-7.5a.75.75 0 0 1 .75-.75Zm-8.25.75a.75.75 0 0 1 1.5 0v5.5a.75.75 0 0 1-1.5 0ZM8 3a.75.75 0 0 1 .75.75v3.5a.75.75 0 0 1-1.5 0v-3.5A.75.75 0 0 1 8 3Z"></path>
</svg>
</template>

<template id="pencil-icon">
  <svg aria-hidden="true" height="16" viewBox="0 0 16 16" version="1.1" width="16" data-view-component="true" class="octicon octicon-pencil">
    <path d="M11.013 1.427a1.75 1.75 0 0 1 2.474 0l1.086 1.086a1.75 1.75 0 0 1 0 2.474l-8.61 8.61c-.21.21-.47.364-.756.445l-3.251.93a.75.75 0 0 1-.927-.928l.929-3.25c.081-.286.235-.547.445-.758l8.61-8.61Zm.176 4.823L9.75 4.81l-6.286 6.287a.253.253 0 0 0-.064.108l-.558 1.953 1.953-.558a.253.253 0 0 0 .108-.064Zm1.238-3.763a.25.25 0 0 0-.354 0L10.811 3.75l1.439 1.44 1.263-1.263a.25.25 0 0 0 0-.354Z"></path>
</svg>
</template>

<template id="copilot-icon">
  <svg aria-hidden="true" height="16" viewBox="0 0 16 16" version="1.1" width="16" data-view-component="true" class="octicon octicon-copilot">
    <path d="M7.998 15.035c-4.562 0-7.873-2.914-7.998-3.749V9.338c.085-.628.677-1.686 1.588-2.065.013-.07.024-.143.036-.218.029-.183.06-.384.126-.612-.201-.508-.254-1.084-.254-1.656 0-.87.128-1.769.693-2.484.579-.733 1.494-1.124 2.724-1.261 1.206-.134 2.262.034 2.944.765.05.053.096.108.139.165.044-.057.094-.112.143-.165.682-.731 1.738-.899 2.944-.765 1.23.137 2.145.528 2.724 1.261.566.715.693 1.614.693 2.484 0 .572-.053 1.148-.254 1.656.066.228.098.429.126.612.012.076.024.148.037.218.924.385 1.522 1.471 1.591 2.095v1.872c0 .766-3.351 3.795-8.002 3.795Zm0-1.485c2.28 0 4.584-1.11 5.002-1.433V7.862l-.023-.116c-.49.21-1.075.291-1.727.291-1.146 0-2.059-.327-2.71-.991A3.222 3.222 0 0 1 8 6.303a3.24 3.24 0 0 1-.544.743c-.65.664-1.563.991-2.71.991-.652 0-1.236-.081-1.727-.291l-.023.116v4.255c.419.323 2.722 1.433 5.002 1.433ZM6.762 2.83c-.193-.206-.637-.413-1.682-.297-1.019.113-1.479.404-1.713.7-.247.312-.369.789-.369 1.554 0 .793.129 1.171.308 1.371.162.181.519.379 1.442.379.853 0 1.339-.235 1.638-.54.315-.322.527-.827.617-1.553.117-.935-.037-1.395-.241-1.614Zm4.155-.297c-1.044-.116-1.488.091-1.681.297-.204.219-.359.679-.242 1.614.091.726.303 1.231.618 1.553.299.305.784.54 1.638.54.922 0 1.28-.198 1.442-.379.179-.2.308-.578.308-1.371 0-.765-.123-1.242-.37-1.554-.233-.296-.693-.587-1.713-.7Z"></path><path d="M6.25 9.037a.75.75 0 0 1 .75.75v1.501a.75.75 0 0 1-1.5 0V9.787a.75.75 0 0 1 .75-.75Zm4.25.75v1.501a.75.75 0 0 1-1.5 0V9.787a.75.75 0 0 1 1.5 0Z"></path>
</svg>
</template>

<template id="copilot-error-icon">
  <svg aria-hidden="true" height="16" viewBox="0 0 16 16" version="1.1" width="16" data-view-component="true" class="octicon octicon-copilot-error">
    <path d="M16 11.24c0 .112-.072.274-.21.467L13 9.688V7.862l-.023-.116c-.49.21-1.075.291-1.727.291-.198 0-.388-.009-.571-.029L6.833 5.226a4.01 4.01 0 0 0 .17-.782c.117-.935-.037-1.395-.241-1.614-.193-.206-.637-.413-1.682-.297-.683.076-1.115.231-1.395.415l-1.257-.91c.579-.564 1.413-.877 2.485-.996 1.206-.134 2.262.034 2.944.765.05.053.096.108.139.165.044-.057.094-.112.143-.165.682-.731 1.738-.899 2.944-.765 1.23.137 2.145.528 2.724 1.261.566.715.693 1.614.693 2.484 0 .572-.053 1.148-.254 1.656.066.228.098.429.126.612.012.076.024.148.037.218.924.385 1.522 1.471 1.591 2.095Zm-5.083-8.707c-1.044-.116-1.488.091-1.681.297-.204.219-.359.679-.242 1.614.091.726.303 1.231.618 1.553.299.305.784.54 1.638.54.922 0 1.28-.198 1.442-.379.179-.2.308-.578.308-1.371 0-.765-.123-1.242-.37-1.554-.233-.296-.693-.587-1.713-.7Zm2.511 11.074c-1.393.776-3.272 1.428-5.43 1.428-4.562 0-7.873-2.914-7.998-3.749V9.338c.085-.628.677-1.686 1.588-2.065.013-.07.024-.143.036-.218.029-.183.06-.384.126-.612-.18-.455-.241-.963-.252-1.475L.31 4.107A.747.747 0 0 1 0 3.509V3.49a.748.748 0 0 1 .625-.73c.156-.026.306.047.435.139l14.667 10.578a.592.592 0 0 1 .227.264.752.752 0 0 1 .046.249v.022a.75.75 0 0 1-1.19.596Zm-1.367-.991L5.635 7.964a5.128 5.128 0 0 1-.889.073c-.652 0-1.236-.081-1.727-.291l-.023.116v4.255c.419.323 2.722 1.433 5.002 1.433 1.539 0 3.089-.505 4.063-.934Z"></path>
</svg>
</template>

<template id="workflow-icon">
  <svg aria-hidden="true" height="16" viewBox="0 0 16 16" version="1.1" width="16" data-view-component="true" class="octicon octicon-workflow">
    <path d="M0 1.75C0 .784.784 0 1.75 0h3.5C6.216 0 7 .784 7 1.75v3.5A1.75 1.75 0 0 1 5.25 7H4v4a1 1 0 0 0 1 1h4v-1.25C9 9.784 9.784 9 10.75 9h3.5c.966 0 1.75.784 1.75 1.75v3.5A1.75 1.75 0 0 1 14.25 16h-3.5A1.75 1.75 0 0 1 9 14.25v-.75H5A2.5 2.5 0 0 1 2.5 11V7h-.75A1.75 1.75 0 0 1 0 5.25Zm1.75-.25a.25.25 0 0 0-.25.25v3.5c0 .138.112.25.25.25h3.5a.25.25 0 0 0 .25-.25v-3.5a.25.25 0 0 0-.25-.25Zm9 9a.25.25 0 0 0-.25.25v3.5c0 .138.112.25.25.25h3.5a.25.25 0 0 0 .25-.25v-3.5a.25.25 0 0 0-.25-.25Z"></path>
</svg>
</template>

<template id="book-icon">
  <svg aria-hidden="true" height="16" viewBox="0 0 16 16" version="1.1" width="16" data-view-component="true" class="octicon octicon-book">
    <path d="M0 1.75A.75.75 0 0 1 .75 1h4.253c1.227 0 2.317.59 3 1.501A3.743 3.743 0 0 1 11.006 1h4.245a.75.75 0 0 1 .75.75v10.5a.75.75 0 0 1-.75.75h-4.507a2.25 2.25 0 0 0-1.591.659l-.622.621a.75.75 0 0 1-1.06 0l-.622-.621A2.25 2.25 0 0 0 5.258 13H.75a.75.75 0 0 1-.75-.75Zm7.251 10.324.004-5.073-.002-2.253A2.25 2.25 0 0 0 5.003 2.5H1.5v9h3.757a3.75 3.75 0 0 1 1.994.574ZM8.755 4.75l-.004 7.322a3.752 3.752 0 0 1 1.992-.572H14.5v-9h-3.495a2.25 2.25 0 0 0-2.25 2.25Z"></path>
</svg>
</template>

<template id="code-review-icon">
  <svg aria-hidden="true" height="16" viewBox="0 0 16 16" version="1.1" width="16" data-view-component="true" class="octicon octicon-code-review">
    <path d="M1.75 1h12.5c.966 0 1.75.784 1.75 1.75v8.5A1.75 1.75 0 0 1 14.25 13H8.061l-2.574 2.573A1.458 1.458 0 0 1 3 14.543V13H1.75A1.75 1.75 0 0 1 0 11.25v-8.5C0 1.784.784 1 1.75 1ZM1.5 2.75v8.5c0 .138.112.25.25.25h2a.75.75 0 0 1 .75.75v2.19l2.72-2.72a.749.749 0 0 1 .53-.22h6.5a.25.25 0 0 0 .25-.25v-8.5a.25.25 0 0 0-.25-.25H1.75a.25.25 0 0 0-.25.25Zm5.28 1.72a.75.75 0 0 1 0 1.06L5.31 7l1.47 1.47a.751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018l-2-2a.75.75 0 0 1 0-1.06l2-2a.75.75 0 0 1 1.06 0Zm2.44 0a.75.75 0 0 1 1.06 0l2 2a.75.75 0 0 1 0 1.06l-2 2a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042L10.69 7 9.22 5.53a.75.75 0 0 1 0-1.06Z"></path>
</svg>
</template>

<template id="codespaces-icon">
  <svg aria-hidden="true" height="16" viewBox="0 0 16 16" version="1.1" width="16" data-view-component="true" class="octicon octicon-codespaces">
    <path d="M0 11.25c0-.966.784-1.75 1.75-1.75h12.5c.966 0 1.75.784 1.75 1.75v3A1.75 1.75 0 0 1 14.25 16H1.75A1.75 1.75 0 0 1 0 14.25Zm2-9.5C2 .784 2.784 0 3.75 0h8.5C13.216 0 14 .784 14 1.75v5a1.75 1.75 0 0 1-1.75 1.75h-8.5A1.75 1.75 0 0 1 2 6.75Zm1.75-.25a.25.25 0 0 0-.25.25v5c0 .138.112.25.25.25h8.5a.25.25 0 0 0 .25-.25v-5a.25.25 0 0 0-.25-.25Zm-2 9.5a.25.25 0 0 0-.25.25v3c0 .138.112.25.25.25h12.5a.25.25 0 0 0 .25-.25v-3a.25.25 0 0 0-.25-.25Z"></path><path d="M7 12.75a.75.75 0 0 1 .75-.75h4.5a.75.75 0 0 1 0 1.5h-4.5a.75.75 0 0 1-.75-.75Zm-4 0a.75.75 0 0 1 .75-.75h.5a.75.75 0 0 1 0 1.5h-.5a.75.75 0 0 1-.75-.75Z"></path>
</svg>
</template>

<template id="comment-icon">
  <svg aria-hidden="true" height="16" viewBox="0 0 16 16" version="1.1" width="16" data-view-component="true" class="octicon octicon-comment">
    <path d="M1 2.75C1 1.784 1.784 1 2.75 1h10.5c.966 0 1.75.784 1.75 1.75v7.5A1.75 1.75 0 0 1 13.25 12H9.06l-2.573 2.573A1.458 1.458 0 0 1 4 13.543V12H2.75A1.75 1.75 0 0 1 1 10.25Zm1.75-.25a.25.25 0 0 0-.25.25v7.5c0 .138.112.25.25.25h2a.75.75 0 0 1 .75.75v2.19l2.72-2.72a.749.749 0 0 1 .53-.22h4.5a.25.25 0 0 0 .25-.25v-7.5a.25.25 0 0 0-.25-.25Z"></path>
</svg>
</template>

<template id="comment-discussion-icon">
  <svg aria-hidden="true" height="16" viewBox="0 0 16 16" version="1.1" width="16" data-view-component="true" class="octicon octicon-comment-discussion">
    <path d="M1.75 1h8.5c.966 0 1.75.784 1.75 1.75v5.5A1.75 1.75 0 0 1 10.25 10H7.061l-2.574 2.573A1.458 1.458 0 0 1 2 11.543V10h-.25A1.75 1.75 0 0 1 0 8.25v-5.5C0 1.784.784 1 1.75 1ZM1.5 2.75v5.5c0 .138.112.25.25.25h1a.75.75 0 0 1 .75.75v2.19l2.72-2.72a.749.749 0 0 1 .53-.22h3.5a.25.25 0 0 0 .25-.25v-5.5a.25.25 0 0 0-.25-.25h-8.5a.25.25 0 0 0-.25.25Zm13 2a.25.25 0 0 0-.25-.25h-.5a.75.75 0 0 1 0-1.5h.5c.966 0 1.75.784 1.75 1.75v5.5A1.75 1.75 0 0 1 14.25 12H14v1.543a1.458 1.458 0 0 1-2.487 1.03L9.22 12.28a.749.749 0 0 1 .326-1.275.749.749 0 0 1 .734.215l2.22 2.22v-2.19a.75.75 0 0 1 .75-.75h1a.25.25 0 0 0 .25-.25Z"></path>
</svg>
</template>

<template id="organization-icon">
  <svg aria-hidden="true" height="16" viewBox="0 0 16 16" version="1.1" width="16" data-view-component="true" class="octicon octicon-organization">
    <path d="M1.75 16A1.75 1.75 0 0 1 0 14.25V1.75C0 .784.784 0 1.75 0h8.5C11.216 0 12 .784 12 1.75v12.5c0 .085-.006.168-.018.25h2.268a.25.25 0 0 0 .25-.25V8.285a.25.25 0 0 0-.111-.208l-1.055-.703a.749.749 0 1 1 .832-1.248l1.055.703c.487.325.779.871.779 1.456v5.965A1.75 1.75 0 0 1 14.25 16h-3.5a.766.766 0 0 1-.197-.026c-.099.017-.2.026-.303.026h-3a.75.75 0 0 1-.75-.75V14h-1v1.25a.75.75 0 0 1-.75.75Zm-.25-1.75c0 .138.112.25.25.25H4v-1.25a.75.75 0 0 1 .75-.75h2.5a.75.75 0 0 1 .75.75v1.25h2.25a.25.25 0 0 0 .25-.25V1.75a.25.25 0 0 0-.25-.25h-8.5a.25.25 0 0 0-.25.25ZM3.75 6h.5a.75.75 0 0 1 0 1.5h-.5a.75.75 0 0 1 0-1.5ZM3 3.75A.75.75 0 0 1 3.75 3h.5a.75.75 0 0 1 0 1.5h-.5A.75.75 0 0 1 3 3.75Zm4 3A.75.75 0 0 1 7.75 6h.5a.75.75 0 0 1 0 1.5h-.5A.75.75 0 0 1 7 6.75ZM7.75 3h.5a.75.75 0 0 1 0 1.5h-.5a.75.75 0 0 1 0-1.5ZM3 9.75A.75.75 0 0 1 3.75 9h.5a.75.75 0 0 1 0 1.5h-.5A.75.75 0 0 1 3 9.75ZM7.75 9h.5a.75.75 0 0 1 0 1.5h-.5a.75.75 0 0 1 0-1.5Z"></path>
</svg>
</template>

<template id="rocket-icon">
  <svg aria-hidden="true" height="16" viewBox="0 0 16 16" version="1.1" width="16" data-view-component="true" class="octicon octicon-rocket">
    <path d="M14.064 0h.186C15.216 0 16 .784 16 1.75v.186a8.752 8.752 0 0 1-2.564 6.186l-.458.459c-.314.314-.641.616-.979.904v3.207c0 .608-.315 1.172-.833 1.49l-2.774 1.707a.749.749 0 0 1-1.11-.418l-.954-3.102a1.214 1.214 0 0 1-.145-.125L3.754 9.816a1.218 1.218 0 0 1-.124-.145L.528 8.717a.749.749 0 0 1-.418-1.11l1.71-2.774A1.748 1.748 0 0 1 3.31 4h3.204c.288-.338.59-.665.904-.979l.459-.458A8.749 8.749 0 0 1 14.064 0ZM8.938 3.623h-.002l-.458.458c-.76.76-1.437 1.598-2.02 2.5l-1.5 2.317 2.143 2.143 2.317-1.5c.902-.583 1.74-1.26 2.499-2.02l.459-.458a7.25 7.25 0 0 0 2.123-5.127V1.75a.25.25 0 0 0-.25-.25h-.186a7.249 7.249 0 0 0-5.125 2.123ZM3.56 14.56c-.732.732-2.334 1.045-3.005 1.148a.234.234 0 0 1-.201-.064.234.234 0 0 1-.064-.201c.103-.671.416-2.273 1.15-3.003a1.502 1.502 0 1 1 2.12 2.12Zm6.94-3.935c-.088.06-.177.118-.266.175l-2.35 1.521.548 1.783 1.949-1.2a.25.25 0 0 0 .119-.213ZM3.678 8.116 5.2 5.766c.058-.09.117-.178.176-.266H3.309a.25.25 0 0 0-.213.119l-1.2 1.95ZM12 5a1 1 0 1 1-2 0 1 1 0 0 1 2 0Z"></path>
</svg>
</template>

<template id="shield-check-icon">
  <svg aria-hidden="true" height="16" viewBox="0 0 16 16" version="1.1" width="16" data-view-component="true" class="octicon octicon-shield-check">
    <path d="m8.533.133 5.25 1.68A1.75 1.75 0 0 1 15 3.48V7c0 1.566-.32 3.182-1.303 4.682-.983 1.498-2.585 2.813-5.032 3.855a1.697 1.697 0 0 1-1.33 0c-2.447-1.042-4.049-2.357-5.032-3.855C1.32 10.182 1 8.566 1 7V3.48a1.75 1.75 0 0 1 1.217-1.667l5.25-1.68a1.748 1.748 0 0 1 1.066 0Zm-.61 1.429.001.001-5.25 1.68a.251.251 0 0 0-.174.237V7c0 1.36.275 2.666 1.057 3.859.784 1.194 2.121 2.342 4.366 3.298a.196.196 0 0 0 .154 0c2.245-.957 3.582-2.103 4.366-3.297C13.225 9.666 13.5 8.358 13.5 7V3.48a.25.25 0 0 0-.174-.238l-5.25-1.68a.25.25 0 0 0-.153 0ZM11.28 6.28l-3.5 3.5a.75.75 0 0 1-1.06 0l-1.5-1.5a.749.749 0 0 1 .326-1.275.749.749 0 0 1 .734.215l.97.97 2.97-2.97a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042Z"></path>
</svg>
</template>

<template id="heart-icon">
  <svg aria-hidden="true" height="16" viewBox="0 0 16 16" version="1.1" width="16" data-view-component="true" class="octicon octicon-heart">
    <path d="m8 14.25.345.666a.75.75 0 0 1-.69 0l-.008-.004-.018-.01a7.152 7.152 0 0 1-.31-.17 22.055 22.055 0 0 1-3.434-2.414C2.045 10.731 0 8.35 0 5.5 0 2.836 2.086 1 4.25 1 5.797 1 7.153 1.802 8 3.02 8.847 1.802 10.203 1 11.75 1 13.914 1 16 2.836 16 5.5c0 2.85-2.045 5.231-3.885 6.818a22.066 22.066 0 0 1-3.744 2.584l-.018.01-.006.003h-.002ZM4.25 2.5c-1.336 0-2.75 1.164-2.75 3 0 2.15 1.58 4.144 3.365 5.682A20.58 20.58 0 0 0 8 13.393a20.58 20.58 0 0 0 3.135-2.211C12.92 9.644 14.5 7.65 14.5 5.5c0-1.836-1.414-3-2.75-3-1.373 0-2.609.986-3.029 2.456a.749.749 0 0 1-1.442 0C6.859 3.486 5.623 2.5 4.25 2.5Z"></path>
</svg>
</template>

<template id="server-icon">
  <svg aria-hidden="true" height="16" viewBox="0 0 16 16" version="1.1" width="16" data-view-component="true" class="octicon octicon-server">
    <path d="M1.75 1h12.5c.966 0 1.75.784 1.75 1.75v4c0 .372-.116.717-.314 1 .198.283.314.628.314 1v4a1.75 1.75 0 0 1-1.75 1.75H1.75A1.75 1.75 0 0 1 0 12.75v-4c0-.358.109-.707.314-1a1.739 1.739 0 0 1-.314-1v-4C0 1.784.784 1 1.75 1ZM1.5 2.75v4c0 .138.112.25.25.25h12.5a.25.25 0 0 0 .25-.25v-4a.25.25 0 0 0-.25-.25H1.75a.25.25 0 0 0-.25.25Zm.25 5.75a.25.25 0 0 0-.25.25v4c0 .138.112.25.25.25h12.5a.25.25 0 0 0 .25-.25v-4a.25.25 0 0 0-.25-.25ZM7 4.75A.75.75 0 0 1 7.75 4h4.5a.75.75 0 0 1 0 1.5h-4.5A.75.75 0 0 1 7 4.75ZM7.75 10h4.5a.75.75 0 0 1 0 1.5h-4.5a.75.75 0 0 1 0-1.5ZM3 4.75A.75.75 0 0 1 3.75 4h.5a.75.75 0 0 1 0 1.5h-.5A.75.75 0 0 1 3 4.75ZM3.75 10h.5a.75.75 0 0 1 0 1.5h-.5a.75.75 0 0 1 0-1.5Z"></path>
</svg>
</template>

<template id="globe-icon">
  <svg aria-hidden="true" height="16" viewBox="0 0 16 16" version="1.1" width="16" data-view-component="true" class="octicon octicon-globe">
    <path d="M8 0a8 8 0 1 1 0 16A8 8 0 0 1 8 0ZM5.78 8.75a9.64 9.64 0 0 0 1.363 4.177c.255.426.542.832.857 1.215.245-.296.551-.705.857-1.215A9.64 9.64 0 0 0 10.22 8.75Zm4.44-1.5a9.64 9.64 0 0 0-1.363-4.177c-.307-.51-.612-.919-.857-1.215a9.927 9.927 0 0 0-.857 1.215A9.64 9.64 0 0 0 5.78 7.25Zm-5.944 1.5H1.543a6.507 6.507 0 0 0 4.666 5.5c-.123-.181-.24-.365-.352-.552-.715-1.192-1.437-2.874-1.581-4.948Zm-2.733-1.5h2.733c.144-2.074.866-3.756 1.58-4.948.12-.197.237-.381.353-.552a6.507 6.507 0 0 0-4.666 5.5Zm10.181 1.5c-.144 2.074-.866 3.756-1.58 4.948-.12.197-.237.381-.353.552a6.507 6.507 0 0 0 4.666-5.5Zm2.733-1.5a6.507 6.507 0 0 0-4.666-5.5c.123.181.24.365.353.552.714 1.192 1.436 2.874 1.58 4.948Z"></path>
</svg>
</template>

<template id="issue-opened-icon">
  <svg aria-hidden="true" height="16" viewBox="0 0 16 16" version="1.1" width="16" data-view-component="true" class="octicon octicon-issue-opened">
    <path d="M8 9.5a1.5 1.5 0 1 0 0-3 1.5 1.5 0 0 0 0 3Z"></path><path d="M8 0a8 8 0 1 1 0 16A8 8 0 0 1 8 0ZM1.5 8a6.5 6.5 0 1 0 13 0 6.5 6.5 0 0 0-13 0Z"></path>
</svg>
</template>

<template id="device-mobile-icon">
  <svg aria-hidden="true" height="16" viewBox="0 0 16 16" version="1.1" width="16" data-view-component="true" class="octicon octicon-device-mobile">
    <path d="M3.75 0h8.5C13.216 0 14 .784 14 1.75v12.5A1.75 1.75 0 0 1 12.25 16h-8.5A1.75 1.75 0 0 1 2 14.25V1.75C2 .784 2.784 0 3.75 0ZM3.5 1.75v12.5c0 .138.112.25.25.25h8.5a.25.25 0 0 0 .25-.25V1.75a.25.25 0 0 0-.25-.25h-8.5a.25.25 0 0 0-.25.25ZM8 13a1 1 0 1 1 0-2 1 1 0 0 1 0 2Z"></path>
</svg>
</template>

<template id="package-icon">
  <svg aria-hidden="true" height="16" viewBox="0 0 16 16" version="1.1" width="16" data-view-component="true" class="octicon octicon-package">
    <path d="m8.878.392 5.25 3.045c.54.314.872.89.872 1.514v6.098a1.75 1.75 0 0 1-.872 1.514l-5.25 3.045a1.75 1.75 0 0 1-1.756 0l-5.25-3.045A1.75 1.75 0 0 1 1 11.049V4.951c0-.624.332-1.201.872-1.514L7.122.392a1.75 1.75 0 0 1 1.756 0ZM7.875 1.69l-4.63 2.685L8 7.133l4.755-2.758-4.63-2.685a.248.248 0 0 0-.25 0ZM2.5 5.677v5.372c0 .09.047.171.125.216l4.625 2.683V8.432Zm6.25 8.271 4.625-2.683a.25.25 0 0 0 .125-.216V5.677L8.75 8.432Z"></path>
</svg>
</template>

<template id="credit-card-icon">
  <svg aria-hidden="true" height="16" viewBox="0 0 16 16" version="1.1" width="16" data-view-component="true" class="octicon octicon-credit-card">
    <path d="M10.75 9a.75.75 0 0 0 0 1.5h1.5a.75.75 0 0 0 0-1.5h-1.5Z"></path><path d="M0 3.75C0 2.784.784 2 1.75 2h12.5c.966 0 1.75.784 1.75 1.75v8.5A1.75 1.75 0 0 1 14.25 14H1.75A1.75 1.75 0 0 1 0 12.25ZM14.5 6.5h-13v5.75c0 .138.112.25.25.25h12.5a.25.25 0 0 0 .25-.25Zm0-2.75a.25.25 0 0 0-.25-.25H1.75a.25.25 0 0 0-.25.25V5h13Z"></path>
</svg>
</template>

<template id="play-icon">
  <svg aria-hidden="true" height="16" viewBox="0 0 16 16" version="1.1" width="16" data-view-component="true" class="octicon octicon-play">
    <path d="M8 0a8 8 0 1 1 0 16A8 8 0 0 1 8 0ZM1.5 8a6.5 6.5 0 1 0 13 0 6.5 6.5 0 0 0-13 0Zm4.879-2.773 4.264 2.559a.25.25 0 0 1 0 .428l-4.264 2.559A.25.25 0 0 1 6 10.559V5.442a.25.25 0 0 1 .379-.215Z"></path>
</svg>
</template>

<template id="gift-icon">
  <svg aria-hidden="true" height="16" viewBox="0 0 16 16" version="1.1" width="16" data-view-component="true" class="octicon octicon-gift">
    <path d="M2 2.75A2.75 2.75 0 0 1 4.75 0c.983 0 1.873.42 2.57 1.232.268.318.497.668.68 1.042.183-.375.411-.725.68-1.044C9.376.42 10.266 0 11.25 0a2.75 2.75 0 0 1 2.45 4h.55c.966 0 1.75.784 1.75 1.75v2c0 .698-.409 1.301-1 1.582v4.918A1.75 1.75 0 0 1 13.25 16H2.75A1.75 1.75 0 0 1 1 14.25V9.332C.409 9.05 0 8.448 0 7.75v-2C0 4.784.784 4 1.75 4h.55c-.192-.375-.3-.8-.3-1.25ZM7.25 9.5H2.5v4.75c0 .138.112.25.25.25h4.5Zm1.5 0v5h4.5a.25.25 0 0 0 .25-.25V9.5Zm0-4V8h5.5a.25.25 0 0 0 .25-.25v-2a.25.25 0 0 0-.25-.25Zm-7 0a.25.25 0 0 0-.25.25v2c0 .138.112.25.25.25h5.5V5.5h-5.5Zm3-4a1.25 1.25 0 0 0 0 2.5h2.309c-.233-.818-.542-1.401-.878-1.793-.43-.502-.915-.707-1.431-.707ZM8.941 4h2.309a1.25 1.25 0 0 0 0-2.5c-.516 0-1 .205-1.43.707-.337.392-.646.975-.879 1.793Z"></path>
</svg>
</template>

<template id="code-square-icon">
  <svg aria-hidden="true" height="16" viewBox="0 0 16 16" version="1.1" width="16" data-view-component="true" class="octicon octicon-code-square">
    <path d="M0 1.75C0 .784.784 0 1.75 0h12.5C15.216 0 16 .784 16 1.75v12.5A1.75 1.75 0 0 1 14.25 16H1.75A1.75 1.75 0 0 1 0 14.25Zm1.75-.25a.25.25 0 0 0-.25.25v12.5c0 .138.112.25.25.25h12.5a.25.25 0 0 0 .25-.25V1.75a.25.25 0 0 0-.25-.25Zm7.47 3.97a.75.75 0 0 1 1.06 0l2 2a.75.75 0 0 1 0 1.06l-2 2a.749.749 0 0 1-1.275-.326.749.749 0 0 1 .215-.734L10.69 8 9.22 6.53a.75.75 0 0 1 0-1.06ZM6.78 6.53 5.31 8l1.47 1.47a.749.749 0 0 1-.326 1.275.749.749 0 0 1-.734-.215l-2-2a.75.75 0 0 1 0-1.06l2-2a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042Z"></path>
</svg>
</template>

<template id="device-desktop-icon">
  <svg aria-hidden="true" height="16" viewBox="0 0 16 16" version="1.1" width="16" data-view-component="true" class="octicon octicon-device-desktop">
    <path d="M14.25 1c.966 0 1.75.784 1.75 1.75v7.5A1.75 1.75 0 0 1 14.25 12h-3.727c.099 1.041.52 1.872 1.292 2.757A.752.752 0 0 1 11.25 16h-6.5a.75.75 0 0 1-.565-1.243c.772-.885 1.192-1.716 1.292-2.757H1.75A1.75 1.75 0 0 1 0 10.25v-7.5C0 1.784.784 1 1.75 1ZM1.75 2.5a.25.25 0 0 0-.25.25v7.5c0 .138.112.25.25.25h12.5a.25.25 0 0 0 .25-.25v-7.5a.25.25 0 0 0-.25-.25ZM9.018 12H6.982a5.72 5.72 0 0 1-.765 2.5h3.566a5.72 5.72 0 0 1-.765-2.5Z"></path>
</svg>
</template>

        <div class="position-relative">
                <ul
                  role="listbox"
                  class="ActionListWrap QueryBuilder-ListWrap"
                  aria-label="Suggestions"
                  data-action="
                    combobox-commit:query-builder#comboboxCommit
                    mousedown:query-builder#resultsMousedown
                  "
                  data-target="query-builder.resultsList"
                  data-persist-list=false
                  id="query-builder-test-results"
                ></ul>
        </div>
      <div class="FormControl-inlineValidation" id="validation-c6cdbebe-a6c0-4926-ae40-a3fc8cbbea24" hidden="hidden">
        <span class="FormControl-inlineValidation--visual">
          <svg aria-hidden="true" height="12" viewBox="0 0 12 12" version="1.1" width="12" data-view-component="true" class="octicon octicon-alert-fill">
    <path d="M4.855.708c.5-.896 1.79-.896 2.29 0l4.675 8.351a1.312 1.312 0 0 1-1.146 1.954H1.33A1.313 1.313 0 0 1 .183 9.058ZM7 7V3H5v4Zm-1 3a1 1 0 1 0 0-2 1 1 0 0 0 0 2Z"></path>
</svg>
        </span>
        <span></span>
</div>    </div>
    <div data-target="query-builder.screenReaderFeedback" aria-live="polite" aria-atomic="true" class="sr-only"></div>
</query-builder></form>
          <div class="d-flex flex-row color-fg-muted px-3 text-small color-bg-default search-feedback-prompt">
            <a target="_blank" href="https://docs.github.com/search-github/github-code-search/understanding-github-code-search-syntax" data-view-component="true" class="Link color-fg-accent text-normal ml-2">Search syntax tips</a>            <div class="d-flex flex-1"></div>
          </div>
        </div>
</div>

    </div>
</modal-dialog></div>
  </div>
  <div data-action="click:qbsearch-input#retract" class="dark-backdrop position-fixed" hidden data-target="qbsearch-input.darkBackdrop"></div>
  <div class="color-fg-default">
    
<dialog-helper>
  <dialog data-target="qbsearch-input.feedbackDialog" data-action="close:qbsearch-input#handleDialogClose cancel:qbsearch-input#handleDialogClose" id="feedback-dialog" aria-modal="true" aria-labelledby="feedback-dialog-title" aria-describedby="feedback-dialog-description" data-view-component="true" class="Overlay Overlay-whenNarrow Overlay--size-medium Overlay--motion-scaleFade Overlay--disableScroll">
    <div data-view-component="true" class="Overlay-header">
  <div class="Overlay-headerContentWrap">
    <div class="Overlay-titleWrap">
      <h1 class="Overlay-title " id="feedback-dialog-title">
        Provide feedback
      </h1>
        
    </div>
    <div class="Overlay-actionWrap">
      <button data-close-dialog-id="feedback-dialog" aria-label="Close" aria-label="Close" type="button" data-view-component="true" class="close-button Overlay-closeButton"><svg aria-hidden="true" height="16" viewBox="0 0 16 16" version="1.1" width="16" data-view-component="true" class="octicon octicon-x">
    <path d="M3.72 3.72a.75.75 0 0 1 1.06 0L8 6.94l3.22-3.22a.749.749 0 0 1 1.275.326.749.749 0 0 1-.215.734L9.06 8l3.22 3.22a.749.749 0 0 1-.326 1.275.749.749 0 0 1-.734-.215L8 9.06l-3.22 3.22a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042L6.94 8 3.72 4.78a.75.75 0 0 1 0-1.06Z"></path>
</svg></button>
    </div>
  </div>
  
</div>
      <scrollable-region data-labelled-by="feedback-dialog-title">
        <div data-view-component="true" class="Overlay-body">        <!-- '"` --><!-- </textarea></xmp> --></option></form><form id="code-search-feedback-form" data-turbo="false" action="/search/feedback" accept-charset="UTF-8" method="post"><input type="hidden" data-csrf="true" name="authenticity_token" value="sHRxhnSfb89V1EplV6q2XzZ4Oruf1DaJEw++zoDU6uUPxQzshs9GRdQSew7a9Olw0ny8bhB0I7Fk48p27hfRKQ==" />
          <p>We read every piece of feedback, and take your input very seriously.</p>
          <textarea name="feedback" class="form-control width-full mb-2" style="height: 120px" id="feedback"></textarea>
          <input name="include_email" id="include_email" aria-label="Include my email address so I can be contacted" class="form-control mr-2" type="checkbox">
          <label for="include_email" style="font-weight: normal">Include my email address so I can be contacted</label>
</form></div>
      </scrollable-region>
      <div data-view-component="true" class="Overlay-footer Overlay-footer--alignEnd">          <button data-close-dialog-id="feedback-dialog" type="button" data-view-component="true" class="btn">    Cancel
</button>
          <button form="code-search-feedback-form" data-action="click:qbsearch-input#submitFeedback" type="submit" data-view-component="true" class="btn-primary btn">    Submit feedback
</button>
</div>
</dialog></dialog-helper>

    <custom-scopes data-target="qbsearch-input.customScopesManager">
    
<dialog-helper>
  <dialog data-target="custom-scopes.customScopesModalDialog" data-action="close:qbsearch-input#handleDialogClose cancel:qbsearch-input#handleDialogClose" id="custom-scopes-dialog" aria-modal="true" aria-labelledby="custom-scopes-dialog-title" aria-describedby="custom-scopes-dialog-description" data-view-component="true" class="Overlay Overlay-whenNarrow Overlay--size-medium Overlay--motion-scaleFade Overlay--disableScroll">
    <div data-view-component="true" class="Overlay-header Overlay-header--divided">
  <div class="Overlay-headerContentWrap">
    <div class="Overlay-titleWrap">
      <h1 class="Overlay-title " id="custom-scopes-dialog-title">
        Saved searches
      </h1>
        <h2 id="custom-scopes-dialog-description" class="Overlay-description">Use saved searches to filter your results more quickly</h2>
    </div>
    <div class="Overlay-actionWrap">
      <button data-close-dialog-id="custom-scopes-dialog" aria-label="Close" aria-label="Close" type="button" data-view-component="true" class="close-button Overlay-closeButton"><svg aria-hidden="true" height="16" viewBox="0 0 16 16" version="1.1" width="16" data-view-component="true" class="octicon octicon-x">
    <path d="M3.72 3.72a.75.75 0 0 1 1.06 0L8 6.94l3.22-3.22a.749.749 0 0 1 1.275.326.749.749 0 0 1-.215.734L9.06 8l3.22 3.22a.749.749 0 0 1-.326 1.275.749.749 0 0 1-.734-.215L8 9.06l-3.22 3.22a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042L6.94 8 3.72 4.78a.75.75 0 0 1 0-1.06Z"></path>
</svg></button>
    </div>
  </div>
  
</div>
      <scrollable-region data-labelled-by="custom-scopes-dialog-title">
        <div data-view-component="true" class="Overlay-body">        <div data-target="custom-scopes.customScopesModalDialogFlash"></div>

        <div hidden class="create-custom-scope-form" data-target="custom-scopes.createCustomScopeForm">
        <!-- '"` --><!-- </textarea></xmp> --></option></form><form id="custom-scopes-dialog-form" data-turbo="false" action="/search/custom_scopes" accept-charset="UTF-8" method="post"><input type="hidden" data-csrf="true" name="authenticity_token" value="AbwCVrhRNKFTTobWohWTBjHEUId4oR40H3Z2nGniwryQCb/VKi6sEl4Q+a4j6o7nZ5yQ76iIntVL2zgqlcc0/w==" />
          <div data-target="custom-scopes.customScopesModalDialogFlash"></div>

          <input type="hidden" id="custom_scope_id" name="custom_scope_id" data-target="custom-scopes.customScopesIdField">

          <div class="form-group">
            <label for="custom_scope_name">Name</label>
            <auto-check src="/search/custom_scopes/check_name" required>
              <input
                type="text"
                name="custom_scope_name"
                id="custom_scope_name"
                data-target="custom-scopes.customScopesNameField"
                class="form-control"
                autocomplete="off"
                placeholder="github-ruby"
                required
                maxlength="50">
              <input type="hidden" data-csrf="true" value="ogwJ6VToI5A1mQpUkbejSKj2kKXfqDd0EjyMnGTsri5tylcCFj0ScqQO1od922qsk+847F9eAIQZcryhk+qNPw==" />
            </auto-check>
          </div>

          <div class="form-group">
            <label for="custom_scope_query">Query</label>
            <input
              type="text"
              name="custom_scope_query"
              id="custom_scope_query"
              data-target="custom-scopes.customScopesQueryField"
              class="form-control"
              autocomplete="off"
              placeholder="(repo:mona/a OR repo:mona/b) AND lang:python"
              required
              maxlength="500">
          </div>

          <p class="text-small color-fg-muted">
            To see all available qualifiers, see our <a class="Link--inTextBlock" href="https://docs.github.com/search-github/github-code-search/understanding-github-code-search-syntax">documentation</a>.
          </p>
</form>        </div>

        <div data-target="custom-scopes.manageCustomScopesForm">
          <div data-target="custom-scopes.list"></div>
        </div>

</div>
      </scrollable-region>
      <div data-view-component="true" class="Overlay-footer Overlay-footer--alignEnd Overlay-footer--divided">          <button data-action="click:custom-scopes#customScopesCancel" type="button" data-view-component="true" class="btn">    Cancel
</button>
          <button form="custom-scopes-dialog-form" data-action="click:custom-scopes#customScopesSubmit" data-target="custom-scopes.customScopesSubmitButton" type="submit" data-view-component="true" class="btn-primary btn">    Create saved search
</button>
</div>
</dialog></dialog-helper>
    </custom-scopes>
  </div>
</qbsearch-input>


            <div class="position-relative HeaderMenu-link-wrap d-lg-inline-block">
              <a
                href="/login?return_to=https%3A%2F%2Fgithub.com%2Fyhirose%2Fcpp-httplib%2Fblob%2Fmaster%2Fhttplib.h"
                class="HeaderMenu-link HeaderMenu-link--sign-in HeaderMenu-button flex-shrink-0 no-underline d-none d-lg-inline-flex border border-lg-0 rounded rounded-lg-0 px-2 py-1"
                style="margin-left: 12px;"
                data-hydro-click="{&quot;event_type&quot;:&quot;authentication.click&quot;,&quot;payload&quot;:{&quot;location_in_page&quot;:&quot;site header menu&quot;,&quot;repository_id&quot;:null,&quot;auth_type&quot;:&quot;SIGN_UP&quot;,&quot;originating_url&quot;:&quot;https://github.com/yhirose/cpp-httplib/blob/master/httplib.h&quot;,&quot;user_id&quot;:null}}" data-hydro-click-hmac="c8d1529a1f46d434d21d3e6deaf3d5d20d35fd8160941375c79f1a331fd80111"
                data-analytics-event="{&quot;category&quot;:&quot;Marketing nav&quot;,&quot;action&quot;:&quot;click to go to homepage&quot;,&quot;label&quot;:&quot;ref_page:Marketing;ref_cta:Sign in;ref_loc:Header&quot;}"
              >
                Sign in
              </a>
            </div>

              <a href="/signup?ref_cta=Sign+up&amp;ref_loc=header+logged+out&amp;ref_page=%2F%3Cuser-name%3E%2F%3Crepo-name%3E%2Fblob%2Fshow&amp;source=header-repo&amp;source_repo=yhirose%2Fcpp-httplib"
                class="HeaderMenu-link HeaderMenu-link--sign-up HeaderMenu-button flex-shrink-0 d-flex d-lg-inline-flex no-underline border color-border-default rounded px-2 py-1"
                data-hydro-click="{&quot;event_type&quot;:&quot;authentication.click&quot;,&quot;payload&quot;:{&quot;location_in_page&quot;:&quot;site header menu&quot;,&quot;repository_id&quot;:null,&quot;auth_type&quot;:&quot;SIGN_UP&quot;,&quot;originating_url&quot;:&quot;https://github.com/yhirose/cpp-httplib/blob/master/httplib.h&quot;,&quot;user_id&quot;:null}}" data-hydro-click-hmac="c8d1529a1f46d434d21d3e6deaf3d5d20d35fd8160941375c79f1a331fd80111"
                data-analytics-event="{&quot;category&quot;:&quot;Sign up&quot;,&quot;action&quot;:&quot;click to sign up for account&quot;,&quot;label&quot;:&quot;ref_page:/&lt;user-name&gt;/&lt;repo-name&gt;/blob/show;ref_cta:Sign up;ref_loc:header logged out&quot;}"
              >
                Sign up
              </a>

                <div class="AppHeader-appearanceSettings">
    <react-partial-anchor>
      <button data-target="react-partial-anchor.anchor" id="icon-button-56302967-4fac-4973-a64a-43abdbc61450" aria-labelledby="tooltip-a7742934-0fc5-4410-b637-3cff9af94514" type="button" disabled="disabled" data-view-component="true" class="Button Button--iconOnly Button--invisible Button--medium AppHeader-button HeaderMenu-link border cursor-wait">  <svg aria-hidden="true" height="16" viewBox="0 0 16 16" version="1.1" width="16" data-view-component="true" class="octicon octicon-sliders Button-visual">
    <path d="M15 2.75a.75.75 0 0 1-.75.75h-4a.75.75 0 0 1 0-1.5h4a.75.75 0 0 1 .75.75Zm-8.5.75v1.25a.75.75 0 0 0 1.5 0v-4a.75.75 0 0 0-1.5 0V2H1.75a.75.75 0 0 0 0 1.5H6.5Zm1.25 5.25a.75.75 0 0 0 0-1.5h-6a.75.75 0 0 0 0 1.5h6ZM15 8a.75.75 0 0 1-.75.75H11.5V10a.75.75 0 1 1-1.5 0V6a.75.75 0 0 1 1.5 0v1.25h2.75A.75.75 0 0 1 15 8Zm-9 5.25v-2a.75.75 0 0 0-1.5 0v1.25H1.75a.75.75 0 0 0 0 1.5H4.5v1.25a.75.75 0 0 0 1.5 0v-2Zm9 0a.75.75 0 0 1-.75.75h-6a.75.75 0 0 1 0-1.5h6a.75.75 0 0 1 .75.75Z"></path>
</svg>
</button><tool-tip id="tooltip-a7742934-0fc5-4410-b637-3cff9af94514" for="icon-button-56302967-4fac-4973-a64a-43abdbc61450" popover="manual" data-direction="s" data-type="label" data-view-component="true" class="sr-only position-absolute">Appearance settings</tool-tip>

      <template data-target="react-partial-anchor.template">
        <link crossorigin="anonymous" media="all" rel="stylesheet" href="https://github.githubassets.com/assets/primer-react.19291721a114332ad118.module.css" />
<link crossorigin="anonymous" media="all" rel="stylesheet" href="https://github.githubassets.com/assets/appearance-settings.22dfbc22ef0a2bf02523.module.css" />

<react-partial
  partial-name="appearance-settings"
  data-ssr="false"
  data-attempted-ssr="false"
>
  
  <script type="application/json" data-target="react-partial.embeddedData">{"props":{}}</script>
  <div data-target="react-partial.reactRoot"></div>
</react-partial>

      </template>
    </react-partial-anchor>
  </div>

          <button type="button" class="sr-only js-header-menu-focus-trap d-block d-lg-none">Resetting focus</button>
        </div>
      </div>
    </div>
  </div>
</header>

      <div hidden="hidden" data-view-component="true" class="js-stale-session-flash stale-session-flash flash flash-warn flash-full">
  
        <svg aria-hidden="true" height="16" viewBox="0 0 16 16" version="1.1" width="16" data-view-component="true" class="octicon octicon-alert">
    <path d="M6.457 1.047c.659-1.234 2.427-1.234 3.086 0l6.082 11.378A1.75 1.75 0 0 1 14.082 15H1.918a1.75 1.75 0 0 1-1.543-2.575Zm1.763.707a.25.25 0 0 0-.44 0L1.698 13.132a.25.25 0 0 0 .22.368h12.164a.25.25 0 0 0 .22-.368Zm.53 3.996v2.5a.75.75 0 0 1-1.5 0v-2.5a.75.75 0 0 1 1.5 0ZM9 11a1 1 0 1 1-2 0 1 1 0 0 1 2 0Z"></path>
</svg>
        <span class="js-stale-session-flash-signed-in" hidden>You signed in with another tab or window. <a class="Link--inTextBlock" href="">Reload</a> to refresh your session.</span>
        <span class="js-stale-session-flash-signed-out" hidden>You signed out in another tab or window. <a class="Link--inTextBlock" href="">Reload</a> to refresh your session.</span>
        <span class="js-stale-session-flash-switched" hidden>You switched accounts on another tab or window. <a class="Link--inTextBlock" href="">Reload</a> to refresh your session.</span>

    <button id="icon-button-c978ff15-f954-4003-a56f-9f4bdef027bd" aria-labelledby="tooltip-7b92de4e-ef3d-4680-8205-2eaaf58a49b3" type="button" data-view-component="true" class="Button Button--iconOnly Button--invisible Button--medium flash-close js-flash-close">  <svg aria-hidden="true" height="16" viewBox="0 0 16 16" version="1.1" width="16" data-view-component="true" class="octicon octicon-x Button-visual">
    <path d="M3.72 3.72a.75.75 0 0 1 1.06 0L8 6.94l3.22-3.22a.749.749 0 0 1 1.275.326.749.749 0 0 1-.215.734L9.06 8l3.22 3.22a.749.749 0 0 1-.326 1.275.749.749 0 0 1-.734-.215L8 9.06l-3.22 3.22a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042L6.94 8 3.72 4.78a.75.75 0 0 1 0-1.06Z"></path>
</svg>
</button><tool-tip id="tooltip-7b92de4e-ef3d-4680-8205-2eaaf58a49b3" for="icon-button-c978ff15-f954-4003-a56f-9f4bdef027bd" popover="manual" data-direction="s" data-type="label" data-view-component="true" class="sr-only position-absolute">Dismiss alert</tool-tip>


  
</div>
    </div>

  <div id="start-of-content" class="show-on-focus"></div>








    <div id="js-flash-container" class="flash-container" data-turbo-replace>




  <template class="js-flash-template">
    
<div class="flash flash-full   {{ className }}">
  <div >
    <button autofocus class="flash-close js-flash-close" type="button" aria-label="Dismiss this message">
      <svg aria-hidden="true" height="16" viewBox="0 0 16 16" version="1.1" width="16" data-view-component="true" class="octicon octicon-x">
    <path d="M3.72 3.72a.75.75 0 0 1 1.06 0L8 6.94l3.22-3.22a.749.749 0 0 1 1.275.326.749.749 0 0 1-.215.734L9.06 8l3.22 3.22a.749.749 0 0 1-.326 1.275.749.749 0 0 1-.734-.215L8 9.06l-3.22 3.22a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042L6.94 8 3.72 4.78a.75.75 0 0 1 0-1.06Z"></path>
</svg>
    </button>
    <div aria-atomic="true" role="alert" class="js-flash-alert">
      
      <div>{{ message }}</div>

    </div>
  </div>
</div>
  </template>
</div>


    






  <div
    class="application-main "
    data-commit-hovercards-enabled
    data-discussion-hovercards-enabled
    data-issue-and-pr-hovercards-enabled
    data-project-hovercards-enabled
  >
        <div itemscope itemtype="http://schema.org/SoftwareSourceCode" class="">
    <main id="js-repo-pjax-container" >
      
      






  
  <div id="repository-container-header"  class="pt-3 hide-full-screen" style="background-color: var(--page-header-bgColor, var(--color-page-header-bg));" data-turbo-replace>

      <div class="d-flex flex-nowrap flex-justify-end mb-3  px-3 px-lg-5" style="gap: 1rem;">

        <div class="flex-auto min-width-0 width-fit">
            
  <div class=" d-flex flex-wrap flex-items-center wb-break-word f3 text-normal">
      <svg aria-hidden="true" height="16" viewBox="0 0 16 16" version="1.1" width="16" data-view-component="true" class="octicon octicon-repo color-fg-muted mr-2">
    <path d="M2 2.5A2.5 2.5 0 0 1 4.5 0h8.75a.75.75 0 0 1 .75.75v12.5a.75.75 0 0 1-.75.75h-2.5a.75.75 0 0 1 0-1.5h1.75v-2h-8a1 1 0 0 0-.714 1.7.75.75 0 1 1-1.072 1.05A2.495 2.495 0 0 1 2 11.5Zm10.5-1h-8a1 1 0 0 0-1 1v6.708A2.486 2.486 0 0 1 4.5 9h8ZM5 12.25a.25.25 0 0 1 .25-.25h3.5a.25.25 0 0 1 .25.25v3.25a.25.25 0 0 1-.4.2l-1.45-1.087a.249.249 0 0 0-.3 0L5.4 15.7a.25.25 0 0 1-.4-.2Z"></path>
</svg>
    
    <span class="author flex-self-stretch" itemprop="author">
      <a class="url fn" rel="author" data-hovercard-type="user" data-hovercard-url="/users/yhirose/hovercard" data-octo-click="hovercard-link-click" data-octo-dimensions="link_type:self" href="/yhirose">
        yhirose
</a>    </span>
    <span class="mx-1 flex-self-stretch color-fg-muted">/</span>
    <strong itemprop="name" class="mr-2 flex-self-stretch">
      <a data-pjax="#repo-content-pjax-container" data-turbo-frame="repo-content-turbo-frame" href="/yhirose/cpp-httplib">cpp-httplib</a>
    </strong>

    <span></span><span class="Label Label--secondary v-align-middle mr-1">Public</span>
  </div>


        </div>

        <div id="repository-details-container" class="flex-shrink-0" data-turbo-replace style="max-width: 70%;">
            <ul class="pagehead-actions flex-shrink-0 d-none d-md-inline" style="padding: 2px 0;">
    
      

  <li>
            <a href="/login?return_to=%2Fyhirose%2Fcpp-httplib" rel="nofollow" id="repository-details-watch-button" data-hydro-click="{&quot;event_type&quot;:&quot;authentication.click&quot;,&quot;payload&quot;:{&quot;location_in_page&quot;:&quot;notification subscription menu watch&quot;,&quot;repository_id&quot;:null,&quot;auth_type&quot;:&quot;LOG_IN&quot;,&quot;originating_url&quot;:&quot;https://github.com/yhirose/cpp-httplib/blob/master/httplib.h&quot;,&quot;user_id&quot;:null}}" data-hydro-click-hmac="f32e278b02da1cf7402fa0d088667aa0614ea0f2671b16b2e01967ba08eb27a0" aria-label="You must be signed in to change notification settings" data-view-component="true" class="btn-sm btn">    <svg aria-hidden="true" height="16" viewBox="0 0 16 16" version="1.1" width="16" data-view-component="true" class="octicon octicon-bell mr-2">
    <path d="M8 16a2 2 0 0 0 1.985-1.75c.017-.137-.097-.25-.235-.25h-3.5c-.138 0-.252.113-.235.25A2 2 0 0 0 8 16ZM3 5a5 5 0 0 1 10 0v2.947c0 .05.015.098.042.139l1.703 2.555A1.519 1.519 0 0 1 13.482 13H2.518a1.516 1.516 0 0 1-1.263-2.36l1.703-2.554A.255.255 0 0 0 3 7.947Zm5-3.5A3.5 3.5 0 0 0 4.5 5v2.947c0 .346-.102.683-.294.97l-1.703 2.556a.017.017 0 0 0-.003.01l.001.006c0 .002.002.004.004.006l.006.004.007.001h10.964l.007-.001.006-.004.004-.006.001-.007a.017.017 0 0 0-.003-.01l-1.703-2.554a1.745 1.745 0 0 1-.294-.97V5A3.5 3.5 0 0 0 8 1.5Z"></path>
</svg>Notifications
</a>    <tool-tip id="tooltip-cbd4fa29-4cfe-4dfc-8bd6-9d65aa667e28" for="repository-details-watch-button" popover="manual" data-direction="s" data-type="description" data-view-component="true" class="sr-only position-absolute">You must be signed in to change notification settings</tool-tip>

  </li>

  <li>
          <a icon="repo-forked" id="fork-button" href="/login?return_to=%2Fyhirose%2Fcpp-httplib" rel="nofollow" data-hydro-click="{&quot;event_type&quot;:&quot;authentication.click&quot;,&quot;payload&quot;:{&quot;location_in_page&quot;:&quot;repo details fork button&quot;,&quot;repository_id&quot;:5909706,&quot;auth_type&quot;:&quot;LOG_IN&quot;,&quot;originating_url&quot;:&quot;https://github.com/yhirose/cpp-httplib/blob/master/httplib.h&quot;,&quot;user_id&quot;:null}}" data-hydro-click-hmac="d7638fbf4b2c8df1cb01bc0c674ba4ee592cd8d721caf6ab8c6cb6c83aad923e" data-view-component="true" class="btn-sm btn">    <svg aria-hidden="true" height="16" viewBox="0 0 16 16" version="1.1" width="16" data-view-component="true" class="octicon octicon-repo-forked mr-2">
    <path d="M5 5.372v.878c0 .414.336.75.75.75h4.5a.75.75 0 0 0 .75-.75v-.878a2.25 2.25 0 1 1 1.5 0v.878a2.25 2.25 0 0 1-2.25 2.25h-1.5v2.128a2.251 2.251 0 1 1-1.5 0V8.5h-1.5A2.25 2.25 0 0 1 3.5 6.25v-.878a2.25 2.25 0 1 1 1.5 0ZM5 3.25a.75.75 0 1 0-1.5 0 .75.75 0 0 0 1.5 0Zm6.75.75a.75.75 0 1 0 0-1.5.75.75 0 0 0 0 1.5Zm-3 8.75a.75.75 0 1 0-1.5 0 .75.75 0 0 0 1.5 0Z"></path>
</svg>Fork
    <span id="repo-network-counter" data-pjax-replace="true" data-turbo-replace="true" title="2,428" data-view-component="true" class="Counter">2.4k</span>
</a>
  </li>

  <li>
        <div data-view-component="true" class="BtnGroup d-flex">
        <a href="/login?return_to=%2Fyhirose%2Fcpp-httplib" rel="nofollow" data-hydro-click="{&quot;event_type&quot;:&quot;authentication.click&quot;,&quot;payload&quot;:{&quot;location_in_page&quot;:&quot;star button&quot;,&quot;repository_id&quot;:5909706,&quot;auth_type&quot;:&quot;LOG_IN&quot;,&quot;originating_url&quot;:&quot;https://github.com/yhirose/cpp-httplib/blob/master/httplib.h&quot;,&quot;user_id&quot;:null}}" data-hydro-click-hmac="911c14fe8cfa573157e21258f7e2a0b783e44cf5efb0373cedafadadf260b62e" aria-label="You must be signed in to star a repository" data-view-component="true" class="tooltipped tooltipped-sw btn-sm btn">    <svg aria-hidden="true" height="16" viewBox="0 0 16 16" version="1.1" width="16" data-view-component="true" class="octicon octicon-star v-align-text-bottom d-inline-block mr-2">
    <path d="M8 .25a.75.75 0 0 1 .673.418l1.882 3.815 4.21.612a.75.75 0 0 1 .416 1.279l-3.046 2.97.719 4.192a.751.751 0 0 1-1.088.791L8 12.347l-3.766 1.98a.75.75 0 0 1-1.088-.79l.72-4.194L.818 6.374a.75.75 0 0 1 .416-1.28l4.21-.611L7.327.668A.75.75 0 0 1 8 .25Zm0 2.445L6.615 5.5a.75.75 0 0 1-.564.41l-3.097.45 2.24 2.184a.75.75 0 0 1 .216.664l-.528 3.084 2.769-1.456a.75.75 0 0 1 .698 0l2.77 1.456-.53-3.084a.75.75 0 0 1 .216-.664l2.24-2.183-3.096-.45a.75.75 0 0 1-.564-.41L8 2.694Z"></path>
</svg><span data-view-component="true" class="d-inline">
          Star
</span>          <span id="repo-stars-counter-star" aria-label="14335 users starred this repository" data-singular-suffix="user starred this repository" data-plural-suffix="users starred this repository" data-turbo-replace="true" title="14,335" data-view-component="true" class="Counter js-social-count">14.3k</span>
</a></div>
  </li>

</ul>

        </div>
      </div>

        <div id="responsive-meta-container" data-turbo-replace>
</div>


          <nav data-pjax="#js-repo-pjax-container" aria-label="Repository" data-view-component="true" class="js-repo-nav js-sidenav-container-pjax js-responsive-underlinenav overflow-hidden UnderlineNav px-3 px-md-4 px-lg-5">

  <ul data-view-component="true" class="UnderlineNav-body list-style-none">
      <li data-view-component="true" class="d-inline-flex">
  <a id="code-tab" href="/yhirose/cpp-httplib" data-tab-item="i0code-tab" data-selected-links="repo_source repo_downloads repo_commits repo_releases repo_tags repo_branches repo_packages repo_deployments repo_attestations /yhirose/cpp-httplib" data-pjax="#repo-content-pjax-container" data-turbo-frame="repo-content-turbo-frame" data-hotkey="g c" data-analytics-event="{&quot;category&quot;:&quot;Underline navbar&quot;,&quot;action&quot;:&quot;Click tab&quot;,&quot;label&quot;:&quot;Code&quot;,&quot;target&quot;:&quot;UNDERLINE_NAV.TAB&quot;}" aria-current="page" data-view-component="true" class="UnderlineNav-item no-wrap js-responsive-underlinenav-item js-selected-navigation-item selected">
    
              <svg aria-hidden="true" height="16" viewBox="0 0 16 16" version="1.1" width="16" data-view-component="true" class="octicon octicon-code UnderlineNav-octicon d-none d-sm-inline">
    <path d="m11.28 3.22 4.25 4.25a.75.75 0 0 1 0 1.06l-4.25 4.25a.749.749 0 0 1-1.275-.326.749.749 0 0 1 .215-.734L13.94 8l-3.72-3.72a.749.749 0 0 1 .326-1.275.749.749 0 0 1 .734.215Zm-6.56 0a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042L2.06 8l3.72 3.72a.749.749 0 0 1-.326 1.275.749.749 0 0 1-.734-.215L.47 8.53a.75.75 0 0 1 0-1.06Z"></path>
</svg>
        <span data-content="Code">Code</span>
          <span id="code-repo-tab-count" data-pjax-replace="" data-turbo-replace="" title="Not available" data-view-component="true" class="Counter"></span>


    
</a></li>
      <li data-view-component="true" class="d-inline-flex">
  <a id="issues-tab" href="/yhirose/cpp-httplib/issues" data-tab-item="i1issues-tab" data-selected-links="repo_issues repo_labels repo_milestones /yhirose/cpp-httplib/issues" data-pjax="#repo-content-pjax-container" data-turbo-frame="repo-content-turbo-frame" data-hotkey="g i" data-analytics-event="{&quot;category&quot;:&quot;Underline navbar&quot;,&quot;action&quot;:&quot;Click tab&quot;,&quot;label&quot;:&quot;Issues&quot;,&quot;target&quot;:&quot;UNDERLINE_NAV.TAB&quot;}" data-view-component="true" class="UnderlineNav-item no-wrap js-responsive-underlinenav-item js-selected-navigation-item">
    
              <svg aria-hidden="true" height="16" viewBox="0 0 16 16" version="1.1" width="16" data-view-component="true" class="octicon octicon-issue-opened UnderlineNav-octicon d-none d-sm-inline">
    <path d="M8 9.5a1.5 1.5 0 1 0 0-3 1.5 1.5 0 0 0 0 3Z"></path><path d="M8 0a8 8 0 1 1 0 16A8 8 0 0 1 8 0ZM1.5 8a6.5 6.5 0 1 0 13 0 6.5 6.5 0 0 0-13 0Z"></path>
</svg>
        <span data-content="Issues">Issues</span>
          <span id="issues-repo-tab-count" data-pjax-replace="" data-turbo-replace="" title="18" data-view-component="true" class="Counter">18</span>


    
</a></li>
      <li data-view-component="true" class="d-inline-flex">
  <a id="pull-requests-tab" href="/yhirose/cpp-httplib/pulls" data-tab-item="i2pull-requests-tab" data-selected-links="repo_pulls checks /yhirose/cpp-httplib/pulls" data-pjax="#repo-content-pjax-container" data-turbo-frame="repo-content-turbo-frame" data-hotkey="g p" data-analytics-event="{&quot;category&quot;:&quot;Underline navbar&quot;,&quot;action&quot;:&quot;Click tab&quot;,&quot;label&quot;:&quot;Pull requests&quot;,&quot;target&quot;:&quot;UNDERLINE_NAV.TAB&quot;}" data-view-component="true" class="UnderlineNav-item no-wrap js-responsive-underlinenav-item js-selected-navigation-item">
    
              <svg aria-hidden="true" height="16" viewBox="0 0 16 16" version="1.1" width="16" data-view-component="true" class="octicon octicon-git-pull-request UnderlineNav-octicon d-none d-sm-inline">
    <path d="M1.5 3.25a2.25 2.25 0 1 1 3 2.122v5.256a2.251 2.251 0 1 1-1.5 0V5.372A2.25 2.25 0 0 1 1.5 3.25Zm5.677-.177L9.573.677A.25.25 0 0 1 10 .854V2.5h1A2.5 2.5 0 0 1 13.5 5v5.628a2.251 2.251 0 1 1-1.5 0V5a1 1 0 0 0-1-1h-1v1.646a.25.25 0 0 1-.427.177L7.177 3.427a.25.25 0 0 1 0-.354ZM3.75 2.5a.75.75 0 1 0 0 1.5.75.75 0 0 0 0-1.5Zm0 9.5a.75.75 0 1 0 0 1.5.75.75 0 0 0 0-1.5Zm8.25.75a.75.75 0 1 0 1.5 0 .75.75 0 0 0-1.5 0Z"></path>
</svg>
        <span data-content="Pull requests">Pull requests</span>
          <span id="pull-requests-repo-tab-count" data-pjax-replace="" data-turbo-replace="" title="8" data-view-component="true" class="Counter">8</span>


    
</a></li>
      <li data-view-component="true" class="d-inline-flex">
  <a id="actions-tab" href="/yhirose/cpp-httplib/actions" data-tab-item="i3actions-tab" data-selected-links="repo_actions /yhirose/cpp-httplib/actions" data-pjax="#repo-content-pjax-container" data-turbo-frame="repo-content-turbo-frame" data-hotkey="g a" data-analytics-event="{&quot;category&quot;:&quot;Underline navbar&quot;,&quot;action&quot;:&quot;Click tab&quot;,&quot;label&quot;:&quot;Actions&quot;,&quot;target&quot;:&quot;UNDERLINE_NAV.TAB&quot;}" data-view-component="true" class="UnderlineNav-item no-wrap js-responsive-underlinenav-item js-selected-navigation-item">
    
              <svg aria-hidden="true" height="16" viewBox="0 0 16 16" version="1.1" width="16" data-view-component="true" class="octicon octicon-play UnderlineNav-octicon d-none d-sm-inline">
    <path d="M8 0a8 8 0 1 1 0 16A8 8 0 0 1 8 0ZM1.5 8a6.5 6.5 0 1 0 13 0 6.5 6.5 0 0 0-13 0Zm4.879-2.773 4.264 2.559a.25.25 0 0 1 0 .428l-4.264 2.559A.25.25 0 0 1 6 10.559V5.442a.25.25 0 0 1 .379-.215Z"></path>
</svg>
        <span data-content="Actions">Actions</span>
          <span id="actions-repo-tab-count" data-pjax-replace="" data-turbo-replace="" title="Not available" data-view-component="true" class="Counter"></span>


    
</a></li>
      <li data-view-component="true" class="d-inline-flex">
  <a id="security-tab" href="/yhirose/cpp-httplib/security" data-tab-item="i4security-tab" data-selected-links="security overview alerts policy token_scanning code_scanning /yhirose/cpp-httplib/security" data-pjax="#repo-content-pjax-container" data-turbo-frame="repo-content-turbo-frame" data-hotkey="g s" data-analytics-event="{&quot;category&quot;:&quot;Underline navbar&quot;,&quot;action&quot;:&quot;Click tab&quot;,&quot;label&quot;:&quot;Security&quot;,&quot;target&quot;:&quot;UNDERLINE_NAV.TAB&quot;}" data-view-component="true" class="UnderlineNav-item no-wrap js-responsive-underlinenav-item js-selected-navigation-item">
    
              <svg aria-hidden="true" height="16" viewBox="0 0 16 16" version="1.1" width="16" data-view-component="true" class="octicon octicon-shield UnderlineNav-octicon d-none d-sm-inline">
    <path d="M7.467.133a1.748 1.748 0 0 1 1.066 0l5.25 1.68A1.75 1.75 0 0 1 15 3.48V7c0 1.566-.32 3.182-1.303 4.682-.983 1.498-2.585 2.813-5.032 3.855a1.697 1.697 0 0 1-1.33 0c-2.447-1.042-4.049-2.357-5.032-3.855C1.32 10.182 1 8.566 1 7V3.48a1.75 1.75 0 0 1 1.217-1.667Zm.61 1.429a.25.25 0 0 0-.153 0l-5.25 1.68a.25.25 0 0 0-.174.238V7c0 1.358.275 2.666 1.057 3.86.784 1.194 2.121 2.34 4.366 3.297a.196.196 0 0 0 .154 0c2.245-.956 3.582-2.104 4.366-3.298C13.225 9.666 13.5 8.36 13.5 7V3.48a.251.251 0 0 0-.174-.237l-5.25-1.68ZM8.75 4.75v3a.75.75 0 0 1-1.5 0v-3a.75.75 0 0 1 1.5 0ZM9 10.5a1 1 0 1 1-2 0 1 1 0 0 1 2 0Z"></path>
</svg>
        <span data-content="Security">Security</span>
          <include-fragment src="/yhirose/cpp-httplib/security/overall-count" accept="text/fragment+html" data-nonce="v2:f148a192-1eb2-31df-a536-f55f2cbc92db" data-view-component="true">
  
  <div data-show-on-forbidden-error hidden>
    <div class="Box">
  <div class="blankslate-container">
    <div data-view-component="true" class="blankslate blankslate-spacious color-bg-default rounded-2">
      

      <h3 data-view-component="true" class="blankslate-heading">        Uh oh!
</h3>
      <p data-view-component="true">        <p class="color-fg-muted my-2 mb-2 ws-normal">There was an error while loading. <a class="Link--inTextBlock" data-turbo="false" href="" aria-label="Please reload this page">Please reload this page</a>.</p>
</p>

</div>  </div>
</div>  </div>
</include-fragment>

    
</a></li>
      <li data-view-component="true" class="d-inline-flex">
  <a id="insights-tab" href="/yhirose/cpp-httplib/pulse" data-tab-item="i5insights-tab" data-selected-links="repo_graphs repo_contributors dependency_graph dependabot_updates pulse people community /yhirose/cpp-httplib/pulse" data-pjax="#repo-content-pjax-container" data-turbo-frame="repo-content-turbo-frame" data-analytics-event="{&quot;category&quot;:&quot;Underline navbar&quot;,&quot;action&quot;:&quot;Click tab&quot;,&quot;label&quot;:&quot;Insights&quot;,&quot;target&quot;:&quot;UNDERLINE_NAV.TAB&quot;}" data-view-component="true" class="UnderlineNav-item no-wrap js-responsive-underlinenav-item js-selected-navigation-item">
    
              <svg aria-hidden="true" height="16" viewBox="0 0 16 16" version="1.1" width="16" data-view-component="true" class="octicon octicon-graph UnderlineNav-octicon d-none d-sm-inline">
    <path d="M1.5 1.75V13.5h13.75a.75.75 0 0 1 0 1.5H.75a.75.75 0 0 1-.75-.75V1.75a.75.75 0 0 1 1.5 0Zm14.28 2.53-5.25 5.25a.75.75 0 0 1-1.06 0L7 7.06 4.28 9.78a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042l3.25-3.25a.75.75 0 0 1 1.06 0L10 7.94l4.72-4.72a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042Z"></path>
</svg>
        <span data-content="Insights">Insights</span>
          <span id="insights-repo-tab-count" data-pjax-replace="" data-turbo-replace="" title="Not available" data-view-component="true" class="Counter"></span>


    
</a></li>
</ul>
    <div style="visibility:hidden;" data-view-component="true" class="UnderlineNav-actions js-responsive-underlinenav-overflow position-absolute pr-3 pr-md-4 pr-lg-5 right-0">      <action-menu data-select-variant="none" data-view-component="true">
  <focus-group direction="vertical" mnemonics retain>
    <button id="action-menu-f9890496-1196-4730-9a73-1965bd1e9a80-button" popovertarget="action-menu-f9890496-1196-4730-9a73-1965bd1e9a80-overlay" aria-controls="action-menu-f9890496-1196-4730-9a73-1965bd1e9a80-list" aria-haspopup="true" aria-labelledby="tooltip-27658c4e-ba71-4cb3-9123-1ec51e79ac1f" type="button" data-view-component="true" class="Button Button--iconOnly Button--secondary Button--medium UnderlineNav-item">  <svg aria-hidden="true" height="16" viewBox="0 0 16 16" version="1.1" width="16" data-view-component="true" class="octicon octicon-kebab-horizontal Button-visual">
    <path d="M8 9a1.5 1.5 0 1 0 0-3 1.5 1.5 0 0 0 0 3ZM1.5 9a1.5 1.5 0 1 0 0-3 1.5 1.5 0 0 0 0 3Zm13 0a1.5 1.5 0 1 0 0-3 1.5 1.5 0 0 0 0 3Z"></path>
</svg>
</button><tool-tip id="tooltip-27658c4e-ba71-4cb3-9123-1ec51e79ac1f" for="action-menu-f9890496-1196-4730-9a73-1965bd1e9a80-button" popover="manual" data-direction="s" data-type="label" data-view-component="true" class="sr-only position-absolute">Additional navigation options</tool-tip>


<anchored-position data-target="action-menu.overlay" id="action-menu-f9890496-1196-4730-9a73-1965bd1e9a80-overlay" anchor="action-menu-f9890496-1196-4730-9a73-1965bd1e9a80-button" align="start" side="outside-bottom" anchor-offset="normal" popover="auto" data-view-component="true">
  <div data-view-component="true" class="Overlay Overlay--size-auto">
    
      <div data-view-component="true" class="Overlay-body Overlay-body--paddingNone">          <action-list>
  <div data-view-component="true">
    <ul aria-labelledby="action-menu-f9890496-1196-4730-9a73-1965bd1e9a80-button" id="action-menu-f9890496-1196-4730-9a73-1965bd1e9a80-list" role="menu" data-view-component="true" class="ActionListWrap--inset ActionListWrap">
        <li hidden="hidden" data-menu-item="i0code-tab" data-targets="action-list.items" role="none" data-view-component="true" class="ActionListItem">
    
    
    <a tabindex="-1" id="item-e818157e-cdbb-43c0-90bb-2d055329e0b9" href="/yhirose/cpp-httplib" role="menuitem" data-view-component="true" class="ActionListContent ActionListContent--visual16">
        <span class="ActionListItem-visual ActionListItem-visual--leading">
          <svg aria-hidden="true" height="16" viewBox="0 0 16 16" version="1.1" width="16" data-view-component="true" class="octicon octicon-code">
    <path d="m11.28 3.22 4.25 4.25a.75.75 0 0 1 0 1.06l-4.25 4.25a.749.749 0 0 1-1.275-.326.749.749 0 0 1 .215-.734L13.94 8l-3.72-3.72a.749.749 0 0 1 .326-1.275.749.749 0 0 1 .734.215Zm-6.56 0a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042L2.06 8l3.72 3.72a.749.749 0 0 1-.326 1.275.749.749 0 0 1-.734-.215L.47 8.53a.75.75 0 0 1 0-1.06Z"></path>
</svg>
        </span>
      
        <span data-view-component="true" class="ActionListItem-label">
          Code
</span>      
</a>
  
</li>
        <li hidden="hidden" data-menu-item="i1issues-tab" data-targets="action-list.items" role="none" data-view-component="true" class="ActionListItem">
    
    
    <a tabindex="-1" id="item-a3e05fb3-3669-4105-99b0-015fd6117ae3" href="/yhirose/cpp-httplib/issues" role="menuitem" data-view-component="true" class="ActionListContent ActionListContent--visual16">
        <span class="ActionListItem-visual ActionListItem-visual--leading">
          <svg aria-hidden="true" height="16" viewBox="0 0 16 16" version="1.1" width="16" data-view-component="true" class="octicon octicon-issue-opened">
    <path d="M8 9.5a1.5 1.5 0 1 0 0-3 1.5 1.5 0 0 0 0 3Z"></path><path d="M8 0a8 8 0 1 1 0 16A8 8 0 0 1 8 0ZM1.5 8a6.5 6.5 0 1 0 13 0 6.5 6.5 0 0 0-13 0Z"></path>
</svg>
        </span>
      
        <span data-view-component="true" class="ActionListItem-label">
          Issues
</span>      
</a>
  
</li>
        <li hidden="hidden" data-menu-item="i2pull-requests-tab" data-targets="action-list.items" role="none" data-view-component="true" class="ActionListItem">
    
    
    <a tabindex="-1" id="item-b73e5269-3237-4ed3-b5e5-dcb925ae4338" href="/yhirose/cpp-httplib/pulls" role="menuitem" data-view-component="true" class="ActionListContent ActionListContent--visual16">
        <span class="ActionListItem-visual ActionListItem-visual--leading">
          <svg aria-hidden="true" height="16" viewBox="0 0 16 16" version="1.1" width="16" data-view-component="true" class="octicon octicon-git-pull-request">
    <path d="M1.5 3.25a2.25 2.25 0 1 1 3 2.122v5.256a2.251 2.251 0 1 1-1.5 0V5.372A2.25 2.25 0 0 1 1.5 3.25Zm5.677-.177L9.573.677A.25.25 0 0 1 10 .854V2.5h1A2.5 2.5 0 0 1 13.5 5v5.628a2.251 2.251 0 1 1-1.5 0V5a1 1 0 0 0-1-1h-1v1.646a.25.25 0 0 1-.427.177L7.177 3.427a.25.25 0 0 1 0-.354ZM3.75 2.5a.75.75 0 1 0 0 1.5.75.75 0 0 0 0-1.5Zm0 9.5a.75.75 0 1 0 0 1.5.75.75 0 0 0 0-1.5Zm8.25.75a.75.75 0 1 0 1.5 0 .75.75 0 0 0-1.5 0Z"></path>
</svg>
        </span>
      
        <span data-view-component="true" class="ActionListItem-label">
          Pull requests
</span>      
</a>
  
</li>
        <li hidden="hidden" data-menu-item="i3actions-tab" data-targets="action-list.items" role="none" data-view-component="true" class="ActionListItem">
    
    
    <a tabindex="-1" id="item-e68f5449-4e5b-473c-bf32-baa945e1381e" href="/yhirose/cpp-httplib/actions" role="menuitem" data-view-component="true" class="ActionListContent ActionListContent--visual16">
        <span class="ActionListItem-visual ActionListItem-visual--leading">
          <svg aria-hidden="true" height="16" viewBox="0 0 16 16" version="1.1" width="16" data-view-component="true" class="octicon octicon-play">
    <path d="M8 0a8 8 0 1 1 0 16A8 8 0 0 1 8 0ZM1.5 8a6.5 6.5 0 1 0 13 0 6.5 6.5 0 0 0-13 0Zm4.879-2.773 4.264 2.559a.25.25 0 0 1 0 .428l-4.264 2.559A.25.25 0 0 1 6 10.559V5.442a.25.25 0 0 1 .379-.215Z"></path>
</svg>
        </span>
      
        <span data-view-component="true" class="ActionListItem-label">
          Actions
</span>      
</a>
  
</li>
        <li hidden="hidden" data-menu-item="i4security-tab" data-targets="action-list.items" role="none" data-view-component="true" class="ActionListItem">
    
    
    <a tabindex="-1" id="item-635a89e7-609d-4717-8a17-8bdc308380d3" href="/yhirose/cpp-httplib/security" role="menuitem" data-view-component="true" class="ActionListContent ActionListContent--visual16">
        <span class="ActionListItem-visual ActionListItem-visual--leading">
          <svg aria-hidden="true" height="16" viewBox="0 0 16 16" version="1.1" width="16" data-view-component="true" class="octicon octicon-shield">
    <path d="M7.467.133a1.748 1.748 0 0 1 1.066 0l5.25 1.68A1.75 1.75 0 0 1 15 3.48V7c0 1.566-.32 3.182-1.303 4.682-.983 1.498-2.585 2.813-5.032 3.855a1.697 1.697 0 0 1-1.33 0c-2.447-1.042-4.049-2.357-5.032-3.855C1.32 10.182 1 8.566 1 7V3.48a1.75 1.75 0 0 1 1.217-1.667Zm.61 1.429a.25.25 0 0 0-.153 0l-5.25 1.68a.25.25 0 0 0-.174.238V7c0 1.358.275 2.666 1.057 3.86.784 1.194 2.121 2.34 4.366 3.297a.196.196 0 0 0 .154 0c2.245-.956 3.582-2.104 4.366-3.298C13.225 9.666 13.5 8.36 13.5 7V3.48a.251.251 0 0 0-.174-.237l-5.25-1.68ZM8.75 4.75v3a.75.75 0 0 1-1.5 0v-3a.75.75 0 0 1 1.5 0ZM9 10.5a1 1 0 1 1-2 0 1 1 0 0 1 2 0Z"></path>
</svg>
        </span>
      
        <span data-view-component="true" class="ActionListItem-label">
          Security
</span>      
</a>
  
</li>
        <li hidden="hidden" data-menu-item="i5insights-tab" data-targets="action-list.items" role="none" data-view-component="true" class="ActionListItem">
    
    
    <a tabindex="-1" id="item-6d80fe3e-6aca-4d23-93b6-3e368987c4a2" href="/yhirose/cpp-httplib/pulse" role="menuitem" data-view-component="true" class="ActionListContent ActionListContent--visual16">
        <span class="ActionListItem-visual ActionListItem-visual--leading">
          <svg aria-hidden="true" height="16" viewBox="0 0 16 16" version="1.1" width="16" data-view-component="true" class="octicon octicon-graph">
    <path d="M1.5 1.75V13.5h13.75a.75.75 0 0 1 0 1.5H.75a.75.75 0 0 1-.75-.75V1.75a.75.75 0 0 1 1.5 0Zm14.28 2.53-5.25 5.25a.75.75 0 0 1-1.06 0L7 7.06 4.28 9.78a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042l3.25-3.25a.75.75 0 0 1 1.06 0L10 7.94l4.72-4.72a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042Z"></path>
</svg>
        </span>
      
        <span data-view-component="true" class="ActionListItem-label">
          Insights
</span>      
</a>
  
</li>
</ul>    
</div></action-list>


</div>
      
</div></anchored-position>  </focus-group>
</action-menu></div>
</nav>

  </div>

  



<turbo-frame id="repo-content-turbo-frame" target="_top" data-turbo-action="advance" class="">
    <div id="repo-content-pjax-container" class="repository-content " >
    



    
      
    








<react-app
  app-name="react-code-view"
  initial-path="/yhirose/cpp-httplib/blob/master/httplib.h"
    style="display: block; min-height: calc(100vh - 64px);"
  data-attempted-ssr="false"
  data-ssr="false"
  data-lazy="false"
  data-alternate="false"
  data-data-router-enabled="false"
>
  
  <script type="application/json" data-target="react-app.embeddedData">{"payload":{"allShortcutsEnabled":false,"fileTree":{"":{"items":[{"name":".github","path":".github","contentType":"directory"},{"name":"benchmark","path":"benchmark","contentType":"directory"},{"name":"cmake","path":"cmake","contentType":"directory"},{"name":"docker","path":"docker","contentType":"directory"},{"name":"example","path":"example","contentType":"directory"},{"name":"test","path":"test","contentType":"directory"},{"name":".clang-format","path":".clang-format","contentType":"file"},{"name":".gitattributes","path":".gitattributes","contentType":"file"},{"name":".gitignore","path":".gitignore","contentType":"file"},{"name":"CMakeLists.txt","path":"CMakeLists.txt","contentType":"file"},{"name":"Dockerfile","path":"Dockerfile","contentType":"file"},{"name":"LICENSE","path":"LICENSE","contentType":"file"},{"name":"README.md","path":"README.md","contentType":"file"},{"name":"docker-compose.yml","path":"docker-compose.yml","contentType":"file"},{"name":"httplib.h","path":"httplib.h","contentType":"file"},{"name":"meson.build","path":"meson.build","contentType":"file"},{"name":"meson_options.txt","path":"meson_options.txt","contentType":"file"},{"name":"split.py","path":"split.py","contentType":"file"}],"totalCount":18}},"fileTreeProcessingTime":3.550104,"foldersToFetch":[],"incompleteFileTree":false,"repo":{"id":5909706,"defaultBranch":"master","name":"cpp-httplib","ownerLogin":"yhirose","currentUserCanPush":false,"isFork":false,"isEmpty":false,"createdAt":"2012-09-22T02:38:32.000Z","ownerAvatar":"https://avatars.githubusercontent.com/u/357397?v=4","public":true,"private":false,"isOrgOwned":false},"codeLineWrapEnabled":false,"symbolsExpanded":false,"treeExpanded":true,"refInfo":{"name":"master","listCacheKey":"v0:1746275406.0","canEdit":false,"refType":"branch","currentOid":"4a7aae54690c80e7d49398964ba9e1bae1dfca79"},"path":"httplib.h","currentUser":null,"blob":{"rawLines":["//","//  httplib.h","//","//  Copyright (c) 2025 Yuji Hirose. All rights reserved.","//  MIT License","//","","#ifndef CPPHTTPLIB_HTTPLIB_H","#define CPPHTTPLIB_HTTPLIB_H","","#define CPPHTTPLIB_VERSION \"0.20.1\"","","/*"," * Configuration"," */","","#ifndef CPPHTTPLIB_KEEPALIVE_TIMEOUT_SECOND","#define CPPHTTPLIB_KEEPALIVE_TIMEOUT_SECOND 5","#endif","","#ifndef CPPHTTPLIB_KEEPALIVE_TIMEOUT_CHECK_INTERVAL_USECOND","#define CPPHTTPLIB_KEEPALIVE_TIMEOUT_CHECK_INTERVAL_USECOND 10000","#endif","","#ifndef CPPHTTPLIB_KEEPALIVE_MAX_COUNT","#define CPPHTTPLIB_KEEPALIVE_MAX_COUNT 100","#endif","","#ifndef CPPHTTPLIB_CONNECTION_TIMEOUT_SECOND","#define CPPHTTPLIB_CONNECTION_TIMEOUT_SECOND 300","#endif","","#ifndef CPPHTTPLIB_CONNECTION_TIMEOUT_USECOND","#define CPPHTTPLIB_CONNECTION_TIMEOUT_USECOND 0","#endif","","#ifndef CPPHTTPLIB_SERVER_READ_TIMEOUT_SECOND","#define CPPHTTPLIB_SERVER_READ_TIMEOUT_SECOND 5","#endif","","#ifndef CPPHTTPLIB_SERVER_READ_TIMEOUT_USECOND","#define CPPHTTPLIB_SERVER_READ_TIMEOUT_USECOND 0","#endif","","#ifndef CPPHTTPLIB_SERVER_WRITE_TIMEOUT_SECOND","#define CPPHTTPLIB_SERVER_WRITE_TIMEOUT_SECOND 5","#endif","","#ifndef CPPHTTPLIB_SERVER_WRITE_TIMEOUT_USECOND","#define CPPHTTPLIB_SERVER_WRITE_TIMEOUT_USECOND 0","#endif","","#ifndef CPPHTTPLIB_CLIENT_READ_TIMEOUT_SECOND","#define CPPHTTPLIB_CLIENT_READ_TIMEOUT_SECOND 300","#endif","","#ifndef CPPHTTPLIB_CLIENT_READ_TIMEOUT_USECOND","#define CPPHTTPLIB_CLIENT_READ_TIMEOUT_USECOND 0","#endif","","#ifndef CPPHTTPLIB_CLIENT_WRITE_TIMEOUT_SECOND","#define CPPHTTPLIB_CLIENT_WRITE_TIMEOUT_SECOND 5","#endif","","#ifndef CPPHTTPLIB_CLIENT_WRITE_TIMEOUT_USECOND","#define CPPHTTPLIB_CLIENT_WRITE_TIMEOUT_USECOND 0","#endif","","#ifndef CPPHTTPLIB_CLIENT_MAX_TIMEOUT_MSECOND","#define CPPHTTPLIB_CLIENT_MAX_TIMEOUT_MSECOND 0","#endif","","#ifndef CPPHTTPLIB_IDLE_INTERVAL_SECOND","#define CPPHTTPLIB_IDLE_INTERVAL_SECOND 0","#endif","","#ifndef CPPHTTPLIB_IDLE_INTERVAL_USECOND","#ifdef _WIN32","#define CPPHTTPLIB_IDLE_INTERVAL_USECOND 10000","#else","#define CPPHTTPLIB_IDLE_INTERVAL_USECOND 0","#endif","#endif","","#ifndef CPPHTTPLIB_REQUEST_URI_MAX_LENGTH","#define CPPHTTPLIB_REQUEST_URI_MAX_LENGTH 8192","#endif","","#ifndef CPPHTTPLIB_HEADER_MAX_LENGTH","#define CPPHTTPLIB_HEADER_MAX_LENGTH 8192","#endif","","#ifndef CPPHTTPLIB_REDIRECT_MAX_COUNT","#define CPPHTTPLIB_REDIRECT_MAX_COUNT 20","#endif","","#ifndef CPPHTTPLIB_MULTIPART_FORM_DATA_FILE_MAX_COUNT","#define CPPHTTPLIB_MULTIPART_FORM_DATA_FILE_MAX_COUNT 1024","#endif","","#ifndef CPPHTTPLIB_PAYLOAD_MAX_LENGTH","#define CPPHTTPLIB_PAYLOAD_MAX_LENGTH ((std::numeric_limits\u003csize_t\u003e::max)())","#endif","","#ifndef CPPHTTPLIB_FORM_URL_ENCODED_PAYLOAD_MAX_LENGTH","#define CPPHTTPLIB_FORM_URL_ENCODED_PAYLOAD_MAX_LENGTH 8192","#endif","","#ifndef CPPHTTPLIB_RANGE_MAX_COUNT","#define CPPHTTPLIB_RANGE_MAX_COUNT 1024","#endif","","#ifndef CPPHTTPLIB_TCP_NODELAY","#define CPPHTTPLIB_TCP_NODELAY false","#endif","","#ifndef CPPHTTPLIB_IPV6_V6ONLY","#define CPPHTTPLIB_IPV6_V6ONLY false","#endif","","#ifndef CPPHTTPLIB_RECV_BUFSIZ","#define CPPHTTPLIB_RECV_BUFSIZ size_t(16384u)","#endif","","#ifndef CPPHTTPLIB_COMPRESSION_BUFSIZ","#define CPPHTTPLIB_COMPRESSION_BUFSIZ size_t(16384u)","#endif","","#ifndef CPPHTTPLIB_THREAD_POOL_COUNT","#define CPPHTTPLIB_THREAD_POOL_COUNT                                           \\","  ((std::max)(8u, std::thread::hardware_concurrency() \u003e 0                      \\","                      ? std::thread::hardware_concurrency() - 1                \\","                      : 0))","#endif","","#ifndef CPPHTTPLIB_RECV_FLAGS","#define CPPHTTPLIB_RECV_FLAGS 0","#endif","","#ifndef CPPHTTPLIB_SEND_FLAGS","#define CPPHTTPLIB_SEND_FLAGS 0","#endif","","#ifndef CPPHTTPLIB_LISTEN_BACKLOG","#define CPPHTTPLIB_LISTEN_BACKLOG 5","#endif","","#ifndef CPPHTTPLIB_MAX_LINE_LENGTH","#define CPPHTTPLIB_MAX_LINE_LENGTH 32768","#endif","","/*"," * Headers"," */","","#ifdef _WIN32","#ifndef _CRT_SECURE_NO_WARNINGS","#define _CRT_SECURE_NO_WARNINGS","#endif //_CRT_SECURE_NO_WARNINGS","","#ifndef _CRT_NONSTDC_NO_DEPRECATE","#define _CRT_NONSTDC_NO_DEPRECATE","#endif //_CRT_NONSTDC_NO_DEPRECATE","","#if defined(_MSC_VER)","#if _MSC_VER \u003c 1900","#error Sorry, Visual Studio versions prior to 2015 are not supported","#endif","","#pragma comment(lib, \"ws2_32.lib\")","","#ifdef _WIN64","using ssize_t = __int64;","#else","using ssize_t = long;","#endif","#endif // _MSC_VER","","#ifndef S_ISREG","#define S_ISREG(m) (((m) \u0026 S_IFREG) == S_IFREG)","#endif // S_ISREG","","#ifndef S_ISDIR","#define S_ISDIR(m) (((m) \u0026 S_IFDIR) == S_IFDIR)","#endif // S_ISDIR","","#ifndef NOMINMAX","#define NOMINMAX","#endif // NOMINMAX","","#include \u003cio.h\u003e","#include \u003cwinsock2.h\u003e","#include \u003cws2tcpip.h\u003e","","#if defined(__has_include)","#if __has_include(\u003cafunix.h\u003e)","// afunix.h uses types declared in winsock2.h, so has to be included after it.","#include \u003cafunix.h\u003e","#define CPPHTTPLIB_HAVE_AFUNIX_H 1","#endif","#endif","","#ifndef WSA_FLAG_NO_HANDLE_INHERIT","#define WSA_FLAG_NO_HANDLE_INHERIT 0x80","#endif","","using nfds_t = unsigned long;","using socket_t = SOCKET;","using socklen_t = int;","","#else // not _WIN32","","#include \u003carpa/inet.h\u003e","#if !defined(_AIX) \u0026\u0026 !defined(__MVS__)","#include \u003cifaddrs.h\u003e","#endif","#ifdef __MVS__","#include \u003cstrings.h\u003e","#ifndef NI_MAXHOST","#define NI_MAXHOST 1025","#endif","#endif","#include \u003cnet/if.h\u003e","#include \u003cnetdb.h\u003e","#include \u003cnetinet/in.h\u003e","#ifdef __linux__","#include \u003cresolv.h\u003e","#endif","#include \u003ccsignal\u003e","#include \u003cnetinet/tcp.h\u003e","#include \u003cpoll.h\u003e","#include \u003cpthread.h\u003e","#include \u003csys/mman.h\u003e","#include \u003csys/socket.h\u003e","#include \u003csys/un.h\u003e","#include \u003cunistd.h\u003e","","using socket_t = int;","#ifndef INVALID_SOCKET","#define INVALID_SOCKET (-1)","#endif","#endif //_WIN32","","#include \u003calgorithm\u003e","#include \u003carray\u003e","#include \u003catomic\u003e","#include \u003ccassert\u003e","#include \u003ccctype\u003e","#include \u003cclimits\u003e","#include \u003ccondition_variable\u003e","#include \u003ccstring\u003e","#include \u003cerrno.h\u003e","#include \u003cexception\u003e","#include \u003cfcntl.h\u003e","#include \u003cfunctional\u003e","#include \u003ciomanip\u003e","#include \u003ciostream\u003e","#include \u003clist\u003e","#include \u003cmap\u003e","#include \u003cmemory\u003e","#include \u003cmutex\u003e","#include \u003crandom\u003e","#include \u003cregex\u003e","#include \u003cset\u003e","#include \u003csstream\u003e","#include \u003cstring\u003e","#include \u003csys/stat.h\u003e","#include \u003cthread\u003e","#include \u003cunordered_map\u003e","#include \u003cunordered_set\u003e","#include \u003cutility\u003e","","#ifdef CPPHTTPLIB_OPENSSL_SUPPORT","#ifdef _WIN32","#include \u003cwincrypt.h\u003e","","// these are defined in wincrypt.h and it breaks compilation if BoringSSL is","// used","#undef X509_NAME","#undef X509_CERT_PAIR","#undef X509_EXTENSIONS","#undef PKCS7_SIGNER_INFO","","#ifdef _MSC_VER","#pragma comment(lib, \"crypt32.lib\")","#endif","#elif defined(CPPHTTPLIB_USE_CERTS_FROM_MACOSX_KEYCHAIN) \u0026\u0026 defined(__APPLE__)","#include \u003cTargetConditionals.h\u003e","#if TARGET_OS_OSX","#include \u003cCoreFoundation/CoreFoundation.h\u003e","#include \u003cSecurity/Security.h\u003e","#endif // TARGET_OS_OSX","#endif // _WIN32","","#include \u003copenssl/err.h\u003e","#include \u003copenssl/evp.h\u003e","#include \u003copenssl/ssl.h\u003e","#include \u003copenssl/x509v3.h\u003e","","#if defined(_WIN32) \u0026\u0026 defined(OPENSSL_USE_APPLINK)","#include \u003copenssl/applink.c\u003e","#endif","","#include \u003ciostream\u003e","#include \u003csstream\u003e","","#if defined(OPENSSL_IS_BORINGSSL) || defined(LIBRESSL_VERSION_NUMBER)","#if OPENSSL_VERSION_NUMBER \u003c 0x1010107f","#error Please use OpenSSL or a current version of BoringSSL","#endif","#define SSL_get1_peer_certificate SSL_get_peer_certificate","#elif OPENSSL_VERSION_NUMBER \u003c 0x30000000L","#error Sorry, OpenSSL versions prior to 3.0.0 are not supported","#endif","","#endif","","#ifdef CPPHTTPLIB_ZLIB_SUPPORT","#include \u003czlib.h\u003e","#endif","","#ifdef CPPHTTPLIB_BROTLI_SUPPORT","#include \u003cbrotli/decode.h\u003e","#include \u003cbrotli/encode.h\u003e","#endif","","#ifdef CPPHTTPLIB_ZSTD_SUPPORT","#include \u003czstd.h\u003e","#endif","","/*"," * Declaration"," */","namespace httplib {","","namespace detail {","","/*"," * Backport std::make_unique from C++14."," *"," * NOTE: This code came up with the following stackoverflow post:"," * https://stackoverflow.com/questions/10149840/c-arrays-and-make-unique"," *"," */","","template \u003cclass T, class... Args\u003e","typename std::enable_if\u003c!std::is_array\u003cT\u003e::value, std::unique_ptr\u003cT\u003e\u003e::type","make_unique(Args \u0026\u0026...args) {","  return std::unique_ptr\u003cT\u003e(new T(std::forward\u003cArgs\u003e(args)...));","}","","template \u003cclass T\u003e","typename std::enable_if\u003cstd::is_array\u003cT\u003e::value, std::unique_ptr\u003cT\u003e\u003e::type","make_unique(std::size_t n) {","  typedef typename std::remove_extent\u003cT\u003e::type RT;","  return std::unique_ptr\u003cT\u003e(new RT[n]);","}","","namespace case_ignore {","","inline unsigned char to_lower(int c) {","  const static unsigned char table[256] = {","      0,   1,   2,   3,   4,   5,   6,   7,   8,   9,   10,  11,  12,  13,  14,","      15,  16,  17,  18,  19,  20,  21,  22,  23,  24,  25,  26,  27,  28,  29,","      30,  31,  32,  33,  34,  35,  36,  37,  38,  39,  40,  41,  42,  43,  44,","      45,  46,  47,  48,  49,  50,  51,  52,  53,  54,  55,  56,  57,  58,  59,","      60,  61,  62,  63,  64,  97,  98,  99,  100, 101, 102, 103, 104, 105, 106,","      107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121,","      122, 91,  92,  93,  94,  95,  96,  97,  98,  99,  100, 101, 102, 103, 104,","      105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119,","      120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134,","      135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149,","      150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164,","      165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179,","      180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 224, 225, 226,","      227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241,","      242, 243, 244, 245, 246, 215, 248, 249, 250, 251, 252, 253, 254, 223, 224,","      225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239,","      240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254,","      255,","  };","  return table[(unsigned char)(char)c];","}","","inline bool equal(const std::string \u0026a, const std::string \u0026b) {","  return a.size() == b.size() \u0026\u0026","         std::equal(a.begin(), a.end(), b.begin(), [](char ca, char cb) {","           return to_lower(ca) == to_lower(cb);","         });","}","","struct equal_to {","  bool operator()(const std::string \u0026a, const std::string \u0026b) const {","    return equal(a, b);","  }","};","","struct hash {","  size_t operator()(const std::string \u0026key) const {","    return hash_core(key.data(), key.size(), 0);","  }","","  size_t hash_core(const char *s, size_t l, size_t h) const {","    return (l == 0) ? h","                    : hash_core(s + 1, l - 1,","                                // Unsets the 6 high bits of h, therefore no","                                // overflow happens","                                (((std::numeric_limits\u003csize_t\u003e::max)() \u003e\u003e 6) \u0026","                                 h * 33) ^","                                    static_cast\u003cunsigned char\u003e(to_lower(*s)));","  }","};","","} // namespace case_ignore","","// This is based on","// \"http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2014/n4189\".","","struct scope_exit {","  explicit scope_exit(std::function\u003cvoid(void)\u003e \u0026\u0026f)","      : exit_function(std::move(f)), execute_on_destruction{true} {}","","  scope_exit(scope_exit \u0026\u0026rhs) noexcept","      : exit_function(std::move(rhs.exit_function)),","        execute_on_destruction{rhs.execute_on_destruction} {","    rhs.release();","  }","","  ~scope_exit() {","    if (execute_on_destruction) { this-\u003eexit_function(); }","  }","","  void release() { this-\u003eexecute_on_destruction = false; }","","private:","  scope_exit(const scope_exit \u0026) = delete;","  void operator=(const scope_exit \u0026) = delete;","  scope_exit \u0026operator=(scope_exit \u0026\u0026) = delete;","","  std::function\u003cvoid(void)\u003e exit_function;","  bool execute_on_destruction;","};","","} // namespace detail","","enum SSLVerifierResponse {","  // no decision has been made, use the built-in certificate verifier","  NoDecisionMade,","  // connection certificate is verified and accepted","  CertificateAccepted,","  // connection certificate was processed but is rejected","  CertificateRejected","};","","enum StatusCode {","  // Information responses","  Continue_100 = 100,","  SwitchingProtocol_101 = 101,","  Processing_102 = 102,","  EarlyHints_103 = 103,","","  // Successful responses","  OK_200 = 200,","  Created_201 = 201,","  Accepted_202 = 202,","  NonAuthoritativeInformation_203 = 203,","  NoContent_204 = 204,","  ResetContent_205 = 205,","  PartialContent_206 = 206,","  MultiStatus_207 = 207,","  AlreadyReported_208 = 208,","  IMUsed_226 = 226,","","  // Redirection messages","  MultipleChoices_300 = 300,","  MovedPermanently_301 = 301,","  Found_302 = 302,","  SeeOther_303 = 303,","  NotModified_304 = 304,","  UseProxy_305 = 305,","  unused_306 = 306,","  TemporaryRedirect_307 = 307,","  PermanentRedirect_308 = 308,","","  // Client error responses","  BadRequest_400 = 400,","  Unauthorized_401 = 401,","  PaymentRequired_402 = 402,","  Forbidden_403 = 403,","  NotFound_404 = 404,","  MethodNotAllowed_405 = 405,","  NotAcceptable_406 = 406,","  ProxyAuthenticationRequired_407 = 407,","  RequestTimeout_408 = 408,","  Conflict_409 = 409,","  Gone_410 = 410,","  LengthRequired_411 = 411,","  PreconditionFailed_412 = 412,","  PayloadTooLarge_413 = 413,","  UriTooLong_414 = 414,","  UnsupportedMediaType_415 = 415,","  RangeNotSatisfiable_416 = 416,","  ExpectationFailed_417 = 417,","  ImATeapot_418 = 418,","  MisdirectedRequest_421 = 421,","  UnprocessableContent_422 = 422,","  Locked_423 = 423,","  FailedDependency_424 = 424,","  TooEarly_425 = 425,","  UpgradeRequired_426 = 426,","  PreconditionRequired_428 = 428,","  TooManyRequests_429 = 429,","  RequestHeaderFieldsTooLarge_431 = 431,","  UnavailableForLegalReasons_451 = 451,","","  // Server error responses","  InternalServerError_500 = 500,","  NotImplemented_501 = 501,","  BadGateway_502 = 502,","  ServiceUnavailable_503 = 503,","  GatewayTimeout_504 = 504,","  HttpVersionNotSupported_505 = 505,","  VariantAlsoNegotiates_506 = 506,","  InsufficientStorage_507 = 507,","  LoopDetected_508 = 508,","  NotExtended_510 = 510,","  NetworkAuthenticationRequired_511 = 511,","};","","using Headers =","    std::unordered_multimap\u003cstd::string, std::string, detail::case_ignore::hash,","                            detail::case_ignore::equal_to\u003e;","","using Params = std::multimap\u003cstd::string, std::string\u003e;","using Match = std::smatch;","","using Progress = std::function\u003cbool(uint64_t current, uint64_t total)\u003e;","","struct Response;","using ResponseHandler = std::function\u003cbool(const Response \u0026response)\u003e;","","struct MultipartFormData {","  std::string name;","  std::string content;","  std::string filename;","  std::string content_type;","};","using MultipartFormDataItems = std::vector\u003cMultipartFormData\u003e;","using MultipartFormDataMap = std::multimap\u003cstd::string, MultipartFormData\u003e;","","class DataSink {","public:","  DataSink() : os(\u0026sb_), sb_(*this) {}","","  DataSink(const DataSink \u0026) = delete;","  DataSink \u0026operator=(const DataSink \u0026) = delete;","  DataSink(DataSink \u0026\u0026) = delete;","  DataSink \u0026operator=(DataSink \u0026\u0026) = delete;","","  std::function\u003cbool(const char *data, size_t data_len)\u003e write;","  std::function\u003cbool()\u003e is_writable;","  std::function\u003cvoid()\u003e done;","  std::function\u003cvoid(const Headers \u0026trailer)\u003e done_with_trailer;","  std::ostream os;","","private:","  class data_sink_streambuf final : public std::streambuf {","  public:","    explicit data_sink_streambuf(DataSink \u0026sink) : sink_(sink) {}","","  protected:","    std::streamsize xsputn(const char *s, std::streamsize n) override {","      sink_.write(s, static_cast\u003csize_t\u003e(n));","      return n;","    }","","  private:","    DataSink \u0026sink_;","  };","","  data_sink_streambuf sb_;","};","","using ContentProvider =","    std::function\u003cbool(size_t offset, size_t length, DataSink \u0026sink)\u003e;","","using ContentProviderWithoutLength =","    std::function\u003cbool(size_t offset, DataSink \u0026sink)\u003e;","","using ContentProviderResourceReleaser = std::function\u003cvoid(bool success)\u003e;","","struct MultipartFormDataProvider {","  std::string name;","  ContentProviderWithoutLength provider;","  std::string filename;","  std::string content_type;","};","using MultipartFormDataProviderItems = std::vector\u003cMultipartFormDataProvider\u003e;","","using ContentReceiverWithProgress =","    std::function\u003cbool(const char *data, size_t data_length, uint64_t offset,","                       uint64_t total_length)\u003e;","","using ContentReceiver =","    std::function\u003cbool(const char *data, size_t data_length)\u003e;","","using MultipartContentHeader =","    std::function\u003cbool(const MultipartFormData \u0026file)\u003e;","","class ContentReader {","public:","  using Reader = std::function\u003cbool(ContentReceiver receiver)\u003e;","  using MultipartReader = std::function\u003cbool(MultipartContentHeader header,","                                             ContentReceiver receiver)\u003e;","","  ContentReader(Reader reader, MultipartReader multipart_reader)","      : reader_(std::move(reader)),","        multipart_reader_(std::move(multipart_reader)) {}","","  bool operator()(MultipartContentHeader header,","                  ContentReceiver receiver) const {","    return multipart_reader_(std::move(header), std::move(receiver));","  }","","  bool operator()(ContentReceiver receiver) const {","    return reader_(std::move(receiver));","  }","","  Reader reader_;","  MultipartReader multipart_reader_;","};","","using Range = std::pair\u003cssize_t, ssize_t\u003e;","using Ranges = std::vector\u003cRange\u003e;","","struct Request {","  std::string method;","  std::string path;","  Params params;","  Headers headers;","  std::string body;","","  std::string remote_addr;","  int remote_port = -1;","  std::string local_addr;","  int local_port = -1;","","  // for server","  std::string version;","  std::string target;","  MultipartFormDataMap files;","  Ranges ranges;","  Match matches;","  std::unordered_map\u003cstd::string, std::string\u003e path_params;","  std::function\u003cbool()\u003e is_connection_closed = []() { return true; };","","  // for client","  ResponseHandler response_handler;","  ContentReceiverWithProgress content_receiver;","  Progress progress;","#ifdef CPPHTTPLIB_OPENSSL_SUPPORT","  const SSL *ssl = nullptr;","#endif","","  bool has_header(const std::string \u0026key) const;","  std::string get_header_value(const std::string \u0026key, const char *def = \"\",","                               size_t id = 0) const;","  uint64_t get_header_value_u64(const std::string \u0026key, uint64_t def = 0,","                                size_t id = 0) const;","  size_t get_header_value_count(const std::string \u0026key) const;","  void set_header(const std::string \u0026key, const std::string \u0026val);","","  bool has_param(const std::string \u0026key) const;","  std::string get_param_value(const std::string \u0026key, size_t id = 0) const;","  size_t get_param_value_count(const std::string \u0026key) const;","","  bool is_multipart_form_data() const;","","  bool has_file(const std::string \u0026key) const;","  MultipartFormData get_file_value(const std::string \u0026key) const;","  std::vector\u003cMultipartFormData\u003e get_file_values(const std::string \u0026key) const;","","  // private members...","  size_t redirect_count_ = CPPHTTPLIB_REDIRECT_MAX_COUNT;","  size_t content_length_ = 0;","  ContentProvider content_provider_;","  bool is_chunked_content_provider_ = false;","  size_t authorization_count_ = 0;","  std::chrono::time_point\u003cstd::chrono::steady_clock\u003e start_time_ =","      (std::chrono::steady_clock::time_point::min)();","};","","struct Response {","  std::string version;","  int status = -1;","  std::string reason;","  Headers headers;","  std::string body;","  std::string location; // Redirect location","","  bool has_header(const std::string \u0026key) const;","  std::string get_header_value(const std::string \u0026key, const char *def = \"\",","                               size_t id = 0) const;","  uint64_t get_header_value_u64(const std::string \u0026key, uint64_t def = 0,","                                size_t id = 0) const;","  size_t get_header_value_count(const std::string \u0026key) const;","  void set_header(const std::string \u0026key, const std::string \u0026val);","","  void set_redirect(const std::string \u0026url, int status = StatusCode::Found_302);","  void set_content(const char *s, size_t n, const std::string \u0026content_type);","  void set_content(const std::string \u0026s, const std::string \u0026content_type);","  void set_content(std::string \u0026\u0026s, const std::string \u0026content_type);","","  void set_content_provider(","      size_t length, const std::string \u0026content_type, ContentProvider provider,","      ContentProviderResourceReleaser resource_releaser = nullptr);","","  void set_content_provider(","      const std::string \u0026content_type, ContentProviderWithoutLength provider,","      ContentProviderResourceReleaser resource_releaser = nullptr);","","  void set_chunked_content_provider(","      const std::string \u0026content_type, ContentProviderWithoutLength provider,","      ContentProviderResourceReleaser resource_releaser = nullptr);","","  void set_file_content(const std::string \u0026path,","                        const std::string \u0026content_type);","  void set_file_content(const std::string \u0026path);","","  Response() = default;","  Response(const Response \u0026) = default;","  Response \u0026operator=(const Response \u0026) = default;","  Response(Response \u0026\u0026) = default;","  Response \u0026operator=(Response \u0026\u0026) = default;","  ~Response() {","    if (content_provider_resource_releaser_) {","      content_provider_resource_releaser_(content_provider_success_);","    }","  }","","  // private members...","  size_t content_length_ = 0;","  ContentProvider content_provider_;","  ContentProviderResourceReleaser content_provider_resource_releaser_;","  bool is_chunked_content_provider_ = false;","  bool content_provider_success_ = false;","  std::string file_content_path_;","  std::string file_content_content_type_;","};","","class Stream {","public:","  virtual ~Stream() = default;","","  virtual bool is_readable() const = 0;","  virtual bool wait_readable() const = 0;","  virtual bool wait_writable() const = 0;","","  virtual ssize_t read(char *ptr, size_t size) = 0;","  virtual ssize_t write(const char *ptr, size_t size) = 0;","  virtual void get_remote_ip_and_port(std::string \u0026ip, int \u0026port) const = 0;","  virtual void get_local_ip_and_port(std::string \u0026ip, int \u0026port) const = 0;","  virtual socket_t socket() const = 0;","","  virtual time_t duration() const = 0;","","  ssize_t write(const char *ptr);","  ssize_t write(const std::string \u0026s);","};","","class TaskQueue {","public:","  TaskQueue() = default;","  virtual ~TaskQueue() = default;","","  virtual bool enqueue(std::function\u003cvoid()\u003e fn) = 0;","  virtual void shutdown() = 0;","","  virtual void on_idle() {}","};","","class ThreadPool final : public TaskQueue {","public:","  explicit ThreadPool(size_t n, size_t mqr = 0)","      : shutdown_(false), max_queued_requests_(mqr) {","    while (n) {","      threads_.emplace_back(worker(*this));","      n--;","    }","  }","","  ThreadPool(const ThreadPool \u0026) = delete;","  ~ThreadPool() override = default;","","  bool enqueue(std::function\u003cvoid()\u003e fn) override {","    {","      std::unique_lock\u003cstd::mutex\u003e lock(mutex_);","      if (max_queued_requests_ \u003e 0 \u0026\u0026 jobs_.size() \u003e= max_queued_requests_) {","        return false;","      }","      jobs_.push_back(std::move(fn));","    }","","    cond_.notify_one();","    return true;","  }","","  void shutdown() override {","    // Stop all worker threads...","    {","      std::unique_lock\u003cstd::mutex\u003e lock(mutex_);","      shutdown_ = true;","    }","","    cond_.notify_all();","","    // Join...","    for (auto \u0026t : threads_) {","      t.join();","    }","  }","","private:","  struct worker {","    explicit worker(ThreadPool \u0026pool) : pool_(pool) {}","","    void operator()() {","      for (;;) {","        std::function\u003cvoid()\u003e fn;","        {","          std::unique_lock\u003cstd::mutex\u003e lock(pool_.mutex_);","","          pool_.cond_.wait(","              lock, [\u0026] { return !pool_.jobs_.empty() || pool_.shutdown_; });","","          if (pool_.shutdown_ \u0026\u0026 pool_.jobs_.empty()) { break; }","","          fn = pool_.jobs_.front();","          pool_.jobs_.pop_front();","        }","","        assert(true == static_cast\u003cbool\u003e(fn));","        fn();","      }","","#if defined(CPPHTTPLIB_OPENSSL_SUPPORT) \u0026\u0026 !defined(OPENSSL_IS_BORINGSSL) \u0026\u0026   \\","    !defined(LIBRESSL_VERSION_NUMBER)","      OPENSSL_thread_stop();","#endif","    }","","    ThreadPool \u0026pool_;","  };","  friend struct worker;","","  std::vector\u003cstd::thread\u003e threads_;","  std::list\u003cstd::function\u003cvoid()\u003e\u003e jobs_;","","  bool shutdown_;","  size_t max_queued_requests_ = 0;","","  std::condition_variable cond_;","  std::mutex mutex_;","};","","using Logger = std::function\u003cvoid(const Request \u0026, const Response \u0026)\u003e;","","using SocketOptions = std::function\u003cvoid(socket_t sock)\u003e;","","namespace detail {","","bool set_socket_opt_impl(socket_t sock, int level, int optname,","                         const void *optval, socklen_t optlen);","bool set_socket_opt(socket_t sock, int level, int optname, int opt);","bool set_socket_opt_time(socket_t sock, int level, int optname, time_t sec,","                         time_t usec);","","} // namespace detail","","void default_socket_options(socket_t sock);","","const char *status_message(int status);","","std::string get_bearer_token_auth(const Request \u0026req);","","namespace detail {","","class MatcherBase {","public:","  virtual ~MatcherBase() = default;","","  // Match request path and populate its matches and","  virtual bool match(Request \u0026request) const = 0;","};","","/**"," * Captures parameters in request path and stores them in Request::path_params"," *"," * Capture name is a substring of a pattern from : to /."," * The rest of the pattern is matched against the request path directly"," * Parameters are captured starting from the next character after"," * the end of the last matched static pattern fragment until the next /."," *"," * Example pattern:"," * \"/path/fragments/:capture/more/fragments/:second_capture\""," * Static fragments:"," * \"/path/fragments/\", \"more/fragments/\""," *"," * Given the following request path:"," * \"/path/fragments/:1/more/fragments/:2\""," * the resulting capture will be"," * {{\"capture\", \"1\"}, {\"second_capture\", \"2\"}}"," */","class PathParamsMatcher final : public MatcherBase {","public:","  PathParamsMatcher(const std::string \u0026pattern);","","  bool match(Request \u0026request) const override;","","private:","  // Treat segment separators as the end of path parameter capture","  // Does not need to handle query parameters as they are parsed before path","  // matching","  static constexpr char separator = '/';","","  // Contains static path fragments to match against, excluding the '/' after","  // path params","  // Fragments are separated by path params","  std::vector\u003cstd::string\u003e static_fragments_;","  // Stores the names of the path parameters to be used as keys in the","  // Request::path_params map","  std::vector\u003cstd::string\u003e param_names_;","};","","/**"," * Performs std::regex_match on request path"," * and stores the result in Request::matches"," *"," * Note that regex match is performed directly on the whole request."," * This means that wildcard patterns may match multiple path segments with /:"," * \"/begin/(.*)/end\" will match both \"/begin/middle/end\" and \"/begin/1/2/end\"."," */","class RegexMatcher final : public MatcherBase {","public:","  RegexMatcher(const std::string \u0026pattern) : regex_(pattern) {}","","  bool match(Request \u0026request) const override;","","private:","  std::regex regex_;","};","","ssize_t write_headers(Stream \u0026strm, const Headers \u0026headers);","","} // namespace detail","","class Server {","public:","  using Handler = std::function\u003cvoid(const Request \u0026, Response \u0026)\u003e;","","  using ExceptionHandler =","      std::function\u003cvoid(const Request \u0026, Response \u0026, std::exception_ptr ep)\u003e;","","  enum class HandlerResponse {","    Handled,","    Unhandled,","  };","  using HandlerWithResponse =","      std::function\u003cHandlerResponse(const Request \u0026, Response \u0026)\u003e;","","  using HandlerWithContentReader = std::function\u003cvoid(","      const Request \u0026, Response \u0026, const ContentReader \u0026content_reader)\u003e;","","  using Expect100ContinueHandler =","      std::function\u003cint(const Request \u0026, Response \u0026)\u003e;","","  Server();","","  virtual ~Server();","","  virtual bool is_valid() const;","","  Server \u0026Get(const std::string \u0026pattern, Handler handler);","  Server \u0026Post(const std::string \u0026pattern, Handler handler);","  Server \u0026Post(const std::string \u0026pattern, HandlerWithContentReader handler);","  Server \u0026Put(const std::string \u0026pattern, Handler handler);","  Server \u0026Put(const std::string \u0026pattern, HandlerWithContentReader handler);","  Server \u0026Patch(const std::string \u0026pattern, Handler handler);","  Server \u0026Patch(const std::string \u0026pattern, HandlerWithContentReader handler);","  Server \u0026Delete(const std::string \u0026pattern, Handler handler);","  Server \u0026Delete(const std::string \u0026pattern, HandlerWithContentReader handler);","  Server \u0026Options(const std::string \u0026pattern, Handler handler);","","  bool set_base_dir(const std::string \u0026dir,","                    const std::string \u0026mount_point = std::string());","  bool set_mount_point(const std::string \u0026mount_point, const std::string \u0026dir,","                       Headers headers = Headers());","  bool remove_mount_point(const std::string \u0026mount_point);","  Server \u0026set_file_extension_and_mimetype_mapping(const std::string \u0026ext,","                                                  const std::string \u0026mime);","  Server \u0026set_default_file_mimetype(const std::string \u0026mime);","  Server \u0026set_file_request_handler(Handler handler);","","  template \u003cclass ErrorHandlerFunc\u003e","  Server \u0026set_error_handler(ErrorHandlerFunc \u0026\u0026handler) {","    return set_error_handler_core(","        std::forward\u003cErrorHandlerFunc\u003e(handler),","        std::is_convertible\u003cErrorHandlerFunc, HandlerWithResponse\u003e{});","  }","","  Server \u0026set_exception_handler(ExceptionHandler handler);","  Server \u0026set_pre_routing_handler(HandlerWithResponse handler);","  Server \u0026set_post_routing_handler(Handler handler);","","  Server \u0026set_expect_100_continue_handler(Expect100ContinueHandler handler);","  Server \u0026set_logger(Logger logger);","","  Server \u0026set_address_family(int family);","  Server \u0026set_tcp_nodelay(bool on);","  Server \u0026set_ipv6_v6only(bool on);","  Server \u0026set_socket_options(SocketOptions socket_options);","","  Server \u0026set_default_headers(Headers headers);","  Server \u0026","  set_header_writer(std::function\u003cssize_t(Stream \u0026, Headers \u0026)\u003e const \u0026writer);","","  Server \u0026set_keep_alive_max_count(size_t count);","  Server \u0026set_keep_alive_timeout(time_t sec);","","  Server \u0026set_read_timeout(time_t sec, time_t usec = 0);","  template \u003cclass Rep, class Period\u003e","  Server \u0026set_read_timeout(const std::chrono::duration\u003cRep, Period\u003e \u0026duration);","","  Server \u0026set_write_timeout(time_t sec, time_t usec = 0);","  template \u003cclass Rep, class Period\u003e","  Server \u0026set_write_timeout(const std::chrono::duration\u003cRep, Period\u003e \u0026duration);","","  Server \u0026set_idle_interval(time_t sec, time_t usec = 0);","  template \u003cclass Rep, class Period\u003e","  Server \u0026set_idle_interval(const std::chrono::duration\u003cRep, Period\u003e \u0026duration);","","  Server \u0026set_payload_max_length(size_t length);","","  bool bind_to_port(const std::string \u0026host, int port, int socket_flags = 0);","  int bind_to_any_port(const std::string \u0026host, int socket_flags = 0);","  bool listen_after_bind();","","  bool listen(const std::string \u0026host, int port, int socket_flags = 0);","","  bool is_running() const;","  void wait_until_ready() const;","  void stop();","  void decommission();","","  std::function\u003cTaskQueue *(void)\u003e new_task_queue;","","protected:","  bool process_request(Stream \u0026strm, const std::string \u0026remote_addr,","                       int remote_port, const std::string \u0026local_addr,","                       int local_port, bool close_connection,","                       bool \u0026connection_closed,","                       const std::function\u003cvoid(Request \u0026)\u003e \u0026setup_request);","","  std::atomic\u003csocket_t\u003e svr_sock_{INVALID_SOCKET};","  size_t keep_alive_max_count_ = CPPHTTPLIB_KEEPALIVE_MAX_COUNT;","  time_t keep_alive_timeout_sec_ = CPPHTTPLIB_KEEPALIVE_TIMEOUT_SECOND;","  time_t read_timeout_sec_ = CPPHTTPLIB_SERVER_READ_TIMEOUT_SECOND;","  time_t read_timeout_usec_ = CPPHTTPLIB_SERVER_READ_TIMEOUT_USECOND;","  time_t write_timeout_sec_ = CPPHTTPLIB_SERVER_WRITE_TIMEOUT_SECOND;","  time_t write_timeout_usec_ = CPPHTTPLIB_SERVER_WRITE_TIMEOUT_USECOND;","  time_t idle_interval_sec_ = CPPHTTPLIB_IDLE_INTERVAL_SECOND;","  time_t idle_interval_usec_ = CPPHTTPLIB_IDLE_INTERVAL_USECOND;","  size_t payload_max_length_ = CPPHTTPLIB_PAYLOAD_MAX_LENGTH;","","private:","  using Handlers =","      std::vector\u003cstd::pair\u003cstd::unique_ptr\u003cdetail::MatcherBase\u003e, Handler\u003e\u003e;","  using HandlersForContentReader =","      std::vector\u003cstd::pair\u003cstd::unique_ptr\u003cdetail::MatcherBase\u003e,","                            HandlerWithContentReader\u003e\u003e;","","  static std::unique_ptr\u003cdetail::MatcherBase\u003e","  make_matcher(const std::string \u0026pattern);","","  Server \u0026set_error_handler_core(HandlerWithResponse handler, std::true_type);","  Server \u0026set_error_handler_core(Handler handler, std::false_type);","","  socket_t create_server_socket(const std::string \u0026host, int port,","                                int socket_flags,","                                SocketOptions socket_options) const;","  int bind_internal(const std::string \u0026host, int port, int socket_flags);","  bool listen_internal();","","  bool routing(Request \u0026req, Response \u0026res, Stream \u0026strm);","  bool handle_file_request(const Request \u0026req, Response \u0026res);","  bool dispatch_request(Request \u0026req, Response \u0026res,","                        const Handlers \u0026handlers) const;","  bool dispatch_request_for_content_reader(","      Request \u0026req, Response \u0026res, ContentReader content_reader,","      const HandlersForContentReader \u0026handlers) const;","","  bool parse_request_line(const char *s, Request \u0026req) const;","  void apply_ranges(const Request \u0026req, Response \u0026res,","                    std::string \u0026content_type, std::string \u0026boundary) const;","  bool write_response(Stream \u0026strm, bool close_connection, Request \u0026req,","                      Response \u0026res);","  bool write_response_with_content(Stream \u0026strm, bool close_connection,","                                   const Request \u0026req, Response \u0026res);","  bool write_response_core(Stream \u0026strm, bool close_connection,","                           const Request \u0026req, Response \u0026res,","                           bool need_apply_ranges);","  bool write_content_with_provider(Stream \u0026strm, const Request \u0026req,","                                   Response \u0026res, const std::string \u0026boundary,","                                   const std::string \u0026content_type);","  bool read_content(Stream \u0026strm, Request \u0026req, Response \u0026res);","  bool","  read_content_with_content_receiver(Stream \u0026strm, Request \u0026req, Response \u0026res,","                                     ContentReceiver receiver,","                                     MultipartContentHeader multipart_header,","                                     ContentReceiver multipart_receiver);","  bool read_content_core(Stream \u0026strm, Request \u0026req, Response \u0026res,","                         ContentReceiver receiver,","                         MultipartContentHeader multipart_header,","                         ContentReceiver multipart_receiver) const;","","  virtual bool process_and_close_socket(socket_t sock);","","  std::atomic\u003cbool\u003e is_running_{false};","  std::atomic\u003cbool\u003e is_decommissioned{false};","","  struct MountPointEntry {","    std::string mount_point;","    std::string base_dir;","    Headers headers;","  };","  std::vector\u003cMountPointEntry\u003e base_dirs_;","  std::map\u003cstd::string, std::string\u003e file_extension_and_mimetype_map_;","  std::string default_file_mimetype_ = \"application/octet-stream\";","  Handler file_request_handler_;","","  Handlers get_handlers_;","  Handlers post_handlers_;","  HandlersForContentReader post_handlers_for_content_reader_;","  Handlers put_handlers_;","  HandlersForContentReader put_handlers_for_content_reader_;","  Handlers patch_handlers_;","  HandlersForContentReader patch_handlers_for_content_reader_;","  Handlers delete_handlers_;","  HandlersForContentReader delete_handlers_for_content_reader_;","  Handlers options_handlers_;","","  HandlerWithResponse error_handler_;","  ExceptionHandler exception_handler_;","  HandlerWithResponse pre_routing_handler_;","  Handler post_routing_handler_;","  Expect100ContinueHandler expect_100_continue_handler_;","","  Logger logger_;","","  int address_family_ = AF_UNSPEC;","  bool tcp_nodelay_ = CPPHTTPLIB_TCP_NODELAY;","  bool ipv6_v6only_ = CPPHTTPLIB_IPV6_V6ONLY;","  SocketOptions socket_options_ = default_socket_options;","","  Headers default_headers_;","  std::function\u003cssize_t(Stream \u0026, Headers \u0026)\u003e header_writer_ =","      detail::write_headers;","};","","enum class Error {","  Success = 0,","  Unknown,","  Connection,","  BindIPAddress,","  Read,","  Write,","  ExceedRedirectCount,","  Canceled,","  SSLConnection,","  SSLLoadingCerts,","  SSLServerVerification,","  SSLServerHostnameVerification,","  UnsupportedMultipartBoundaryChars,","  Compression,","  ConnectionTimeout,","  ProxyConnection,","","  // For internal use only","  SSLPeerCouldBeClosed_,","};","","std::string to_string(Error error);","","std::ostream \u0026operator\u003c\u003c(std::ostream \u0026os, const Error \u0026obj);","","class Result {","public:","  Result() = default;","  Result(std::unique_ptr\u003cResponse\u003e \u0026\u0026res, Error err,","         Headers \u0026\u0026request_headers = Headers{})","      : res_(std::move(res)), err_(err),","        request_headers_(std::move(request_headers)) {}","  // Response","  operator bool() const { return res_ != nullptr; }","  bool operator==(std::nullptr_t) const { return res_ == nullptr; }","  bool operator!=(std::nullptr_t) const { return res_ != nullptr; }","  const Response \u0026value() const { return *res_; }","  Response \u0026value() { return *res_; }","  const Response \u0026operator*() const { return *res_; }","  Response \u0026operator*() { return *res_; }","  const Response *operator-\u003e() const { return res_.get(); }","  Response *operator-\u003e() { return res_.get(); }","","  // Error","  Error error() const { return err_; }","","  // Request Headers","  bool has_request_header(const std::string \u0026key) const;","  std::string get_request_header_value(const std::string \u0026key,","                                       const char *def = \"\",","                                       size_t id = 0) const;","  uint64_t get_request_header_value_u64(const std::string \u0026key,","                                        uint64_t def = 0, size_t id = 0) const;","  size_t get_request_header_value_count(const std::string \u0026key) const;","","private:","  std::unique_ptr\u003cResponse\u003e res_;","  Error err_ = Error::Unknown;","  Headers request_headers_;","};","","class ClientImpl {","public:","  explicit ClientImpl(const std::string \u0026host);","","  explicit ClientImpl(const std::string \u0026host, int port);","","  explicit ClientImpl(const std::string \u0026host, int port,","                      const std::string \u0026client_cert_path,","                      const std::string \u0026client_key_path);","","  virtual ~ClientImpl();","","  virtual bool is_valid() const;","","  Result Get(const std::string \u0026path);","  Result Get(const std::string \u0026path, const Headers \u0026headers);","  Result Get(const std::string \u0026path, Progress progress);","  Result Get(const std::string \u0026path, const Headers \u0026headers,","             Progress progress);","  Result Get(const std::string \u0026path, ContentReceiver content_receiver);","  Result Get(const std::string \u0026path, const Headers \u0026headers,","             ContentReceiver content_receiver);","  Result Get(const std::string \u0026path, ContentReceiver content_receiver,","             Progress progress);","  Result Get(const std::string \u0026path, const Headers \u0026headers,","             ContentReceiver content_receiver, Progress progress);","  Result Get(const std::string \u0026path, ResponseHandler response_handler,","             ContentReceiver content_receiver);","  Result Get(const std::string \u0026path, const Headers \u0026headers,","             ResponseHandler response_handler,","             ContentReceiver content_receiver);","  Result Get(const std::string \u0026path, ResponseHandler response_handler,","             ContentReceiver content_receiver, Progress progress);","  Result Get(const std::string \u0026path, const Headers \u0026headers,","             ResponseHandler response_handler, ContentReceiver content_receiver,","             Progress progress);","","  Result Get(const std::string \u0026path, const Params \u0026params,","             const Headers \u0026headers, Progress progress = nullptr);","  Result Get(const std::string \u0026path, const Params \u0026params,","             const Headers \u0026headers, ContentReceiver content_receiver,","             Progress progress = nullptr);","  Result Get(const std::string \u0026path, const Params \u0026params,","             const Headers \u0026headers, ResponseHandler response_handler,","             ContentReceiver content_receiver, Progress progress = nullptr);","","  Result Head(const std::string \u0026path);","  Result Head(const std::string \u0026path, const Headers \u0026headers);","","  Result Post(const std::string \u0026path);","  Result Post(const std::string \u0026path, const Headers \u0026headers);","  Result Post(const std::string \u0026path, const char *body, size_t content_length,","              const std::string \u0026content_type);","  Result Post(const std::string \u0026path, const Headers \u0026headers, const char *body,","              size_t content_length, const std::string \u0026content_type);","  Result Post(const std::string \u0026path, const Headers \u0026headers, const char *body,","              size_t content_length, const std::string \u0026content_type,","              Progress progress);","  Result Post(const std::string \u0026path, const std::string \u0026body,","              const std::string \u0026content_type);","  Result Post(const std::string \u0026path, const std::string \u0026body,","              const std::string \u0026content_type, Progress progress);","  Result Post(const std::string \u0026path, const Headers \u0026headers,","              const std::string \u0026body, const std::string \u0026content_type);","  Result Post(const std::string \u0026path, const Headers \u0026headers,","              const std::string \u0026body, const std::string \u0026content_type,","              Progress progress);","  Result Post(const std::string \u0026path, size_t content_length,","              ContentProvider content_provider,","              const std::string \u0026content_type);","  Result Post(const std::string \u0026path,","              ContentProviderWithoutLength content_provider,","              const std::string \u0026content_type);","  Result Post(const std::string \u0026path, const Headers \u0026headers,","              size_t content_length, ContentProvider content_provider,","              const std::string \u0026content_type);","  Result Post(const std::string \u0026path, const Headers \u0026headers,","              ContentProviderWithoutLength content_provider,","              const std::string \u0026content_type);","  Result Post(const std::string \u0026path, const Params \u0026params);","  Result Post(const std::string \u0026path, const Headers \u0026headers,","              const Params \u0026params);","  Result Post(const std::string \u0026path, const Headers \u0026headers,","              const Params \u0026params, Progress progress);","  Result Post(const std::string \u0026path, const MultipartFormDataItems \u0026items);","  Result Post(const std::string \u0026path, const Headers \u0026headers,","              const MultipartFormDataItems \u0026items);","  Result Post(const std::string \u0026path, const Headers \u0026headers,","              const MultipartFormDataItems \u0026items, const std::string \u0026boundary);","  Result Post(const std::string \u0026path, const Headers \u0026headers,","              const MultipartFormDataItems \u0026items,","              const MultipartFormDataProviderItems \u0026provider_items);","","  Result Put(const std::string \u0026path);","  Result Put(const std::string \u0026path, const char *body, size_t content_length,","             const std::string \u0026content_type);","  Result Put(const std::string \u0026path, const Headers \u0026headers, const char *body,","             size_t content_length, const std::string \u0026content_type);","  Result Put(const std::string \u0026path, const Headers \u0026headers, const char *body,","             size_t content_length, const std::string \u0026content_type,","             Progress progress);","  Result Put(const std::string \u0026path, const std::string \u0026body,","             const std::string \u0026content_type);","  Result Put(const std::string \u0026path, const std::string \u0026body,","             const std::string \u0026content_type, Progress progress);","  Result Put(const std::string \u0026path, const Headers \u0026headers,","             const std::string \u0026body, const std::string \u0026content_type);","  Result Put(const std::string \u0026path, const Headers \u0026headers,","             const std::string \u0026body, const std::string \u0026content_type,","             Progress progress);","  Result Put(const std::string \u0026path, size_t content_length,","             ContentProvider content_provider, const std::string \u0026content_type);","  Result Put(const std::string \u0026path,","             ContentProviderWithoutLength content_provider,","             const std::string \u0026content_type);","  Result Put(const std::string \u0026path, const Headers \u0026headers,","             size_t content_length, ContentProvider content_provider,","             const std::string \u0026content_type);","  Result Put(const std::string \u0026path, const Headers \u0026headers,","             ContentProviderWithoutLength content_provider,","             const std::string \u0026content_type);","  Result Put(const std::string \u0026path, const Params \u0026params);","  Result Put(const std::string \u0026path, const Headers \u0026headers,","             const Params \u0026params);","  Result Put(const std::string \u0026path, const Headers \u0026headers,","             const Params \u0026params, Progress progress);","  Result Put(const std::string \u0026path, const MultipartFormDataItems \u0026items);","  Result Put(const std::string \u0026path, const Headers \u0026headers,","             const MultipartFormDataItems \u0026items);","  Result Put(const std::string \u0026path, const Headers \u0026headers,","             const MultipartFormDataItems \u0026items, const std::string \u0026boundary);","  Result Put(const std::string \u0026path, const Headers \u0026headers,","             const MultipartFormDataItems \u0026items,","             const MultipartFormDataProviderItems \u0026provider_items);","","  Result Patch(const std::string \u0026path);","  Result Patch(const std::string \u0026path, const char *body, size_t content_length,","               const std::string \u0026content_type);","  Result Patch(const std::string \u0026path, const char *body, size_t content_length,","               const std::string \u0026content_type, Progress progress);","  Result Patch(const std::string \u0026path, const Headers \u0026headers,","               const char *body, size_t content_length,","               const std::string \u0026content_type);","  Result Patch(const std::string \u0026path, const Headers \u0026headers,","               const char *body, size_t content_length,","               const std::string \u0026content_type, Progress progress);","  Result Patch(const std::string \u0026path, const std::string \u0026body,","               const std::string \u0026content_type);","  Result Patch(const std::string \u0026path, const std::string \u0026body,","               const std::string \u0026content_type, Progress progress);","  Result Patch(const std::string \u0026path, const Headers \u0026headers,","               const std::string \u0026body, const std::string \u0026content_type);","  Result Patch(const std::string \u0026path, const Headers \u0026headers,","               const std::string \u0026body, const std::string \u0026content_type,","               Progress progress);","  Result Patch(const std::string \u0026path, size_t content_length,","               ContentProvider content_provider,","               const std::string \u0026content_type);","  Result Patch(const std::string \u0026path,","               ContentProviderWithoutLength content_provider,","               const std::string \u0026content_type);","  Result Patch(const std::string \u0026path, const Headers \u0026headers,","               size_t content_length, ContentProvider content_provider,","               const std::string \u0026content_type);","  Result Patch(const std::string \u0026path, const Headers \u0026headers,","               ContentProviderWithoutLength content_provider,","               const std::string \u0026content_type);","","  Result Delete(const std::string \u0026path);","  Result Delete(const std::string \u0026path, const Headers \u0026headers);","  Result Delete(const std::string \u0026path, const char *body,","                size_t content_length, const std::string \u0026content_type);","  Result Delete(const std::string \u0026path, const char *body,","                size_t content_length, const std::string \u0026content_type,","                Progress progress);","  Result Delete(const std::string \u0026path, const Headers \u0026headers,","                const char *body, size_t content_length,","                const std::string \u0026content_type);","  Result Delete(const std::string \u0026path, const Headers \u0026headers,","                const char *body, size_t content_length,","                const std::string \u0026content_type, Progress progress);","  Result Delete(const std::string \u0026path, const std::string \u0026body,","                const std::string \u0026content_type);","  Result Delete(const std::string \u0026path, const std::string \u0026body,","                const std::string \u0026content_type, Progress progress);","  Result Delete(const std::string \u0026path, const Headers \u0026headers,","                const std::string \u0026body, const std::string \u0026content_type);","  Result Delete(const std::string \u0026path, const Headers \u0026headers,","                const std::string \u0026body, const std::string \u0026content_type,","                Progress progress);","","  Result Options(const std::string \u0026path);","  Result Options(const std::string \u0026path, const Headers \u0026headers);","","  bool send(Request \u0026req, Response \u0026res, Error \u0026error);","  Result send(const Request \u0026req);","","  void stop();","","  std::string host() const;","  int port() const;","","  size_t is_socket_open() const;","  socket_t socket() const;","","  void set_hostname_addr_map(std::map\u003cstd::string, std::string\u003e addr_map);","","  void set_default_headers(Headers headers);","","  void","  set_header_writer(std::function\u003cssize_t(Stream \u0026, Headers \u0026)\u003e const \u0026writer);","","  void set_address_family(int family);","  void set_tcp_nodelay(bool on);","  void set_ipv6_v6only(bool on);","  void set_socket_options(SocketOptions socket_options);","","  void set_connection_timeout(time_t sec, time_t usec = 0);","  template \u003cclass Rep, class Period\u003e","  void","  set_connection_timeout(const std::chrono::duration\u003cRep, Period\u003e \u0026duration);","","  void set_read_timeout(time_t sec, time_t usec = 0);","  template \u003cclass Rep, class Period\u003e","  void set_read_timeout(const std::chrono::duration\u003cRep, Period\u003e \u0026duration);","","  void set_write_timeout(time_t sec, time_t usec = 0);","  template \u003cclass Rep, class Period\u003e","  void set_write_timeout(const std::chrono::duration\u003cRep, Period\u003e \u0026duration);","","  void set_max_timeout(time_t msec);","  template \u003cclass Rep, class Period\u003e","  void set_max_timeout(const std::chrono::duration\u003cRep, Period\u003e \u0026duration);","","  void set_basic_auth(const std::string \u0026username, const std::string \u0026password);","  void set_bearer_token_auth(const std::string \u0026token);","#ifdef CPPHTTPLIB_OPENSSL_SUPPORT","  void set_digest_auth(const std::string \u0026username,","                       const std::string \u0026password);","#endif","","  void set_keep_alive(bool on);","  void set_follow_location(bool on);","","  void set_url_encode(bool on);","","  void set_compress(bool on);","","  void set_decompress(bool on);","","  void set_interface(const std::string \u0026intf);","","  void set_proxy(const std::string \u0026host, int port);","  void set_proxy_basic_auth(const std::string \u0026username,","                            const std::string \u0026password);","  void set_proxy_bearer_token_auth(const std::string \u0026token);","#ifdef CPPHTTPLIB_OPENSSL_SUPPORT","  void set_proxy_digest_auth(const std::string \u0026username,","                             const std::string \u0026password);","#endif","","#ifdef CPPHTTPLIB_OPENSSL_SUPPORT","  void set_ca_cert_path(const std::string \u0026ca_cert_file_path,","                        const std::string \u0026ca_cert_dir_path = std::string());","  void set_ca_cert_store(X509_STORE *ca_cert_store);","  X509_STORE *create_ca_cert_store(const char *ca_cert, std::size_t size) const;","#endif","","#ifdef CPPHTTPLIB_OPENSSL_SUPPORT","  void enable_server_certificate_verification(bool enabled);","  void enable_server_hostname_verification(bool enabled);","  void set_server_certificate_verifier(","      std::function\u003cSSLVerifierResponse(SSL *ssl)\u003e verifier);","#endif","","  void set_logger(Logger logger);","","protected:","  struct Socket {","    socket_t sock = INVALID_SOCKET;","#ifdef CPPHTTPLIB_OPENSSL_SUPPORT","    SSL *ssl = nullptr;","#endif","","    bool is_open() const { return sock != INVALID_SOCKET; }","  };","","  virtual bool create_and_connect_socket(Socket \u0026socket, Error \u0026error);","","  // All of:","  //   shutdown_ssl","  //   shutdown_socket","  //   close_socket","  // should ONLY be called when socket_mutex_ is locked.","  // Also, shutdown_ssl and close_socket should also NOT be called concurrently","  // with a DIFFERENT thread sending requests using that socket.","  virtual void shutdown_ssl(Socket \u0026socket, bool shutdown_gracefully);","  void shutdown_socket(Socket \u0026socket) const;","  void close_socket(Socket \u0026socket);","","  bool process_request(Stream \u0026strm, Request \u0026req, Response \u0026res,","                       bool close_connection, Error \u0026error);","","  bool write_content_with_provider(Stream \u0026strm, const Request \u0026req,","                                   Error \u0026error) const;","","  void copy_settings(const ClientImpl \u0026rhs);","","  // Socket endpoint information","  const std::string host_;","  const int port_;","  const std::string host_and_port_;","","  // Current open socket","  Socket socket_;","  mutable std::mutex socket_mutex_;","  std::recursive_mutex request_mutex_;","","  // These are all protected under socket_mutex","  size_t socket_requests_in_flight_ = 0;","  std::thread::id socket_requests_are_from_thread_ = std::thread::id();","  bool socket_should_be_closed_when_request_is_done_ = false;","","  // Hostname-IP map","  std::map\u003cstd::string, std::string\u003e addr_map_;","","  // Default headers","  Headers default_headers_;","","  // Header writer","  std::function\u003cssize_t(Stream \u0026, Headers \u0026)\u003e header_writer_ =","      detail::write_headers;","","  // Settings","  std::string client_cert_path_;","  std::string client_key_path_;","","  time_t connection_timeout_sec_ = CPPHTTPLIB_CONNECTION_TIMEOUT_SECOND;","  time_t connection_timeout_usec_ = CPPHTTPLIB_CONNECTION_TIMEOUT_USECOND;","  time_t read_timeout_sec_ = CPPHTTPLIB_CLIENT_READ_TIMEOUT_SECOND;","  time_t read_timeout_usec_ = CPPHTTPLIB_CLIENT_READ_TIMEOUT_USECOND;","  time_t write_timeout_sec_ = CPPHTTPLIB_CLIENT_WRITE_TIMEOUT_SECOND;","  time_t write_timeout_usec_ = CPPHTTPLIB_CLIENT_WRITE_TIMEOUT_USECOND;","  time_t max_timeout_msec_ = CPPHTTPLIB_CLIENT_MAX_TIMEOUT_MSECOND;","","  std::string basic_auth_username_;","  std::string basic_auth_password_;","  std::string bearer_token_auth_token_;","#ifdef CPPHTTPLIB_OPENSSL_SUPPORT","  std::string digest_auth_username_;","  std::string digest_auth_password_;","#endif","","  bool keep_alive_ = false;","  bool follow_location_ = false;","","  bool url_encode_ = true;","","  int address_family_ = AF_UNSPEC;","  bool tcp_nodelay_ = CPPHTTPLIB_TCP_NODELAY;","  bool ipv6_v6only_ = CPPHTTPLIB_IPV6_V6ONLY;","  SocketOptions socket_options_ = nullptr;","","  bool compress_ = false;","  bool decompress_ = true;","","  std::string interface_;","","  std::string proxy_host_;","  int proxy_port_ = -1;","","  std::string proxy_basic_auth_username_;","  std::string proxy_basic_auth_password_;","  std::string proxy_bearer_token_auth_token_;","#ifdef CPPHTTPLIB_OPENSSL_SUPPORT","  std::string proxy_digest_auth_username_;","  std::string proxy_digest_auth_password_;","#endif","","#ifdef CPPHTTPLIB_OPENSSL_SUPPORT","  std::string ca_cert_file_path_;","  std::string ca_cert_dir_path_;","","  X509_STORE *ca_cert_store_ = nullptr;","#endif","","#ifdef CPPHTTPLIB_OPENSSL_SUPPORT","  bool server_certificate_verification_ = true;","  bool server_hostname_verification_ = true;","  std::function\u003cSSLVerifierResponse(SSL *ssl)\u003e server_certificate_verifier_;","#endif","","  Logger logger_;","","private:","  bool send_(Request \u0026req, Response \u0026res, Error \u0026error);","  Result send_(Request \u0026\u0026req);","","  socket_t create_client_socket(Error \u0026error) const;","  bool read_response_line(Stream \u0026strm, const Request \u0026req,","                          Response \u0026res) const;","  bool write_request(Stream \u0026strm, Request \u0026req, bool close_connection,","                     Error \u0026error);","  bool redirect(Request \u0026req, Response \u0026res, Error \u0026error);","  bool handle_request(Stream \u0026strm, Request \u0026req, Response \u0026res,","                      bool close_connection, Error \u0026error);","  std::unique_ptr\u003cResponse\u003e send_with_content_provider(","      Request \u0026req, const char *body, size_t content_length,","      ContentProvider content_provider,","      ContentProviderWithoutLength content_provider_without_length,","      const std::string \u0026content_type, Error \u0026error);","  Result send_with_content_provider(","      const std::string \u0026method, const std::string \u0026path,","      const Headers \u0026headers, const char *body, size_t content_length,","      ContentProvider content_provider,","      ContentProviderWithoutLength content_provider_without_length,","      const std::string \u0026content_type, Progress progress);","  ContentProviderWithoutLength get_multipart_content_provider(","      const std::string \u0026boundary, const MultipartFormDataItems \u0026items,","      const MultipartFormDataProviderItems \u0026provider_items) const;","","  std::string adjust_host_string(const std::string \u0026host) const;","","  virtual bool","  process_socket(const Socket \u0026socket,","                 std::chrono::time_point\u003cstd::chrono::steady_clock\u003e start_time,","                 std::function\u003cbool(Stream \u0026strm)\u003e callback);","  virtual bool is_ssl() const;","};","","class Client {","public:","  // Universal interface","  explicit Client(const std::string \u0026scheme_host_port);","","  explicit Client(const std::string \u0026scheme_host_port,","                  const std::string \u0026client_cert_path,","                  const std::string \u0026client_key_path);","","  // HTTP only interface","  explicit Client(const std::string \u0026host, int port);","","  explicit Client(const std::string \u0026host, int port,","                  const std::string \u0026client_cert_path,","                  const std::string \u0026client_key_path);","","  Client(Client \u0026\u0026) = default;","  Client \u0026operator=(Client \u0026\u0026) = default;","","  ~Client();","","  bool is_valid() const;","","  Result Get(const std::string \u0026path);","  Result Get(const std::string \u0026path, const Headers \u0026headers);","  Result Get(const std::string \u0026path, Progress progress);","  Result Get(const std::string \u0026path, const Headers \u0026headers,","             Progress progress);","  Result Get(const std::string \u0026path, ContentReceiver content_receiver);","  Result Get(const std::string \u0026path, const Headers \u0026headers,","             ContentReceiver content_receiver);","  Result Get(const std::string \u0026path, ContentReceiver content_receiver,","             Progress progress);","  Result Get(const std::string \u0026path, const Headers \u0026headers,","             ContentReceiver content_receiver, Progress progress);","  Result Get(const std::string \u0026path, ResponseHandler response_handler,","             ContentReceiver content_receiver);","  Result Get(const std::string \u0026path, const Headers \u0026headers,","             ResponseHandler response_handler,","             ContentReceiver content_receiver);","  Result Get(const std::string \u0026path, const Headers \u0026headers,","             ResponseHandler response_handler, ContentReceiver content_receiver,","             Progress progress);","  Result Get(const std::string \u0026path, ResponseHandler response_handler,","             ContentReceiver content_receiver, Progress progress);","","  Result Get(const std::string \u0026path, const Params \u0026params,","             const Headers \u0026headers, Progress progress = nullptr);","  Result Get(const std::string \u0026path, const Params \u0026params,","             const Headers \u0026headers, ContentReceiver content_receiver,","             Progress progress = nullptr);","  Result Get(const std::string \u0026path, const Params \u0026params,","             const Headers \u0026headers, ResponseHandler response_handler,","             ContentReceiver content_receiver, Progress progress = nullptr);","","  Result Head(const std::string \u0026path);","  Result Head(const std::string \u0026path, const Headers \u0026headers);","","  Result Post(const std::string \u0026path);","  Result Post(const std::string \u0026path, const Headers \u0026headers);","  Result Post(const std::string \u0026path, const char *body, size_t content_length,","              const std::string \u0026content_type);","  Result Post(const std::string \u0026path, const Headers \u0026headers, const char *body,","              size_t content_length, const std::string \u0026content_type);","  Result Post(const std::string \u0026path, const Headers \u0026headers, const char *body,","              size_t content_length, const std::string \u0026content_type,","              Progress progress);","  Result Post(const std::string \u0026path, const std::string \u0026body,","              const std::string \u0026content_type);","  Result Post(const std::string \u0026path, const std::string \u0026body,","              const std::string \u0026content_type, Progress progress);","  Result Post(const std::string \u0026path, const Headers \u0026headers,","              const std::string \u0026body, const std::string \u0026content_type);","  Result Post(const std::string \u0026path, const Headers \u0026headers,","              const std::string \u0026body, const std::string \u0026content_type,","              Progress progress);","  Result Post(const std::string \u0026path, size_t content_length,","              ContentProvider content_provider,","              const std::string \u0026content_type);","  Result Post(const std::string \u0026path,","              ContentProviderWithoutLength content_provider,","              const std::string \u0026content_type);","  Result Post(const std::string \u0026path, const Headers \u0026headers,","              size_t content_length, ContentProvider content_provider,","              const std::string \u0026content_type);","  Result Post(const std::string \u0026path, const Headers \u0026headers,","              ContentProviderWithoutLength content_provider,","              const std::string \u0026content_type);","  Result Post(const std::string \u0026path, const Params \u0026params);","  Result Post(const std::string \u0026path, const Headers \u0026headers,","              const Params \u0026params);","  Result Post(const std::string \u0026path, const Headers \u0026headers,","              const Params \u0026params, Progress progress);","  Result Post(const std::string \u0026path, const MultipartFormDataItems \u0026items);","  Result Post(const std::string \u0026path, const Headers \u0026headers,","              const MultipartFormDataItems \u0026items);","  Result Post(const std::string \u0026path, const Headers \u0026headers,","              const MultipartFormDataItems \u0026items, const std::string \u0026boundary);","  Result Post(const std::string \u0026path, const Headers \u0026headers,","              const MultipartFormDataItems \u0026items,","              const MultipartFormDataProviderItems \u0026provider_items);","","  Result Put(const std::string \u0026path);","  Result Put(const std::string \u0026path, const char *body, size_t content_length,","             const std::string \u0026content_type);","  Result Put(const std::string \u0026path, const Headers \u0026headers, const char *body,","             size_t content_length, const std::string \u0026content_type);","  Result Put(const std::string \u0026path, const Headers \u0026headers, const char *body,","             size_t content_length, const std::string \u0026content_type,","             Progress progress);","  Result Put(const std::string \u0026path, const std::string \u0026body,","             const std::string \u0026content_type);","  Result Put(const std::string \u0026path, const std::string \u0026body,","             const std::string \u0026content_type, Progress progress);","  Result Put(const std::string \u0026path, const Headers \u0026headers,","             const std::string \u0026body, const std::string \u0026content_type);","  Result Put(const std::string \u0026path, const Headers \u0026headers,","             const std::string \u0026body, const std::string \u0026content_type,","             Progress progress);","  Result Put(const std::string \u0026path, size_t content_length,","             ContentProvider content_provider, const std::string \u0026content_type);","  Result Put(const std::string \u0026path,","             ContentProviderWithoutLength content_provider,","             const std::string \u0026content_type);","  Result Put(const std::string \u0026path, const Headers \u0026headers,","             size_t content_length, ContentProvider content_provider,","             const std::string \u0026content_type);","  Result Put(const std::string \u0026path, const Headers \u0026headers,","             ContentProviderWithoutLength content_provider,","             const std::string \u0026content_type);","  Result Put(const std::string \u0026path, const Params \u0026params);","  Result Put(const std::string \u0026path, const Headers \u0026headers,","             const Params \u0026params);","  Result Put(const std::string \u0026path, const Headers \u0026headers,","             const Params \u0026params, Progress progress);","  Result Put(const std::string \u0026path, const MultipartFormDataItems \u0026items);","  Result Put(const std::string \u0026path, const Headers \u0026headers,","             const MultipartFormDataItems \u0026items);","  Result Put(const std::string \u0026path, const Headers \u0026headers,","             const MultipartFormDataItems \u0026items, const std::string \u0026boundary);","  Result Put(const std::string \u0026path, const Headers \u0026headers,","             const MultipartFormDataItems \u0026items,","             const MultipartFormDataProviderItems \u0026provider_items);","","  Result Patch(const std::string \u0026path);","  Result Patch(const std::string \u0026path, const char *body, size_t content_length,","               const std::string \u0026content_type);","  Result Patch(const std::string \u0026path, const char *body, size_t content_length,","               const std::string \u0026content_type, Progress progress);","  Result Patch(const std::string \u0026path, const Headers \u0026headers,","               const char *body, size_t content_length,","               const std::string \u0026content_type);","  Result Patch(const std::string \u0026path, const Headers \u0026headers,","               const char *body, size_t content_length,","               const std::string \u0026content_type, Progress progress);","  Result Patch(const std::string \u0026path, const std::string \u0026body,","               const std::string \u0026content_type);","  Result Patch(const std::string \u0026path, const std::string \u0026body,","               const std::string \u0026content_type, Progress progress);","  Result Patch(const std::string \u0026path, const Headers \u0026headers,","               const std::string \u0026body, const std::string \u0026content_type);","  Result Patch(const std::string \u0026path, const Headers \u0026headers,","               const std::string \u0026body, const std::string \u0026content_type,","               Progress progress);","  Result Patch(const std::string \u0026path, size_t content_length,","               ContentProvider content_provider,","               const std::string \u0026content_type);","  Result Patch(const std::string \u0026path,","               ContentProviderWithoutLength content_provider,","               const std::string \u0026content_type);","  Result Patch(const std::string \u0026path, const Headers \u0026headers,","               size_t content_length, ContentProvider content_provider,","               const std::string \u0026content_type);","  Result Patch(const std::string \u0026path, const Headers \u0026headers,","               ContentProviderWithoutLength content_provider,","               const std::string \u0026content_type);","","  Result Delete(const std::string \u0026path);","  Result Delete(const std::string \u0026path, const Headers \u0026headers);","  Result Delete(const std::string \u0026path, const char *body,","                size_t content_length, const std::string \u0026content_type);","  Result Delete(const std::string \u0026path, const char *body,","                size_t content_length, const std::string \u0026content_type,","                Progress progress);","  Result Delete(const std::string \u0026path, const Headers \u0026headers,","                const char *body, size_t content_length,","                const std::string \u0026content_type);","  Result Delete(const std::string \u0026path, const Headers \u0026headers,","                const char *body, size_t content_length,","                const std::string \u0026content_type, Progress progress);","  Result Delete(const std::string \u0026path, const std::string \u0026body,","                const std::string \u0026content_type);","  Result Delete(const std::string \u0026path, const std::string \u0026body,","                const std::string \u0026content_type, Progress progress);","  Result Delete(const std::string \u0026path, const Headers \u0026headers,","                const std::string \u0026body, const std::string \u0026content_type);","  Result Delete(const std::string \u0026path, const Headers \u0026headers,","                const std::string \u0026body, const std::string \u0026content_type,","                Progress progress);","","  Result Options(const std::string \u0026path);","  Result Options(const std::string \u0026path, const Headers \u0026headers);","","  bool send(Request \u0026req, Response \u0026res, Error \u0026error);","  Result send(const Request \u0026req);","","  void stop();","","  std::string host() const;","  int port() const;","","  size_t is_socket_open() const;","  socket_t socket() const;","","  void set_hostname_addr_map(std::map\u003cstd::string, std::string\u003e addr_map);","","  void set_default_headers(Headers headers);","","  void","  set_header_writer(std::function\u003cssize_t(Stream \u0026, Headers \u0026)\u003e const \u0026writer);","","  void set_address_family(int family);","  void set_tcp_nodelay(bool on);","  void set_socket_options(SocketOptions socket_options);","","  void set_connection_timeout(time_t sec, time_t usec = 0);","  template \u003cclass Rep, class Period\u003e","  void","  set_connection_timeout(const std::chrono::duration\u003cRep, Period\u003e \u0026duration);","","  void set_read_timeout(time_t sec, time_t usec = 0);","  template \u003cclass Rep, class Period\u003e","  void set_read_timeout(const std::chrono::duration\u003cRep, Period\u003e \u0026duration);","","  void set_write_timeout(time_t sec, time_t usec = 0);","  template \u003cclass Rep, class Period\u003e","  void set_write_timeout(const std::chrono::duration\u003cRep, Period\u003e \u0026duration);","","  void set_max_timeout(time_t msec);","  template \u003cclass Rep, class Period\u003e","  void set_max_timeout(const std::chrono::duration\u003cRep, Period\u003e \u0026duration);","","  void set_basic_auth(const std::string \u0026username, const std::string \u0026password);","  void set_bearer_token_auth(const std::string \u0026token);","#ifdef CPPHTTPLIB_OPENSSL_SUPPORT","  void set_digest_auth(const std::string \u0026username,","                       const std::string \u0026password);","#endif","","  void set_keep_alive(bool on);","  void set_follow_location(bool on);","","  void set_url_encode(bool on);","","  void set_compress(bool on);","","  void set_decompress(bool on);","","  void set_interface(const std::string \u0026intf);","","  void set_proxy(const std::string \u0026host, int port);","  void set_proxy_basic_auth(const std::string \u0026username,","                            const std::string \u0026password);","  void set_proxy_bearer_token_auth(const std::string \u0026token);","#ifdef CPPHTTPLIB_OPENSSL_SUPPORT","  void set_proxy_digest_auth(const std::string \u0026username,","                             const std::string \u0026password);","#endif","","#ifdef CPPHTTPLIB_OPENSSL_SUPPORT","  void enable_server_certificate_verification(bool enabled);","  void enable_server_hostname_verification(bool enabled);","  void set_server_certificate_verifier(","      std::function\u003cSSLVerifierResponse(SSL *ssl)\u003e verifier);","#endif","","  void set_logger(Logger logger);","","  // SSL","#ifdef CPPHTTPLIB_OPENSSL_SUPPORT","  void set_ca_cert_path(const std::string \u0026ca_cert_file_path,","                        const std::string \u0026ca_cert_dir_path = std::string());","","  void set_ca_cert_store(X509_STORE *ca_cert_store);","  void load_ca_cert_store(const char *ca_cert, std::size_t size);","","  long get_openssl_verify_result() const;","","  SSL_CTX *ssl_context() const;","#endif","","private:","  std::unique_ptr\u003cClientImpl\u003e cli_;","","#ifdef CPPHTTPLIB_OPENSSL_SUPPORT","  bool is_ssl_ = false;","#endif","};","","#ifdef CPPHTTPLIB_OPENSSL_SUPPORT","class SSLServer : public Server {","public:","  SSLServer(const char *cert_path, const char *private_key_path,","            const char *client_ca_cert_file_path = nullptr,","            const char *client_ca_cert_dir_path = nullptr,","            const char *private_key_password = nullptr);","","  SSLServer(X509 *cert, EVP_PKEY *private_key,","            X509_STORE *client_ca_cert_store = nullptr);","","  SSLServer(","      const std::function\u003cbool(SSL_CTX \u0026ssl_ctx)\u003e \u0026setup_ssl_ctx_callback);","","  ~SSLServer() override;","","  bool is_valid() const override;","","  SSL_CTX *ssl_context() const;","","  void update_certs(X509 *cert, EVP_PKEY *private_key,","                    X509_STORE *client_ca_cert_store = nullptr);","","private:","  bool process_and_close_socket(socket_t sock) override;","","  SSL_CTX *ctx_;","  std::mutex ctx_mutex_;","};","","class SSLClient final : public ClientImpl {","public:","  explicit SSLClient(const std::string \u0026host);","","  explicit SSLClient(const std::string \u0026host, int port);","","  explicit SSLClient(const std::string \u0026host, int port,","                     const std::string \u0026client_cert_path,","                     const std::string \u0026client_key_path,","                     const std::string \u0026private_key_password = std::string());","","  explicit SSLClient(const std::string \u0026host, int port, X509 *client_cert,","                     EVP_PKEY *client_key,","                     const std::string \u0026private_key_password = std::string());","","  ~SSLClient() override;","","  bool is_valid() const override;","","  void set_ca_cert_store(X509_STORE *ca_cert_store);","  void load_ca_cert_store(const char *ca_cert, std::size_t size);","","  long get_openssl_verify_result() const;","","  SSL_CTX *ssl_context() const;","","private:","  bool create_and_connect_socket(Socket \u0026socket, Error \u0026error) override;","  void shutdown_ssl(Socket \u0026socket, bool shutdown_gracefully) override;","  void shutdown_ssl_impl(Socket \u0026socket, bool shutdown_gracefully);","","  bool","  process_socket(const Socket \u0026socket,","                 std::chrono::time_point\u003cstd::chrono::steady_clock\u003e start_time,","                 std::function\u003cbool(Stream \u0026strm)\u003e callback) override;","  bool is_ssl() const override;","","  bool connect_with_proxy(","      Socket \u0026sock,","      std::chrono::time_point\u003cstd::chrono::steady_clock\u003e start_time,","      Response \u0026res, bool \u0026success, Error \u0026error);","  bool initialize_ssl(Socket \u0026socket, Error \u0026error);","","  bool load_certs();","","  bool verify_host(X509 *server_cert) const;","  bool verify_host_with_subject_alt_name(X509 *server_cert) const;","  bool verify_host_with_common_name(X509 *server_cert) const;","  bool check_host_name(const char *pattern, size_t pattern_len) const;","","  SSL_CTX *ctx_;","  std::mutex ctx_mutex_;","  std::once_flag initialize_cert_;","","  std::vector\u003cstd::string\u003e host_components_;","","  long verify_result_ = 0;","","  friend class ClientImpl;","};","#endif","","/*"," * Implementation of template methods."," */","","namespace detail {","","template \u003ctypename T, typename U\u003e","inline void duration_to_sec_and_usec(const T \u0026duration, U callback) {","  auto sec = std::chrono::duration_cast\u003cstd::chrono::seconds\u003e(duration).count();","  auto usec = std::chrono::duration_cast\u003cstd::chrono::microseconds\u003e(","                  duration - std::chrono::seconds(sec))","                  .count();","  callback(static_cast\u003ctime_t\u003e(sec), static_cast\u003ctime_t\u003e(usec));","}","","template \u003csize_t N\u003e inline constexpr size_t str_len(const char (\u0026)[N]) {","  return N - 1;","}","","inline bool is_numeric(const std::string \u0026str) {","  return !str.empty() \u0026\u0026","         std::all_of(str.cbegin(), str.cend(),","                     [](unsigned char c) { return std::isdigit(c); });","}","","inline uint64_t get_header_value_u64(const Headers \u0026headers,","                                     const std::string \u0026key, uint64_t def,","                                     size_t id, bool \u0026is_invalid_value) {","  is_invalid_value = false;","  auto rng = headers.equal_range(key);","  auto it = rng.first;","  std::advance(it, static_cast\u003cssize_t\u003e(id));","  if (it != rng.second) {","    if (is_numeric(it-\u003esecond)) {","      return std::strtoull(it-\u003esecond.data(), nullptr, 10);","    } else {","      is_invalid_value = true;","    }","  }","  return def;","}","","inline uint64_t get_header_value_u64(const Headers \u0026headers,","                                     const std::string \u0026key, uint64_t def,","                                     size_t id) {","  bool dummy = false;","  return get_header_value_u64(headers, key, def, id, dummy);","}","","} // namespace detail","","inline uint64_t Request::get_header_value_u64(const std::string \u0026key,","                                              uint64_t def, size_t id) const {","  return detail::get_header_value_u64(headers, key, def, id);","}","","inline uint64_t Response::get_header_value_u64(const std::string \u0026key,","                                               uint64_t def, size_t id) const {","  return detail::get_header_value_u64(headers, key, def, id);","}","","namespace detail {","","inline bool set_socket_opt_impl(socket_t sock, int level, int optname,","                                const void *optval, socklen_t optlen) {","  return setsockopt(sock, level, optname,","#ifdef _WIN32","                    reinterpret_cast\u003cconst char *\u003e(optval),","#else","                    optval,","#endif","                    optlen) == 0;","}","","inline bool set_socket_opt(socket_t sock, int level, int optname, int optval) {","  return set_socket_opt_impl(sock, level, optname, \u0026optval, sizeof(optval));","}","","inline bool set_socket_opt_time(socket_t sock, int level, int optname,","                                time_t sec, time_t usec) {","#ifdef _WIN32","  auto timeout = static_cast\u003cuint32_t\u003e(sec * 1000 + usec / 1000);","#else","  timeval timeout;","  timeout.tv_sec = static_cast\u003clong\u003e(sec);","  timeout.tv_usec = static_cast\u003cdecltype(timeout.tv_usec)\u003e(usec);","#endif","  return set_socket_opt_impl(sock, level, optname, \u0026timeout, sizeof(timeout));","}","","} // namespace detail","","inline void default_socket_options(socket_t sock) {","  detail::set_socket_opt(sock, SOL_SOCKET,","#ifdef SO_REUSEPORT","                         SO_REUSEPORT,","#else","                         SO_REUSEADDR,","#endif","                         1);","}","","inline const char *status_message(int status) {","  switch (status) {","  case StatusCode::Continue_100: return \"Continue\";","  case StatusCode::SwitchingProtocol_101: return \"Switching Protocol\";","  case StatusCode::Processing_102: return \"Processing\";","  case StatusCode::EarlyHints_103: return \"Early Hints\";","  case StatusCode::OK_200: return \"OK\";","  case StatusCode::Created_201: return \"Created\";","  case StatusCode::Accepted_202: return \"Accepted\";","  case StatusCode::NonAuthoritativeInformation_203:","    return \"Non-Authoritative Information\";","  case StatusCode::NoContent_204: return \"No Content\";","  case StatusCode::ResetContent_205: return \"Reset Content\";","  case StatusCode::PartialContent_206: return \"Partial Content\";","  case StatusCode::MultiStatus_207: return \"Multi-Status\";","  case StatusCode::AlreadyReported_208: return \"Already Reported\";","  case StatusCode::IMUsed_226: return \"IM Used\";","  case StatusCode::MultipleChoices_300: return \"Multiple Choices\";","  case StatusCode::MovedPermanently_301: return \"Moved Permanently\";","  case StatusCode::Found_302: return \"Found\";","  case StatusCode::SeeOther_303: return \"See Other\";","  case StatusCode::NotModified_304: return \"Not Modified\";","  case StatusCode::UseProxy_305: return \"Use Proxy\";","  case StatusCode::unused_306: return \"unused\";","  case StatusCode::TemporaryRedirect_307: return \"Temporary Redirect\";","  case StatusCode::PermanentRedirect_308: return \"Permanent Redirect\";","  case StatusCode::BadRequest_400: return \"Bad Request\";","  case StatusCode::Unauthorized_401: return \"Unauthorized\";","  case StatusCode::PaymentRequired_402: return \"Payment Required\";","  case StatusCode::Forbidden_403: return \"Forbidden\";","  case StatusCode::NotFound_404: return \"Not Found\";","  case StatusCode::MethodNotAllowed_405: return \"Method Not Allowed\";","  case StatusCode::NotAcceptable_406: return \"Not Acceptable\";","  case StatusCode::ProxyAuthenticationRequired_407:","    return \"Proxy Authentication Required\";","  case StatusCode::RequestTimeout_408: return \"Request Timeout\";","  case StatusCode::Conflict_409: return \"Conflict\";","  case StatusCode::Gone_410: return \"Gone\";","  case StatusCode::LengthRequired_411: return \"Length Required\";","  case StatusCode::PreconditionFailed_412: return \"Precondition Failed\";","  case StatusCode::PayloadTooLarge_413: return \"Payload Too Large\";","  case StatusCode::UriTooLong_414: return \"URI Too Long\";","  case StatusCode::UnsupportedMediaType_415: return \"Unsupported Media Type\";","  case StatusCode::RangeNotSatisfiable_416: return \"Range Not Satisfiable\";","  case StatusCode::ExpectationFailed_417: return \"Expectation Failed\";","  case StatusCode::ImATeapot_418: return \"I'm a teapot\";","  case StatusCode::MisdirectedRequest_421: return \"Misdirected Request\";","  case StatusCode::UnprocessableContent_422: return \"Unprocessable Content\";","  case StatusCode::Locked_423: return \"Locked\";","  case StatusCode::FailedDependency_424: return \"Failed Dependency\";","  case StatusCode::TooEarly_425: return \"Too Early\";","  case StatusCode::UpgradeRequired_426: return \"Upgrade Required\";","  case StatusCode::PreconditionRequired_428: return \"Precondition Required\";","  case StatusCode::TooManyRequests_429: return \"Too Many Requests\";","  case StatusCode::RequestHeaderFieldsTooLarge_431:","    return \"Request Header Fields Too Large\";","  case StatusCode::UnavailableForLegalReasons_451:","    return \"Unavailable For Legal Reasons\";","  case StatusCode::NotImplemented_501: return \"Not Implemented\";","  case StatusCode::BadGateway_502: return \"Bad Gateway\";","  case StatusCode::ServiceUnavailable_503: return \"Service Unavailable\";","  case StatusCode::GatewayTimeout_504: return \"Gateway Timeout\";","  case StatusCode::HttpVersionNotSupported_505:","    return \"HTTP Version Not Supported\";","  case StatusCode::VariantAlsoNegotiates_506: return \"Variant Also Negotiates\";","  case StatusCode::InsufficientStorage_507: return \"Insufficient Storage\";","  case StatusCode::LoopDetected_508: return \"Loop Detected\";","  case StatusCode::NotExtended_510: return \"Not Extended\";","  case StatusCode::NetworkAuthenticationRequired_511:","    return \"Network Authentication Required\";","","  default:","  case StatusCode::InternalServerError_500: return \"Internal Server Error\";","  }","}","","inline std::string get_bearer_token_auth(const Request \u0026req) {","  if (req.has_header(\"Authorization\")) {","    constexpr auto bearer_header_prefix_len = detail::str_len(\"Bearer \");","    return req.get_header_value(\"Authorization\")","        .substr(bearer_header_prefix_len);","  }","  return \"\";","}","","template \u003cclass Rep, class Period\u003e","inline Server \u0026","Server::set_read_timeout(const std::chrono::duration\u003cRep, Period\u003e \u0026duration) {","  detail::duration_to_sec_and_usec(","      duration, [\u0026](time_t sec, time_t usec) { set_read_timeout(sec, usec); });","  return *this;","}","","template \u003cclass Rep, class Period\u003e","inline Server \u0026","Server::set_write_timeout(const std::chrono::duration\u003cRep, Period\u003e \u0026duration) {","  detail::duration_to_sec_and_usec(","      duration, [\u0026](time_t sec, time_t usec) { set_write_timeout(sec, usec); });","  return *this;","}","","template \u003cclass Rep, class Period\u003e","inline Server \u0026","Server::set_idle_interval(const std::chrono::duration\u003cRep, Period\u003e \u0026duration) {","  detail::duration_to_sec_and_usec(","      duration, [\u0026](time_t sec, time_t usec) { set_idle_interval(sec, usec); });","  return *this;","}","","inline std::string to_string(const Error error) {","  switch (error) {","  case Error::Success: return \"Success (no error)\";","  case Error::Connection: return \"Could not establish connection\";","  case Error::BindIPAddress: return \"Failed to bind IP address\";","  case Error::Read: return \"Failed to read connection\";","  case Error::Write: return \"Failed to write connection\";","  case Error::ExceedRedirectCount: return \"Maximum redirect count exceeded\";","  case Error::Canceled: return \"Connection handling canceled\";","  case Error::SSLConnection: return \"SSL connection failed\";","  case Error::SSLLoadingCerts: return \"SSL certificate loading failed\";","  case Error::SSLServerVerification: return \"SSL server verification failed\";","  case Error::SSLServerHostnameVerification:","    return \"SSL server hostname verification failed\";","  case Error::UnsupportedMultipartBoundaryChars:","    return \"Unsupported HTTP multipart boundary characters\";","  case Error::Compression: return \"Compression failed\";","  case Error::ConnectionTimeout: return \"Connection timed out\";","  case Error::ProxyConnection: return \"Proxy connection failed\";","  case Error::Unknown: return \"Unknown\";","  default: break;","  }","","  return \"Invalid\";","}","","inline std::ostream \u0026operator\u003c\u003c(std::ostream \u0026os, const Error \u0026obj) {","  os \u003c\u003c to_string(obj);","  os \u003c\u003c \" (\" \u003c\u003c static_cast\u003cstd::underlying_type\u003cError\u003e::type\u003e(obj) \u003c\u003c ')';","  return os;","}","","inline uint64_t Result::get_request_header_value_u64(const std::string \u0026key,","                                                     uint64_t def,","                                                     size_t id) const {","  return detail::get_header_value_u64(request_headers_, key, def, id);","}","","template \u003cclass Rep, class Period\u003e","inline void ClientImpl::set_connection_timeout(","    const std::chrono::duration\u003cRep, Period\u003e \u0026duration) {","  detail::duration_to_sec_and_usec(duration, [\u0026](time_t sec, time_t usec) {","    set_connection_timeout(sec, usec);","  });","}","","template \u003cclass Rep, class Period\u003e","inline void ClientImpl::set_read_timeout(","    const std::chrono::duration\u003cRep, Period\u003e \u0026duration) {","  detail::duration_to_sec_and_usec(","      duration, [\u0026](time_t sec, time_t usec) { set_read_timeout(sec, usec); });","}","","template \u003cclass Rep, class Period\u003e","inline void ClientImpl::set_write_timeout(","    const std::chrono::duration\u003cRep, Period\u003e \u0026duration) {","  detail::duration_to_sec_and_usec(","      duration, [\u0026](time_t sec, time_t usec) { set_write_timeout(sec, usec); });","}","","template \u003cclass Rep, class Period\u003e","inline void ClientImpl::set_max_timeout(","    const std::chrono::duration\u003cRep, Period\u003e \u0026duration) {","  auto msec =","      std::chrono::duration_cast\u003cstd::chrono::milliseconds\u003e(duration).count();","  set_max_timeout(msec);","}","","template \u003cclass Rep, class Period\u003e","inline void Client::set_connection_timeout(","    const std::chrono::duration\u003cRep, Period\u003e \u0026duration) {","  cli_-\u003eset_connection_timeout(duration);","}","","template \u003cclass Rep, class Period\u003e","inline void","Client::set_read_timeout(const std::chrono::duration\u003cRep, Period\u003e \u0026duration) {","  cli_-\u003eset_read_timeout(duration);","}","","template \u003cclass Rep, class Period\u003e","inline void","Client::set_write_timeout(const std::chrono::duration\u003cRep, Period\u003e \u0026duration) {","  cli_-\u003eset_write_timeout(duration);","}","","template \u003cclass Rep, class Period\u003e","inline void","Client::set_max_timeout(const std::chrono::duration\u003cRep, Period\u003e \u0026duration) {","  cli_-\u003eset_max_timeout(duration);","}","","/*"," * Forward declarations and types that will be part of the .h file if split into"," * .h + .cc."," */","","std::string hosted_at(const std::string \u0026hostname);","","void hosted_at(const std::string \u0026hostname, std::vector\u003cstd::string\u003e \u0026addrs);","","std::string append_query_params(const std::string \u0026path, const Params \u0026params);","","std::pair\u003cstd::string, std::string\u003e make_range_header(const Ranges \u0026ranges);","","std::pair\u003cstd::string, std::string\u003e","make_basic_authentication_header(const std::string \u0026username,","                                 const std::string \u0026password,","                                 bool is_proxy = false);","","namespace detail {","","#if defined(_WIN32)","inline std::wstring u8string_to_wstring(const char *s) {","  std::wstring ws;","  auto len = static_cast\u003cint\u003e(strlen(s));","  auto wlen = ::MultiByteToWideChar(CP_UTF8, 0, s, len, nullptr, 0);","  if (wlen \u003e 0) {","    ws.resize(wlen);","    wlen = ::MultiByteToWideChar(","        CP_UTF8, 0, s, len,","        const_cast\u003cLPWSTR\u003e(reinterpret_cast\u003cLPCWSTR\u003e(ws.data())), wlen);","    if (wlen != static_cast\u003cint\u003e(ws.size())) { ws.clear(); }","  }","  return ws;","}","#endif","","struct FileStat {","  FileStat(const std::string \u0026path);","  bool is_file() const;","  bool is_dir() const;","","private:","#if defined(_WIN32)","  struct _stat st_;","#else","  struct stat st_;","#endif","  int ret_ = -1;","};","","std::string encode_query_param(const std::string \u0026value);","","std::string decode_url(const std::string \u0026s, bool convert_plus_to_space);","","std::string trim_copy(const std::string \u0026s);","","void divide(","    const char *data, std::size_t size, char d,","    std::function\u003cvoid(const char *, std::size_t, const char *, std::size_t)\u003e","        fn);","","void divide(","    const std::string \u0026str, char d,","    std::function\u003cvoid(const char *, std::size_t, const char *, std::size_t)\u003e","        fn);","","void split(const char *b, const char *e, char d,","           std::function\u003cvoid(const char *, const char *)\u003e fn);","","void split(const char *b, const char *e, char d, size_t m,","           std::function\u003cvoid(const char *, const char *)\u003e fn);","","bool process_client_socket(","    socket_t sock, time_t read_timeout_sec, time_t read_timeout_usec,","    time_t write_timeout_sec, time_t write_timeout_usec,","    time_t max_timeout_msec,","    std::chrono::time_point\u003cstd::chrono::steady_clock\u003e start_time,","    std::function\u003cbool(Stream \u0026)\u003e callback);","","socket_t create_client_socket(const std::string \u0026host, const std::string \u0026ip,","                              int port, int address_family, bool tcp_nodelay,","                              bool ipv6_v6only, SocketOptions socket_options,","                              time_t connection_timeout_sec,","                              time_t connection_timeout_usec,","                              time_t read_timeout_sec, time_t read_timeout_usec,","                              time_t write_timeout_sec,","                              time_t write_timeout_usec,","                              const std::string \u0026intf, Error \u0026error);","","const char *get_header_value(const Headers \u0026headers, const std::string \u0026key,","                             const char *def, size_t id);","","std::string params_to_query_str(const Params \u0026params);","","void parse_query_text(const char *data, std::size_t size, Params \u0026params);","","void parse_query_text(const std::string \u0026s, Params \u0026params);","","bool parse_multipart_boundary(const std::string \u0026content_type,","                              std::string \u0026boundary);","","bool parse_range_header(const std::string \u0026s, Ranges \u0026ranges);","","int close_socket(socket_t sock);","","ssize_t send_socket(socket_t sock, const void *ptr, size_t size, int flags);","","ssize_t read_socket(socket_t sock, void *ptr, size_t size, int flags);","","enum class EncodingType { None = 0, Gzip, Brotli, Zstd };","","EncodingType encoding_type(const Request \u0026req, const Response \u0026res);","","class BufferStream final : public Stream {","public:","  BufferStream() = default;","  ~BufferStream() override = default;","","  bool is_readable() const override;","  bool wait_readable() const override;","  bool wait_writable() const override;","  ssize_t read(char *ptr, size_t size) override;","  ssize_t write(const char *ptr, size_t size) override;","  void get_remote_ip_and_port(std::string \u0026ip, int \u0026port) const override;","  void get_local_ip_and_port(std::string \u0026ip, int \u0026port) const override;","  socket_t socket() const override;","  time_t duration() const override;","","  const std::string \u0026get_buffer() const;","","private:","  std::string buffer;","  size_t position = 0;","};","","class compressor {","public:","  virtual ~compressor() = default;","","  typedef std::function\u003cbool(const char *data, size_t data_len)\u003e Callback;","  virtual bool compress(const char *data, size_t data_length, bool last,","                        Callback callback) = 0;","};","","class decompressor {","public:","  virtual ~decompressor() = default;","","  virtual bool is_valid() const = 0;","","  typedef std::function\u003cbool(const char *data, size_t data_len)\u003e Callback;","  virtual bool decompress(const char *data, size_t data_length,","                          Callback callback) = 0;","};","","class nocompressor final : public compressor {","public:","  ~nocompressor() override = default;","","  bool compress(const char *data, size_t data_length, bool /*last*/,","                Callback callback) override;","};","","#ifdef CPPHTTPLIB_ZLIB_SUPPORT","class gzip_compressor final : public compressor {","public:","  gzip_compressor();","  ~gzip_compressor() override;","","  bool compress(const char *data, size_t data_length, bool last,","                Callback callback) override;","","private:","  bool is_valid_ = false;","  z_stream strm_;","};","","class gzip_decompressor final : public decompressor {","public:","  gzip_decompressor();","  ~gzip_decompressor() override;","","  bool is_valid() const override;","","  bool decompress(const char *data, size_t data_length,","                  Callback callback) override;","","private:","  bool is_valid_ = false;","  z_stream strm_;","};","#endif","","#ifdef CPPHTTPLIB_BROTLI_SUPPORT","class brotli_compressor final : public compressor {","public:","  brotli_compressor();","  ~brotli_compressor();","","  bool compress(const char *data, size_t data_length, bool last,","                Callback callback) override;","","private:","  BrotliEncoderState *state_ = nullptr;","};","","class brotli_decompressor final : public decompressor {","public:","  brotli_decompressor();","  ~brotli_decompressor();","","  bool is_valid() const override;","","  bool decompress(const char *data, size_t data_length,","                  Callback callback) override;","","private:","  BrotliDecoderResult decoder_r;","  BrotliDecoderState *decoder_s = nullptr;","};","#endif","","#ifdef CPPHTTPLIB_ZSTD_SUPPORT","class zstd_compressor : public compressor {","public:","  zstd_compressor();","  ~zstd_compressor();","","  bool compress(const char *data, size_t data_length, bool last,","                Callback callback) override;","","private:","  ZSTD_CCtx *ctx_ = nullptr;","};","","class zstd_decompressor : public decompressor {","public:","  zstd_decompressor();","  ~zstd_decompressor();","","  bool is_valid() const override;","","  bool decompress(const char *data, size_t data_length,","                  Callback callback) override;","","private:","  ZSTD_DCtx *ctx_ = nullptr;","};","#endif","","// NOTE: until the read size reaches `fixed_buffer_size`, use `fixed_buffer`","// to store data. The call can set memory on stack for performance.","class stream_line_reader {","public:","  stream_line_reader(Stream \u0026strm, char *fixed_buffer,","                     size_t fixed_buffer_size);","  const char *ptr() const;","  size_t size() const;","  bool end_with_crlf() const;","  bool getline();","","private:","  void append(char c);","","  Stream \u0026strm_;","  char *fixed_buffer_;","  const size_t fixed_buffer_size_;","  size_t fixed_buffer_used_size_ = 0;","  std::string growable_buffer_;","};","","class mmap {","public:","  mmap(const char *path);","  ~mmap();","","  bool open(const char *path);","  void close();","","  bool is_open() const;","  size_t size() const;","  const char *data() const;","","private:","#if defined(_WIN32)","  HANDLE hFile_ = NULL;","  HANDLE hMapping_ = NULL;","#else","  int fd_ = -1;","#endif","  size_t size_ = 0;","  void *addr_ = nullptr;","  bool is_open_empty_file = false;","};","","// NOTE: https://www.rfc-editor.org/rfc/rfc9110#section-5","namespace fields {","","inline bool is_token_char(char c) {","  return std::isalnum(c) || c == '!' || c == '#' || c == '$' || c == '%' ||","         c == '\u0026' || c == '\\'' || c == '*' || c == '+' || c == '-' ||","         c == '.' || c == '^' || c == '_' || c == '`' || c == '|' || c == '~';","}","","inline bool is_token(const std::string \u0026s) {","  if (s.empty()) { return false; }","  for (auto c : s) {","    if (!is_token_char(c)) { return false; }","  }","  return true;","}","","inline bool is_field_name(const std::string \u0026s) { return is_token(s); }","","inline bool is_vchar(char c) { return c \u003e= 33 \u0026\u0026 c \u003c= 126; }","","inline bool is_obs_text(char c) { return 128 \u003c= static_cast\u003cunsigned char\u003e(c); }","","inline bool is_field_vchar(char c) { return is_vchar(c) || is_obs_text(c); }","","inline bool is_field_content(const std::string \u0026s) {","  if (s.empty()) { return true; }","","  if (s.size() == 1) {","    return is_field_vchar(s[0]);","  } else if (s.size() == 2) {","    return is_field_vchar(s[0]) \u0026\u0026 is_field_vchar(s[1]);","  } else {","    size_t i = 0;","","    if (!is_field_vchar(s[i])) { return false; }","    i++;","","    while (i \u003c s.size() - 1) {","      auto c = s[i++];","      if (c == ' ' || c == '\\t' || is_field_vchar(c)) {","      } else {","        return false;","      }","    }","","    return is_field_vchar(s[i]);","  }","}","","inline bool is_field_value(const std::string \u0026s) { return is_field_content(s); }","","} // namespace fields","","} // namespace detail","","// ----------------------------------------------------------------------------","","/*"," * Implementation that will be part of the .cc file if split into .h + .cc."," */","","namespace detail {","","inline bool is_hex(char c, int \u0026v) {","  if (0x20 \u003c= c \u0026\u0026 isdigit(c)) {","    v = c - '0';","    return true;","  } else if ('A' \u003c= c \u0026\u0026 c \u003c= 'F') {","    v = c - 'A' + 10;","    return true;","  } else if ('a' \u003c= c \u0026\u0026 c \u003c= 'f') {","    v = c - 'a' + 10;","    return true;","  }","  return false;","}","","inline bool from_hex_to_i(const std::string \u0026s, size_t i, size_t cnt,","                          int \u0026val) {","  if (i \u003e= s.size()) { return false; }","","  val = 0;","  for (; cnt; i++, cnt--) {","    if (!s[i]) { return false; }","    auto v = 0;","    if (is_hex(s[i], v)) {","      val = val * 16 + v;","    } else {","      return false;","    }","  }","  return true;","}","","inline std::string from_i_to_hex(size_t n) {","  static const auto charset = \"0123456789abcdef\";","  std::string ret;","  do {","    ret = charset[n \u0026 15] + ret;","    n \u003e\u003e= 4;","  } while (n \u003e 0);","  return ret;","}","","inline size_t to_utf8(int code, char *buff) {","  if (code \u003c 0x0080) {","    buff[0] = static_cast\u003cchar\u003e(code \u0026 0x7F);","    return 1;","  } else if (code \u003c 0x0800) {","    buff[0] = static_cast\u003cchar\u003e(0xC0 | ((code \u003e\u003e 6) \u0026 0x1F));","    buff[1] = static_cast\u003cchar\u003e(0x80 | (code \u0026 0x3F));","    return 2;","  } else if (code \u003c 0xD800) {","    buff[0] = static_cast\u003cchar\u003e(0xE0 | ((code \u003e\u003e 12) \u0026 0xF));","    buff[1] = static_cast\u003cchar\u003e(0x80 | ((code \u003e\u003e 6) \u0026 0x3F));","    buff[2] = static_cast\u003cchar\u003e(0x80 | (code \u0026 0x3F));","    return 3;","  } else if (code \u003c 0xE000) { // D800 - DFFF is invalid...","    return 0;","  } else if (code \u003c 0x10000) {","    buff[0] = static_cast\u003cchar\u003e(0xE0 | ((code \u003e\u003e 12) \u0026 0xF));","    buff[1] = static_cast\u003cchar\u003e(0x80 | ((code \u003e\u003e 6) \u0026 0x3F));","    buff[2] = static_cast\u003cchar\u003e(0x80 | (code \u0026 0x3F));","    return 3;","  } else if (code \u003c 0x110000) {","    buff[0] = static_cast\u003cchar\u003e(0xF0 | ((code \u003e\u003e 18) \u0026 0x7));","    buff[1] = static_cast\u003cchar\u003e(0x80 | ((code \u003e\u003e 12) \u0026 0x3F));","    buff[2] = static_cast\u003cchar\u003e(0x80 | ((code \u003e\u003e 6) \u0026 0x3F));","    buff[3] = static_cast\u003cchar\u003e(0x80 | (code \u0026 0x3F));","    return 4;","  }","","  // NOTREACHED","  return 0;","}","","// NOTE: This code came up with the following stackoverflow post:","// https://stackoverflow.com/questions/180947/base64-decode-snippet-in-c","inline std::string base64_encode(const std::string \u0026in) {","  static const auto lookup =","      \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\";","","  std::string out;","  out.reserve(in.size());","","  auto val = 0;","  auto valb = -6;","","  for (auto c : in) {","    val = (val \u003c\u003c 8) + static_cast\u003cuint8_t\u003e(c);","    valb += 8;","    while (valb \u003e= 0) {","      out.push_back(lookup[(val \u003e\u003e valb) \u0026 0x3F]);","      valb -= 6;","    }","  }","","  if (valb \u003e -6) { out.push_back(lookup[((val \u003c\u003c 8) \u003e\u003e (valb + 8)) \u0026 0x3F]); }","","  while (out.size() % 4) {","    out.push_back('=');","  }","","  return out;","}","","inline bool is_valid_path(const std::string \u0026path) {","  size_t level = 0;","  size_t i = 0;","","  // Skip slash","  while (i \u003c path.size() \u0026\u0026 path[i] == '/') {","    i++;","  }","","  while (i \u003c path.size()) {","    // Read component","    auto beg = i;","    while (i \u003c path.size() \u0026\u0026 path[i] != '/') {","      if (path[i] == '\\0') {","        return false;","      } else if (path[i] == '\\\\') {","        return false;","      }","      i++;","    }","","    auto len = i - beg;","    assert(len \u003e 0);","","    if (!path.compare(beg, len, \".\")) {","      ;","    } else if (!path.compare(beg, len, \"..\")) {","      if (level == 0) { return false; }","      level--;","    } else {","      level++;","    }","","    // Skip slash","    while (i \u003c path.size() \u0026\u0026 path[i] == '/') {","      i++;","    }","  }","","  return true;","}","","inline FileStat::FileStat(const std::string \u0026path) {","#if defined(_WIN32)","  auto wpath = u8string_to_wstring(path.c_str());","  ret_ = _wstat(wpath.c_str(), \u0026st_);","#else","  ret_ = stat(path.c_str(), \u0026st_);","#endif","}","inline bool FileStat::is_file() const {","  return ret_ \u003e= 0 \u0026\u0026 S_ISREG(st_.st_mode);","}","inline bool FileStat::is_dir() const {","  return ret_ \u003e= 0 \u0026\u0026 S_ISDIR(st_.st_mode);","}","","inline std::string encode_query_param(const std::string \u0026value) {","  std::ostringstream escaped;","  escaped.fill('0');","  escaped \u003c\u003c std::hex;","","  for (auto c : value) {","    if (std::isalnum(static_cast\u003cuint8_t\u003e(c)) || c == '-' || c == '_' ||","        c == '.' || c == '!' || c == '~' || c == '*' || c == '\\'' || c == '(' ||","        c == ')') {","      escaped \u003c\u003c c;","    } else {","      escaped \u003c\u003c std::uppercase;","      escaped \u003c\u003c '%' \u003c\u003c std::setw(2)","              \u003c\u003c static_cast\u003cint\u003e(static_cast\u003cunsigned char\u003e(c));","      escaped \u003c\u003c std::nouppercase;","    }","  }","","  return escaped.str();","}","","inline std::string encode_url(const std::string \u0026s) {","  std::string result;","  result.reserve(s.size());","","  for (size_t i = 0; s[i]; i++) {","    switch (s[i]) {","    case ' ': result += \"%20\"; break;","    case '+': result += \"%2B\"; break;","    case '\\r': result += \"%0D\"; break;","    case '\\n': result += \"%0A\"; break;","    case '\\'': result += \"%27\"; break;","    case ',': result += \"%2C\"; break;","    // case ':': result += \"%3A\"; break; // ok? probably...","    case ';': result += \"%3B\"; break;","    default:","      auto c = static_cast\u003cuint8_t\u003e(s[i]);","      if (c \u003e= 0x80) {","        result += '%';","        char hex[4];","        auto len = snprintf(hex, sizeof(hex) - 1, \"%02X\", c);","        assert(len == 2);","        result.append(hex, static_cast\u003csize_t\u003e(len));","      } else {","        result += s[i];","      }","      break;","    }","  }","","  return result;","}","","inline std::string decode_url(const std::string \u0026s,","                              bool convert_plus_to_space) {","  std::string result;","","  for (size_t i = 0; i \u003c s.size(); i++) {","    if (s[i] == '%' \u0026\u0026 i + 1 \u003c s.size()) {","      if (s[i + 1] == 'u') {","        auto val = 0;","        if (from_hex_to_i(s, i + 2, 4, val)) {","          // 4 digits Unicode codes","          char buff[4];","          size_t len = to_utf8(val, buff);","          if (len \u003e 0) { result.append(buff, len); }","          i += 5; // 'u0000'","        } else {","          result += s[i];","        }","      } else {","        auto val = 0;","        if (from_hex_to_i(s, i + 1, 2, val)) {","          // 2 digits hex codes","          result += static_cast\u003cchar\u003e(val);","          i += 2; // '00'","        } else {","          result += s[i];","        }","      }","    } else if (convert_plus_to_space \u0026\u0026 s[i] == '+') {","      result += ' ';","    } else {","      result += s[i];","    }","  }","","  return result;","}","","inline std::string file_extension(const std::string \u0026path) {","  std::smatch m;","  thread_local auto re = std::regex(\"\\\\.([a-zA-Z0-9]+)$\");","  if (std::regex_search(path, m, re)) { return m[1].str(); }","  return std::string();","}","","inline bool is_space_or_tab(char c) { return c == ' ' || c == '\\t'; }","","inline std::pair\u003csize_t, size_t\u003e trim(const char *b, const char *e, size_t left,","                                      size_t right) {","  while (b + left \u003c e \u0026\u0026 is_space_or_tab(b[left])) {","    left++;","  }","  while (right \u003e 0 \u0026\u0026 is_space_or_tab(b[right - 1])) {","    right--;","  }","  return std::make_pair(left, right);","}","","inline std::string trim_copy(const std::string \u0026s) {","  auto r = trim(s.data(), s.data() + s.size(), 0, s.size());","  return s.substr(r.first, r.second - r.first);","}","","inline std::string trim_double_quotes_copy(const std::string \u0026s) {","  if (s.length() \u003e= 2 \u0026\u0026 s.front() == '\"' \u0026\u0026 s.back() == '\"') {","    return s.substr(1, s.size() - 2);","  }","  return s;","}","","inline void","divide(const char *data, std::size_t size, char d,","       std::function\u003cvoid(const char *, std::size_t, const char *, std::size_t)\u003e","           fn) {","  const auto it = std::find(data, data + size, d);","  const auto found = static_cast\u003cstd::size_t\u003e(it != data + size);","  const auto lhs_data = data;","  const auto lhs_size = static_cast\u003cstd::size_t\u003e(it - data);","  const auto rhs_data = it + found;","  const auto rhs_size = size - lhs_size - found;","","  fn(lhs_data, lhs_size, rhs_data, rhs_size);","}","","inline void","divide(const std::string \u0026str, char d,","       std::function\u003cvoid(const char *, std::size_t, const char *, std::size_t)\u003e","           fn) {","  divide(str.data(), str.size(), d, std::move(fn));","}","","inline void split(const char *b, const char *e, char d,","                  std::function\u003cvoid(const char *, const char *)\u003e fn) {","  return split(b, e, d, (std::numeric_limits\u003csize_t\u003e::max)(), std::move(fn));","}","","inline void split(const char *b, const char *e, char d, size_t m,","                  std::function\u003cvoid(const char *, const char *)\u003e fn) {","  size_t i = 0;","  size_t beg = 0;","  size_t count = 1;","","  while (e ? (b + i \u003c e) : (b[i] != '\\0')) {","    if (b[i] == d \u0026\u0026 count \u003c m) {","      auto r = trim(b, e, beg, i);","      if (r.first \u003c r.second) { fn(\u0026b[r.first], \u0026b[r.second]); }","      beg = i + 1;","      count++;","    }","    i++;","  }","","  if (i) {","    auto r = trim(b, e, beg, i);","    if (r.first \u003c r.second) { fn(\u0026b[r.first], \u0026b[r.second]); }","  }","}","","inline stream_line_reader::stream_line_reader(Stream \u0026strm, char *fixed_buffer,","                                              size_t fixed_buffer_size)","    : strm_(strm), fixed_buffer_(fixed_buffer),","      fixed_buffer_size_(fixed_buffer_size) {}","","inline const char *stream_line_reader::ptr() const {","  if (growable_buffer_.empty()) {","    return fixed_buffer_;","  } else {","    return growable_buffer_.data();","  }","}","","inline size_t stream_line_reader::size() const {","  if (growable_buffer_.empty()) {","    return fixed_buffer_used_size_;","  } else {","    return growable_buffer_.size();","  }","}","","inline bool stream_line_reader::end_with_crlf() const {","  auto end = ptr() + size();","  return size() \u003e= 2 \u0026\u0026 end[-2] == '\\r' \u0026\u0026 end[-1] == '\\n';","}","","inline bool stream_line_reader::getline() {","  fixed_buffer_used_size_ = 0;","  growable_buffer_.clear();","","#ifndef CPPHTTPLIB_ALLOW_LF_AS_LINE_TERMINATOR","  char prev_byte = 0;","#endif","","  for (size_t i = 0;; i++) {","    if (size() \u003e= CPPHTTPLIB_MAX_LINE_LENGTH) {","      // Treat exceptionally long lines as an error to","      // prevent infinite loops/memory exhaustion","      return false;","    }","    char byte;","    auto n = strm_.read(\u0026byte, 1);","","    if (n \u003c 0) {","      return false;","    } else if (n == 0) {","      if (i == 0) {","        return false;","      } else {","        break;","      }","    }","","    append(byte);","","#ifdef CPPHTTPLIB_ALLOW_LF_AS_LINE_TERMINATOR","    if (byte == '\\n') { break; }","#else","    if (prev_byte == '\\r' \u0026\u0026 byte == '\\n') { break; }","    prev_byte = byte;","#endif","  }","","  return true;","}","","inline void stream_line_reader::append(char c) {","  if (fixed_buffer_used_size_ \u003c fixed_buffer_size_ - 1) {","    fixed_buffer_[fixed_buffer_used_size_++] = c;","    fixed_buffer_[fixed_buffer_used_size_] = '\\0';","  } else {","    if (growable_buffer_.empty()) {","      assert(fixed_buffer_[fixed_buffer_used_size_] == '\\0');","      growable_buffer_.assign(fixed_buffer_, fixed_buffer_used_size_);","    }","    growable_buffer_ += c;","  }","}","","inline mmap::mmap(const char *path) { open(path); }","","inline mmap::~mmap() { close(); }","","inline bool mmap::open(const char *path) {","  close();","","#if defined(_WIN32)","  auto wpath = u8string_to_wstring(path);","  if (wpath.empty()) { return false; }","","#if _WIN32_WINNT \u003e= _WIN32_WINNT_WIN8","  hFile_ = ::CreateFile2(wpath.c_str(), GENERIC_READ, FILE_SHARE_READ,","                         OPEN_EXISTING, NULL);","#else","  hFile_ = ::CreateFileW(wpath.c_str(), GENERIC_READ, FILE_SHARE_READ, NULL,","                         OPEN_EXISTING, FILE_ATTRIBUTE_NORMAL, NULL);","#endif","","  if (hFile_ == INVALID_HANDLE_VALUE) { return false; }","","  LARGE_INTEGER size{};","  if (!::GetFileSizeEx(hFile_, \u0026size)) { return false; }","  // If the following line doesn't compile due to QuadPart, update Windows SDK.","  // See:","  // https://github.com/yhirose/cpp-httplib/issues/1903#issuecomment-2316520721","  if (static_cast\u003cULONGLONG\u003e(size.QuadPart) \u003e","      (std::numeric_limits\u003cdecltype(size_)\u003e::max)()) {","    // `size_t` might be 32-bits, on 32-bits Windows.","    return false;","  }","  size_ = static_cast\u003csize_t\u003e(size.QuadPart);","","#if _WIN32_WINNT \u003e= _WIN32_WINNT_WIN8","  hMapping_ =","      ::CreateFileMappingFromApp(hFile_, NULL, PAGE_READONLY, size_, NULL);","#else","  hMapping_ = ::CreateFileMappingW(hFile_, NULL, PAGE_READONLY, 0, 0, NULL);","#endif","","  // Special treatment for an empty file...","  if (hMapping_ == NULL \u0026\u0026 size_ == 0) {","    close();","    is_open_empty_file = true;","    return true;","  }","","  if (hMapping_ == NULL) {","    close();","    return false;","  }","","#if _WIN32_WINNT \u003e= _WIN32_WINNT_WIN8","  addr_ = ::MapViewOfFileFromApp(hMapping_, FILE_MAP_READ, 0, 0);","#else","  addr_ = ::MapViewOfFile(hMapping_, FILE_MAP_READ, 0, 0, 0);","#endif","","  if (addr_ == nullptr) {","    close();","    return false;","  }","#else","  fd_ = ::open(path, O_RDONLY);","  if (fd_ == -1) { return false; }","","  struct stat sb;","  if (fstat(fd_, \u0026sb) == -1) {","    close();","    return false;","  }","  size_ = static_cast\u003csize_t\u003e(sb.st_size);","","  addr_ = ::mmap(NULL, size_, PROT_READ, MAP_PRIVATE, fd_, 0);","","  // Special treatment for an empty file...","  if (addr_ == MAP_FAILED \u0026\u0026 size_ == 0) {","    close();","    is_open_empty_file = true;","    return false;","  }","#endif","","  return true;","}","","inline bool mmap::is_open() const {","  return is_open_empty_file ? true : addr_ != nullptr;","}","","inline size_t mmap::size() const { return size_; }","","inline const char *mmap::data() const {","  return is_open_empty_file ? \"\" : static_cast\u003cconst char *\u003e(addr_);","}","","inline void mmap::close() {","#if defined(_WIN32)","  if (addr_) {","    ::UnmapViewOfFile(addr_);","    addr_ = nullptr;","  }","","  if (hMapping_) {","    ::CloseHandle(hMapping_);","    hMapping_ = NULL;","  }","","  if (hFile_ != INVALID_HANDLE_VALUE) {","    ::CloseHandle(hFile_);","    hFile_ = INVALID_HANDLE_VALUE;","  }","","  is_open_empty_file = false;","#else","  if (addr_ != nullptr) {","    munmap(addr_, size_);","    addr_ = nullptr;","  }","","  if (fd_ != -1) {","    ::close(fd_);","    fd_ = -1;","  }","#endif","  size_ = 0;","}","inline int close_socket(socket_t sock) {","#ifdef _WIN32","  return closesocket(sock);","#else","  return close(sock);","#endif","}","","template \u003ctypename T\u003e inline ssize_t handle_EINTR(T fn) {","  ssize_t res = 0;","  while (true) {","    res = fn();","    if (res \u003c 0 \u0026\u0026 errno == EINTR) {","      std::this_thread::sleep_for(std::chrono::microseconds{1});","      continue;","    }","    break;","  }","  return res;","}","","inline ssize_t read_socket(socket_t sock, void *ptr, size_t size, int flags) {","  return handle_EINTR([\u0026]() {","    return recv(sock,","#ifdef _WIN32","                static_cast\u003cchar *\u003e(ptr), static_cast\u003cint\u003e(size),","#else","                ptr, size,","#endif","                flags);","  });","}","","inline ssize_t send_socket(socket_t sock, const void *ptr, size_t size,","                           int flags) {","  return handle_EINTR([\u0026]() {","    return send(sock,","#ifdef _WIN32","                static_cast\u003cconst char *\u003e(ptr), static_cast\u003cint\u003e(size),","#else","                ptr, size,","#endif","                flags);","  });","}","","inline int poll_wrapper(struct pollfd *fds, nfds_t nfds, int timeout) {","#ifdef _WIN32","  return ::WSAPoll(fds, nfds, timeout);","#else","  return ::poll(fds, nfds, timeout);","#endif","}","","template \u003cbool Read\u003e","inline ssize_t select_impl(socket_t sock, time_t sec, time_t usec) {","  struct pollfd pfd;","  pfd.fd = sock;","  pfd.events = (Read ? POLLIN : POLLOUT);","","  auto timeout = static_cast\u003cint\u003e(sec * 1000 + usec / 1000);","","  return handle_EINTR([\u0026]() { return poll_wrapper(\u0026pfd, 1, timeout); });","}","","inline ssize_t select_read(socket_t sock, time_t sec, time_t usec) {","  return select_impl\u003ctrue\u003e(sock, sec, usec);","}","","inline ssize_t select_write(socket_t sock, time_t sec, time_t usec) {","  return select_impl\u003cfalse\u003e(sock, sec, usec);","}","","inline Error wait_until_socket_is_ready(socket_t sock, time_t sec,","                                        time_t usec) {","  struct pollfd pfd_read;","  pfd_read.fd = sock;","  pfd_read.events = POLLIN | POLLOUT;","","  auto timeout = static_cast\u003cint\u003e(sec * 1000 + usec / 1000);","","  auto poll_res =","      handle_EINTR([\u0026]() { return poll_wrapper(\u0026pfd_read, 1, timeout); });","","  if (poll_res == 0) { return Error::ConnectionTimeout; }","","  if (poll_res \u003e 0 \u0026\u0026 pfd_read.revents \u0026 (POLLIN | POLLOUT)) {","    auto error = 0;","    socklen_t len = sizeof(error);","    auto res = getsockopt(sock, SOL_SOCKET, SO_ERROR,","                          reinterpret_cast\u003cchar *\u003e(\u0026error), \u0026len);","    auto successful = res \u003e= 0 \u0026\u0026 !error;","    return successful ? Error::Success : Error::Connection;","  }","","  return Error::Connection;","}","","inline bool is_socket_alive(socket_t sock) {","  const auto val = detail::select_read(sock, 0, 0);","  if (val == 0) {","    return true;","  } else if (val \u003c 0 \u0026\u0026 errno == EBADF) {","    return false;","  }","  char buf[1];","  return detail::read_socket(sock, \u0026buf[0], sizeof(buf), MSG_PEEK) \u003e 0;","}","","class SocketStream final : public Stream {","public:","  SocketStream(socket_t sock, time_t read_timeout_sec, time_t read_timeout_usec,","               time_t write_timeout_sec, time_t write_timeout_usec,","               time_t max_timeout_msec = 0,","               std::chrono::time_point\u003cstd::chrono::steady_clock\u003e start_time =","                   (std::chrono::steady_clock::time_point::min)());","  ~SocketStream() override;","","  bool is_readable() const override;","  bool wait_readable() const override;","  bool wait_writable() const override;","  ssize_t read(char *ptr, size_t size) override;","  ssize_t write(const char *ptr, size_t size) override;","  void get_remote_ip_and_port(std::string \u0026ip, int \u0026port) const override;","  void get_local_ip_and_port(std::string \u0026ip, int \u0026port) const override;","  socket_t socket() const override;","  time_t duration() const override;","","private:","  socket_t sock_;","  time_t read_timeout_sec_;","  time_t read_timeout_usec_;","  time_t write_timeout_sec_;","  time_t write_timeout_usec_;","  time_t max_timeout_msec_;","  const std::chrono::time_point\u003cstd::chrono::steady_clock\u003e start_time_;","","  std::vector\u003cchar\u003e read_buff_;","  size_t read_buff_off_ = 0;","  size_t read_buff_content_size_ = 0;","","  static const size_t read_buff_size_ = 1024l * 4;","};","","#ifdef CPPHTTPLIB_OPENSSL_SUPPORT","class SSLSocketStream final : public Stream {","public:","  SSLSocketStream(","      socket_t sock, SSL *ssl, time_t read_timeout_sec,","      time_t read_timeout_usec, time_t write_timeout_sec,","      time_t write_timeout_usec, time_t max_timeout_msec = 0,","      std::chrono::time_point\u003cstd::chrono::steady_clock\u003e start_time =","          (std::chrono::steady_clock::time_point::min)());","  ~SSLSocketStream() override;","","  bool is_readable() const override;","  bool wait_readable() const override;","  bool wait_writable() const override;","  ssize_t read(char *ptr, size_t size) override;","  ssize_t write(const char *ptr, size_t size) override;","  void get_remote_ip_and_port(std::string \u0026ip, int \u0026port) const override;","  void get_local_ip_and_port(std::string \u0026ip, int \u0026port) const override;","  socket_t socket() const override;","  time_t duration() const override;","","private:","  socket_t sock_;","  SSL *ssl_;","  time_t read_timeout_sec_;","  time_t read_timeout_usec_;","  time_t write_timeout_sec_;","  time_t write_timeout_usec_;","  time_t max_timeout_msec_;","  const std::chrono::time_point\u003cstd::chrono::steady_clock\u003e start_time_;","};","#endif","","inline bool keep_alive(const std::atomic\u003csocket_t\u003e \u0026svr_sock, socket_t sock,","                       time_t keep_alive_timeout_sec) {","  using namespace std::chrono;","","  const auto interval_usec =","      CPPHTTPLIB_KEEPALIVE_TIMEOUT_CHECK_INTERVAL_USECOND;","","  // Avoid expensive `steady_clock::now()` call for the first time","  if (select_read(sock, 0, interval_usec) \u003e 0) { return true; }","","  const auto start = steady_clock::now() - microseconds{interval_usec};","  const auto timeout = seconds{keep_alive_timeout_sec};","","  while (true) {","    if (svr_sock == INVALID_SOCKET) {","      break; // Server socket is closed","    }","","    auto val = select_read(sock, 0, interval_usec);","    if (val \u003c 0) {","      break; // Ssocket error","    } else if (val == 0) {","      if (steady_clock::now() - start \u003e timeout) {","        break; // Timeout","      }","    } else {","      return true; // Ready for read","    }","  }","","  return false;","}","","template \u003ctypename T\u003e","inline bool","process_server_socket_core(const std::atomic\u003csocket_t\u003e \u0026svr_sock, socket_t sock,","                           size_t keep_alive_max_count,","                           time_t keep_alive_timeout_sec, T callback) {","  assert(keep_alive_max_count \u003e 0);","  auto ret = false;","  auto count = keep_alive_max_count;","  while (count \u003e 0 \u0026\u0026 keep_alive(svr_sock, sock, keep_alive_timeout_sec)) {","    auto close_connection = count == 1;","    auto connection_closed = false;","    ret = callback(close_connection, connection_closed);","    if (!ret || connection_closed) { break; }","    count--;","  }","  return ret;","}","","template \u003ctypename T\u003e","inline bool","process_server_socket(const std::atomic\u003csocket_t\u003e \u0026svr_sock, socket_t sock,","                      size_t keep_alive_max_count,","                      time_t keep_alive_timeout_sec, time_t read_timeout_sec,","                      time_t read_timeout_usec, time_t write_timeout_sec,","                      time_t write_timeout_usec, T callback) {","  return process_server_socket_core(","      svr_sock, sock, keep_alive_max_count, keep_alive_timeout_sec,","      [\u0026](bool close_connection, bool \u0026connection_closed) {","        SocketStream strm(sock, read_timeout_sec, read_timeout_usec,","                          write_timeout_sec, write_timeout_usec);","        return callback(strm, close_connection, connection_closed);","      });","}","","inline bool process_client_socket(","    socket_t sock, time_t read_timeout_sec, time_t read_timeout_usec,","    time_t write_timeout_sec, time_t write_timeout_usec,","    time_t max_timeout_msec,","    std::chrono::time_point\u003cstd::chrono::steady_clock\u003e start_time,","    std::function\u003cbool(Stream \u0026)\u003e callback) {","  SocketStream strm(sock, read_timeout_sec, read_timeout_usec,","                    write_timeout_sec, write_timeout_usec, max_timeout_msec,","                    start_time);","  return callback(strm);","}","","inline int shutdown_socket(socket_t sock) {","#ifdef _WIN32","  return shutdown(sock, SD_BOTH);","#else","  return shutdown(sock, SHUT_RDWR);","#endif","}","","inline std::string escape_abstract_namespace_unix_domain(const std::string \u0026s) {","  if (s.size() \u003e 1 \u0026\u0026 s[0] == '\\0') {","    auto ret = s;","    ret[0] = '@';","    return ret;","  }","  return s;","}","","inline std::string","unescape_abstract_namespace_unix_domain(const std::string \u0026s) {","  if (s.size() \u003e 1 \u0026\u0026 s[0] == '@') {","    auto ret = s;","    ret[0] = '\\0';","    return ret;","  }","  return s;","}","","template \u003ctypename BindOrConnect\u003e","socket_t create_socket(const std::string \u0026host, const std::string \u0026ip, int port,","                       int address_family, int socket_flags, bool tcp_nodelay,","                       bool ipv6_v6only, SocketOptions socket_options,","                       BindOrConnect bind_or_connect) {","  // Get address info","  const char *node = nullptr;","  struct addrinfo hints;","  struct addrinfo *result;","","  memset(\u0026hints, 0, sizeof(struct addrinfo));","  hints.ai_socktype = SOCK_STREAM;","  hints.ai_protocol = IPPROTO_IP;","","  if (!ip.empty()) {","    node = ip.c_str();","    // Ask getaddrinfo to convert IP in c-string to address","    hints.ai_family = AF_UNSPEC;","    hints.ai_flags = AI_NUMERICHOST;","  } else {","    if (!host.empty()) { node = host.c_str(); }","    hints.ai_family = address_family;","    hints.ai_flags = socket_flags;","  }","","#if !defined(_WIN32) || defined(CPPHTTPLIB_HAVE_AFUNIX_H)","  if (hints.ai_family == AF_UNIX) {","    const auto addrlen = host.length();","    if (addrlen \u003e sizeof(sockaddr_un::sun_path)) { return INVALID_SOCKET; }","","#ifdef SOCK_CLOEXEC","    auto sock = socket(hints.ai_family, hints.ai_socktype | SOCK_CLOEXEC,","                       hints.ai_protocol);","#else","    auto sock = socket(hints.ai_family, hints.ai_socktype, hints.ai_protocol);","#endif","","    if (sock != INVALID_SOCKET) {","      sockaddr_un addr{};","      addr.sun_family = AF_UNIX;","","      auto unescaped_host = unescape_abstract_namespace_unix_domain(host);","      std::copy(unescaped_host.begin(), unescaped_host.end(), addr.sun_path);","","      hints.ai_addr = reinterpret_cast\u003csockaddr *\u003e(\u0026addr);","      hints.ai_addrlen = static_cast\u003csocklen_t\u003e(","          sizeof(addr) - sizeof(addr.sun_path) + addrlen);","","#ifndef SOCK_CLOEXEC","#ifndef _WIN32","      fcntl(sock, F_SETFD, FD_CLOEXEC);","#endif","#endif","","      if (socket_options) { socket_options(sock); }","","#ifdef _WIN32","      // Setting SO_REUSEADDR seems not to work well with AF_UNIX on windows, so","      // remove the option.","      detail::set_socket_opt(sock, SOL_SOCKET, SO_REUSEADDR, 0);","#endif","","      bool dummy;","      if (!bind_or_connect(sock, hints, dummy)) {","        close_socket(sock);","        sock = INVALID_SOCKET;","      }","    }","    return sock;","  }","#endif","","  auto service = std::to_string(port);","","  if (getaddrinfo(node, service.c_str(), \u0026hints, \u0026result)) {","#if defined __linux__ \u0026\u0026 !defined __ANDROID__","    res_init();","#endif","    return INVALID_SOCKET;","  }","  auto se = detail::scope_exit([\u0026] { freeaddrinfo(result); });","","  for (auto rp = result; rp; rp = rp-\u003eai_next) {","    // Create a socket","#ifdef _WIN32","    auto sock =","        WSASocketW(rp-\u003eai_family, rp-\u003eai_socktype, rp-\u003eai_protocol, nullptr, 0,","                   WSA_FLAG_NO_HANDLE_INHERIT | WSA_FLAG_OVERLAPPED);","    /**","     * Since the WSA_FLAG_NO_HANDLE_INHERIT is only supported on Windows 7 SP1","     * and above the socket creation fails on older Windows Systems.","     *","     * Let's try to create a socket the old way in this case.","     *","     * Reference:","     * https://docs.microsoft.com/en-us/windows/win32/api/winsock2/nf-winsock2-wsasocketa","     *","     * WSA_FLAG_NO_HANDLE_INHERIT:","     * This flag is supported on Windows 7 with SP1, Windows Server 2008 R2 with","     * SP1, and later","     *","     */","    if (sock == INVALID_SOCKET) {","      sock = socket(rp-\u003eai_family, rp-\u003eai_socktype, rp-\u003eai_protocol);","    }","#else","","#ifdef SOCK_CLOEXEC","    auto sock =","        socket(rp-\u003eai_family, rp-\u003eai_socktype | SOCK_CLOEXEC, rp-\u003eai_protocol);","#else","    auto sock = socket(rp-\u003eai_family, rp-\u003eai_socktype, rp-\u003eai_protocol);","#endif","","#endif","    if (sock == INVALID_SOCKET) { continue; }","","#if !defined _WIN32 \u0026\u0026 !defined SOCK_CLOEXEC","    if (fcntl(sock, F_SETFD, FD_CLOEXEC) == -1) {","      close_socket(sock);","      continue;","    }","#endif","","    if (tcp_nodelay) { set_socket_opt(sock, IPPROTO_TCP, TCP_NODELAY, 1); }","","    if (rp-\u003eai_family == AF_INET6) {","      set_socket_opt(sock, IPPROTO_IPV6, IPV6_V6ONLY, ipv6_v6only ? 1 : 0);","    }","","    if (socket_options) { socket_options(sock); }","","    // bind or connect","    auto quit = false;","    if (bind_or_connect(sock, *rp, quit)) { return sock; }","","    close_socket(sock);","","    if (quit) { break; }","  }","","  return INVALID_SOCKET;","}","","inline void set_nonblocking(socket_t sock, bool nonblocking) {","#ifdef _WIN32","  auto flags = nonblocking ? 1UL : 0UL;","  ioctlsocket(sock, FIONBIO, \u0026flags);","#else","  auto flags = fcntl(sock, F_GETFL, 0);","  fcntl(sock, F_SETFL,","        nonblocking ? (flags | O_NONBLOCK) : (flags \u0026 (~O_NONBLOCK)));","#endif","}","","inline bool is_connection_error() {","#ifdef _WIN32","  return WSAGetLastError() != WSAEWOULDBLOCK;","#else","  return errno != EINPROGRESS;","#endif","}","","inline bool bind_ip_address(socket_t sock, const std::string \u0026host) {","  struct addrinfo hints;","  struct addrinfo *result;","","  memset(\u0026hints, 0, sizeof(struct addrinfo));","  hints.ai_family = AF_UNSPEC;","  hints.ai_socktype = SOCK_STREAM;","  hints.ai_protocol = 0;","","  if (getaddrinfo(host.c_str(), \"0\", \u0026hints, \u0026result)) { return false; }","  auto se = detail::scope_exit([\u0026] { freeaddrinfo(result); });","","  auto ret = false;","  for (auto rp = result; rp; rp = rp-\u003eai_next) {","    const auto \u0026ai = *rp;","    if (!::bind(sock, ai.ai_addr, static_cast\u003csocklen_t\u003e(ai.ai_addrlen))) {","      ret = true;","      break;","    }","  }","","  return ret;","}","","#if !defined _WIN32 \u0026\u0026 !defined ANDROID \u0026\u0026 !defined _AIX \u0026\u0026 !defined __MVS__","#define USE_IF2IP","#endif","","#ifdef USE_IF2IP","inline std::string if2ip(int address_family, const std::string \u0026ifn) {","  struct ifaddrs *ifap;","  getifaddrs(\u0026ifap);","  auto se = detail::scope_exit([\u0026] { freeifaddrs(ifap); });","","  std::string addr_candidate;","  for (auto ifa = ifap; ifa; ifa = ifa-\u003eifa_next) {","    if (ifa-\u003eifa_addr \u0026\u0026 ifn == ifa-\u003eifa_name \u0026\u0026","        (AF_UNSPEC == address_family ||","         ifa-\u003eifa_addr-\u003esa_family == address_family)) {","      if (ifa-\u003eifa_addr-\u003esa_family == AF_INET) {","        auto sa = reinterpret_cast\u003cstruct sockaddr_in *\u003e(ifa-\u003eifa_addr);","        char buf[INET_ADDRSTRLEN];","        if (inet_ntop(AF_INET, \u0026sa-\u003esin_addr, buf, INET_ADDRSTRLEN)) {","          return std::string(buf, INET_ADDRSTRLEN);","        }","      } else if (ifa-\u003eifa_addr-\u003esa_family == AF_INET6) {","        auto sa = reinterpret_cast\u003cstruct sockaddr_in6 *\u003e(ifa-\u003eifa_addr);","        if (!IN6_IS_ADDR_LINKLOCAL(\u0026sa-\u003esin6_addr)) {","          char buf[INET6_ADDRSTRLEN] = {};","          if (inet_ntop(AF_INET6, \u0026sa-\u003esin6_addr, buf, INET6_ADDRSTRLEN)) {","            // equivalent to mac's IN6_IS_ADDR_UNIQUE_LOCAL","            auto s6_addr_head = sa-\u003esin6_addr.s6_addr[0];","            if (s6_addr_head == 0xfc || s6_addr_head == 0xfd) {","              addr_candidate = std::string(buf, INET6_ADDRSTRLEN);","            } else {","              return std::string(buf, INET6_ADDRSTRLEN);","            }","          }","        }","      }","    }","  }","  return addr_candidate;","}","#endif","","inline socket_t create_client_socket(","    const std::string \u0026host, const std::string \u0026ip, int port,","    int address_family, bool tcp_nodelay, bool ipv6_v6only,","    SocketOptions socket_options, time_t connection_timeout_sec,","    time_t connection_timeout_usec, time_t read_timeout_sec,","    time_t read_timeout_usec, time_t write_timeout_sec,","    time_t write_timeout_usec, const std::string \u0026intf, Error \u0026error) {","  auto sock = create_socket(","      host, ip, port, address_family, 0, tcp_nodelay, ipv6_v6only,","      std::move(socket_options),","      [\u0026](socket_t sock2, struct addrinfo \u0026ai, bool \u0026quit) -\u003e bool {","        if (!intf.empty()) {","#ifdef USE_IF2IP","          auto ip_from_if = if2ip(address_family, intf);","          if (ip_from_if.empty()) { ip_from_if = intf; }","          if (!bind_ip_address(sock2, ip_from_if)) {","            error = Error::BindIPAddress;","            return false;","          }","#endif","        }","","        set_nonblocking(sock2, true);","","        auto ret =","            ::connect(sock2, ai.ai_addr, static_cast\u003csocklen_t\u003e(ai.ai_addrlen));","","        if (ret \u003c 0) {","          if (is_connection_error()) {","            error = Error::Connection;","            return false;","          }","          error = wait_until_socket_is_ready(sock2, connection_timeout_sec,","                                             connection_timeout_usec);","          if (error != Error::Success) {","            if (error == Error::ConnectionTimeout) { quit = true; }","            return false;","          }","        }","","        set_nonblocking(sock2, false);","        set_socket_opt_time(sock2, SOL_SOCKET, SO_RCVTIMEO, read_timeout_sec,","                            read_timeout_usec);","        set_socket_opt_time(sock2, SOL_SOCKET, SO_SNDTIMEO, write_timeout_sec,","                            write_timeout_usec);","","        error = Error::Success;","        return true;","      });","","  if (sock != INVALID_SOCKET) {","    error = Error::Success;","  } else {","    if (error == Error::Success) { error = Error::Connection; }","  }","","  return sock;","}","","inline bool get_ip_and_port(const struct sockaddr_storage \u0026addr,","                            socklen_t addr_len, std::string \u0026ip, int \u0026port) {","  if (addr.ss_family == AF_INET) {","    port = ntohs(reinterpret_cast\u003cconst struct sockaddr_in *\u003e(\u0026addr)-\u003esin_port);","  } else if (addr.ss_family == AF_INET6) {","    port =","        ntohs(reinterpret_cast\u003cconst struct sockaddr_in6 *\u003e(\u0026addr)-\u003esin6_port);","  } else {","    return false;","  }","","  std::array\u003cchar, NI_MAXHOST\u003e ipstr{};","  if (getnameinfo(reinterpret_cast\u003cconst struct sockaddr *\u003e(\u0026addr), addr_len,","                  ipstr.data(), static_cast\u003csocklen_t\u003e(ipstr.size()), nullptr,","                  0, NI_NUMERICHOST)) {","    return false;","  }","","  ip = ipstr.data();","  return true;","}","","inline void get_local_ip_and_port(socket_t sock, std::string \u0026ip, int \u0026port) {","  struct sockaddr_storage addr;","  socklen_t addr_len = sizeof(addr);","  if (!getsockname(sock, reinterpret_cast\u003cstruct sockaddr *\u003e(\u0026addr),","                   \u0026addr_len)) {","    get_ip_and_port(addr, addr_len, ip, port);","  }","}","","inline void get_remote_ip_and_port(socket_t sock, std::string \u0026ip, int \u0026port) {","  struct sockaddr_storage addr;","  socklen_t addr_len = sizeof(addr);","","  if (!getpeername(sock, reinterpret_cast\u003cstruct sockaddr *\u003e(\u0026addr),","                   \u0026addr_len)) {","#ifndef _WIN32","    if (addr.ss_family == AF_UNIX) {","#if defined(__linux__)","      struct ucred ucred;","      socklen_t len = sizeof(ucred);","      if (getsockopt(sock, SOL_SOCKET, SO_PEERCRED, \u0026ucred, \u0026len) == 0) {","        port = ucred.pid;","      }","#elif defined(SOL_LOCAL) \u0026\u0026 defined(SO_PEERPID) // __APPLE__","      pid_t pid;","      socklen_t len = sizeof(pid);","      if (getsockopt(sock, SOL_LOCAL, SO_PEERPID, \u0026pid, \u0026len) == 0) {","        port = pid;","      }","#endif","      return;","    }","#endif","    get_ip_and_port(addr, addr_len, ip, port);","  }","}","","inline constexpr unsigned int str2tag_core(const char *s, size_t l,","                                           unsigned int h) {","  return (l == 0)","             ? h","             : str2tag_core(","                   s + 1, l - 1,","                   // Unsets the 6 high bits of h, therefore no overflow happens","                   (((std::numeric_limits\u003cunsigned int\u003e::max)() \u003e\u003e 6) \u0026","                    h * 33) ^","                       static_cast\u003cunsigned char\u003e(*s));","}","","inline unsigned int str2tag(const std::string \u0026s) {","  return str2tag_core(s.data(), s.size(), 0);","}","","namespace udl {","","inline constexpr unsigned int operator\"\"_t(const char *s, size_t l) {","  return str2tag_core(s, l, 0);","}","","} // namespace udl","","inline std::string","find_content_type(const std::string \u0026path,","                  const std::map\u003cstd::string, std::string\u003e \u0026user_data,","                  const std::string \u0026default_content_type) {","  auto ext = file_extension(path);","","  auto it = user_data.find(ext);","  if (it != user_data.end()) { return it-\u003esecond; }","","  using udl::operator\"\"_t;","","  switch (str2tag(ext)) {","  default: return default_content_type;","","  case \"css\"_t: return \"text/css\";","  case \"csv\"_t: return \"text/csv\";","  case \"htm\"_t:","  case \"html\"_t: return \"text/html\";","  case \"js\"_t:","  case \"mjs\"_t: return \"text/javascript\";","  case \"txt\"_t: return \"text/plain\";","  case \"vtt\"_t: return \"text/vtt\";","","  case \"apng\"_t: return \"image/apng\";","  case \"avif\"_t: return \"image/avif\";","  case \"bmp\"_t: return \"image/bmp\";","  case \"gif\"_t: return \"image/gif\";","  case \"png\"_t: return \"image/png\";","  case \"svg\"_t: return \"image/svg+xml\";","  case \"webp\"_t: return \"image/webp\";","  case \"ico\"_t: return \"image/x-icon\";","  case \"tif\"_t: return \"image/tiff\";","  case \"tiff\"_t: return \"image/tiff\";","  case \"jpg\"_t:","  case \"jpeg\"_t: return \"image/jpeg\";","","  case \"mp4\"_t: return \"video/mp4\";","  case \"mpeg\"_t: return \"video/mpeg\";","  case \"webm\"_t: return \"video/webm\";","","  case \"mp3\"_t: return \"audio/mp3\";","  case \"mpga\"_t: return \"audio/mpeg\";","  case \"weba\"_t: return \"audio/webm\";","  case \"wav\"_t: return \"audio/wave\";","","  case \"otf\"_t: return \"font/otf\";","  case \"ttf\"_t: return \"font/ttf\";","  case \"woff\"_t: return \"font/woff\";","  case \"woff2\"_t: return \"font/woff2\";","","  case \"7z\"_t: return \"application/x-7z-compressed\";","  case \"atom\"_t: return \"application/atom+xml\";","  case \"pdf\"_t: return \"application/pdf\";","  case \"json\"_t: return \"application/json\";","  case \"rss\"_t: return \"application/rss+xml\";","  case \"tar\"_t: return \"application/x-tar\";","  case \"xht\"_t:","  case \"xhtml\"_t: return \"application/xhtml+xml\";","  case \"xslt\"_t: return \"application/xslt+xml\";","  case \"xml\"_t: return \"application/xml\";","  case \"gz\"_t: return \"application/gzip\";","  case \"zip\"_t: return \"application/zip\";","  case \"wasm\"_t: return \"application/wasm\";","  }","}","","inline bool can_compress_content_type(const std::string \u0026content_type) {","  using udl::operator\"\"_t;","","  auto tag = str2tag(content_type);","","  switch (tag) {","  case \"image/svg+xml\"_t:","  case \"application/javascript\"_t:","  case \"application/json\"_t:","  case \"application/xml\"_t:","  case \"application/protobuf\"_t:","  case \"application/xhtml+xml\"_t: return true;","","  case \"text/event-stream\"_t: return false;","","  default: return !content_type.rfind(\"text/\", 0);","  }","}","","inline EncodingType encoding_type(const Request \u0026req, const Response \u0026res) {","  auto ret =","      detail::can_compress_content_type(res.get_header_value(\"Content-Type\"));","  if (!ret) { return EncodingType::None; }","","  const auto \u0026s = req.get_header_value(\"Accept-Encoding\");","  (void)(s);","","#ifdef CPPHTTPLIB_BROTLI_SUPPORT","  // TODO: 'Accept-Encoding' has br, not br;q=0","  ret = s.find(\"br\") != std::string::npos;","  if (ret) { return EncodingType::Brotli; }","#endif","","#ifdef CPPHTTPLIB_ZLIB_SUPPORT","  // TODO: 'Accept-Encoding' has gzip, not gzip;q=0","  ret = s.find(\"gzip\") != std::string::npos;","  if (ret) { return EncodingType::Gzip; }","#endif","","#ifdef CPPHTTPLIB_ZSTD_SUPPORT","  // TODO: 'Accept-Encoding' has zstd, not zstd;q=0","  ret = s.find(\"zstd\") != std::string::npos;","  if (ret) { return EncodingType::Zstd; }","#endif","","  return EncodingType::None;","}","","inline bool nocompressor::compress(const char *data, size_t data_length,","                                   bool /*last*/, Callback callback) {","  if (!data_length) { return true; }","  return callback(data, data_length);","}","","#ifdef CPPHTTPLIB_ZLIB_SUPPORT","inline gzip_compressor::gzip_compressor() {","  std::memset(\u0026strm_, 0, sizeof(strm_));","  strm_.zalloc = Z_NULL;","  strm_.zfree = Z_NULL;","  strm_.opaque = Z_NULL;","","  is_valid_ = deflateInit2(\u0026strm_, Z_DEFAULT_COMPRESSION, Z_DEFLATED, 31, 8,","                           Z_DEFAULT_STRATEGY) == Z_OK;","}","","inline gzip_compressor::~gzip_compressor() { deflateEnd(\u0026strm_); }","","inline bool gzip_compressor::compress(const char *data, size_t data_length,","                                      bool last, Callback callback) {","  assert(is_valid_);","","  do {","    constexpr size_t max_avail_in =","        (std::numeric_limits\u003cdecltype(strm_.avail_in)\u003e::max)();","","    strm_.avail_in = static_cast\u003cdecltype(strm_.avail_in)\u003e(","        (std::min)(data_length, max_avail_in));","    strm_.next_in = const_cast\u003cBytef *\u003e(reinterpret_cast\u003cconst Bytef *\u003e(data));","","    data_length -= strm_.avail_in;","    data += strm_.avail_in;","","    auto flush = (last \u0026\u0026 data_length == 0) ? Z_FINISH : Z_NO_FLUSH;","    auto ret = Z_OK;","","    std::array\u003cchar, CPPHTTPLIB_COMPRESSION_BUFSIZ\u003e buff{};","    do {","      strm_.avail_out = static_cast\u003cuInt\u003e(buff.size());","      strm_.next_out = reinterpret_cast\u003cBytef *\u003e(buff.data());","","      ret = deflate(\u0026strm_, flush);","      if (ret == Z_STREAM_ERROR) { return false; }","","      if (!callback(buff.data(), buff.size() - strm_.avail_out)) {","        return false;","      }","    } while (strm_.avail_out == 0);","","    assert((flush == Z_FINISH \u0026\u0026 ret == Z_STREAM_END) ||","           (flush == Z_NO_FLUSH \u0026\u0026 ret == Z_OK));","    assert(strm_.avail_in == 0);","  } while (data_length \u003e 0);","","  return true;","}","","inline gzip_decompressor::gzip_decompressor() {","  std::memset(\u0026strm_, 0, sizeof(strm_));","  strm_.zalloc = Z_NULL;","  strm_.zfree = Z_NULL;","  strm_.opaque = Z_NULL;","","  // 15 is the value of wbits, which should be at the maximum possible value","  // to ensure that any gzip stream can be decoded. The offset of 32 specifies","  // that the stream type should be automatically detected either gzip or","  // deflate.","  is_valid_ = inflateInit2(\u0026strm_, 32 + 15) == Z_OK;","}","","inline gzip_decompressor::~gzip_decompressor() { inflateEnd(\u0026strm_); }","","inline bool gzip_decompressor::is_valid() const { return is_valid_; }","","inline bool gzip_decompressor::decompress(const char *data, size_t data_length,","                                          Callback callback) {","  assert(is_valid_);","","  auto ret = Z_OK;","","  do {","    constexpr size_t max_avail_in =","        (std::numeric_limits\u003cdecltype(strm_.avail_in)\u003e::max)();","","    strm_.avail_in = static_cast\u003cdecltype(strm_.avail_in)\u003e(","        (std::min)(data_length, max_avail_in));","    strm_.next_in = const_cast\u003cBytef *\u003e(reinterpret_cast\u003cconst Bytef *\u003e(data));","","    data_length -= strm_.avail_in;","    data += strm_.avail_in;","","    std::array\u003cchar, CPPHTTPLIB_COMPRESSION_BUFSIZ\u003e buff{};","    while (strm_.avail_in \u003e 0 \u0026\u0026 ret == Z_OK) {","      strm_.avail_out = static_cast\u003cuInt\u003e(buff.size());","      strm_.next_out = reinterpret_cast\u003cBytef *\u003e(buff.data());","","      ret = inflate(\u0026strm_, Z_NO_FLUSH);","","      assert(ret != Z_STREAM_ERROR);","      switch (ret) {","      case Z_NEED_DICT:","      case Z_DATA_ERROR:","      case Z_MEM_ERROR: inflateEnd(\u0026strm_); return false;","      }","","      if (!callback(buff.data(), buff.size() - strm_.avail_out)) {","        return false;","      }","    }","","    if (ret != Z_OK \u0026\u0026 ret != Z_STREAM_END) { return false; }","","  } while (data_length \u003e 0);","","  return true;","}","#endif","","#ifdef CPPHTTPLIB_BROTLI_SUPPORT","inline brotli_compressor::brotli_compressor() {","  state_ = BrotliEncoderCreateInstance(nullptr, nullptr, nullptr);","}","","inline brotli_compressor::~brotli_compressor() {","  BrotliEncoderDestroyInstance(state_);","}","","inline bool brotli_compressor::compress(const char *data, size_t data_length,","                                        bool last, Callback callback) {","  std::array\u003cuint8_t, CPPHTTPLIB_COMPRESSION_BUFSIZ\u003e buff{};","","  auto operation = last ? BROTLI_OPERATION_FINISH : BROTLI_OPERATION_PROCESS;","  auto available_in = data_length;","  auto next_in = reinterpret_cast\u003cconst uint8_t *\u003e(data);","","  for (;;) {","    if (last) {","      if (BrotliEncoderIsFinished(state_)) { break; }","    } else {","      if (!available_in) { break; }","    }","","    auto available_out = buff.size();","    auto next_out = buff.data();","","    if (!BrotliEncoderCompressStream(state_, operation, \u0026available_in, \u0026next_in,","                                     \u0026available_out, \u0026next_out, nullptr)) {","      return false;","    }","","    auto output_bytes = buff.size() - available_out;","    if (output_bytes) {","      callback(reinterpret_cast\u003cconst char *\u003e(buff.data()), output_bytes);","    }","  }","","  return true;","}","","inline brotli_decompressor::brotli_decompressor() {","  decoder_s = BrotliDecoderCreateInstance(0, 0, 0);","  decoder_r = decoder_s ? BROTLI_DECODER_RESULT_NEEDS_MORE_INPUT","                        : BROTLI_DECODER_RESULT_ERROR;","}","","inline brotli_decompressor::~brotli_decompressor() {","  if (decoder_s) { BrotliDecoderDestroyInstance(decoder_s); }","}","","inline bool brotli_decompressor::is_valid() const { return decoder_s; }","","inline bool brotli_decompressor::decompress(const char *data,","                                            size_t data_length,","                                            Callback callback) {","  if (decoder_r == BROTLI_DECODER_RESULT_SUCCESS ||","      decoder_r == BROTLI_DECODER_RESULT_ERROR) {","    return 0;","  }","","  auto next_in = reinterpret_cast\u003cconst uint8_t *\u003e(data);","  size_t avail_in = data_length;","  size_t total_out;","","  decoder_r = BROTLI_DECODER_RESULT_NEEDS_MORE_OUTPUT;","","  std::array\u003cchar, CPPHTTPLIB_COMPRESSION_BUFSIZ\u003e buff{};","  while (decoder_r == BROTLI_DECODER_RESULT_NEEDS_MORE_OUTPUT) {","    char *next_out = buff.data();","    size_t avail_out = buff.size();","","    decoder_r = BrotliDecoderDecompressStream(","        decoder_s, \u0026avail_in, \u0026next_in, \u0026avail_out,","        reinterpret_cast\u003cuint8_t **\u003e(\u0026next_out), \u0026total_out);","","    if (decoder_r == BROTLI_DECODER_RESULT_ERROR) { return false; }","","    if (!callback(buff.data(), buff.size() - avail_out)) { return false; }","  }","","  return decoder_r == BROTLI_DECODER_RESULT_SUCCESS ||","         decoder_r == BROTLI_DECODER_RESULT_NEEDS_MORE_INPUT;","}","#endif","","#ifdef CPPHTTPLIB_ZSTD_SUPPORT","inline zstd_compressor::zstd_compressor() {","  ctx_ = ZSTD_createCCtx();","  ZSTD_CCtx_setParameter(ctx_, ZSTD_c_compressionLevel, ZSTD_fast);","}","","inline zstd_compressor::~zstd_compressor() { ZSTD_freeCCtx(ctx_); }","","inline bool zstd_compressor::compress(const char *data, size_t data_length,","                                      bool last, Callback callback) {","  std::array\u003cchar, CPPHTTPLIB_COMPRESSION_BUFSIZ\u003e buff{};","","  ZSTD_EndDirective mode = last ? ZSTD_e_end : ZSTD_e_continue;","  ZSTD_inBuffer input = {data, data_length, 0};","","  bool finished;","  do {","    ZSTD_outBuffer output = {buff.data(), CPPHTTPLIB_COMPRESSION_BUFSIZ, 0};","    size_t const remaining = ZSTD_compressStream2(ctx_, \u0026output, \u0026input, mode);","","    if (ZSTD_isError(remaining)) { return false; }","","    if (!callback(buff.data(), output.pos)) { return false; }","","    finished = last ? (remaining == 0) : (input.pos == input.size);","","  } while (!finished);","","  return true;","}","","inline zstd_decompressor::zstd_decompressor() { ctx_ = ZSTD_createDCtx(); }","","inline zstd_decompressor::~zstd_decompressor() { ZSTD_freeDCtx(ctx_); }","","inline bool zstd_decompressor::is_valid() const { return ctx_ != nullptr; }","","inline bool zstd_decompressor::decompress(const char *data, size_t data_length,","                                          Callback callback) {","  std::array\u003cchar, CPPHTTPLIB_COMPRESSION_BUFSIZ\u003e buff{};","  ZSTD_inBuffer input = {data, data_length, 0};","","  while (input.pos \u003c input.size) {","    ZSTD_outBuffer output = {buff.data(), CPPHTTPLIB_COMPRESSION_BUFSIZ, 0};","    size_t const remaining = ZSTD_decompressStream(ctx_, \u0026output, \u0026input);","","    if (ZSTD_isError(remaining)) { return false; }","","    if (!callback(buff.data(), output.pos)) { return false; }","  }","","  return true;","}","#endif","","inline bool has_header(const Headers \u0026headers, const std::string \u0026key) {","  return headers.find(key) != headers.end();","}","","inline const char *get_header_value(const Headers \u0026headers,","                                    const std::string \u0026key, const char *def,","                                    size_t id) {","  auto rng = headers.equal_range(key);","  auto it = rng.first;","  std::advance(it, static_cast\u003cssize_t\u003e(id));","  if (it != rng.second) { return it-\u003esecond.c_str(); }","  return def;","}","","template \u003ctypename T\u003e","inline bool parse_header(const char *beg, const char *end, T fn) {","  // Skip trailing spaces and tabs.","  while (beg \u003c end \u0026\u0026 is_space_or_tab(end[-1])) {","    end--;","  }","","  auto p = beg;","  while (p \u003c end \u0026\u0026 *p != ':') {","    p++;","  }","","  auto name = std::string(beg, p);","  if (!detail::fields::is_field_name(name)) { return false; }","","  if (p == end) { return false; }","","  auto key_end = p;","","  if (*p++ != ':') { return false; }","","  while (p \u003c end \u0026\u0026 is_space_or_tab(*p)) {","    p++;","  }","","  if (p \u003c= end) {","    auto key_len = key_end - beg;","    if (!key_len) { return false; }","","    auto key = std::string(beg, key_end);","    auto val = std::string(p, end);","","    if (!detail::fields::is_field_value(val)) { return false; }","","    if (case_ignore::equal(key, \"Location\") ||","        case_ignore::equal(key, \"Referer\")) {","      fn(key, val);","    } else {","      fn(key, decode_url(val, false));","    }","","    return true;","  }","","  return false;","}","","inline bool read_headers(Stream \u0026strm, Headers \u0026headers) {","  const auto bufsiz = 2048;","  char buf[bufsiz];","  stream_line_reader line_reader(strm, buf, bufsiz);","","  for (;;) {","    if (!line_reader.getline()) { return false; }","","    // Check if the line ends with CRLF.","    auto line_terminator_len = 2;","    if (line_reader.end_with_crlf()) {","      // Blank line indicates end of headers.","      if (line_reader.size() == 2) { break; }","    } else {","#ifdef CPPHTTPLIB_ALLOW_LF_AS_LINE_TERMINATOR","      // Blank line indicates end of headers.","      if (line_reader.size() == 1) { break; }","      line_terminator_len = 1;","#else","      continue; // Skip invalid line.","#endif","    }","","    if (line_reader.size() \u003e CPPHTTPLIB_HEADER_MAX_LENGTH) { return false; }","","    // Exclude line terminator","    auto end = line_reader.ptr() + line_reader.size() - line_terminator_len;","","    if (!parse_header(line_reader.ptr(), end,","                      [\u0026](const std::string \u0026key, const std::string \u0026val) {","                        headers.emplace(key, val);","                      })) {","      return false;","    }","  }","","  return true;","}","","inline bool read_content_with_length(Stream \u0026strm, uint64_t len,","                                     Progress progress,","                                     ContentReceiverWithProgress out) {","  char buf[CPPHTTPLIB_RECV_BUFSIZ];","","  uint64_t r = 0;","  while (r \u003c len) {","    auto read_len = static_cast\u003csize_t\u003e(len - r);","    auto n = strm.read(buf, (std::min)(read_len, CPPHTTPLIB_RECV_BUFSIZ));","    if (n \u003c= 0) { return false; }","","    if (!out(buf, static_cast\u003csize_t\u003e(n), r, len)) { return false; }","    r += static_cast\u003cuint64_t\u003e(n);","","    if (progress) {","      if (!progress(r, len)) { return false; }","    }","  }","","  return true;","}","","inline void skip_content_with_length(Stream \u0026strm, uint64_t len) {","  char buf[CPPHTTPLIB_RECV_BUFSIZ];","  uint64_t r = 0;","  while (r \u003c len) {","    auto read_len = static_cast\u003csize_t\u003e(len - r);","    auto n = strm.read(buf, (std::min)(read_len, CPPHTTPLIB_RECV_BUFSIZ));","    if (n \u003c= 0) { return; }","    r += static_cast\u003cuint64_t\u003e(n);","  }","}","","inline bool read_content_without_length(Stream \u0026strm,","                                        ContentReceiverWithProgress out) {","  char buf[CPPHTTPLIB_RECV_BUFSIZ];","  uint64_t r = 0;","  for (;;) {","    auto n = strm.read(buf, CPPHTTPLIB_RECV_BUFSIZ);","    if (n == 0) { return true; }","    if (n \u003c 0) { return false; }","","    if (!out(buf, static_cast\u003csize_t\u003e(n), r, 0)) { return false; }","    r += static_cast\u003cuint64_t\u003e(n);","  }","","  return true;","}","","template \u003ctypename T\u003e","inline bool read_content_chunked(Stream \u0026strm, T \u0026x,","                                 ContentReceiverWithProgress out) {","  const auto bufsiz = 16;","  char buf[bufsiz];","","  stream_line_reader line_reader(strm, buf, bufsiz);","","  if (!line_reader.getline()) { return false; }","","  unsigned long chunk_len;","  while (true) {","    char *end_ptr;","","    chunk_len = std::strtoul(line_reader.ptr(), \u0026end_ptr, 16);","","    if (end_ptr == line_reader.ptr()) { return false; }","    if (chunk_len == ULONG_MAX) { return false; }","","    if (chunk_len == 0) { break; }","","    if (!read_content_with_length(strm, chunk_len, nullptr, out)) {","      return false;","    }","","    if (!line_reader.getline()) { return false; }","","    if (strcmp(line_reader.ptr(), \"\\r\\n\") != 0) { return false; }","","    if (!line_reader.getline()) { return false; }","  }","","  assert(chunk_len == 0);","","  // NOTE: In RFC 9112, '7.1 Chunked Transfer Coding' mentions \"The chunked","  // transfer coding is complete when a chunk with a chunk-size of zero is","  // received, possibly followed by a trailer section, and finally terminated by","  // an empty line\". https://www.rfc-editor.org/rfc/rfc9112.html#section-7.1","  //","  // In '7.1.3. Decoding Chunked', however, the pseudo-code in the section","  // does't care for the existence of the final CRLF. In other words, it seems","  // to be ok whether the final CRLF exists or not in the chunked data.","  // https://www.rfc-editor.org/rfc/rfc9112.html#section-7.1.3","  //","  // According to the reference code in RFC 9112, cpp-httplib now allows","  // chunked transfer coding data without the final CRLF.","  if (!line_reader.getline()) { return true; }","","  while (strcmp(line_reader.ptr(), \"\\r\\n\") != 0) {","    if (line_reader.size() \u003e CPPHTTPLIB_HEADER_MAX_LENGTH) { return false; }","","    // Exclude line terminator","    constexpr auto line_terminator_len = 2;","    auto end = line_reader.ptr() + line_reader.size() - line_terminator_len;","","    parse_header(line_reader.ptr(), end,","                 [\u0026](const std::string \u0026key, const std::string \u0026val) {","                   x.headers.emplace(key, val);","                 });","","    if (!line_reader.getline()) { return false; }","  }","","  return true;","}","","inline bool is_chunked_transfer_encoding(const Headers \u0026headers) {","  return case_ignore::equal(","      get_header_value(headers, \"Transfer-Encoding\", \"\", 0), \"chunked\");","}","","template \u003ctypename T, typename U\u003e","bool prepare_content_receiver(T \u0026x, int \u0026status,","                              ContentReceiverWithProgress receiver,","                              bool decompress, U callback) {","  if (decompress) {","    std::string encoding = x.get_header_value(\"Content-Encoding\");","    std::unique_ptr\u003cdecompressor\u003e decompressor;","","    if (encoding == \"gzip\" || encoding == \"deflate\") {","#ifdef CPPHTTPLIB_ZLIB_SUPPORT","      decompressor = detail::make_unique\u003cgzip_decompressor\u003e();","#else","      status = StatusCode::UnsupportedMediaType_415;","      return false;","#endif","    } else if (encoding.find(\"br\") != std::string::npos) {","#ifdef CPPHTTPLIB_BROTLI_SUPPORT","      decompressor = detail::make_unique\u003cbrotli_decompressor\u003e();","#else","      status = StatusCode::UnsupportedMediaType_415;","      return false;","#endif","    } else if (encoding == \"zstd\") {","#ifdef CPPHTTPLIB_ZSTD_SUPPORT","      decompressor = detail::make_unique\u003czstd_decompressor\u003e();","#else","      status = StatusCode::UnsupportedMediaType_415;","      return false;","#endif","    }","","    if (decompressor) {","      if (decompressor-\u003eis_valid()) {","        ContentReceiverWithProgress out = [\u0026](const char *buf, size_t n,","                                              uint64_t off, uint64_t len) {","          return decompressor-\u003edecompress(buf, n,","                                          [\u0026](const char *buf2, size_t n2) {","                                            return receiver(buf2, n2, off, len);","                                          });","        };","        return callback(std::move(out));","      } else {","        status = StatusCode::InternalServerError_500;","        return false;","      }","    }","  }","","  ContentReceiverWithProgress out = [\u0026](const char *buf, size_t n, uint64_t off,","                                        uint64_t len) {","    return receiver(buf, n, off, len);","  };","  return callback(std::move(out));","}","","template \u003ctypename T\u003e","bool read_content(Stream \u0026strm, T \u0026x, size_t payload_max_length, int \u0026status,","                  Progress progress, ContentReceiverWithProgress receiver,","                  bool decompress) {","  return prepare_content_receiver(","      x, status, std::move(receiver), decompress,","      [\u0026](const ContentReceiverWithProgress \u0026out) {","        auto ret = true;","        auto exceed_payload_max_length = false;","","        if (is_chunked_transfer_encoding(x.headers)) {","          ret = read_content_chunked(strm, x, out);","        } else if (!has_header(x.headers, \"Content-Length\")) {","          ret = read_content_without_length(strm, out);","        } else {","          auto is_invalid_value = false;","          auto len = get_header_value_u64(","              x.headers, \"Content-Length\",","              (std::numeric_limits\u003cuint64_t\u003e::max)(), 0, is_invalid_value);","","          if (is_invalid_value) {","            ret = false;","          } else if (len \u003e payload_max_length) {","            exceed_payload_max_length = true;","            skip_content_with_length(strm, len);","            ret = false;","          } else if (len \u003e 0) {","            ret = read_content_with_length(strm, len, std::move(progress), out);","          }","        }","","        if (!ret) {","          status = exceed_payload_max_length ? StatusCode::PayloadTooLarge_413","                                             : StatusCode::BadRequest_400;","        }","        return ret;","      });","}","","inline ssize_t write_request_line(Stream \u0026strm, const std::string \u0026method,","                                  const std::string \u0026path) {","  std::string s = method;","  s += \" \";","  s += path;","  s += \" HTTP/1.1\\r\\n\";","  return strm.write(s.data(), s.size());","}","","inline ssize_t write_response_line(Stream \u0026strm, int status) {","  std::string s = \"HTTP/1.1 \";","  s += std::to_string(status);","  s += \" \";","  s += httplib::status_message(status);","  s += \"\\r\\n\";","  return strm.write(s.data(), s.size());","}","","inline ssize_t write_headers(Stream \u0026strm, const Headers \u0026headers) {","  ssize_t write_len = 0;","  for (const auto \u0026x : headers) {","    std::string s;","    s = x.first;","    s += \": \";","    s += x.second;","    s += \"\\r\\n\";","","    auto len = strm.write(s.data(), s.size());","    if (len \u003c 0) { return len; }","    write_len += len;","  }","  auto len = strm.write(\"\\r\\n\");","  if (len \u003c 0) { return len; }","  write_len += len;","  return write_len;","}","","inline bool write_data(Stream \u0026strm, const char *d, size_t l) {","  size_t offset = 0;","  while (offset \u003c l) {","    auto length = strm.write(d + offset, l - offset);","    if (length \u003c 0) { return false; }","    offset += static_cast\u003csize_t\u003e(length);","  }","  return true;","}","","template \u003ctypename T\u003e","inline bool write_content(Stream \u0026strm, const ContentProvider \u0026content_provider,","                          size_t offset, size_t length, T is_shutting_down,","                          Error \u0026error) {","  size_t end_offset = offset + length;","  auto ok = true;","  DataSink data_sink;","","  data_sink.write = [\u0026](const char *d, size_t l) -\u003e bool {","    if (ok) {","      if (write_data(strm, d, l)) {","        offset += l;","      } else {","        ok = false;","      }","    }","    return ok;","  };","","  data_sink.is_writable = [\u0026]() -\u003e bool { return strm.wait_writable(); };","","  while (offset \u003c end_offset \u0026\u0026 !is_shutting_down()) {","    if (!strm.wait_writable()) {","      error = Error::Write;","      return false;","    } else if (!content_provider(offset, end_offset - offset, data_sink)) {","      error = Error::Canceled;","      return false;","    } else if (!ok) {","      error = Error::Write;","      return false;","    }","  }","","  error = Error::Success;","  return true;","}","","template \u003ctypename T\u003e","inline bool write_content(Stream \u0026strm, const ContentProvider \u0026content_provider,","                          size_t offset, size_t length,","                          const T \u0026is_shutting_down) {","  auto error = Error::Success;","  return write_content(strm, content_provider, offset, length, is_shutting_down,","                       error);","}","","template \u003ctypename T\u003e","inline bool","write_content_without_length(Stream \u0026strm,","                             const ContentProvider \u0026content_provider,","                             const T \u0026is_shutting_down) {","  size_t offset = 0;","  auto data_available = true;","  auto ok = true;","  DataSink data_sink;","","  data_sink.write = [\u0026](const char *d, size_t l) -\u003e bool {","    if (ok) {","      offset += l;","      if (!write_data(strm, d, l)) { ok = false; }","    }","    return ok;","  };","","  data_sink.is_writable = [\u0026]() -\u003e bool { return strm.wait_writable(); };","","  data_sink.done = [\u0026](void) { data_available = false; };","","  while (data_available \u0026\u0026 !is_shutting_down()) {","    if (!strm.wait_writable()) {","      return false;","    } else if (!content_provider(offset, 0, data_sink)) {","      return false;","    } else if (!ok) {","      return false;","    }","  }","  return true;","}","","template \u003ctypename T, typename U\u003e","inline bool","write_content_chunked(Stream \u0026strm, const ContentProvider \u0026content_provider,","                      const T \u0026is_shutting_down, U \u0026compressor, Error \u0026error) {","  size_t offset = 0;","  auto data_available = true;","  auto ok = true;","  DataSink data_sink;","","  data_sink.write = [\u0026](const char *d, size_t l) -\u003e bool {","    if (ok) {","      data_available = l \u003e 0;","      offset += l;","","      std::string payload;","      if (compressor.compress(d, l, false,","                              [\u0026](const char *data, size_t data_len) {","                                payload.append(data, data_len);","                                return true;","                              })) {","        if (!payload.empty()) {","          // Emit chunked response header and footer for each chunk","          auto chunk =","              from_i_to_hex(payload.size()) + \"\\r\\n\" + payload + \"\\r\\n\";","          if (!write_data(strm, chunk.data(), chunk.size())) { ok = false; }","        }","      } else {","        ok = false;","      }","    }","    return ok;","  };","","  data_sink.is_writable = [\u0026]() -\u003e bool { return strm.wait_writable(); };","","  auto done_with_trailer = [\u0026](const Headers *trailer) {","    if (!ok) { return; }","","    data_available = false;","","    std::string payload;","    if (!compressor.compress(nullptr, 0, true,","                             [\u0026](const char *data, size_t data_len) {","                               payload.append(data, data_len);","                               return true;","                             })) {","      ok = false;","      return;","    }","","    if (!payload.empty()) {","      // Emit chunked response header and footer for each chunk","      auto chunk = from_i_to_hex(payload.size()) + \"\\r\\n\" + payload + \"\\r\\n\";","      if (!write_data(strm, chunk.data(), chunk.size())) {","        ok = false;","        return;","      }","    }","","    constexpr const char done_marker[] = \"0\\r\\n\";","    if (!write_data(strm, done_marker, str_len(done_marker))) { ok = false; }","","    // Trailer","    if (trailer) {","      for (const auto \u0026kv : *trailer) {","        std::string field_line = kv.first + \": \" + kv.second + \"\\r\\n\";","        if (!write_data(strm, field_line.data(), field_line.size())) {","          ok = false;","        }","      }","    }","","    constexpr const char crlf[] = \"\\r\\n\";","    if (!write_data(strm, crlf, str_len(crlf))) { ok = false; }","  };","","  data_sink.done = [\u0026](void) { done_with_trailer(nullptr); };","","  data_sink.done_with_trailer = [\u0026](const Headers \u0026trailer) {","    done_with_trailer(\u0026trailer);","  };","","  while (data_available \u0026\u0026 !is_shutting_down()) {","    if (!strm.wait_writable()) {","      error = Error::Write;","      return false;","    } else if (!content_provider(offset, 0, data_sink)) {","      error = Error::Canceled;","      return false;","    } else if (!ok) {","      error = Error::Write;","      return false;","    }","  }","","  error = Error::Success;","  return true;","}","","template \u003ctypename T, typename U\u003e","inline bool write_content_chunked(Stream \u0026strm,","                                  const ContentProvider \u0026content_provider,","                                  const T \u0026is_shutting_down, U \u0026compressor) {","  auto error = Error::Success;","  return write_content_chunked(strm, content_provider, is_shutting_down,","                               compressor, error);","}","","template \u003ctypename T\u003e","inline bool redirect(T \u0026cli, Request \u0026req, Response \u0026res,","                     const std::string \u0026path, const std::string \u0026location,","                     Error \u0026error) {","  Request new_req = req;","  new_req.path = path;","  new_req.redirect_count_ -= 1;","","  if (res.status == StatusCode::SeeOther_303 \u0026\u0026","      (req.method != \"GET\" \u0026\u0026 req.method != \"HEAD\")) {","    new_req.method = \"GET\";","    new_req.body.clear();","    new_req.headers.clear();","  }","","  Response new_res;","","  auto ret = cli.send(new_req, new_res, error);","  if (ret) {","    req = new_req;","    res = new_res;","","    if (res.location.empty()) { res.location = location; }","  }","  return ret;","}","","inline std::string params_to_query_str(const Params \u0026params) {","  std::string query;","","  for (auto it = params.begin(); it != params.end(); ++it) {","    if (it != params.begin()) { query += \"\u0026\"; }","    query += it-\u003efirst;","    query += \"=\";","    query += encode_query_param(it-\u003esecond);","  }","  return query;","}","","inline void parse_query_text(const char *data, std::size_t size,","                             Params \u0026params) {","  std::set\u003cstd::string\u003e cache;","  split(data, data + size, '\u0026', [\u0026](const char *b, const char *e) {","    std::string kv(b, e);","    if (cache.find(kv) != cache.end()) { return; }","    cache.insert(std::move(kv));","","    std::string key;","    std::string val;","    divide(b, static_cast\u003cstd::size_t\u003e(e - b), '=',","           [\u0026](const char *lhs_data, std::size_t lhs_size, const char *rhs_data,","               std::size_t rhs_size) {","             key.assign(lhs_data, lhs_size);","             val.assign(rhs_data, rhs_size);","           });","","    if (!key.empty()) {","      params.emplace(decode_url(key, true), decode_url(val, true));","    }","  });","}","","inline void parse_query_text(const std::string \u0026s, Params \u0026params) {","  parse_query_text(s.data(), s.size(), params);","}","","inline bool parse_multipart_boundary(const std::string \u0026content_type,","                                     std::string \u0026boundary) {","  auto boundary_keyword = \"boundary=\";","  auto pos = content_type.find(boundary_keyword);","  if (pos == std::string::npos) { return false; }","  auto end = content_type.find(';', pos);","  auto beg = pos + strlen(boundary_keyword);","  boundary = trim_double_quotes_copy(content_type.substr(beg, end - beg));","  return !boundary.empty();","}","","inline void parse_disposition_params(const std::string \u0026s, Params \u0026params) {","  std::set\u003cstd::string\u003e cache;","  split(s.data(), s.data() + s.size(), ';', [\u0026](const char *b, const char *e) {","    std::string kv(b, e);","    if (cache.find(kv) != cache.end()) { return; }","    cache.insert(kv);","","    std::string key;","    std::string val;","    split(b, e, '=', [\u0026](const char *b2, const char *e2) {","      if (key.empty()) {","        key.assign(b2, e2);","      } else {","        val.assign(b2, e2);","      }","    });","","    if (!key.empty()) {","      params.emplace(trim_double_quotes_copy((key)),","                     trim_double_quotes_copy((val)));","    }","  });","}","","#ifdef CPPHTTPLIB_NO_EXCEPTIONS","inline bool parse_range_header(const std::string \u0026s, Ranges \u0026ranges) {","#else","inline bool parse_range_header(const std::string \u0026s, Ranges \u0026ranges) try {","#endif","  auto is_valid = [](const std::string \u0026str) {","    return std::all_of(str.cbegin(), str.cend(),","                       [](unsigned char c) { return std::isdigit(c); });","  };","","  if (s.size() \u003e 7 \u0026\u0026 s.compare(0, 6, \"bytes=\") == 0) {","    const auto pos = static_cast\u003csize_t\u003e(6);","    const auto len = static_cast\u003csize_t\u003e(s.size() - 6);","    auto all_valid_ranges = true;","    split(\u0026s[pos], \u0026s[pos + len], ',', [\u0026](const char *b, const char *e) {","      if (!all_valid_ranges) { return; }","","      const auto it = std::find(b, e, '-');","      if (it == e) {","        all_valid_ranges = false;","        return;","      }","","      const auto lhs = std::string(b, it);","      const auto rhs = std::string(it + 1, e);","      if (!is_valid(lhs) || !is_valid(rhs)) {","        all_valid_ranges = false;","        return;","      }","","      const auto first =","          static_cast\u003cssize_t\u003e(lhs.empty() ? -1 : std::stoll(lhs));","      const auto last =","          static_cast\u003cssize_t\u003e(rhs.empty() ? -1 : std::stoll(rhs));","      if ((first == -1 \u0026\u0026 last == -1) ||","          (first != -1 \u0026\u0026 last != -1 \u0026\u0026 first \u003e last)) {","        all_valid_ranges = false;","        return;","      }","","      ranges.emplace_back(first, last);","    });","    return all_valid_ranges \u0026\u0026 !ranges.empty();","  }","  return false;","#ifdef CPPHTTPLIB_NO_EXCEPTIONS","}","#else","} catch (...) { return false; }","#endif","","class MultipartFormDataParser {","public:","  MultipartFormDataParser() = default;","","  void set_boundary(std::string \u0026\u0026boundary) {","    boundary_ = boundary;","    dash_boundary_crlf_ = dash_ + boundary_ + crlf_;","    crlf_dash_boundary_ = crlf_ + dash_ + boundary_;","  }","","  bool is_valid() const { return is_valid_; }","","  bool parse(const char *buf, size_t n, const ContentReceiver \u0026content_callback,","             const MultipartContentHeader \u0026header_callback) {","","    buf_append(buf, n);","","    while (buf_size() \u003e 0) {","      switch (state_) {","      case 0: { // Initial boundary","        buf_erase(buf_find(dash_boundary_crlf_));","        if (dash_boundary_crlf_.size() \u003e buf_size()) { return true; }","        if (!buf_start_with(dash_boundary_crlf_)) { return false; }","        buf_erase(dash_boundary_crlf_.size());","        state_ = 1;","        break;","      }","      case 1: { // New entry","        clear_file_info();","        state_ = 2;","        break;","      }","      case 2: { // Headers","        auto pos = buf_find(crlf_);","        if (pos \u003e CPPHTTPLIB_HEADER_MAX_LENGTH) { return false; }","        while (pos \u003c buf_size()) {","          // Empty line","          if (pos == 0) {","            if (!header_callback(file_)) {","              is_valid_ = false;","              return false;","            }","            buf_erase(crlf_.size());","            state_ = 3;","            break;","          }","","          const auto header = buf_head(pos);","","          if (!parse_header(header.data(), header.data() + header.size(),","                            [\u0026](const std::string \u0026, const std::string \u0026) {})) {","            is_valid_ = false;","            return false;","          }","","          constexpr const char header_content_type[] = \"Content-Type:\";","","          if (start_with_case_ignore(header, header_content_type)) {","            file_.content_type =","                trim_copy(header.substr(str_len(header_content_type)));","          } else {","            thread_local const std::regex re_content_disposition(","                R\"~(^Content-Disposition:\\s*form-data;\\s*(.*)$)~\",","                std::regex_constants::icase);","","            std::smatch m;","            if (std::regex_match(header, m, re_content_disposition)) {","              Params params;","              parse_disposition_params(m[1], params);","","              auto it = params.find(\"name\");","              if (it != params.end()) {","                file_.name = it-\u003esecond;","              } else {","                is_valid_ = false;","                return false;","              }","","              it = params.find(\"filename\");","              if (it != params.end()) { file_.filename = it-\u003esecond; }","","              it = params.find(\"filename*\");","              if (it != params.end()) {","                // Only allow UTF-8 encoding...","                thread_local const std::regex re_rfc5987_encoding(","                    R\"~(^UTF-8''(.+?)$)~\", std::regex_constants::icase);","","                std::smatch m2;","                if (std::regex_match(it-\u003esecond, m2, re_rfc5987_encoding)) {","                  file_.filename = decode_url(m2[1], false); // override...","                } else {","                  is_valid_ = false;","                  return false;","                }","              }","            }","          }","          buf_erase(pos + crlf_.size());","          pos = buf_find(crlf_);","        }","        if (state_ != 3) { return true; }","        break;","      }","      case 3: { // Body","        if (crlf_dash_boundary_.size() \u003e buf_size()) { return true; }","        auto pos = buf_find(crlf_dash_boundary_);","        if (pos \u003c buf_size()) {","          if (!content_callback(buf_data(), pos)) {","            is_valid_ = false;","            return false;","          }","          buf_erase(pos + crlf_dash_boundary_.size());","          state_ = 4;","        } else {","          auto len = buf_size() - crlf_dash_boundary_.size();","          if (len \u003e 0) {","            if (!content_callback(buf_data(), len)) {","              is_valid_ = false;","              return false;","            }","            buf_erase(len);","          }","          return true;","        }","        break;","      }","      case 4: { // Boundary","        if (crlf_.size() \u003e buf_size()) { return true; }","        if (buf_start_with(crlf_)) {","          buf_erase(crlf_.size());","          state_ = 1;","        } else {","          if (dash_.size() \u003e buf_size()) { return true; }","          if (buf_start_with(dash_)) {","            buf_erase(dash_.size());","            is_valid_ = true;","            buf_erase(buf_size()); // Remove epilogue","          } else {","            return true;","          }","        }","        break;","      }","      }","    }","","    return true;","  }","","private:","  void clear_file_info() {","    file_.name.clear();","    file_.filename.clear();","    file_.content_type.clear();","  }","","  bool start_with_case_ignore(const std::string \u0026a, const char *b) const {","    const auto b_len = strlen(b);","    if (a.size() \u003c b_len) { return false; }","    for (size_t i = 0; i \u003c b_len; i++) {","      if (case_ignore::to_lower(a[i]) != case_ignore::to_lower(b[i])) {","        return false;","      }","    }","    return true;","  }","","  const std::string dash_ = \"--\";","  const std::string crlf_ = \"\\r\\n\";","  std::string boundary_;","  std::string dash_boundary_crlf_;","  std::string crlf_dash_boundary_;","","  size_t state_ = 0;","  bool is_valid_ = false;","  MultipartFormData file_;","","  // Buffer","  bool start_with(const std::string \u0026a, size_t spos, size_t epos,","                  const std::string \u0026b) const {","    if (epos - spos \u003c b.size()) { return false; }","    for (size_t i = 0; i \u003c b.size(); i++) {","      if (a[i + spos] != b[i]) { return false; }","    }","    return true;","  }","","  size_t buf_size() const { return buf_epos_ - buf_spos_; }","","  const char *buf_data() const { return \u0026buf_[buf_spos_]; }","","  std::string buf_head(size_t l) const { return buf_.substr(buf_spos_, l); }","","  bool buf_start_with(const std::string \u0026s) const {","    return start_with(buf_, buf_spos_, buf_epos_, s);","  }","","  size_t buf_find(const std::string \u0026s) const {","    auto c = s.front();","","    size_t off = buf_spos_;","    while (off \u003c buf_epos_) {","      auto pos = off;","      while (true) {","        if (pos == buf_epos_) { return buf_size(); }","        if (buf_[pos] == c) { break; }","        pos++;","      }","","      auto remaining_size = buf_epos_ - pos;","      if (s.size() \u003e remaining_size) { return buf_size(); }","","      if (start_with(buf_, pos, buf_epos_, s)) { return pos - buf_spos_; }","","      off = pos + 1;","    }","","    return buf_size();","  }","","  void buf_append(const char *data, size_t n) {","    auto remaining_size = buf_size();","    if (remaining_size \u003e 0 \u0026\u0026 buf_spos_ \u003e 0) {","      for (size_t i = 0; i \u003c remaining_size; i++) {","        buf_[i] = buf_[buf_spos_ + i];","      }","    }","    buf_spos_ = 0;","    buf_epos_ = remaining_size;","","    if (remaining_size + n \u003e buf_.size()) { buf_.resize(remaining_size + n); }","","    for (size_t i = 0; i \u003c n; i++) {","      buf_[buf_epos_ + i] = data[i];","    }","    buf_epos_ += n;","  }","","  void buf_erase(size_t size) { buf_spos_ += size; }","","  std::string buf_;","  size_t buf_spos_ = 0;","  size_t buf_epos_ = 0;","};","","inline std::string random_string(size_t length) {","  constexpr const char data[] =","      \"0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz\";","","  thread_local auto engine([]() {","    // std::random_device might actually be deterministic on some","    // platforms, but due to lack of support in the c++ standard library,","    // doing better requires either some ugly hacks or breaking portability.","    std::random_device seed_gen;","    // Request 128 bits of entropy for initialization","    std::seed_seq seed_sequence{seed_gen(), seed_gen(), seed_gen(), seed_gen()};","    return std::mt19937(seed_sequence);","  }());","","  std::string result;","  for (size_t i = 0; i \u003c length; i++) {","    result += data[engine() % (sizeof(data) - 1)];","  }","  return result;","}","","inline std::string make_multipart_data_boundary() {","  return \"--cpp-httplib-multipart-data-\" + detail::random_string(16);","}","","inline bool is_multipart_boundary_chars_valid(const std::string \u0026boundary) {","  auto valid = true;","  for (size_t i = 0; i \u003c boundary.size(); i++) {","    auto c = boundary[i];","    if (!std::isalnum(c) \u0026\u0026 c != '-' \u0026\u0026 c != '_') {","      valid = false;","      break;","    }","  }","  return valid;","}","","template \u003ctypename T\u003e","inline std::string","serialize_multipart_formdata_item_begin(const T \u0026item,","                                        const std::string \u0026boundary) {","  std::string body = \"--\" + boundary + \"\\r\\n\";","  body += \"Content-Disposition: form-data; name=\\\"\" + item.name + \"\\\"\";","  if (!item.filename.empty()) {","    body += \"; filename=\\\"\" + item.filename + \"\\\"\";","  }","  body += \"\\r\\n\";","  if (!item.content_type.empty()) {","    body += \"Content-Type: \" + item.content_type + \"\\r\\n\";","  }","  body += \"\\r\\n\";","","  return body;","}","","inline std::string serialize_multipart_formdata_item_end() { return \"\\r\\n\"; }","","inline std::string","serialize_multipart_formdata_finish(const std::string \u0026boundary) {","  return \"--\" + boundary + \"--\\r\\n\";","}","","inline std::string","serialize_multipart_formdata_get_content_type(const std::string \u0026boundary) {","  return \"multipart/form-data; boundary=\" + boundary;","}","","inline std::string","serialize_multipart_formdata(const MultipartFormDataItems \u0026items,","                             const std::string \u0026boundary, bool finish = true) {","  std::string body;","","  for (const auto \u0026item : items) {","    body += serialize_multipart_formdata_item_begin(item, boundary);","    body += item.content + serialize_multipart_formdata_item_end();","  }","","  if (finish) { body += serialize_multipart_formdata_finish(boundary); }","","  return body;","}","","inline bool range_error(Request \u0026req, Response \u0026res) {","  if (!req.ranges.empty() \u0026\u0026 200 \u003c= res.status \u0026\u0026 res.status \u003c 300) {","    ssize_t content_len = static_cast\u003cssize_t\u003e(","        res.content_length_ ? res.content_length_ : res.body.size());","","    ssize_t prev_first_pos = -1;","    ssize_t prev_last_pos = -1;","    size_t overwrapping_count = 0;","","    // NOTE: The following Range check is based on '14.2. Range' in RFC 9110","    // 'HTTP Semantics' to avoid potential denial-of-service attacks.","    // https://www.rfc-editor.org/rfc/rfc9110#section-14.2","","    // Too many ranges","    if (req.ranges.size() \u003e CPPHTTPLIB_RANGE_MAX_COUNT) { return true; }","","    for (auto \u0026r : req.ranges) {","      auto \u0026first_pos = r.first;","      auto \u0026last_pos = r.second;","","      if (first_pos == -1 \u0026\u0026 last_pos == -1) {","        first_pos = 0;","        last_pos = content_len;","      }","","      if (first_pos == -1) {","        first_pos = content_len - last_pos;","        last_pos = content_len - 1;","      }","","      // NOTE: RFC-9110 '14.1.2. Byte Ranges':","      // A client can limit the number of bytes requested without knowing the","      // size of the selected representation. If the last-pos value is absent,","      // or if the value is greater than or equal to the current length of the","      // representation data, the byte range is interpreted as the remainder of","      // the representation (i.e., the server replaces the value of last-pos","      // with a value that is one less than the current length of the selected","      // representation).","      // https://www.rfc-editor.org/rfc/rfc9110.html#section-14.1.2-6","      if (last_pos == -1 || last_pos \u003e= content_len) {","        last_pos = content_len - 1;","      }","","      // Range must be within content length","      if (!(0 \u003c= first_pos \u0026\u0026 first_pos \u003c= last_pos \u0026\u0026","            last_pos \u003c= content_len - 1)) {","        return true;","      }","","      // Ranges must be in ascending order","      if (first_pos \u003c= prev_first_pos) { return true; }","","      // Request must not have more than two overlapping ranges","      if (first_pos \u003c= prev_last_pos) {","        overwrapping_count++;","        if (overwrapping_count \u003e 2) { return true; }","      }","","      prev_first_pos = (std::max)(prev_first_pos, first_pos);","      prev_last_pos = (std::max)(prev_last_pos, last_pos);","    }","  }","","  return false;","}","","inline std::pair\u003csize_t, size_t\u003e","get_range_offset_and_length(Range r, size_t content_length) {","  assert(r.first != -1 \u0026\u0026 r.second != -1);","  assert(0 \u003c= r.first \u0026\u0026 r.first \u003c static_cast\u003cssize_t\u003e(content_length));","  assert(r.first \u003c= r.second \u0026\u0026","         r.second \u003c static_cast\u003cssize_t\u003e(content_length));","  (void)(content_length);","  return std::make_pair(r.first, static_cast\u003csize_t\u003e(r.second - r.first) + 1);","}","","inline std::string make_content_range_header_field(","    const std::pair\u003csize_t, size_t\u003e \u0026offset_and_length, size_t content_length) {","  auto st = offset_and_length.first;","  auto ed = st + offset_and_length.second - 1;","","  std::string field = \"bytes \";","  field += std::to_string(st);","  field += \"-\";","  field += std::to_string(ed);","  field += \"/\";","  field += std::to_string(content_length);","  return field;","}","","template \u003ctypename SToken, typename CToken, typename Content\u003e","bool process_multipart_ranges_data(const Request \u0026req,","                                   const std::string \u0026boundary,","                                   const std::string \u0026content_type,","                                   size_t content_length, SToken stoken,","                                   CToken ctoken, Content content) {","  for (size_t i = 0; i \u003c req.ranges.size(); i++) {","    ctoken(\"--\");","    stoken(boundary);","    ctoken(\"\\r\\n\");","    if (!content_type.empty()) {","      ctoken(\"Content-Type: \");","      stoken(content_type);","      ctoken(\"\\r\\n\");","    }","","    auto offset_and_length =","        get_range_offset_and_length(req.ranges[i], content_length);","","    ctoken(\"Content-Range: \");","    stoken(make_content_range_header_field(offset_and_length, content_length));","    ctoken(\"\\r\\n\");","    ctoken(\"\\r\\n\");","","    if (!content(offset_and_length.first, offset_and_length.second)) {","      return false;","    }","    ctoken(\"\\r\\n\");","  }","","  ctoken(\"--\");","  stoken(boundary);","  ctoken(\"--\");","","  return true;","}","","inline void make_multipart_ranges_data(const Request \u0026req, Response \u0026res,","                                       const std::string \u0026boundary,","                                       const std::string \u0026content_type,","                                       size_t content_length,","                                       std::string \u0026data) {","  process_multipart_ranges_data(","      req, boundary, content_type, content_length,","      [\u0026](const std::string \u0026token) { data += token; },","      [\u0026](const std::string \u0026token) { data += token; },","      [\u0026](size_t offset, size_t length) {","        assert(offset + length \u003c= content_length);","        data += res.body.substr(offset, length);","        return true;","      });","}","","inline size_t get_multipart_ranges_data_length(const Request \u0026req,","                                               const std::string \u0026boundary,","                                               const std::string \u0026content_type,","                                               size_t content_length) {","  size_t data_length = 0;","","  process_multipart_ranges_data(","      req, boundary, content_type, content_length,","      [\u0026](const std::string \u0026token) { data_length += token.size(); },","      [\u0026](const std::string \u0026token) { data_length += token.size(); },","      [\u0026](size_t /*offset*/, size_t length) {","        data_length += length;","        return true;","      });","","  return data_length;","}","","template \u003ctypename T\u003e","inline bool","write_multipart_ranges_data(Stream \u0026strm, const Request \u0026req, Response \u0026res,","                            const std::string \u0026boundary,","                            const std::string \u0026content_type,","                            size_t content_length, const T \u0026is_shutting_down) {","  return process_multipart_ranges_data(","      req, boundary, content_type, content_length,","      [\u0026](const std::string \u0026token) { strm.write(token); },","      [\u0026](const std::string \u0026token) { strm.write(token); },","      [\u0026](size_t offset, size_t length) {","        return write_content(strm, res.content_provider_, offset, length,","                             is_shutting_down);","      });","}","","inline bool expect_content(const Request \u0026req) {","  if (req.method == \"POST\" || req.method == \"PUT\" || req.method == \"PATCH\" ||","      req.method == \"DELETE\") {","    return true;","  }","  if (req.has_header(\"Content-Length\") \u0026\u0026","      req.get_header_value_u64(\"Content-Length\") \u003e 0) {","    return true;","  }","  if (is_chunked_transfer_encoding(req.headers)) { return true; }","  return false;","}","","inline bool has_crlf(const std::string \u0026s) {","  auto p = s.c_str();","  while (*p) {","    if (*p == '\\r' || *p == '\\n') { return true; }","    p++;","  }","  return false;","}","","#ifdef CPPHTTPLIB_OPENSSL_SUPPORT","inline std::string message_digest(const std::string \u0026s, const EVP_MD *algo) {","  auto context = std::unique_ptr\u003cEVP_MD_CTX, decltype(\u0026EVP_MD_CTX_free)\u003e(","      EVP_MD_CTX_new(), EVP_MD_CTX_free);","","  unsigned int hash_length = 0;","  unsigned char hash[EVP_MAX_MD_SIZE];","","  EVP_DigestInit_ex(context.get(), algo, nullptr);","  EVP_DigestUpdate(context.get(), s.c_str(), s.size());","  EVP_DigestFinal_ex(context.get(), hash, \u0026hash_length);","","  std::stringstream ss;","  for (auto i = 0u; i \u003c hash_length; ++i) {","    ss \u003c\u003c std::hex \u003c\u003c std::setw(2) \u003c\u003c std::setfill('0')","       \u003c\u003c static_cast\u003cunsigned int\u003e(hash[i]);","  }","","  return ss.str();","}","","inline std::string MD5(const std::string \u0026s) {","  return message_digest(s, EVP_md5());","}","","inline std::string SHA_256(const std::string \u0026s) {","  return message_digest(s, EVP_sha256());","}","","inline std::string SHA_512(const std::string \u0026s) {","  return message_digest(s, EVP_sha512());","}","","inline std::pair\u003cstd::string, std::string\u003e make_digest_authentication_header(","    const Request \u0026req, const std::map\u003cstd::string, std::string\u003e \u0026auth,","    size_t cnonce_count, const std::string \u0026cnonce, const std::string \u0026username,","    const std::string \u0026password, bool is_proxy = false) {","  std::string nc;","  {","    std::stringstream ss;","    ss \u003c\u003c std::setfill('0') \u003c\u003c std::setw(8) \u003c\u003c std::hex \u003c\u003c cnonce_count;","    nc = ss.str();","  }","","  std::string qop;","  if (auth.find(\"qop\") != auth.end()) {","    qop = auth.at(\"qop\");","    if (qop.find(\"auth-int\") != std::string::npos) {","      qop = \"auth-int\";","    } else if (qop.find(\"auth\") != std::string::npos) {","      qop = \"auth\";","    } else {","      qop.clear();","    }","  }","","  std::string algo = \"MD5\";","  if (auth.find(\"algorithm\") != auth.end()) { algo = auth.at(\"algorithm\"); }","","  std::string response;","  {","    auto H = algo == \"SHA-256\"   ? detail::SHA_256","             : algo == \"SHA-512\" ? detail::SHA_512","                                 : detail::MD5;","","    auto A1 = username + \":\" + auth.at(\"realm\") + \":\" + password;","","    auto A2 = req.method + \":\" + req.path;","    if (qop == \"auth-int\") { A2 += \":\" + H(req.body); }","","    if (qop.empty()) {","      response = H(H(A1) + \":\" + auth.at(\"nonce\") + \":\" + H(A2));","    } else {","      response = H(H(A1) + \":\" + auth.at(\"nonce\") + \":\" + nc + \":\" + cnonce +","                   \":\" + qop + \":\" + H(A2));","    }","  }","","  auto opaque = (auth.find(\"opaque\") != auth.end()) ? auth.at(\"opaque\") : \"\";","","  auto field = \"Digest username=\\\"\" + username + \"\\\", realm=\\\"\" +","               auth.at(\"realm\") + \"\\\", nonce=\\\"\" + auth.at(\"nonce\") +","               \"\\\", uri=\\\"\" + req.path + \"\\\", algorithm=\" + algo +","               (qop.empty() ? \", response=\\\"\"","                            : \", qop=\" + qop + \", nc=\" + nc + \", cnonce=\\\"\" +","                                  cnonce + \"\\\", response=\\\"\") +","               response + \"\\\"\" +","               (opaque.empty() ? \"\" : \", opaque=\\\"\" + opaque + \"\\\"\");","","  auto key = is_proxy ? \"Proxy-Authorization\" : \"Authorization\";","  return std::make_pair(key, field);","}","","inline bool is_ssl_peer_could_be_closed(SSL *ssl, socket_t sock) {","  detail::set_nonblocking(sock, true);","  auto se = detail::scope_exit([\u0026]() { detail::set_nonblocking(sock, false); });","","  char buf[1];","  return !SSL_peek(ssl, buf, 1) \u0026\u0026","         SSL_get_error(ssl, 0) == SSL_ERROR_ZERO_RETURN;","}","","#ifdef _WIN32","// NOTE: This code came up with the following stackoverflow post:","// https://stackoverflow.com/questions/9507184/can-openssl-on-windows-use-the-system-certificate-store","inline bool load_system_certs_on_windows(X509_STORE *store) {","  auto hStore = CertOpenSystemStoreW((HCRYPTPROV_LEGACY)NULL, L\"ROOT\");","  if (!hStore) { return false; }","","  auto result = false;","  PCCERT_CONTEXT pContext = NULL;","  while ((pContext = CertEnumCertificatesInStore(hStore, pContext)) !=","         nullptr) {","    auto encoded_cert =","        static_cast\u003cconst unsigned char *\u003e(pContext-\u003epbCertEncoded);","","    auto x509 = d2i_X509(NULL, \u0026encoded_cert, pContext-\u003ecbCertEncoded);","    if (x509) {","      X509_STORE_add_cert(store, x509);","      X509_free(x509);","      result = true;","    }","  }","","  CertFreeCertificateContext(pContext);","  CertCloseStore(hStore, 0);","","  return result;","}","#elif defined(CPPHTTPLIB_USE_CERTS_FROM_MACOSX_KEYCHAIN) \u0026\u0026 defined(__APPLE__)","#if TARGET_OS_OSX","template \u003ctypename T\u003e","using CFObjectPtr =","    std::unique_ptr\u003ctypename std::remove_pointer\u003cT\u003e::type, void (*)(CFTypeRef)\u003e;","","inline void cf_object_ptr_deleter(CFTypeRef obj) {","  if (obj) { CFRelease(obj); }","}","","inline bool retrieve_certs_from_keychain(CFObjectPtr\u003cCFArrayRef\u003e \u0026certs) {","  CFStringRef keys[] = {kSecClass, kSecMatchLimit, kSecReturnRef};","  CFTypeRef values[] = {kSecClassCertificate, kSecMatchLimitAll,","                        kCFBooleanTrue};","","  CFObjectPtr\u003cCFDictionaryRef\u003e query(","      CFDictionaryCreate(nullptr, reinterpret_cast\u003cconst void **\u003e(keys), values,","                         sizeof(keys) / sizeof(keys[0]),","                         \u0026kCFTypeDictionaryKeyCallBacks,","                         \u0026kCFTypeDictionaryValueCallBacks),","      cf_object_ptr_deleter);","","  if (!query) { return false; }","","  CFTypeRef security_items = nullptr;","  if (SecItemCopyMatching(query.get(), \u0026security_items) != errSecSuccess ||","      CFArrayGetTypeID() != CFGetTypeID(security_items)) {","    return false;","  }","","  certs.reset(reinterpret_cast\u003cCFArrayRef\u003e(security_items));","  return true;","}","","inline bool retrieve_root_certs_from_keychain(CFObjectPtr\u003cCFArrayRef\u003e \u0026certs) {","  CFArrayRef root_security_items = nullptr;","  if (SecTrustCopyAnchorCertificates(\u0026root_security_items) != errSecSuccess) {","    return false;","  }","","  certs.reset(root_security_items);","  return true;","}","","inline bool add_certs_to_x509_store(CFArrayRef certs, X509_STORE *store) {","  auto result = false;","  for (auto i = 0; i \u003c CFArrayGetCount(certs); ++i) {","    const auto cert = reinterpret_cast\u003cconst __SecCertificate *\u003e(","        CFArrayGetValueAtIndex(certs, i));","","    if (SecCertificateGetTypeID() != CFGetTypeID(cert)) { continue; }","","    CFDataRef cert_data = nullptr;","    if (SecItemExport(cert, kSecFormatX509Cert, 0, nullptr, \u0026cert_data) !=","        errSecSuccess) {","      continue;","    }","","    CFObjectPtr\u003cCFDataRef\u003e cert_data_ptr(cert_data, cf_object_ptr_deleter);","","    auto encoded_cert = static_cast\u003cconst unsigned char *\u003e(","        CFDataGetBytePtr(cert_data_ptr.get()));","","    auto x509 =","        d2i_X509(NULL, \u0026encoded_cert, CFDataGetLength(cert_data_ptr.get()));","","    if (x509) {","      X509_STORE_add_cert(store, x509);","      X509_free(x509);","      result = true;","    }","  }","","  return result;","}","","inline bool load_system_certs_on_macos(X509_STORE *store) {","  auto result = false;","  CFObjectPtr\u003cCFArrayRef\u003e certs(nullptr, cf_object_ptr_deleter);","  if (retrieve_certs_from_keychain(certs) \u0026\u0026 certs) {","    result = add_certs_to_x509_store(certs.get(), store);","  }","","  if (retrieve_root_certs_from_keychain(certs) \u0026\u0026 certs) {","    result = add_certs_to_x509_store(certs.get(), store) || result;","  }","","  return result;","}","#endif // TARGET_OS_OSX","#endif // _WIN32","#endif // CPPHTTPLIB_OPENSSL_SUPPORT","","#ifdef _WIN32","class WSInit {","public:","  WSInit() {","    WSADATA wsaData;","    if (WSAStartup(0x0002, \u0026wsaData) == 0) is_valid_ = true;","  }","","  ~WSInit() {","    if (is_valid_) WSACleanup();","  }","","  bool is_valid_ = false;","};","","static WSInit wsinit_;","#endif","","inline bool parse_www_authenticate(const Response \u0026res,","                                   std::map\u003cstd::string, std::string\u003e \u0026auth,","                                   bool is_proxy) {","  auto auth_key = is_proxy ? \"Proxy-Authenticate\" : \"WWW-Authenticate\";","  if (res.has_header(auth_key)) {","    thread_local auto re =","        std::regex(R\"~((?:(?:,\\s*)?(.+?)=(?:\"(.*?)\"|([^,]*))))~\");","    auto s = res.get_header_value(auth_key);","    auto pos = s.find(' ');","    if (pos != std::string::npos) {","      auto type = s.substr(0, pos);","      if (type == \"Basic\") {","        return false;","      } else if (type == \"Digest\") {","        s = s.substr(pos + 1);","        auto beg = std::sregex_iterator(s.begin(), s.end(), re);","        for (auto i = beg; i != std::sregex_iterator(); ++i) {","          const auto \u0026m = *i;","          auto key = s.substr(static_cast\u003csize_t\u003e(m.position(1)),","                              static_cast\u003csize_t\u003e(m.length(1)));","          auto val = m.length(2) \u003e 0","                         ? s.substr(static_cast\u003csize_t\u003e(m.position(2)),","                                    static_cast\u003csize_t\u003e(m.length(2)))","                         : s.substr(static_cast\u003csize_t\u003e(m.position(3)),","                                    static_cast\u003csize_t\u003e(m.length(3)));","          auth[key] = val;","        }","        return true;","      }","    }","  }","  return false;","}","","class ContentProviderAdapter {","public:","  explicit ContentProviderAdapter(","      ContentProviderWithoutLength \u0026\u0026content_provider)","      : content_provider_(content_provider) {}","","  bool operator()(size_t offset, size_t, DataSink \u0026sink) {","    return content_provider_(offset, sink);","  }","","private:","  ContentProviderWithoutLength content_provider_;","};","","} // namespace detail","","inline std::string hosted_at(const std::string \u0026hostname) {","  std::vector\u003cstd::string\u003e addrs;","  hosted_at(hostname, addrs);","  if (addrs.empty()) { return std::string(); }","  return addrs[0];","}","","inline void hosted_at(const std::string \u0026hostname,","                      std::vector\u003cstd::string\u003e \u0026addrs) {","  struct addrinfo hints;","  struct addrinfo *result;","","  memset(\u0026hints, 0, sizeof(struct addrinfo));","  hints.ai_family = AF_UNSPEC;","  hints.ai_socktype = SOCK_STREAM;","  hints.ai_protocol = 0;","","  if (getaddrinfo(hostname.c_str(), nullptr, \u0026hints, \u0026result)) {","#if defined __linux__ \u0026\u0026 !defined __ANDROID__","    res_init();","#endif","    return;","  }","  auto se = detail::scope_exit([\u0026] { freeaddrinfo(result); });","","  for (auto rp = result; rp; rp = rp-\u003eai_next) {","    const auto \u0026addr =","        *reinterpret_cast\u003cstruct sockaddr_storage *\u003e(rp-\u003eai_addr);","    std::string ip;","    auto dummy = -1;","    if (detail::get_ip_and_port(addr, sizeof(struct sockaddr_storage), ip,","                                dummy)) {","      addrs.push_back(ip);","    }","  }","}","","inline std::string append_query_params(const std::string \u0026path,","                                       const Params \u0026params) {","  std::string path_with_query = path;","  thread_local const std::regex re(\"[^?]+\\\\?.*\");","  auto delm = std::regex_match(path, re) ? '\u0026' : '?';","  path_with_query += delm + detail::params_to_query_str(params);","  return path_with_query;","}","","// Header utilities","inline std::pair\u003cstd::string, std::string\u003e","make_range_header(const Ranges \u0026ranges) {","  std::string field = \"bytes=\";","  auto i = 0;","  for (const auto \u0026r : ranges) {","    if (i != 0) { field += \", \"; }","    if (r.first != -1) { field += std::to_string(r.first); }","    field += '-';","    if (r.second != -1) { field += std::to_string(r.second); }","    i++;","  }","  return std::make_pair(\"Range\", std::move(field));","}","","inline std::pair\u003cstd::string, std::string\u003e","make_basic_authentication_header(const std::string \u0026username,","                                 const std::string \u0026password, bool is_proxy) {","  auto field = \"Basic \" + detail::base64_encode(username + \":\" + password);","  auto key = is_proxy ? \"Proxy-Authorization\" : \"Authorization\";","  return std::make_pair(key, std::move(field));","}","","inline std::pair\u003cstd::string, std::string\u003e","make_bearer_token_authentication_header(const std::string \u0026token,","                                        bool is_proxy = false) {","  auto field = \"Bearer \" + token;","  auto key = is_proxy ? \"Proxy-Authorization\" : \"Authorization\";","  return std::make_pair(key, std::move(field));","}","","// Request implementation","inline bool Request::has_header(const std::string \u0026key) const {","  return detail::has_header(headers, key);","}","","inline std::string Request::get_header_value(const std::string \u0026key,","                                             const char *def, size_t id) const {","  return detail::get_header_value(headers, key, def, id);","}","","inline size_t Request::get_header_value_count(const std::string \u0026key) const {","  auto r = headers.equal_range(key);","  return static_cast\u003csize_t\u003e(std::distance(r.first, r.second));","}","","inline void Request::set_header(const std::string \u0026key,","                                const std::string \u0026val) {","  if (detail::fields::is_field_name(key) \u0026\u0026","      detail::fields::is_field_value(val)) {","    headers.emplace(key, val);","  }","}","","inline bool Request::has_param(const std::string \u0026key) const {","  return params.find(key) != params.end();","}","","inline std::string Request::get_param_value(const std::string \u0026key,","                                            size_t id) const {","  auto rng = params.equal_range(key);","  auto it = rng.first;","  std::advance(it, static_cast\u003cssize_t\u003e(id));","  if (it != rng.second) { return it-\u003esecond; }","  return std::string();","}","","inline size_t Request::get_param_value_count(const std::string \u0026key) const {","  auto r = params.equal_range(key);","  return static_cast\u003csize_t\u003e(std::distance(r.first, r.second));","}","","inline bool Request::is_multipart_form_data() const {","  const auto \u0026content_type = get_header_value(\"Content-Type\");","  return !content_type.rfind(\"multipart/form-data\", 0);","}","","inline bool Request::has_file(const std::string \u0026key) const {","  return files.find(key) != files.end();","}","","inline MultipartFormData Request::get_file_value(const std::string \u0026key) const {","  auto it = files.find(key);","  if (it != files.end()) { return it-\u003esecond; }","  return MultipartFormData();","}","","inline std::vector\u003cMultipartFormData\u003e","Request::get_file_values(const std::string \u0026key) const {","  std::vector\u003cMultipartFormData\u003e values;","  auto rng = files.equal_range(key);","  for (auto it = rng.first; it != rng.second; it++) {","    values.push_back(it-\u003esecond);","  }","  return values;","}","","// Response implementation","inline bool Response::has_header(const std::string \u0026key) const {","  return headers.find(key) != headers.end();","}","","inline std::string Response::get_header_value(const std::string \u0026key,","                                              const char *def,","                                              size_t id) const {","  return detail::get_header_value(headers, key, def, id);","}","","inline size_t Response::get_header_value_count(const std::string \u0026key) const {","  auto r = headers.equal_range(key);","  return static_cast\u003csize_t\u003e(std::distance(r.first, r.second));","}","","inline void Response::set_header(const std::string \u0026key,","                                 const std::string \u0026val) {","  if (detail::fields::is_field_name(key) \u0026\u0026","      detail::fields::is_field_value(val)) {","    headers.emplace(key, val);","  }","}","","inline void Response::set_redirect(const std::string \u0026url, int stat) {","  if (detail::fields::is_field_value(url)) {","    set_header(\"Location\", url);","    if (300 \u003c= stat \u0026\u0026 stat \u003c 400) {","      this-\u003estatus = stat;","    } else {","      this-\u003estatus = StatusCode::Found_302;","    }","  }","}","","inline void Response::set_content(const char *s, size_t n,","                                  const std::string \u0026content_type) {","  body.assign(s, n);","","  auto rng = headers.equal_range(\"Content-Type\");","  headers.erase(rng.first, rng.second);","  set_header(\"Content-Type\", content_type);","}","","inline void Response::set_content(const std::string \u0026s,","                                  const std::string \u0026content_type) {","  set_content(s.data(), s.size(), content_type);","}","","inline void Response::set_content(std::string \u0026\u0026s,","                                  const std::string \u0026content_type) {","  body = std::move(s);","","  auto rng = headers.equal_range(\"Content-Type\");","  headers.erase(rng.first, rng.second);","  set_header(\"Content-Type\", content_type);","}","","inline void Response::set_content_provider(","    size_t in_length, const std::string \u0026content_type, ContentProvider provider,","    ContentProviderResourceReleaser resource_releaser) {","  set_header(\"Content-Type\", content_type);","  content_length_ = in_length;","  if (in_length \u003e 0) { content_provider_ = std::move(provider); }","  content_provider_resource_releaser_ = std::move(resource_releaser);","  is_chunked_content_provider_ = false;","}","","inline void Response::set_content_provider(","    const std::string \u0026content_type, ContentProviderWithoutLength provider,","    ContentProviderResourceReleaser resource_releaser) {","  set_header(\"Content-Type\", content_type);","  content_length_ = 0;","  content_provider_ = detail::ContentProviderAdapter(std::move(provider));","  content_provider_resource_releaser_ = std::move(resource_releaser);","  is_chunked_content_provider_ = false;","}","","inline void Response::set_chunked_content_provider(","    const std::string \u0026content_type, ContentProviderWithoutLength provider,","    ContentProviderResourceReleaser resource_releaser) {","  set_header(\"Content-Type\", content_type);","  content_length_ = 0;","  content_provider_ = detail::ContentProviderAdapter(std::move(provider));","  content_provider_resource_releaser_ = std::move(resource_releaser);","  is_chunked_content_provider_ = true;","}","","inline void Response::set_file_content(const std::string \u0026path,","                                       const std::string \u0026content_type) {","  file_content_path_ = path;","  file_content_content_type_ = content_type;","}","","inline void Response::set_file_content(const std::string \u0026path) {","  file_content_path_ = path;","}","","// Result implementation","inline bool Result::has_request_header(const std::string \u0026key) const {","  return request_headers_.find(key) != request_headers_.end();","}","","inline std::string Result::get_request_header_value(const std::string \u0026key,","                                                    const char *def,","                                                    size_t id) const {","  return detail::get_header_value(request_headers_, key, def, id);","}","","inline size_t","Result::get_request_header_value_count(const std::string \u0026key) const {","  auto r = request_headers_.equal_range(key);","  return static_cast\u003csize_t\u003e(std::distance(r.first, r.second));","}","","// Stream implementation","inline ssize_t Stream::write(const char *ptr) {","  return write(ptr, strlen(ptr));","}","","inline ssize_t Stream::write(const std::string \u0026s) {","  return write(s.data(), s.size());","}","","namespace detail {","","inline void calc_actual_timeout(time_t max_timeout_msec, time_t duration_msec,","                                time_t timeout_sec, time_t timeout_usec,","                                time_t \u0026actual_timeout_sec,","                                time_t \u0026actual_timeout_usec) {","  auto timeout_msec = (timeout_sec * 1000) + (timeout_usec / 1000);","","  auto actual_timeout_msec =","      (std::min)(max_timeout_msec - duration_msec, timeout_msec);","","  if (actual_timeout_msec \u003c 0) { actual_timeout_msec = 0; }","","  actual_timeout_sec = actual_timeout_msec / 1000;","  actual_timeout_usec = (actual_timeout_msec % 1000) * 1000;","}","","// Socket stream implementation","inline SocketStream::SocketStream(","    socket_t sock, time_t read_timeout_sec, time_t read_timeout_usec,","    time_t write_timeout_sec, time_t write_timeout_usec,","    time_t max_timeout_msec,","    std::chrono::time_point\u003cstd::chrono::steady_clock\u003e start_time)","    : sock_(sock), read_timeout_sec_(read_timeout_sec),","      read_timeout_usec_(read_timeout_usec),","      write_timeout_sec_(write_timeout_sec),","      write_timeout_usec_(write_timeout_usec),","      max_timeout_msec_(max_timeout_msec), start_time_(start_time),","      read_buff_(read_buff_size_, 0) {}","","inline SocketStream::~SocketStream() = default;","","inline bool SocketStream::is_readable() const {","  return read_buff_off_ \u003c read_buff_content_size_;","}","","inline bool SocketStream::wait_readable() const {","  if (max_timeout_msec_ \u003c= 0) {","    return select_read(sock_, read_timeout_sec_, read_timeout_usec_) \u003e 0;","  }","","  time_t read_timeout_sec;","  time_t read_timeout_usec;","  calc_actual_timeout(max_timeout_msec_, duration(), read_timeout_sec_,","                      read_timeout_usec_, read_timeout_sec, read_timeout_usec);","","  return select_read(sock_, read_timeout_sec, read_timeout_usec) \u003e 0;","}","","inline bool SocketStream::wait_writable() const {","  return select_write(sock_, write_timeout_sec_, write_timeout_usec_) \u003e 0 \u0026\u0026","         is_socket_alive(sock_);","}","","inline ssize_t SocketStream::read(char *ptr, size_t size) {","#ifdef _WIN32","  size =","      (std::min)(size, static_cast\u003csize_t\u003e((std::numeric_limits\u003cint\u003e::max)()));","#else","  size = (std::min)(size,","                    static_cast\u003csize_t\u003e((std::numeric_limits\u003cssize_t\u003e::max)()));","#endif","","  if (read_buff_off_ \u003c read_buff_content_size_) {","    auto remaining_size = read_buff_content_size_ - read_buff_off_;","    if (size \u003c= remaining_size) {","      memcpy(ptr, read_buff_.data() + read_buff_off_, size);","      read_buff_off_ += size;","      return static_cast\u003cssize_t\u003e(size);","    } else {","      memcpy(ptr, read_buff_.data() + read_buff_off_, remaining_size);","      read_buff_off_ += remaining_size;","      return static_cast\u003cssize_t\u003e(remaining_size);","    }","  }","","  if (!wait_readable()) { return -1; }","","  read_buff_off_ = 0;","  read_buff_content_size_ = 0;","","  if (size \u003c read_buff_size_) {","    auto n = read_socket(sock_, read_buff_.data(), read_buff_size_,","                         CPPHTTPLIB_RECV_FLAGS);","    if (n \u003c= 0) {","      return n;","    } else if (n \u003c= static_cast\u003cssize_t\u003e(size)) {","      memcpy(ptr, read_buff_.data(), static_cast\u003csize_t\u003e(n));","      return n;","    } else {","      memcpy(ptr, read_buff_.data(), size);","      read_buff_off_ = size;","      read_buff_content_size_ = static_cast\u003csize_t\u003e(n);","      return static_cast\u003cssize_t\u003e(size);","    }","  } else {","    return read_socket(sock_, ptr, size, CPPHTTPLIB_RECV_FLAGS);","  }","}","","inline ssize_t SocketStream::write(const char *ptr, size_t size) {","  if (!wait_writable()) { return -1; }","","#if defined(_WIN32) \u0026\u0026 !defined(_WIN64)","  size =","      (std::min)(size, static_cast\u003csize_t\u003e((std::numeric_limits\u003cint\u003e::max)()));","#endif","","  return send_socket(sock_, ptr, size, CPPHTTPLIB_SEND_FLAGS);","}","","inline void SocketStream::get_remote_ip_and_port(std::string \u0026ip,","                                                 int \u0026port) const {","  return detail::get_remote_ip_and_port(sock_, ip, port);","}","","inline void SocketStream::get_local_ip_and_port(std::string \u0026ip,","                                                int \u0026port) const {","  return detail::get_local_ip_and_port(sock_, ip, port);","}","","inline socket_t SocketStream::socket() const { return sock_; }","","inline time_t SocketStream::duration() const {","  return std::chrono::duration_cast\u003cstd::chrono::milliseconds\u003e(","             std::chrono::steady_clock::now() - start_time_)","      .count();","}","","// Buffer stream implementation","inline bool BufferStream::is_readable() const { return true; }","","inline bool BufferStream::wait_readable() const { return true; }","","inline bool BufferStream::wait_writable() const { return true; }","","inline ssize_t BufferStream::read(char *ptr, size_t size) {","#if defined(_MSC_VER) \u0026\u0026 _MSC_VER \u003c 1910","  auto len_read = buffer._Copy_s(ptr, size, size, position);","#else","  auto len_read = buffer.copy(ptr, size, position);","#endif","  position += static_cast\u003csize_t\u003e(len_read);","  return static_cast\u003cssize_t\u003e(len_read);","}","","inline ssize_t BufferStream::write(const char *ptr, size_t size) {","  buffer.append(ptr, size);","  return static_cast\u003cssize_t\u003e(size);","}","","inline void BufferStream::get_remote_ip_and_port(std::string \u0026 /*ip*/,","                                                 int \u0026 /*port*/) const {}","","inline void BufferStream::get_local_ip_and_port(std::string \u0026 /*ip*/,","                                                int \u0026 /*port*/) const {}","","inline socket_t BufferStream::socket() const { return 0; }","","inline time_t BufferStream::duration() const { return 0; }","","inline const std::string \u0026BufferStream::get_buffer() const { return buffer; }","","inline PathParamsMatcher::PathParamsMatcher(const std::string \u0026pattern) {","  constexpr const char marker[] = \"/:\";","","  // One past the last ending position of a path param substring","  std::size_t last_param_end = 0;","","#ifndef CPPHTTPLIB_NO_EXCEPTIONS","  // Needed to ensure that parameter names are unique during matcher","  // construction","  // If exceptions are disabled, only last duplicate path","  // parameter will be set","  std::unordered_set\u003cstd::string\u003e param_name_set;","#endif","","  while (true) {","    const auto marker_pos = pattern.find(","        marker, last_param_end == 0 ? last_param_end : last_param_end - 1);","    if (marker_pos == std::string::npos) { break; }","","    static_fragments_.push_back(","        pattern.substr(last_param_end, marker_pos - last_param_end + 1));","","    const auto param_name_start = marker_pos + str_len(marker);","","    auto sep_pos = pattern.find(separator, param_name_start);","    if (sep_pos == std::string::npos) { sep_pos = pattern.length(); }","","    auto param_name =","        pattern.substr(param_name_start, sep_pos - param_name_start);","","#ifndef CPPHTTPLIB_NO_EXCEPTIONS","    if (param_name_set.find(param_name) != param_name_set.cend()) {","      std::string msg = \"Encountered path parameter '\" + param_name +","                        \"' multiple times in route pattern '\" + pattern + \"'.\";","      throw std::invalid_argument(msg);","    }","#endif","","    param_names_.push_back(std::move(param_name));","","    last_param_end = sep_pos + 1;","  }","","  if (last_param_end \u003c pattern.length()) {","    static_fragments_.push_back(pattern.substr(last_param_end));","  }","}","","inline bool PathParamsMatcher::match(Request \u0026request) const {","  request.matches = std::smatch();","  request.path_params.clear();","  request.path_params.reserve(param_names_.size());","","  // One past the position at which the path matched the pattern last time","  std::size_t starting_pos = 0;","  for (size_t i = 0; i \u003c static_fragments_.size(); ++i) {","    const auto \u0026fragment = static_fragments_[i];","","    if (starting_pos + fragment.length() \u003e request.path.length()) {","      return false;","    }","","    // Avoid unnecessary allocation by using strncmp instead of substr +","    // comparison","    if (std::strncmp(request.path.c_str() + starting_pos, fragment.c_str(),","                     fragment.length()) != 0) {","      return false;","    }","","    starting_pos += fragment.length();","","    // Should only happen when we have a static fragment after a param","    // Example: '/users/:id/subscriptions'","    // The 'subscriptions' fragment here does not have a corresponding param","    if (i \u003e= param_names_.size()) { continue; }","","    auto sep_pos = request.path.find(separator, starting_pos);","    if (sep_pos == std::string::npos) { sep_pos = request.path.length(); }","","    const auto \u0026param_name = param_names_[i];","","    request.path_params.emplace(","        param_name, request.path.substr(starting_pos, sep_pos - starting_pos));","","    // Mark everything up to '/' as matched","    starting_pos = sep_pos + 1;","  }","  // Returns false if the path is longer than the pattern","  return starting_pos \u003e= request.path.length();","}","","inline bool RegexMatcher::match(Request \u0026request) const {","  request.path_params.clear();","  return std::regex_match(request.path, request.matches, regex_);","}","","} // namespace detail","","// HTTP server implementation","inline Server::Server()","    : new_task_queue(","          [] { return new ThreadPool(CPPHTTPLIB_THREAD_POOL_COUNT); }) {","#ifndef _WIN32","  signal(SIGPIPE, SIG_IGN);","#endif","}","","inline Server::~Server() = default;","","inline std::unique_ptr\u003cdetail::MatcherBase\u003e","Server::make_matcher(const std::string \u0026pattern) {","  if (pattern.find(\"/:\") != std::string::npos) {","    return detail::make_unique\u003cdetail::PathParamsMatcher\u003e(pattern);","  } else {","    return detail::make_unique\u003cdetail::RegexMatcher\u003e(pattern);","  }","}","","inline Server \u0026Server::Get(const std::string \u0026pattern, Handler handler) {","  get_handlers_.emplace_back(make_matcher(pattern), std::move(handler));","  return *this;","}","","inline Server \u0026Server::Post(const std::string \u0026pattern, Handler handler) {","  post_handlers_.emplace_back(make_matcher(pattern), std::move(handler));","  return *this;","}","","inline Server \u0026Server::Post(const std::string \u0026pattern,","                            HandlerWithContentReader handler) {","  post_handlers_for_content_reader_.emplace_back(make_matcher(pattern),","                                                 std::move(handler));","  return *this;","}","","inline Server \u0026Server::Put(const std::string \u0026pattern, Handler handler) {","  put_handlers_.emplace_back(make_matcher(pattern), std::move(handler));","  return *this;","}","","inline Server \u0026Server::Put(const std::string \u0026pattern,","                           HandlerWithContentReader handler) {","  put_handlers_for_content_reader_.emplace_back(make_matcher(pattern),","                                                std::move(handler));","  return *this;","}","","inline Server \u0026Server::Patch(const std::string \u0026pattern, Handler handler) {","  patch_handlers_.emplace_back(make_matcher(pattern), std::move(handler));","  return *this;","}","","inline Server \u0026Server::Patch(const std::string \u0026pattern,","                             HandlerWithContentReader handler) {","  patch_handlers_for_content_reader_.emplace_back(make_matcher(pattern),","                                                  std::move(handler));","  return *this;","}","","inline Server \u0026Server::Delete(const std::string \u0026pattern, Handler handler) {","  delete_handlers_.emplace_back(make_matcher(pattern), std::move(handler));","  return *this;","}","","inline Server \u0026Server::Delete(const std::string \u0026pattern,","                              HandlerWithContentReader handler) {","  delete_handlers_for_content_reader_.emplace_back(make_matcher(pattern),","                                                   std::move(handler));","  return *this;","}","","inline Server \u0026Server::Options(const std::string \u0026pattern, Handler handler) {","  options_handlers_.emplace_back(make_matcher(pattern), std::move(handler));","  return *this;","}","","inline bool Server::set_base_dir(const std::string \u0026dir,","                                 const std::string \u0026mount_point) {","  return set_mount_point(mount_point, dir);","}","","inline bool Server::set_mount_point(const std::string \u0026mount_point,","                                    const std::string \u0026dir, Headers headers) {","  detail::FileStat stat(dir);","  if (stat.is_dir()) {","    std::string mnt = !mount_point.empty() ? mount_point : \"/\";","    if (!mnt.empty() \u0026\u0026 mnt[0] == '/') {","      base_dirs_.push_back({mnt, dir, std::move(headers)});","      return true;","    }","  }","  return false;","}","","inline bool Server::remove_mount_point(const std::string \u0026mount_point) {","  for (auto it = base_dirs_.begin(); it != base_dirs_.end(); ++it) {","    if (it-\u003emount_point == mount_point) {","      base_dirs_.erase(it);","      return true;","    }","  }","  return false;","}","","inline Server \u0026","Server::set_file_extension_and_mimetype_mapping(const std::string \u0026ext,","                                                const std::string \u0026mime) {","  file_extension_and_mimetype_map_[ext] = mime;","  return *this;","}","","inline Server \u0026Server::set_default_file_mimetype(const std::string \u0026mime) {","  default_file_mimetype_ = mime;","  return *this;","}","","inline Server \u0026Server::set_file_request_handler(Handler handler) {","  file_request_handler_ = std::move(handler);","  return *this;","}","","inline Server \u0026Server::set_error_handler_core(HandlerWithResponse handler,","                                              std::true_type) {","  error_handler_ = std::move(handler);","  return *this;","}","","inline Server \u0026Server::set_error_handler_core(Handler handler,","                                              std::false_type) {","  error_handler_ = [handler](const Request \u0026req, Response \u0026res) {","    handler(req, res);","    return HandlerResponse::Handled;","  };","  return *this;","}","","inline Server \u0026Server::set_exception_handler(ExceptionHandler handler) {","  exception_handler_ = std::move(handler);","  return *this;","}","","inline Server \u0026Server::set_pre_routing_handler(HandlerWithResponse handler) {","  pre_routing_handler_ = std::move(handler);","  return *this;","}","","inline Server \u0026Server::set_post_routing_handler(Handler handler) {","  post_routing_handler_ = std::move(handler);","  return *this;","}","","inline Server \u0026Server::set_logger(Logger logger) {","  logger_ = std::move(logger);","  return *this;","}","","inline Server \u0026","Server::set_expect_100_continue_handler(Expect100ContinueHandler handler) {","  expect_100_continue_handler_ = std::move(handler);","  return *this;","}","","inline Server \u0026Server::set_address_family(int family) {","  address_family_ = family;","  return *this;","}","","inline Server \u0026Server::set_tcp_nodelay(bool on) {","  tcp_nodelay_ = on;","  return *this;","}","","inline Server \u0026Server::set_ipv6_v6only(bool on) {","  ipv6_v6only_ = on;","  return *this;","}","","inline Server \u0026Server::set_socket_options(SocketOptions socket_options) {","  socket_options_ = std::move(socket_options);","  return *this;","}","","inline Server \u0026Server::set_default_headers(Headers headers) {","  default_headers_ = std::move(headers);","  return *this;","}","","inline Server \u0026Server::set_header_writer(","    std::function\u003cssize_t(Stream \u0026, Headers \u0026)\u003e const \u0026writer) {","  header_writer_ = writer;","  return *this;","}","","inline Server \u0026Server::set_keep_alive_max_count(size_t count) {","  keep_alive_max_count_ = count;","  return *this;","}","","inline Server \u0026Server::set_keep_alive_timeout(time_t sec) {","  keep_alive_timeout_sec_ = sec;","  return *this;","}","","inline Server \u0026Server::set_read_timeout(time_t sec, time_t usec) {","  read_timeout_sec_ = sec;","  read_timeout_usec_ = usec;","  return *this;","}","","inline Server \u0026Server::set_write_timeout(time_t sec, time_t usec) {","  write_timeout_sec_ = sec;","  write_timeout_usec_ = usec;","  return *this;","}","","inline Server \u0026Server::set_idle_interval(time_t sec, time_t usec) {","  idle_interval_sec_ = sec;","  idle_interval_usec_ = usec;","  return *this;","}","","inline Server \u0026Server::set_payload_max_length(size_t length) {","  payload_max_length_ = length;","  return *this;","}","","inline bool Server::bind_to_port(const std::string \u0026host, int port,","                                 int socket_flags) {","  auto ret = bind_internal(host, port, socket_flags);","  if (ret == -1) { is_decommissioned = true; }","  return ret \u003e= 0;","}","inline int Server::bind_to_any_port(const std::string \u0026host, int socket_flags) {","  auto ret = bind_internal(host, 0, socket_flags);","  if (ret == -1) { is_decommissioned = true; }","  return ret;","}","","inline bool Server::listen_after_bind() { return listen_internal(); }","","inline bool Server::listen(const std::string \u0026host, int port,","                           int socket_flags) {","  return bind_to_port(host, port, socket_flags) \u0026\u0026 listen_internal();","}","","inline bool Server::is_running() const { return is_running_; }","","inline void Server::wait_until_ready() const {","  while (!is_running_ \u0026\u0026 !is_decommissioned) {","    std::this_thread::sleep_for(std::chrono::milliseconds{1});","  }","}","","inline void Server::stop() {","  if (is_running_) {","    assert(svr_sock_ != INVALID_SOCKET);","    std::atomic\u003csocket_t\u003e sock(svr_sock_.exchange(INVALID_SOCKET));","    detail::shutdown_socket(sock);","    detail::close_socket(sock);","  }","  is_decommissioned = false;","}","","inline void Server::decommission() { is_decommissioned = true; }","","inline bool Server::parse_request_line(const char *s, Request \u0026req) const {","  auto len = strlen(s);","  if (len \u003c 2 || s[len - 2] != '\\r' || s[len - 1] != '\\n') { return false; }","  len -= 2;","","  {","    size_t count = 0;","","    detail::split(s, s + len, ' ', [\u0026](const char *b, const char *e) {","      switch (count) {","      case 0: req.method = std::string(b, e); break;","      case 1: req.target = std::string(b, e); break;","      case 2: req.version = std::string(b, e); break;","      default: break;","      }","      count++;","    });","","    if (count != 3) { return false; }","  }","","  thread_local const std::set\u003cstd::string\u003e methods{","      \"GET\",     \"HEAD\",    \"POST\",  \"PUT\",   \"DELETE\",","      \"CONNECT\", \"OPTIONS\", \"TRACE\", \"PATCH\", \"PRI\"};","","  if (methods.find(req.method) == methods.end()) { return false; }","","  if (req.version != \"HTTP/1.1\" \u0026\u0026 req.version != \"HTTP/1.0\") { return false; }","","  {","    // Skip URL fragment","    for (size_t i = 0; i \u003c req.target.size(); i++) {","      if (req.target[i] == '#') {","        req.target.erase(i);","        break;","      }","    }","","    detail::divide(req.target, '?',","                   [\u0026](const char *lhs_data, std::size_t lhs_size,","                       const char *rhs_data, std::size_t rhs_size) {","                     req.path = detail::decode_url(","                         std::string(lhs_data, lhs_size), false);","                     detail::parse_query_text(rhs_data, rhs_size, req.params);","                   });","  }","","  return true;","}","","inline bool Server::write_response(Stream \u0026strm, bool close_connection,","                                   Request \u0026req, Response \u0026res) {","  // NOTE: `req.ranges` should be empty, otherwise it will be applied","  // incorrectly to the error content.","  req.ranges.clear();","  return write_response_core(strm, close_connection, req, res, false);","}","","inline bool Server::write_response_with_content(Stream \u0026strm,","                                                bool close_connection,","                                                const Request \u0026req,","                                                Response \u0026res) {","  return write_response_core(strm, close_connection, req, res, true);","}","","inline bool Server::write_response_core(Stream \u0026strm, bool close_connection,","                                        const Request \u0026req, Response \u0026res,","                                        bool need_apply_ranges) {","  assert(res.status != -1);","","  if (400 \u003c= res.status \u0026\u0026 error_handler_ \u0026\u0026","      error_handler_(req, res) == HandlerResponse::Handled) {","    need_apply_ranges = true;","  }","","  std::string content_type;","  std::string boundary;","  if (need_apply_ranges) { apply_ranges(req, res, content_type, boundary); }","","  // Prepare additional headers","  if (close_connection || req.get_header_value(\"Connection\") == \"close\") {","    res.set_header(\"Connection\", \"close\");","  } else {","    std::string s = \"timeout=\";","    s += std::to_string(keep_alive_timeout_sec_);","    s += \", max=\";","    s += std::to_string(keep_alive_max_count_);","    res.set_header(\"Keep-Alive\", s);","  }","","  if ((!res.body.empty() || res.content_length_ \u003e 0 || res.content_provider_) \u0026\u0026","      !res.has_header(\"Content-Type\")) {","    res.set_header(\"Content-Type\", \"text/plain\");","  }","","  if (res.body.empty() \u0026\u0026 !res.content_length_ \u0026\u0026 !res.content_provider_ \u0026\u0026","      !res.has_header(\"Content-Length\")) {","    res.set_header(\"Content-Length\", \"0\");","  }","","  if (req.method == \"HEAD\" \u0026\u0026 !res.has_header(\"Accept-Ranges\")) {","    res.set_header(\"Accept-Ranges\", \"bytes\");","  }","","  if (post_routing_handler_) { post_routing_handler_(req, res); }","","  // Response line and headers","  {","    detail::BufferStream bstrm;","    if (!detail::write_response_line(bstrm, res.status)) { return false; }","    if (!header_writer_(bstrm, res.headers)) { return false; }","","    // Flush buffer","    auto \u0026data = bstrm.get_buffer();","    detail::write_data(strm, data.data(), data.size());","  }","","  // Body","  auto ret = true;","  if (req.method != \"HEAD\") {","    if (!res.body.empty()) {","      if (!detail::write_data(strm, res.body.data(), res.body.size())) {","        ret = false;","      }","    } else if (res.content_provider_) {","      if (write_content_with_provider(strm, req, res, boundary, content_type)) {","        res.content_provider_success_ = true;","      } else {","        ret = false;","      }","    }","  }","","  // Log","  if (logger_) { logger_(req, res); }","","  return ret;","}","","inline bool","Server::write_content_with_provider(Stream \u0026strm, const Request \u0026req,","                                    Response \u0026res, const std::string \u0026boundary,","                                    const std::string \u0026content_type) {","  auto is_shutting_down = [this]() {","    return this-\u003esvr_sock_ == INVALID_SOCKET;","  };","","  if (res.content_length_ \u003e 0) {","    if (req.ranges.empty()) {","      return detail::write_content(strm, res.content_provider_, 0,","                                   res.content_length_, is_shutting_down);","    } else if (req.ranges.size() == 1) {","      auto offset_and_length = detail::get_range_offset_and_length(","          req.ranges[0], res.content_length_);","","      return detail::write_content(strm, res.content_provider_,","                                   offset_and_length.first,","                                   offset_and_length.second, is_shutting_down);","    } else {","      return detail::write_multipart_ranges_data(","          strm, req, res, boundary, content_type, res.content_length_,","          is_shutting_down);","    }","  } else {","    if (res.is_chunked_content_provider_) {","      auto type = detail::encoding_type(req, res);","","      std::unique_ptr\u003cdetail::compressor\u003e compressor;","      if (type == detail::EncodingType::Gzip) {","#ifdef CPPHTTPLIB_ZLIB_SUPPORT","        compressor = detail::make_unique\u003cdetail::gzip_compressor\u003e();","#endif","      } else if (type == detail::EncodingType::Brotli) {","#ifdef CPPHTTPLIB_BROTLI_SUPPORT","        compressor = detail::make_unique\u003cdetail::brotli_compressor\u003e();","#endif","      } else if (type == detail::EncodingType::Zstd) {","#ifdef CPPHTTPLIB_ZSTD_SUPPORT","        compressor = detail::make_unique\u003cdetail::zstd_compressor\u003e();","#endif","      } else {","        compressor = detail::make_unique\u003cdetail::nocompressor\u003e();","      }","      assert(compressor != nullptr);","","      return detail::write_content_chunked(strm, res.content_provider_,","                                           is_shutting_down, *compressor);","    } else {","      return detail::write_content_without_length(strm, res.content_provider_,","                                                  is_shutting_down);","    }","  }","}","","inline bool Server::read_content(Stream \u0026strm, Request \u0026req, Response \u0026res) {","  MultipartFormDataMap::iterator cur;","  auto file_count = 0;","  if (read_content_core(","          strm, req, res,","          // Regular","          [\u0026](const char *buf, size_t n) {","            if (req.body.size() + n \u003e req.body.max_size()) { return false; }","            req.body.append(buf, n);","            return true;","          },","          // Multipart","          [\u0026](const MultipartFormData \u0026file) {","            if (file_count++ == CPPHTTPLIB_MULTIPART_FORM_DATA_FILE_MAX_COUNT) {","              return false;","            }","            cur = req.files.emplace(file.name, file);","            return true;","          },","          [\u0026](const char *buf, size_t n) {","            auto \u0026content = cur-\u003esecond.content;","            if (content.size() + n \u003e content.max_size()) { return false; }","            content.append(buf, n);","            return true;","          })) {","    const auto \u0026content_type = req.get_header_value(\"Content-Type\");","    if (!content_type.find(\"application/x-www-form-urlencoded\")) {","      if (req.body.size() \u003e CPPHTTPLIB_FORM_URL_ENCODED_PAYLOAD_MAX_LENGTH) {","        res.status = StatusCode::PayloadTooLarge_413; // NOTE: should be 414?","        return false;","      }","      detail::parse_query_text(req.body, req.params);","    }","    return true;","  }","  return false;","}","","inline bool Server::read_content_with_content_receiver(","    Stream \u0026strm, Request \u0026req, Response \u0026res, ContentReceiver receiver,","    MultipartContentHeader multipart_header,","    ContentReceiver multipart_receiver) {","  return read_content_core(strm, req, res, std::move(receiver),","                           std::move(multipart_header),","                           std::move(multipart_receiver));","}","","inline bool","Server::read_content_core(Stream \u0026strm, Request \u0026req, Response \u0026res,","                          ContentReceiver receiver,","                          MultipartContentHeader multipart_header,","                          ContentReceiver multipart_receiver) const {","  detail::MultipartFormDataParser multipart_form_data_parser;","  ContentReceiverWithProgress out;","","  if (req.is_multipart_form_data()) {","    const auto \u0026content_type = req.get_header_value(\"Content-Type\");","    std::string boundary;","    if (!detail::parse_multipart_boundary(content_type, boundary)) {","      res.status = StatusCode::BadRequest_400;","      return false;","    }","","    multipart_form_data_parser.set_boundary(std::move(boundary));","    out = [\u0026](const char *buf, size_t n, uint64_t /*off*/, uint64_t /*len*/) {","      /* For debug","      size_t pos = 0;","      while (pos \u003c n) {","        auto read_size = (std::min)\u003csize_t\u003e(1, n - pos);","        auto ret = multipart_form_data_parser.parse(","            buf + pos, read_size, multipart_receiver, multipart_header);","        if (!ret) { return false; }","        pos += read_size;","      }","      return true;","      */","      return multipart_form_data_parser.parse(buf, n, multipart_receiver,","                                              multipart_header);","    };","  } else {","    out = [receiver](const char *buf, size_t n, uint64_t /*off*/,","                     uint64_t /*len*/) { return receiver(buf, n); };","  }","","  if (req.method == \"DELETE\" \u0026\u0026 !req.has_header(\"Content-Length\")) {","    return true;","  }","","  if (!detail::read_content(strm, req, payload_max_length_, res.status, nullptr,","                            out, true)) {","    return false;","  }","","  if (req.is_multipart_form_data()) {","    if (!multipart_form_data_parser.is_valid()) {","      res.status = StatusCode::BadRequest_400;","      return false;","    }","  }","","  return true;","}","","inline bool Server::handle_file_request(const Request \u0026req, Response \u0026res) {","  for (const auto \u0026entry : base_dirs_) {","    // Prefix match","    if (!req.path.compare(0, entry.mount_point.size(), entry.mount_point)) {","      std::string sub_path = \"/\" + req.path.substr(entry.mount_point.size());","      if (detail::is_valid_path(sub_path)) {","        auto path = entry.base_dir + sub_path;","        if (path.back() == '/') { path += \"index.html\"; }","","        detail::FileStat stat(path);","","        if (stat.is_dir()) {","          res.set_redirect(sub_path + \"/\", StatusCode::MovedPermanently_301);","          return true;","        }","","        if (stat.is_file()) {","          for (const auto \u0026kv : entry.headers) {","            res.set_header(kv.first, kv.second);","          }","","          auto mm = std::make_shared\u003cdetail::mmap\u003e(path.c_str());","          if (!mm-\u003eis_open()) { return false; }","","          res.set_content_provider(","              mm-\u003esize(),","              detail::find_content_type(path, file_extension_and_mimetype_map_,","                                        default_file_mimetype_),","              [mm](size_t offset, size_t length, DataSink \u0026sink) -\u003e bool {","                sink.write(mm-\u003edata() + offset, length);","                return true;","              });","","          if (req.method != \"HEAD\" \u0026\u0026 file_request_handler_) {","            file_request_handler_(req, res);","          }","","          return true;","        }","      }","    }","  }","  return false;","}","","inline socket_t","Server::create_server_socket(const std::string \u0026host, int port,","                             int socket_flags,","                             SocketOptions socket_options) const {","  return detail::create_socket(","      host, std::string(), port, address_family_, socket_flags, tcp_nodelay_,","      ipv6_v6only_, std::move(socket_options),","      [](socket_t sock, struct addrinfo \u0026ai, bool \u0026 /*quit*/) -\u003e bool {","        if (::bind(sock, ai.ai_addr, static_cast\u003csocklen_t\u003e(ai.ai_addrlen))) {","          return false;","        }","        if (::listen(sock, CPPHTTPLIB_LISTEN_BACKLOG)) { return false; }","        return true;","      });","}","","inline int Server::bind_internal(const std::string \u0026host, int port,","                                 int socket_flags) {","  if (is_decommissioned) { return -1; }","","  if (!is_valid()) { return -1; }","","  svr_sock_ = create_server_socket(host, port, socket_flags, socket_options_);","  if (svr_sock_ == INVALID_SOCKET) { return -1; }","","  if (port == 0) {","    struct sockaddr_storage addr;","    socklen_t addr_len = sizeof(addr);","    if (getsockname(svr_sock_, reinterpret_cast\u003cstruct sockaddr *\u003e(\u0026addr),","                    \u0026addr_len) == -1) {","      return -1;","    }","    if (addr.ss_family == AF_INET) {","      return ntohs(reinterpret_cast\u003cstruct sockaddr_in *\u003e(\u0026addr)-\u003esin_port);","    } else if (addr.ss_family == AF_INET6) {","      return ntohs(reinterpret_cast\u003cstruct sockaddr_in6 *\u003e(\u0026addr)-\u003esin6_port);","    } else {","      return -1;","    }","  } else {","    return port;","  }","}","","inline bool Server::listen_internal() {","  if (is_decommissioned) { return false; }","","  auto ret = true;","  is_running_ = true;","  auto se = detail::scope_exit([\u0026]() { is_running_ = false; });","","  {","    std::unique_ptr\u003cTaskQueue\u003e task_queue(new_task_queue());","","    while (svr_sock_ != INVALID_SOCKET) {","#ifndef _WIN32","      if (idle_interval_sec_ \u003e 0 || idle_interval_usec_ \u003e 0) {","#endif","        auto val = detail::select_read(svr_sock_, idle_interval_sec_,","                                       idle_interval_usec_);","        if (val == 0) { // Timeout","          task_queue-\u003eon_idle();","          continue;","        }","#ifndef _WIN32","      }","#endif","","#if defined _WIN32","      // sockets connected via WASAccept inherit flags NO_HANDLE_INHERIT,","      // OVERLAPPED","      socket_t sock = WSAAccept(svr_sock_, nullptr, nullptr, nullptr, 0);","#elif defined SOCK_CLOEXEC","      socket_t sock = accept4(svr_sock_, nullptr, nullptr, SOCK_CLOEXEC);","#else","      socket_t sock = accept(svr_sock_, nullptr, nullptr);","#endif","","      if (sock == INVALID_SOCKET) {","        if (errno == EMFILE) {","          // The per-process limit of open file descriptors has been reached.","          // Try to accept new connections after a short sleep.","          std::this_thread::sleep_for(std::chrono::microseconds{1});","          continue;","        } else if (errno == EINTR || errno == EAGAIN) {","          continue;","        }","        if (svr_sock_ != INVALID_SOCKET) {","          detail::close_socket(svr_sock_);","          ret = false;","        } else {","          ; // The server socket was closed by user.","        }","        break;","      }","","      detail::set_socket_opt_time(sock, SOL_SOCKET, SO_RCVTIMEO,","                                  read_timeout_sec_, read_timeout_usec_);","      detail::set_socket_opt_time(sock, SOL_SOCKET, SO_SNDTIMEO,","                                  write_timeout_sec_, write_timeout_usec_);","","      if (!task_queue-\u003eenqueue(","              [this, sock]() { process_and_close_socket(sock); })) {","        detail::shutdown_socket(sock);","        detail::close_socket(sock);","      }","    }","","    task_queue-\u003eshutdown();","  }","","  is_decommissioned = !ret;","  return ret;","}","","inline bool Server::routing(Request \u0026req, Response \u0026res, Stream \u0026strm) {","  if (pre_routing_handler_ \u0026\u0026","      pre_routing_handler_(req, res) == HandlerResponse::Handled) {","    return true;","  }","","  // File handler","  if ((req.method == \"GET\" || req.method == \"HEAD\") \u0026\u0026","      handle_file_request(req, res)) {","    return true;","  }","","  if (detail::expect_content(req)) {","    // Content reader handler","    {","      ContentReader reader(","          [\u0026](ContentReceiver receiver) {","            return read_content_with_content_receiver(","                strm, req, res, std::move(receiver), nullptr, nullptr);","          },","          [\u0026](MultipartContentHeader header, ContentReceiver receiver) {","            return read_content_with_content_receiver(strm, req, res, nullptr,","                                                      std::move(header),","                                                      std::move(receiver));","          });","","      if (req.method == \"POST\") {","        if (dispatch_request_for_content_reader(","                req, res, std::move(reader),","                post_handlers_for_content_reader_)) {","          return true;","        }","      } else if (req.method == \"PUT\") {","        if (dispatch_request_for_content_reader(","                req, res, std::move(reader),","                put_handlers_for_content_reader_)) {","          return true;","        }","      } else if (req.method == \"PATCH\") {","        if (dispatch_request_for_content_reader(","                req, res, std::move(reader),","                patch_handlers_for_content_reader_)) {","          return true;","        }","      } else if (req.method == \"DELETE\") {","        if (dispatch_request_for_content_reader(","                req, res, std::move(reader),","                delete_handlers_for_content_reader_)) {","          return true;","        }","      }","    }","","    // Read content into `req.body`","    if (!read_content(strm, req, res)) { return false; }","  }","","  // Regular handler","  if (req.method == \"GET\" || req.method == \"HEAD\") {","    return dispatch_request(req, res, get_handlers_);","  } else if (req.method == \"POST\") {","    return dispatch_request(req, res, post_handlers_);","  } else if (req.method == \"PUT\") {","    return dispatch_request(req, res, put_handlers_);","  } else if (req.method == \"DELETE\") {","    return dispatch_request(req, res, delete_handlers_);","  } else if (req.method == \"OPTIONS\") {","    return dispatch_request(req, res, options_handlers_);","  } else if (req.method == \"PATCH\") {","    return dispatch_request(req, res, patch_handlers_);","  }","","  res.status = StatusCode::BadRequest_400;","  return false;","}","","inline bool Server::dispatch_request(Request \u0026req, Response \u0026res,","                                     const Handlers \u0026handlers) const {","  for (const auto \u0026x : handlers) {","    const auto \u0026matcher = x.first;","    const auto \u0026handler = x.second;","","    if (matcher-\u003ematch(req)) {","      handler(req, res);","      return true;","    }","  }","  return false;","}","","inline void Server::apply_ranges(const Request \u0026req, Response \u0026res,","                                 std::string \u0026content_type,","                                 std::string \u0026boundary) const {","  if (req.ranges.size() \u003e 1 \u0026\u0026 res.status == StatusCode::PartialContent_206) {","    auto it = res.headers.find(\"Content-Type\");","    if (it != res.headers.end()) {","      content_type = it-\u003esecond;","      res.headers.erase(it);","    }","","    boundary = detail::make_multipart_data_boundary();","","    res.set_header(\"Content-Type\",","                   \"multipart/byteranges; boundary=\" + boundary);","  }","","  auto type = detail::encoding_type(req, res);","","  if (res.body.empty()) {","    if (res.content_length_ \u003e 0) {","      size_t length = 0;","      if (req.ranges.empty() || res.status != StatusCode::PartialContent_206) {","        length = res.content_length_;","      } else if (req.ranges.size() == 1) {","        auto offset_and_length = detail::get_range_offset_and_length(","            req.ranges[0], res.content_length_);","","        length = offset_and_length.second;","","        auto content_range = detail::make_content_range_header_field(","            offset_and_length, res.content_length_);","        res.set_header(\"Content-Range\", content_range);","      } else {","        length = detail::get_multipart_ranges_data_length(","            req, boundary, content_type, res.content_length_);","      }","      res.set_header(\"Content-Length\", std::to_string(length));","    } else {","      if (res.content_provider_) {","        if (res.is_chunked_content_provider_) {","          res.set_header(\"Transfer-Encoding\", \"chunked\");","          if (type == detail::EncodingType::Gzip) {","            res.set_header(\"Content-Encoding\", \"gzip\");","          } else if (type == detail::EncodingType::Brotli) {","            res.set_header(\"Content-Encoding\", \"br\");","          } else if (type == detail::EncodingType::Zstd) {","            res.set_header(\"Content-Encoding\", \"zstd\");","          }","        }","      }","    }","  } else {","    if (req.ranges.empty() || res.status != StatusCode::PartialContent_206) {","      ;","    } else if (req.ranges.size() == 1) {","      auto offset_and_length =","          detail::get_range_offset_and_length(req.ranges[0], res.body.size());","      auto offset = offset_and_length.first;","      auto length = offset_and_length.second;","","      auto content_range = detail::make_content_range_header_field(","          offset_and_length, res.body.size());","      res.set_header(\"Content-Range\", content_range);","","      assert(offset + length \u003c= res.body.size());","      res.body = res.body.substr(offset, length);","    } else {","      std::string data;","      detail::make_multipart_ranges_data(req, res, boundary, content_type,","                                         res.body.size(), data);","      res.body.swap(data);","    }","","    if (type != detail::EncodingType::None) {","      std::unique_ptr\u003cdetail::compressor\u003e compressor;","      std::string content_encoding;","","      if (type == detail::EncodingType::Gzip) {","#ifdef CPPHTTPLIB_ZLIB_SUPPORT","        compressor = detail::make_unique\u003cdetail::gzip_compressor\u003e();","        content_encoding = \"gzip\";","#endif","      } else if (type == detail::EncodingType::Brotli) {","#ifdef CPPHTTPLIB_BROTLI_SUPPORT","        compressor = detail::make_unique\u003cdetail::brotli_compressor\u003e();","        content_encoding = \"br\";","#endif","      } else if (type == detail::EncodingType::Zstd) {","#ifdef CPPHTTPLIB_ZSTD_SUPPORT","        compressor = detail::make_unique\u003cdetail::zstd_compressor\u003e();","        content_encoding = \"zstd\";","#endif","      }","","      if (compressor) {","        std::string compressed;","        if (compressor-\u003ecompress(res.body.data(), res.body.size(), true,","                                 [\u0026](const char *data, size_t data_len) {","                                   compressed.append(data, data_len);","                                   return true;","                                 })) {","          res.body.swap(compressed);","          res.set_header(\"Content-Encoding\", content_encoding);","        }","      }","    }","","    auto length = std::to_string(res.body.size());","    res.set_header(\"Content-Length\", length);","  }","}","","inline bool Server::dispatch_request_for_content_reader(","    Request \u0026req, Response \u0026res, ContentReader content_reader,","    const HandlersForContentReader \u0026handlers) const {","  for (const auto \u0026x : handlers) {","    const auto \u0026matcher = x.first;","    const auto \u0026handler = x.second;","","    if (matcher-\u003ematch(req)) {","      handler(req, res, content_reader);","      return true;","    }","  }","  return false;","}","","inline bool","Server::process_request(Stream \u0026strm, const std::string \u0026remote_addr,","                        int remote_port, const std::string \u0026local_addr,","                        int local_port, bool close_connection,","                        bool \u0026connection_closed,","                        const std::function\u003cvoid(Request \u0026)\u003e \u0026setup_request) {","  std::array\u003cchar, 2048\u003e buf{};","","  detail::stream_line_reader line_reader(strm, buf.data(), buf.size());","","  // Connection has been closed on client","  if (!line_reader.getline()) { return false; }","","  Request req;","","  Response res;","  res.version = \"HTTP/1.1\";","  res.headers = default_headers_;","","  // Request line and headers","  if (!parse_request_line(line_reader.ptr(), req) ||","      !detail::read_headers(strm, req.headers)) {","    res.status = StatusCode::BadRequest_400;","    return write_response(strm, close_connection, req, res);","  }","","  // Check if the request URI doesn't exceed the limit","  if (req.target.size() \u003e CPPHTTPLIB_REQUEST_URI_MAX_LENGTH) {","    Headers dummy;","    detail::read_headers(strm, dummy);","    res.status = StatusCode::UriTooLong_414;","    return write_response(strm, close_connection, req, res);","  }","","  if (req.get_header_value(\"Connection\") == \"close\") {","    connection_closed = true;","  }","","  if (req.version == \"HTTP/1.0\" \u0026\u0026","      req.get_header_value(\"Connection\") != \"Keep-Alive\") {","    connection_closed = true;","  }","","  req.remote_addr = remote_addr;","  req.remote_port = remote_port;","  req.set_header(\"REMOTE_ADDR\", req.remote_addr);","  req.set_header(\"REMOTE_PORT\", std::to_string(req.remote_port));","","  req.local_addr = local_addr;","  req.local_port = local_port;","  req.set_header(\"LOCAL_ADDR\", req.local_addr);","  req.set_header(\"LOCAL_PORT\", std::to_string(req.local_port));","","  if (req.has_header(\"Range\")) {","    const auto \u0026range_header_value = req.get_header_value(\"Range\");","    if (!detail::parse_range_header(range_header_value, req.ranges)) {","      res.status = StatusCode::RangeNotSatisfiable_416;","      return write_response(strm, close_connection, req, res);","    }","  }","","  if (setup_request) { setup_request(req); }","","  if (req.get_header_value(\"Expect\") == \"100-continue\") {","    int status = StatusCode::Continue_100;","    if (expect_100_continue_handler_) {","      status = expect_100_continue_handler_(req, res);","    }","    switch (status) {","    case StatusCode::Continue_100:","    case StatusCode::ExpectationFailed_417:","      detail::write_response_line(strm, status);","      strm.write(\"\\r\\n\");","      break;","    default:","      connection_closed = true;","      return write_response(strm, true, req, res);","    }","  }","","  // Setup `is_connection_closed` method","  auto sock = strm.socket();","  req.is_connection_closed = [sock]() {","    return !detail::is_socket_alive(sock);","  };","","  // Routing","  auto routed = false;","#ifdef CPPHTTPLIB_NO_EXCEPTIONS","  routed = routing(req, res, strm);","#else","  try {","    routed = routing(req, res, strm);","  } catch (std::exception \u0026e) {","    if (exception_handler_) {","      auto ep = std::current_exception();","      exception_handler_(req, res, ep);","      routed = true;","    } else {","      res.status = StatusCode::InternalServerError_500;","      std::string val;","      auto s = e.what();","      for (size_t i = 0; s[i]; i++) {","        switch (s[i]) {","        case '\\r': val += \"\\\\r\"; break;","        case '\\n': val += \"\\\\n\"; break;","        default: val += s[i]; break;","        }","      }","      res.set_header(\"EXCEPTION_WHAT\", val);","    }","  } catch (...) {","    if (exception_handler_) {","      auto ep = std::current_exception();","      exception_handler_(req, res, ep);","      routed = true;","    } else {","      res.status = StatusCode::InternalServerError_500;","      res.set_header(\"EXCEPTION_WHAT\", \"UNKNOWN\");","    }","  }","#endif","  if (routed) {","    if (res.status == -1) {","      res.status = req.ranges.empty() ? StatusCode::OK_200","                                      : StatusCode::PartialContent_206;","    }","","    // Serve file content by using a content provider","    if (!res.file_content_path_.empty()) {","      const auto \u0026path = res.file_content_path_;","      auto mm = std::make_shared\u003cdetail::mmap\u003e(path.c_str());","      if (!mm-\u003eis_open()) {","        res.body.clear();","        res.content_length_ = 0;","        res.content_provider_ = nullptr;","        res.status = StatusCode::NotFound_404;","        return write_response(strm, close_connection, req, res);","      }","","      auto content_type = res.file_content_content_type_;","      if (content_type.empty()) {","        content_type = detail::find_content_type(","            path, file_extension_and_mimetype_map_, default_file_mimetype_);","      }","","      res.set_content_provider(","          mm-\u003esize(), content_type,","          [mm](size_t offset, size_t length, DataSink \u0026sink) -\u003e bool {","            sink.write(mm-\u003edata() + offset, length);","            return true;","          });","    }","","    if (detail::range_error(req, res)) {","      res.body.clear();","      res.content_length_ = 0;","      res.content_provider_ = nullptr;","      res.status = StatusCode::RangeNotSatisfiable_416;","      return write_response(strm, close_connection, req, res);","    }","","    return write_response_with_content(strm, close_connection, req, res);","  } else {","    if (res.status == -1) { res.status = StatusCode::NotFound_404; }","","    return write_response(strm, close_connection, req, res);","  }","}","","inline bool Server::is_valid() const { return true; }","","inline bool Server::process_and_close_socket(socket_t sock) {","  std::string remote_addr;","  int remote_port = 0;","  detail::get_remote_ip_and_port(sock, remote_addr, remote_port);","","  std::string local_addr;","  int local_port = 0;","  detail::get_local_ip_and_port(sock, local_addr, local_port);","","  auto ret = detail::process_server_socket(","      svr_sock_, sock, keep_alive_max_count_, keep_alive_timeout_sec_,","      read_timeout_sec_, read_timeout_usec_, write_timeout_sec_,","      write_timeout_usec_,","      [\u0026](Stream \u0026strm, bool close_connection, bool \u0026connection_closed) {","        return process_request(strm, remote_addr, remote_port, local_addr,","                               local_port, close_connection, connection_closed,","                               nullptr);","      });","","  detail::shutdown_socket(sock);","  detail::close_socket(sock);","  return ret;","}","","// HTTP client implementation","inline ClientImpl::ClientImpl(const std::string \u0026host)","    : ClientImpl(host, 80, std::string(), std::string()) {}","","inline ClientImpl::ClientImpl(const std::string \u0026host, int port)","    : ClientImpl(host, port, std::string(), std::string()) {}","","inline ClientImpl::ClientImpl(const std::string \u0026host, int port,","                              const std::string \u0026client_cert_path,","                              const std::string \u0026client_key_path)","    : host_(detail::escape_abstract_namespace_unix_domain(host)), port_(port),","      host_and_port_(adjust_host_string(host_) + \":\" + std::to_string(port)),","      client_cert_path_(client_cert_path), client_key_path_(client_key_path) {}","","inline ClientImpl::~ClientImpl() {","  // Wait until all the requests in flight are handled.","  size_t retry_count = 10;","  while (retry_count-- \u003e 0) {","    {","      std::lock_guard\u003cstd::mutex\u003e guard(socket_mutex_);","      if (socket_requests_in_flight_ == 0) { break; }","    }","    std::this_thread::sleep_for(std::chrono::milliseconds{1});","  }","","  std::lock_guard\u003cstd::mutex\u003e guard(socket_mutex_);","  shutdown_socket(socket_);","  close_socket(socket_);","}","","inline bool ClientImpl::is_valid() const { return true; }","","inline void ClientImpl::copy_settings(const ClientImpl \u0026rhs) {","  client_cert_path_ = rhs.client_cert_path_;","  client_key_path_ = rhs.client_key_path_;","  connection_timeout_sec_ = rhs.connection_timeout_sec_;","  read_timeout_sec_ = rhs.read_timeout_sec_;","  read_timeout_usec_ = rhs.read_timeout_usec_;","  write_timeout_sec_ = rhs.write_timeout_sec_;","  write_timeout_usec_ = rhs.write_timeout_usec_;","  max_timeout_msec_ = rhs.max_timeout_msec_;","  basic_auth_username_ = rhs.basic_auth_username_;","  basic_auth_password_ = rhs.basic_auth_password_;","  bearer_token_auth_token_ = rhs.bearer_token_auth_token_;","#ifdef CPPHTTPLIB_OPENSSL_SUPPORT","  digest_auth_username_ = rhs.digest_auth_username_;","  digest_auth_password_ = rhs.digest_auth_password_;","#endif","  keep_alive_ = rhs.keep_alive_;","  follow_location_ = rhs.follow_location_;","  url_encode_ = rhs.url_encode_;","  address_family_ = rhs.address_family_;","  tcp_nodelay_ = rhs.tcp_nodelay_;","  ipv6_v6only_ = rhs.ipv6_v6only_;","  socket_options_ = rhs.socket_options_;","  compress_ = rhs.compress_;","  decompress_ = rhs.decompress_;","  interface_ = rhs.interface_;","  proxy_host_ = rhs.proxy_host_;","  proxy_port_ = rhs.proxy_port_;","  proxy_basic_auth_username_ = rhs.proxy_basic_auth_username_;","  proxy_basic_auth_password_ = rhs.proxy_basic_auth_password_;","  proxy_bearer_token_auth_token_ = rhs.proxy_bearer_token_auth_token_;","#ifdef CPPHTTPLIB_OPENSSL_SUPPORT","  proxy_digest_auth_username_ = rhs.proxy_digest_auth_username_;","  proxy_digest_auth_password_ = rhs.proxy_digest_auth_password_;","#endif","#ifdef CPPHTTPLIB_OPENSSL_SUPPORT","  ca_cert_file_path_ = rhs.ca_cert_file_path_;","  ca_cert_dir_path_ = rhs.ca_cert_dir_path_;","  ca_cert_store_ = rhs.ca_cert_store_;","#endif","#ifdef CPPHTTPLIB_OPENSSL_SUPPORT","  server_certificate_verification_ = rhs.server_certificate_verification_;","  server_hostname_verification_ = rhs.server_hostname_verification_;","  server_certificate_verifier_ = rhs.server_certificate_verifier_;","#endif","  logger_ = rhs.logger_;","}","","inline socket_t ClientImpl::create_client_socket(Error \u0026error) const {","  if (!proxy_host_.empty() \u0026\u0026 proxy_port_ != -1) {","    return detail::create_client_socket(","        proxy_host_, std::string(), proxy_port_, address_family_, tcp_nodelay_,","        ipv6_v6only_, socket_options_, connection_timeout_sec_,","        connection_timeout_usec_, read_timeout_sec_, read_timeout_usec_,","        write_timeout_sec_, write_timeout_usec_, interface_, error);","  }","","  // Check is custom IP specified for host_","  std::string ip;","  auto it = addr_map_.find(host_);","  if (it != addr_map_.end()) { ip = it-\u003esecond; }","","  return detail::create_client_socket(","      host_, ip, port_, address_family_, tcp_nodelay_, ipv6_v6only_,","      socket_options_, connection_timeout_sec_, connection_timeout_usec_,","      read_timeout_sec_, read_timeout_usec_, write_timeout_sec_,","      write_timeout_usec_, interface_, error);","}","","inline bool ClientImpl::create_and_connect_socket(Socket \u0026socket,","                                                  Error \u0026error) {","  auto sock = create_client_socket(error);","  if (sock == INVALID_SOCKET) { return false; }","  socket.sock = sock;","  return true;","}","","inline void ClientImpl::shutdown_ssl(Socket \u0026 /*socket*/,","                                     bool /*shutdown_gracefully*/) {","  // If there are any requests in flight from threads other than us, then it's","  // a thread-unsafe race because individual ssl* objects are not thread-safe.","  assert(socket_requests_in_flight_ == 0 ||","         socket_requests_are_from_thread_ == std::this_thread::get_id());","}","","inline void ClientImpl::shutdown_socket(Socket \u0026socket) const {","  if (socket.sock == INVALID_SOCKET) { return; }","  detail::shutdown_socket(socket.sock);","}","","inline void ClientImpl::close_socket(Socket \u0026socket) {","  // If there are requests in flight in another thread, usually closing","  // the socket will be fine and they will simply receive an error when","  // using the closed socket, but it is still a bug since rarely the OS","  // may reassign the socket id to be used for a new socket, and then","  // suddenly they will be operating on a live socket that is different","  // than the one they intended!","  assert(socket_requests_in_flight_ == 0 ||","         socket_requests_are_from_thread_ == std::this_thread::get_id());","","  // It is also a bug if this happens while SSL is still active","#ifdef CPPHTTPLIB_OPENSSL_SUPPORT","  assert(socket.ssl == nullptr);","#endif","  if (socket.sock == INVALID_SOCKET) { return; }","  detail::close_socket(socket.sock);","  socket.sock = INVALID_SOCKET;","}","","inline bool ClientImpl::read_response_line(Stream \u0026strm, const Request \u0026req,","                                           Response \u0026res) const {","  std::array\u003cchar, 2048\u003e buf{};","","  detail::stream_line_reader line_reader(strm, buf.data(), buf.size());","","  if (!line_reader.getline()) { return false; }","","#ifdef CPPHTTPLIB_ALLOW_LF_AS_LINE_TERMINATOR","  thread_local const std::regex re(\"(HTTP/1\\\\.[01]) (\\\\d{3})(?: (.*?))?\\r?\\n\");","#else","  thread_local const std::regex re(\"(HTTP/1\\\\.[01]) (\\\\d{3})(?: (.*?))?\\r\\n\");","#endif","","  std::cmatch m;","  if (!std::regex_match(line_reader.ptr(), m, re)) {","    return req.method == \"CONNECT\";","  }","  res.version = std::string(m[1]);","  res.status = std::stoi(std::string(m[2]));","  res.reason = std::string(m[3]);","","  // Ignore '100 Continue'","  while (res.status == StatusCode::Continue_100) {","    if (!line_reader.getline()) { return false; } // CRLF","    if (!line_reader.getline()) { return false; } // next response line","","    if (!std::regex_match(line_reader.ptr(), m, re)) { return false; }","    res.version = std::string(m[1]);","    res.status = std::stoi(std::string(m[2]));","    res.reason = std::string(m[3]);","  }","","  return true;","}","","inline bool ClientImpl::send(Request \u0026req, Response \u0026res, Error \u0026error) {","  std::lock_guard\u003cstd::recursive_mutex\u003e request_mutex_guard(request_mutex_);","  auto ret = send_(req, res, error);","  if (error == Error::SSLPeerCouldBeClosed_) {","    assert(!ret);","    ret = send_(req, res, error);","  }","  return ret;","}","","inline bool ClientImpl::send_(Request \u0026req, Response \u0026res, Error \u0026error) {","  {","    std::lock_guard\u003cstd::mutex\u003e guard(socket_mutex_);","","    // Set this to false immediately - if it ever gets set to true by the end of","    // the request, we know another thread instructed us to close the socket.","    socket_should_be_closed_when_request_is_done_ = false;","","    auto is_alive = false;","    if (socket_.is_open()) {","      is_alive = detail::is_socket_alive(socket_.sock);","","#ifdef CPPHTTPLIB_OPENSSL_SUPPORT","      if (is_alive \u0026\u0026 is_ssl()) {","        if (detail::is_ssl_peer_could_be_closed(socket_.ssl, socket_.sock)) {","          is_alive = false;","        }","      }","#endif","","      if (!is_alive) {","        // Attempt to avoid sigpipe by shutting down non-gracefully if it seems","        // like the other side has already closed the connection Also, there","        // cannot be any requests in flight from other threads since we locked","        // request_mutex_, so safe to close everything immediately","        const bool shutdown_gracefully = false;","        shutdown_ssl(socket_, shutdown_gracefully);","        shutdown_socket(socket_);","        close_socket(socket_);","      }","    }","","    if (!is_alive) {","      if (!create_and_connect_socket(socket_, error)) { return false; }","","#ifdef CPPHTTPLIB_OPENSSL_SUPPORT","      // TODO: refactoring","      if (is_ssl()) {","        auto \u0026scli = static_cast\u003cSSLClient \u0026\u003e(*this);","        if (!proxy_host_.empty() \u0026\u0026 proxy_port_ != -1) {","          auto success = false;","          if (!scli.connect_with_proxy(socket_, req.start_time_, res, success,","                                       error)) {","            return success;","          }","        }","","        if (!scli.initialize_ssl(socket_, error)) { return false; }","      }","#endif","    }","","    // Mark the current socket as being in use so that it cannot be closed by","    // anyone else while this request is ongoing, even though we will be","    // releasing the mutex.","    if (socket_requests_in_flight_ \u003e 1) {","      assert(socket_requests_are_from_thread_ == std::this_thread::get_id());","    }","    socket_requests_in_flight_ += 1;","    socket_requests_are_from_thread_ = std::this_thread::get_id();","  }","","  for (const auto \u0026header : default_headers_) {","    if (req.headers.find(header.first) == req.headers.end()) {","      req.headers.insert(header);","    }","  }","","  auto ret = false;","  auto close_connection = !keep_alive_;","","  auto se = detail::scope_exit([\u0026]() {","    // Briefly lock mutex in order to mark that a request is no longer ongoing","    std::lock_guard\u003cstd::mutex\u003e guard(socket_mutex_);","    socket_requests_in_flight_ -= 1;","    if (socket_requests_in_flight_ \u003c= 0) {","      assert(socket_requests_in_flight_ == 0);","      socket_requests_are_from_thread_ = std::thread::id();","    }","","    if (socket_should_be_closed_when_request_is_done_ || close_connection ||","        !ret) {","      shutdown_ssl(socket_, true);","      shutdown_socket(socket_);","      close_socket(socket_);","    }","  });","","  ret = process_socket(socket_, req.start_time_, [\u0026](Stream \u0026strm) {","    return handle_request(strm, req, res, close_connection, error);","  });","","  if (!ret) {","    if (error == Error::Success) { error = Error::Unknown; }","  }","","  return ret;","}","","inline Result ClientImpl::send(const Request \u0026req) {","  auto req2 = req;","  return send_(std::move(req2));","}","","inline Result ClientImpl::send_(Request \u0026\u0026req) {","  auto res = detail::make_unique\u003cResponse\u003e();","  auto error = Error::Success;","  auto ret = send(req, *res, error);","  return Result{ret ? std::move(res) : nullptr, error, std::move(req.headers)};","}","","inline bool ClientImpl::handle_request(Stream \u0026strm, Request \u0026req,","                                       Response \u0026res, bool close_connection,","                                       Error \u0026error) {","  if (req.path.empty()) {","    error = Error::Connection;","    return false;","  }","","  auto req_save = req;","","  bool ret;","","  if (!is_ssl() \u0026\u0026 !proxy_host_.empty() \u0026\u0026 proxy_port_ != -1) {","    auto req2 = req;","    req2.path = \"http://\" + host_and_port_ + req.path;","    ret = process_request(strm, req2, res, close_connection, error);","    req = req2;","    req.path = req_save.path;","  } else {","    ret = process_request(strm, req, res, close_connection, error);","  }","","  if (!ret) { return false; }","","  if (res.get_header_value(\"Connection\") == \"close\" ||","      (res.version == \"HTTP/1.0\" \u0026\u0026 res.reason != \"Connection established\")) {","    // TODO this requires a not-entirely-obvious chain of calls to be correct","    // for this to be safe.","","    // This is safe to call because handle_request is only called by send_","    // which locks the request mutex during the process. It would be a bug","    // to call it from a different thread since it's a thread-safety issue","    // to do these things to the socket if another thread is using the socket.","    std::lock_guard\u003cstd::mutex\u003e guard(socket_mutex_);","    shutdown_ssl(socket_, true);","    shutdown_socket(socket_);","    close_socket(socket_);","  }","","  if (300 \u003c res.status \u0026\u0026 res.status \u003c 400 \u0026\u0026 follow_location_) {","    req = req_save;","    ret = redirect(req, res, error);","  }","","#ifdef CPPHTTPLIB_OPENSSL_SUPPORT","  if ((res.status == StatusCode::Unauthorized_401 ||","       res.status == StatusCode::ProxyAuthenticationRequired_407) \u0026\u0026","      req.authorization_count_ \u003c 5) {","    auto is_proxy = res.status == StatusCode::ProxyAuthenticationRequired_407;","    const auto \u0026username =","        is_proxy ? proxy_digest_auth_username_ : digest_auth_username_;","    const auto \u0026password =","        is_proxy ? proxy_digest_auth_password_ : digest_auth_password_;","","    if (!username.empty() \u0026\u0026 !password.empty()) {","      std::map\u003cstd::string, std::string\u003e auth;","      if (detail::parse_www_authenticate(res, auth, is_proxy)) {","        Request new_req = req;","        new_req.authorization_count_ += 1;","        new_req.headers.erase(is_proxy ? \"Proxy-Authorization\"","                                       : \"Authorization\");","        new_req.headers.insert(detail::make_digest_authentication_header(","            req, auth, new_req.authorization_count_, detail::random_string(10),","            username, password, is_proxy));","","        Response new_res;","","        ret = send(new_req, new_res, error);","        if (ret) { res = new_res; }","      }","    }","  }","#endif","","  return ret;","}","","inline bool ClientImpl::redirect(Request \u0026req, Response \u0026res, Error \u0026error) {","  if (req.redirect_count_ == 0) {","    error = Error::ExceedRedirectCount;","    return false;","  }","","  auto location = res.get_header_value(\"location\");","  if (location.empty()) { return false; }","","  thread_local const std::regex re(","      R\"((?:(https?):)?(?://(?:\\[([a-fA-F\\d:]+)\\]|([^:/?#]+))(?::(\\d+))?)?([^?#]*)(\\?[^#]*)?(?:#.*)?)\");","","  std::smatch m;","  if (!std::regex_match(location, m, re)) { return false; }","","  auto scheme = is_ssl() ? \"https\" : \"http\";","","  auto next_scheme = m[1].str();","  auto next_host = m[2].str();","  if (next_host.empty()) { next_host = m[3].str(); }","  auto port_str = m[4].str();","  auto next_path = m[5].str();","  auto next_query = m[6].str();","","  auto next_port = port_;","  if (!port_str.empty()) {","    next_port = std::stoi(port_str);","  } else if (!next_scheme.empty()) {","    next_port = next_scheme == \"https\" ? 443 : 80;","  }","","  if (next_scheme.empty()) { next_scheme = scheme; }","  if (next_host.empty()) { next_host = host_; }","  if (next_path.empty()) { next_path = \"/\"; }","","  auto path = detail::decode_url(next_path, true) + next_query;","","  if (next_scheme == scheme \u0026\u0026 next_host == host_ \u0026\u0026 next_port == port_) {","    return detail::redirect(*this, req, res, path, location, error);","  } else {","    if (next_scheme == \"https\") {","#ifdef CPPHTTPLIB_OPENSSL_SUPPORT","      SSLClient cli(next_host, next_port);","      cli.copy_settings(*this);","      if (ca_cert_store_) { cli.set_ca_cert_store(ca_cert_store_); }","      return detail::redirect(cli, req, res, path, location, error);","#else","      return false;","#endif","    } else {","      ClientImpl cli(next_host, next_port);","      cli.copy_settings(*this);","      return detail::redirect(cli, req, res, path, location, error);","    }","  }","}","","inline bool ClientImpl::write_content_with_provider(Stream \u0026strm,","                                                    const Request \u0026req,","                                                    Error \u0026error) const {","  auto is_shutting_down = []() { return false; };","","  if (req.is_chunked_content_provider_) {","    // TODO: Brotli support","    std::unique_ptr\u003cdetail::compressor\u003e compressor;","#ifdef CPPHTTPLIB_ZLIB_SUPPORT","    if (compress_) {","      compressor = detail::make_unique\u003cdetail::gzip_compressor\u003e();","    } else","#endif","    {","      compressor = detail::make_unique\u003cdetail::nocompressor\u003e();","    }","","    return detail::write_content_chunked(strm, req.content_provider_,","                                         is_shutting_down, *compressor, error);","  } else {","    return detail::write_content(strm, req.content_provider_, 0,","                                 req.content_length_, is_shutting_down, error);","  }","}","","inline bool ClientImpl::write_request(Stream \u0026strm, Request \u0026req,","                                      bool close_connection, Error \u0026error) {","  // Prepare additional headers","  if (close_connection) {","    if (!req.has_header(\"Connection\")) {","      req.set_header(\"Connection\", \"close\");","    }","  }","","  if (!req.has_header(\"Host\")) {","    if (is_ssl()) {","      if (port_ == 443) {","        req.set_header(\"Host\", host_);","      } else {","        req.set_header(\"Host\", host_and_port_);","      }","    } else {","      if (port_ == 80) {","        req.set_header(\"Host\", host_);","      } else {","        req.set_header(\"Host\", host_and_port_);","      }","    }","  }","","  if (!req.has_header(\"Accept\")) { req.set_header(\"Accept\", \"*/*\"); }","","  if (!req.content_receiver) {","    if (!req.has_header(\"Accept-Encoding\")) {","      std::string accept_encoding;","#ifdef CPPHTTPLIB_BROTLI_SUPPORT","      accept_encoding = \"br\";","#endif","#ifdef CPPHTTPLIB_ZLIB_SUPPORT","      if (!accept_encoding.empty()) { accept_encoding += \", \"; }","      accept_encoding += \"gzip, deflate\";","#endif","#ifdef CPPHTTPLIB_ZSTD_SUPPORT","      if (!accept_encoding.empty()) { accept_encoding += \", \"; }","      accept_encoding += \"zstd\";","#endif","      req.set_header(\"Accept-Encoding\", accept_encoding);","    }","","#ifndef CPPHTTPLIB_NO_DEFAULT_USER_AGENT","    if (!req.has_header(\"User-Agent\")) {","      auto agent = std::string(\"cpp-httplib/\") + CPPHTTPLIB_VERSION;","      req.set_header(\"User-Agent\", agent);","    }","#endif","  };","","  if (req.body.empty()) {","    if (req.content_provider_) {","      if (!req.is_chunked_content_provider_) {","        if (!req.has_header(\"Content-Length\")) {","          auto length = std::to_string(req.content_length_);","          req.set_header(\"Content-Length\", length);","        }","      }","    } else {","      if (req.method == \"POST\" || req.method == \"PUT\" ||","          req.method == \"PATCH\") {","        req.set_header(\"Content-Length\", \"0\");","      }","    }","  } else {","    if (!req.has_header(\"Content-Type\")) {","      req.set_header(\"Content-Type\", \"text/plain\");","    }","","    if (!req.has_header(\"Content-Length\")) {","      auto length = std::to_string(req.body.size());","      req.set_header(\"Content-Length\", length);","    }","  }","","  if (!basic_auth_password_.empty() || !basic_auth_username_.empty()) {","    if (!req.has_header(\"Authorization\")) {","      req.headers.insert(make_basic_authentication_header(","          basic_auth_username_, basic_auth_password_, false));","    }","  }","","  if (!proxy_basic_auth_username_.empty() \u0026\u0026","      !proxy_basic_auth_password_.empty()) {","    if (!req.has_header(\"Proxy-Authorization\")) {","      req.headers.insert(make_basic_authentication_header(","          proxy_basic_auth_username_, proxy_basic_auth_password_, true));","    }","  }","","  if (!bearer_token_auth_token_.empty()) {","    if (!req.has_header(\"Authorization\")) {","      req.headers.insert(make_bearer_token_authentication_header(","          bearer_token_auth_token_, false));","    }","  }","","  if (!proxy_bearer_token_auth_token_.empty()) {","    if (!req.has_header(\"Proxy-Authorization\")) {","      req.headers.insert(make_bearer_token_authentication_header(","          proxy_bearer_token_auth_token_, true));","    }","  }","","  // Request line and headers","  {","    detail::BufferStream bstrm;","","    const auto \u0026path_with_query =","        req.params.empty() ? req.path","                           : append_query_params(req.path, req.params);","","    const auto \u0026path =","        url_encode_ ? detail::encode_url(path_with_query) : path_with_query;","","    detail::write_request_line(bstrm, req.method, path);","","    header_writer_(bstrm, req.headers);","","    // Flush buffer","    auto \u0026data = bstrm.get_buffer();","    if (!detail::write_data(strm, data.data(), data.size())) {","      error = Error::Write;","      return false;","    }","  }","","  // Body","  if (req.body.empty()) {","    return write_content_with_provider(strm, req, error);","  }","","  if (!detail::write_data(strm, req.body.data(), req.body.size())) {","    error = Error::Write;","    return false;","  }","","  return true;","}","","inline std::unique_ptr\u003cResponse\u003e ClientImpl::send_with_content_provider(","    Request \u0026req, const char *body, size_t content_length,","    ContentProvider content_provider,","    ContentProviderWithoutLength content_provider_without_length,","    const std::string \u0026content_type, Error \u0026error) {","  if (!content_type.empty()) { req.set_header(\"Content-Type\", content_type); }","","#ifdef CPPHTTPLIB_ZLIB_SUPPORT","  if (compress_) { req.set_header(\"Content-Encoding\", \"gzip\"); }","#endif","","#ifdef CPPHTTPLIB_ZLIB_SUPPORT","  if (compress_ \u0026\u0026 !content_provider_without_length) {","    // TODO: Brotli support","    detail::gzip_compressor compressor;","","    if (content_provider) {","      auto ok = true;","      size_t offset = 0;","      DataSink data_sink;","","      data_sink.write = [\u0026](const char *data, size_t data_len) -\u003e bool {","        if (ok) {","          auto last = offset + data_len == content_length;","","          auto ret = compressor.compress(","              data, data_len, last,","              [\u0026](const char *compressed_data, size_t compressed_data_len) {","                req.body.append(compressed_data, compressed_data_len);","                return true;","              });","","          if (ret) {","            offset += data_len;","          } else {","            ok = false;","          }","        }","        return ok;","      };","","      while (ok \u0026\u0026 offset \u003c content_length) {","        if (!content_provider(offset, content_length - offset, data_sink)) {","          error = Error::Canceled;","          return nullptr;","        }","      }","    } else {","      if (!compressor.compress(body, content_length, true,","                               [\u0026](const char *data, size_t data_len) {","                                 req.body.append(data, data_len);","                                 return true;","                               })) {","        error = Error::Compression;","        return nullptr;","      }","    }","  } else","#endif","  {","    if (content_provider) {","      req.content_length_ = content_length;","      req.content_provider_ = std::move(content_provider);","      req.is_chunked_content_provider_ = false;","    } else if (content_provider_without_length) {","      req.content_length_ = 0;","      req.content_provider_ = detail::ContentProviderAdapter(","          std::move(content_provider_without_length));","      req.is_chunked_content_provider_ = true;","      req.set_header(\"Transfer-Encoding\", \"chunked\");","    } else {","      req.body.assign(body, content_length);","    }","  }","","  auto res = detail::make_unique\u003cResponse\u003e();","  return send(req, *res, error) ? std::move(res) : nullptr;","}","","inline Result ClientImpl::send_with_content_provider(","    const std::string \u0026method, const std::string \u0026path, const Headers \u0026headers,","    const char *body, size_t content_length, ContentProvider content_provider,","    ContentProviderWithoutLength content_provider_without_length,","    const std::string \u0026content_type, Progress progress) {","  Request req;","  req.method = method;","  req.headers = headers;","  req.path = path;","  req.progress = progress;","  if (max_timeout_msec_ \u003e 0) {","    req.start_time_ = std::chrono::steady_clock::now();","  }","","  auto error = Error::Success;","","  auto res = send_with_content_provider(","      req, body, content_length, std::move(content_provider),","      std::move(content_provider_without_length), content_type, error);","","  return Result{std::move(res), error, std::move(req.headers)};","}","","inline std::string","ClientImpl::adjust_host_string(const std::string \u0026host) const {","  if (host.find(':') != std::string::npos) { return \"[\" + host + \"]\"; }","  return host;","}","","inline bool ClientImpl::process_request(Stream \u0026strm, Request \u0026req,","                                        Response \u0026res, bool close_connection,","                                        Error \u0026error) {","  // Send request","  if (!write_request(strm, req, close_connection, error)) { return false; }","","#ifdef CPPHTTPLIB_OPENSSL_SUPPORT","  if (is_ssl()) {","    auto is_proxy_enabled = !proxy_host_.empty() \u0026\u0026 proxy_port_ != -1;","    if (!is_proxy_enabled) {","      if (detail::is_ssl_peer_could_be_closed(socket_.ssl, socket_.sock)) {","        error = Error::SSLPeerCouldBeClosed_;","        return false;","      }","    }","  }","#endif","","  // Receive response and headers","  if (!read_response_line(strm, req, res) ||","      !detail::read_headers(strm, res.headers)) {","    error = Error::Read;","    return false;","  }","","  // Body","  if ((res.status != StatusCode::NoContent_204) \u0026\u0026 req.method != \"HEAD\" \u0026\u0026","      req.method != \"CONNECT\") {","    auto redirect = 300 \u003c res.status \u0026\u0026 res.status \u003c 400 \u0026\u0026","                    res.status != StatusCode::NotModified_304 \u0026\u0026","                    follow_location_;","","    if (req.response_handler \u0026\u0026 !redirect) {","      if (!req.response_handler(res)) {","        error = Error::Canceled;","        return false;","      }","    }","","    auto out =","        req.content_receiver","            ? static_cast\u003cContentReceiverWithProgress\u003e(","                  [\u0026](const char *buf, size_t n, uint64_t off, uint64_t len) {","                    if (redirect) { return true; }","                    auto ret = req.content_receiver(buf, n, off, len);","                    if (!ret) { error = Error::Canceled; }","                    return ret;","                  })","            : static_cast\u003cContentReceiverWithProgress\u003e(","                  [\u0026](const char *buf, size_t n, uint64_t /*off*/,","                      uint64_t /*len*/) {","                    assert(res.body.size() + n \u003c= res.body.max_size());","                    res.body.append(buf, n);","                    return true;","                  });","","    auto progress = [\u0026](uint64_t current, uint64_t total) {","      if (!req.progress || redirect) { return true; }","      auto ret = req.progress(current, total);","      if (!ret) { error = Error::Canceled; }","      return ret;","    };","","    if (res.has_header(\"Content-Length\")) {","      if (!req.content_receiver) {","        auto len = res.get_header_value_u64(\"Content-Length\");","        if (len \u003e res.body.max_size()) {","          error = Error::Read;","          return false;","        }","        res.body.reserve(static_cast\u003csize_t\u003e(len));","      }","    }","","    if (res.status != StatusCode::NotModified_304) {","      int dummy_status;","      if (!detail::read_content(strm, res, (std::numeric_limits\u003csize_t\u003e::max)(),","                                dummy_status, std::move(progress),","                                std::move(out), decompress_)) {","        if (error != Error::Canceled) { error = Error::Read; }","        return false;","      }","    }","  }","","  // Log","  if (logger_) { logger_(req, res); }","","  return true;","}","","inline ContentProviderWithoutLength ClientImpl::get_multipart_content_provider(","    const std::string \u0026boundary, const MultipartFormDataItems \u0026items,","    const MultipartFormDataProviderItems \u0026provider_items) const {","  size_t cur_item = 0;","  size_t cur_start = 0;","  // cur_item and cur_start are copied to within the std::function and maintain","  // state between successive calls","  return [\u0026, cur_item, cur_start](size_t offset,","                                  DataSink \u0026sink) mutable -\u003e bool {","    if (!offset \u0026\u0026 !items.empty()) {","      sink.os \u003c\u003c detail::serialize_multipart_formdata(items, boundary, false);","      return true;","    } else if (cur_item \u003c provider_items.size()) {","      if (!cur_start) {","        const auto \u0026begin = detail::serialize_multipart_formdata_item_begin(","            provider_items[cur_item], boundary);","        offset += begin.size();","        cur_start = offset;","        sink.os \u003c\u003c begin;","      }","","      DataSink cur_sink;","      auto has_data = true;","      cur_sink.write = sink.write;","      cur_sink.done = [\u0026]() { has_data = false; };","","      if (!provider_items[cur_item].provider(offset - cur_start, cur_sink)) {","        return false;","      }","","      if (!has_data) {","        sink.os \u003c\u003c detail::serialize_multipart_formdata_item_end();","        cur_item++;","        cur_start = 0;","      }","      return true;","    } else {","      sink.os \u003c\u003c detail::serialize_multipart_formdata_finish(boundary);","      sink.done();","      return true;","    }","  };","}","","inline bool ClientImpl::process_socket(","    const Socket \u0026socket,","    std::chrono::time_point\u003cstd::chrono::steady_clock\u003e start_time,","    std::function\u003cbool(Stream \u0026strm)\u003e callback) {","  return detail::process_client_socket(","      socket.sock, read_timeout_sec_, read_timeout_usec_, write_timeout_sec_,","      write_timeout_usec_, max_timeout_msec_, start_time, std::move(callback));","}","","inline bool ClientImpl::is_ssl() const { return false; }","","inline Result ClientImpl::Get(const std::string \u0026path) {","  return Get(path, Headers(), Progress());","}","","inline Result ClientImpl::Get(const std::string \u0026path, Progress progress) {","  return Get(path, Headers(), std::move(progress));","}","","inline Result ClientImpl::Get(const std::string \u0026path, const Headers \u0026headers) {","  return Get(path, headers, Progress());","}","","inline Result ClientImpl::Get(const std::string \u0026path, const Headers \u0026headers,","                              Progress progress) {","  Request req;","  req.method = \"GET\";","  req.path = path;","  req.headers = headers;","  req.progress = std::move(progress);","  if (max_timeout_msec_ \u003e 0) {","    req.start_time_ = std::chrono::steady_clock::now();","  }","","  return send_(std::move(req));","}","","inline Result ClientImpl::Get(const std::string \u0026path,","                              ContentReceiver content_receiver) {","  return Get(path, Headers(), nullptr, std::move(content_receiver), nullptr);","}","","inline Result ClientImpl::Get(const std::string \u0026path,","                              ContentReceiver content_receiver,","                              Progress progress) {","  return Get(path, Headers(), nullptr, std::move(content_receiver),","             std::move(progress));","}","","inline Result ClientImpl::Get(const std::string \u0026path, const Headers \u0026headers,","                              ContentReceiver content_receiver) {","  return Get(path, headers, nullptr, std::move(content_receiver), nullptr);","}","","inline Result ClientImpl::Get(const std::string \u0026path, const Headers \u0026headers,","                              ContentReceiver content_receiver,","                              Progress progress) {","  return Get(path, headers, nullptr, std::move(content_receiver),","             std::move(progress));","}","","inline Result ClientImpl::Get(const std::string \u0026path,","                              ResponseHandler response_handler,","                              ContentReceiver content_receiver) {","  return Get(path, Headers(), std::move(response_handler),","             std::move(content_receiver), nullptr);","}","","inline Result ClientImpl::Get(const std::string \u0026path, const Headers \u0026headers,","                              ResponseHandler response_handler,","                              ContentReceiver content_receiver) {","  return Get(path, headers, std::move(response_handler),","             std::move(content_receiver), nullptr);","}","","inline Result ClientImpl::Get(const std::string \u0026path,","                              ResponseHandler response_handler,","                              ContentReceiver content_receiver,","                              Progress progress) {","  return Get(path, Headers(), std::move(response_handler),","             std::move(content_receiver), std::move(progress));","}","","inline Result ClientImpl::Get(const std::string \u0026path, const Headers \u0026headers,","                              ResponseHandler response_handler,","                              ContentReceiver content_receiver,","                              Progress progress) {","  Request req;","  req.method = \"GET\";","  req.path = path;","  req.headers = headers;","  req.response_handler = std::move(response_handler);","  req.content_receiver =","      [content_receiver](const char *data, size_t data_length,","                         uint64_t /*offset*/, uint64_t /*total_length*/) {","        return content_receiver(data, data_length);","      };","  req.progress = std::move(progress);","  if (max_timeout_msec_ \u003e 0) {","    req.start_time_ = std::chrono::steady_clock::now();","  }","","  return send_(std::move(req));","}","","inline Result ClientImpl::Get(const std::string \u0026path, const Params \u0026params,","                              const Headers \u0026headers, Progress progress) {","  if (params.empty()) { return Get(path, headers); }","","  std::string path_with_query = append_query_params(path, params);","  return Get(path_with_query, headers, std::move(progress));","}","","inline Result ClientImpl::Get(const std::string \u0026path, const Params \u0026params,","                              const Headers \u0026headers,","                              ContentReceiver content_receiver,","                              Progress progress) {","  return Get(path, params, headers, nullptr, std::move(content_receiver),","             std::move(progress));","}","","inline Result ClientImpl::Get(const std::string \u0026path, const Params \u0026params,","                              const Headers \u0026headers,","                              ResponseHandler response_handler,","                              ContentReceiver content_receiver,","                              Progress progress) {","  if (params.empty()) {","    return Get(path, headers, std::move(response_handler),","               std::move(content_receiver), std::move(progress));","  }","","  std::string path_with_query = append_query_params(path, params);","  return Get(path_with_query, headers, std::move(response_handler),","             std::move(content_receiver), std::move(progress));","}","","inline Result ClientImpl::Head(const std::string \u0026path) {","  return Head(path, Headers());","}","","inline Result ClientImpl::Head(const std::string \u0026path,","                               const Headers \u0026headers) {","  Request req;","  req.method = \"HEAD\";","  req.headers = headers;","  req.path = path;","  if (max_timeout_msec_ \u003e 0) {","    req.start_time_ = std::chrono::steady_clock::now();","  }","","  return send_(std::move(req));","}","","inline Result ClientImpl::Post(const std::string \u0026path) {","  return Post(path, std::string(), std::string());","}","","inline Result ClientImpl::Post(const std::string \u0026path,","                               const Headers \u0026headers) {","  return Post(path, headers, nullptr, 0, std::string());","}","","inline Result ClientImpl::Post(const std::string \u0026path, const char *body,","                               size_t content_length,","                               const std::string \u0026content_type) {","  return Post(path, Headers(), body, content_length, content_type, nullptr);","}","","inline Result ClientImpl::Post(const std::string \u0026path, const Headers \u0026headers,","                               const char *body, size_t content_length,","                               const std::string \u0026content_type) {","  return send_with_content_provider(\"POST\", path, headers, body, content_length,","                                    nullptr, nullptr, content_type, nullptr);","}","","inline Result ClientImpl::Post(const std::string \u0026path, const Headers \u0026headers,","                               const char *body, size_t content_length,","                               const std::string \u0026content_type,","                               Progress progress) {","  return send_with_content_provider(\"POST\", path, headers, body, content_length,","                                    nullptr, nullptr, content_type, progress);","}","","inline Result ClientImpl::Post(const std::string \u0026path, const std::string \u0026body,","                               const std::string \u0026content_type) {","  return Post(path, Headers(), body, content_type);","}","","inline Result ClientImpl::Post(const std::string \u0026path, const std::string \u0026body,","                               const std::string \u0026content_type,","                               Progress progress) {","  return Post(path, Headers(), body, content_type, progress);","}","","inline Result ClientImpl::Post(const std::string \u0026path, const Headers \u0026headers,","                               const std::string \u0026body,","                               const std::string \u0026content_type) {","  return send_with_content_provider(\"POST\", path, headers, body.data(),","                                    body.size(), nullptr, nullptr, content_type,","                                    nullptr);","}","","inline Result ClientImpl::Post(const std::string \u0026path, const Headers \u0026headers,","                               const std::string \u0026body,","                               const std::string \u0026content_type,","                               Progress progress) {","  return send_with_content_provider(\"POST\", path, headers, body.data(),","                                    body.size(), nullptr, nullptr, content_type,","                                    progress);","}","","inline Result ClientImpl::Post(const std::string \u0026path, const Params \u0026params) {","  return Post(path, Headers(), params);","}","","inline Result ClientImpl::Post(const std::string \u0026path, size_t content_length,","                               ContentProvider content_provider,","                               const std::string \u0026content_type) {","  return Post(path, Headers(), content_length, std::move(content_provider),","              content_type);","}","","inline Result ClientImpl::Post(const std::string \u0026path,","                               ContentProviderWithoutLength content_provider,","                               const std::string \u0026content_type) {","  return Post(path, Headers(), std::move(content_provider), content_type);","}","","inline Result ClientImpl::Post(const std::string \u0026path, const Headers \u0026headers,","                               size_t content_length,","                               ContentProvider content_provider,","                               const std::string \u0026content_type) {","  return send_with_content_provider(\"POST\", path, headers, nullptr,","                                    content_length, std::move(content_provider),","                                    nullptr, content_type, nullptr);","}","","inline Result ClientImpl::Post(const std::string \u0026path, const Headers \u0026headers,","                               ContentProviderWithoutLength content_provider,","                               const std::string \u0026content_type) {","  return send_with_content_provider(\"POST\", path, headers, nullptr, 0, nullptr,","                                    std::move(content_provider), content_type,","                                    nullptr);","}","","inline Result ClientImpl::Post(const std::string \u0026path, const Headers \u0026headers,","                               const Params \u0026params) {","  auto query = detail::params_to_query_str(params);","  return Post(path, headers, query, \"application/x-www-form-urlencoded\");","}","","inline Result ClientImpl::Post(const std::string \u0026path, const Headers \u0026headers,","                               const Params \u0026params, Progress progress) {","  auto query = detail::params_to_query_str(params);","  return Post(path, headers, query, \"application/x-www-form-urlencoded\",","              progress);","}","","inline Result ClientImpl::Post(const std::string \u0026path,","                               const MultipartFormDataItems \u0026items) {","  return Post(path, Headers(), items);","}","","inline Result ClientImpl::Post(const std::string \u0026path, const Headers \u0026headers,","                               const MultipartFormDataItems \u0026items) {","  const auto \u0026boundary = detail::make_multipart_data_boundary();","  const auto \u0026content_type =","      detail::serialize_multipart_formdata_get_content_type(boundary);","  const auto \u0026body = detail::serialize_multipart_formdata(items, boundary);","  return Post(path, headers, body, content_type);","}","","inline Result ClientImpl::Post(const std::string \u0026path, const Headers \u0026headers,","                               const MultipartFormDataItems \u0026items,","                               const std::string \u0026boundary) {","  if (!detail::is_multipart_boundary_chars_valid(boundary)) {","    return Result{nullptr, Error::UnsupportedMultipartBoundaryChars};","  }","","  const auto \u0026content_type =","      detail::serialize_multipart_formdata_get_content_type(boundary);","  const auto \u0026body = detail::serialize_multipart_formdata(items, boundary);","  return Post(path, headers, body, content_type);","}","","inline Result","ClientImpl::Post(const std::string \u0026path, const Headers \u0026headers,","                 const MultipartFormDataItems \u0026items,","                 const MultipartFormDataProviderItems \u0026provider_items) {","  const auto \u0026boundary = detail::make_multipart_data_boundary();","  const auto \u0026content_type =","      detail::serialize_multipart_formdata_get_content_type(boundary);","  return send_with_content_provider(","      \"POST\", path, headers, nullptr, 0, nullptr,","      get_multipart_content_provider(boundary, items, provider_items),","      content_type, nullptr);","}","","inline Result ClientImpl::Put(const std::string \u0026path) {","  return Put(path, std::string(), std::string());","}","","inline Result ClientImpl::Put(const std::string \u0026path, const char *body,","                              size_t content_length,","                              const std::string \u0026content_type) {","  return Put(path, Headers(), body, content_length, content_type);","}","","inline Result ClientImpl::Put(const std::string \u0026path, const Headers \u0026headers,","                              const char *body, size_t content_length,","                              const std::string \u0026content_type) {","  return send_with_content_provider(\"PUT\", path, headers, body, content_length,","                                    nullptr, nullptr, content_type, nullptr);","}","","inline Result ClientImpl::Put(const std::string \u0026path, const Headers \u0026headers,","                              const char *body, size_t content_length,","                              const std::string \u0026content_type,","                              Progress progress) {","  return send_with_content_provider(\"PUT\", path, headers, body, content_length,","                                    nullptr, nullptr, content_type, progress);","}","","inline Result ClientImpl::Put(const std::string \u0026path, const std::string \u0026body,","                              const std::string \u0026content_type) {","  return Put(path, Headers(), body, content_type);","}","","inline Result ClientImpl::Put(const std::string \u0026path, const std::string \u0026body,","                              const std::string \u0026content_type,","                              Progress progress) {","  return Put(path, Headers(), body, content_type, progress);","}","","inline Result ClientImpl::Put(const std::string \u0026path, const Headers \u0026headers,","                              const std::string \u0026body,","                              const std::string \u0026content_type) {","  return send_with_content_provider(\"PUT\", path, headers, body.data(),","                                    body.size(), nullptr, nullptr, content_type,","                                    nullptr);","}","","inline Result ClientImpl::Put(const std::string \u0026path, const Headers \u0026headers,","                              const std::string \u0026body,","                              const std::string \u0026content_type,","                              Progress progress) {","  return send_with_content_provider(\"PUT\", path, headers, body.data(),","                                    body.size(), nullptr, nullptr, content_type,","                                    progress);","}","","inline Result ClientImpl::Put(const std::string \u0026path, size_t content_length,","                              ContentProvider content_provider,","                              const std::string \u0026content_type) {","  return Put(path, Headers(), content_length, std::move(content_provider),","             content_type);","}","","inline Result ClientImpl::Put(const std::string \u0026path,","                              ContentProviderWithoutLength content_provider,","                              const std::string \u0026content_type) {","  return Put(path, Headers(), std::move(content_provider), content_type);","}","","inline Result ClientImpl::Put(const std::string \u0026path, const Headers \u0026headers,","                              size_t content_length,","                              ContentProvider content_provider,","                              const std::string \u0026content_type) {","  return send_with_content_provider(\"PUT\", path, headers, nullptr,","                                    content_length, std::move(content_provider),","                                    nullptr, content_type, nullptr);","}","","inline Result ClientImpl::Put(const std::string \u0026path, const Headers \u0026headers,","                              ContentProviderWithoutLength content_provider,","                              const std::string \u0026content_type) {","  return send_with_content_provider(\"PUT\", path, headers, nullptr, 0, nullptr,","                                    std::move(content_provider), content_type,","                                    nullptr);","}","","inline Result ClientImpl::Put(const std::string \u0026path, const Params \u0026params) {","  return Put(path, Headers(), params);","}","","inline Result ClientImpl::Put(const std::string \u0026path, const Headers \u0026headers,","                              const Params \u0026params) {","  auto query = detail::params_to_query_str(params);","  return Put(path, headers, query, \"application/x-www-form-urlencoded\");","}","","inline Result ClientImpl::Put(const std::string \u0026path, const Headers \u0026headers,","                              const Params \u0026params, Progress progress) {","  auto query = detail::params_to_query_str(params);","  return Put(path, headers, query, \"application/x-www-form-urlencoded\",","             progress);","}","","inline Result ClientImpl::Put(const std::string \u0026path,","                              const MultipartFormDataItems \u0026items) {","  return Put(path, Headers(), items);","}","","inline Result ClientImpl::Put(const std::string \u0026path, const Headers \u0026headers,","                              const MultipartFormDataItems \u0026items) {","  const auto \u0026boundary = detail::make_multipart_data_boundary();","  const auto \u0026content_type =","      detail::serialize_multipart_formdata_get_content_type(boundary);","  const auto \u0026body = detail::serialize_multipart_formdata(items, boundary);","  return Put(path, headers, body, content_type);","}","","inline Result ClientImpl::Put(const std::string \u0026path, const Headers \u0026headers,","                              const MultipartFormDataItems \u0026items,","                              const std::string \u0026boundary) {","  if (!detail::is_multipart_boundary_chars_valid(boundary)) {","    return Result{nullptr, Error::UnsupportedMultipartBoundaryChars};","  }","","  const auto \u0026content_type =","      detail::serialize_multipart_formdata_get_content_type(boundary);","  const auto \u0026body = detail::serialize_multipart_formdata(items, boundary);","  return Put(path, headers, body, content_type);","}","","inline Result","ClientImpl::Put(const std::string \u0026path, const Headers \u0026headers,","                const MultipartFormDataItems \u0026items,","                const MultipartFormDataProviderItems \u0026provider_items) {","  const auto \u0026boundary = detail::make_multipart_data_boundary();","  const auto \u0026content_type =","      detail::serialize_multipart_formdata_get_content_type(boundary);","  return send_with_content_provider(","      \"PUT\", path, headers, nullptr, 0, nullptr,","      get_multipart_content_provider(boundary, items, provider_items),","      content_type, nullptr);","}","inline Result ClientImpl::Patch(const std::string \u0026path) {","  return Patch(path, std::string(), std::string());","}","","inline Result ClientImpl::Patch(const std::string \u0026path, const char *body,","                                size_t content_length,","                                const std::string \u0026content_type) {","  return Patch(path, Headers(), body, content_length, content_type);","}","","inline Result ClientImpl::Patch(const std::string \u0026path, const char *body,","                                size_t content_length,","                                const std::string \u0026content_type,","                                Progress progress) {","  return Patch(path, Headers(), body, content_length, content_type, progress);","}","","inline Result ClientImpl::Patch(const std::string \u0026path, const Headers \u0026headers,","                                const char *body, size_t content_length,","                                const std::string \u0026content_type) {","  return Patch(path, headers, body, content_length, content_type, nullptr);","}","","inline Result ClientImpl::Patch(const std::string \u0026path, const Headers \u0026headers,","                                const char *body, size_t content_length,","                                const std::string \u0026content_type,","                                Progress progress) {","  return send_with_content_provider(\"PATCH\", path, headers, body,","                                    content_length, nullptr, nullptr,","                                    content_type, progress);","}","","inline Result ClientImpl::Patch(const std::string \u0026path,","                                const std::string \u0026body,","                                const std::string \u0026content_type) {","  return Patch(path, Headers(), body, content_type);","}","","inline Result ClientImpl::Patch(const std::string \u0026path,","                                const std::string \u0026body,","                                const std::string \u0026content_type,","                                Progress progress) {","  return Patch(path, Headers(), body, content_type, progress);","}","","inline Result ClientImpl::Patch(const std::string \u0026path, const Headers \u0026headers,","                                const std::string \u0026body,","                                const std::string \u0026content_type) {","  return Patch(path, headers, body, content_type, nullptr);","}","","inline Result ClientImpl::Patch(const std::string \u0026path, const Headers \u0026headers,","                                const std::string \u0026body,","                                const std::string \u0026content_type,","                                Progress progress) {","  return send_with_content_provider(\"PATCH\", path, headers, body.data(),","                                    body.size(), nullptr, nullptr, content_type,","                                    progress);","}","","inline Result ClientImpl::Patch(const std::string \u0026path, size_t content_length,","                                ContentProvider content_provider,","                                const std::string \u0026content_type) {","  return Patch(path, Headers(), content_length, std::move(content_provider),","               content_type);","}","","inline Result ClientImpl::Patch(const std::string \u0026path,","                                ContentProviderWithoutLength content_provider,","                                const std::string \u0026content_type) {","  return Patch(path, Headers(), std::move(content_provider), content_type);","}","","inline Result ClientImpl::Patch(const std::string \u0026path, const Headers \u0026headers,","                                size_t content_length,","                                ContentProvider content_provider,","                                const std::string \u0026content_type) {","  return send_with_content_provider(\"PATCH\", path, headers, nullptr,","                                    content_length, std::move(content_provider),","                                    nullptr, content_type, nullptr);","}","","inline Result ClientImpl::Patch(const std::string \u0026path, const Headers \u0026headers,","                                ContentProviderWithoutLength content_provider,","                                const std::string \u0026content_type) {","  return send_with_content_provider(\"PATCH\", path, headers, nullptr, 0, nullptr,","                                    std::move(content_provider), content_type,","                                    nullptr);","}","","inline Result ClientImpl::Delete(const std::string \u0026path) {","  return Delete(path, Headers(), std::string(), std::string());","}","","inline Result ClientImpl::Delete(const std::string \u0026path,","                                 const Headers \u0026headers) {","  return Delete(path, headers, std::string(), std::string());","}","","inline Result ClientImpl::Delete(const std::string \u0026path, const char *body,","                                 size_t content_length,","                                 const std::string \u0026content_type) {","  return Delete(path, Headers(), body, content_length, content_type);","}","","inline Result ClientImpl::Delete(const std::string \u0026path, const char *body,","                                 size_t content_length,","                                 const std::string \u0026content_type,","                                 Progress progress) {","  return Delete(path, Headers(), body, content_length, content_type, progress);","}","","inline Result ClientImpl::Delete(const std::string \u0026path,","                                 const Headers \u0026headers, const char *body,","                                 size_t content_length,","                                 const std::string \u0026content_type) {","  return Delete(path, headers, body, content_length, content_type, nullptr);","}","","inline Result ClientImpl::Delete(const std::string \u0026path,","                                 const Headers \u0026headers, const char *body,","                                 size_t content_length,","                                 const std::string \u0026content_type,","                                 Progress progress) {","  Request req;","  req.method = \"DELETE\";","  req.headers = headers;","  req.path = path;","  req.progress = progress;","  if (max_timeout_msec_ \u003e 0) {","    req.start_time_ = std::chrono::steady_clock::now();","  }","","  if (!content_type.empty()) { req.set_header(\"Content-Type\", content_type); }","  req.body.assign(body, content_length);","","  return send_(std::move(req));","}","","inline Result ClientImpl::Delete(const std::string \u0026path,","                                 const std::string \u0026body,","                                 const std::string \u0026content_type) {","  return Delete(path, Headers(), body.data(), body.size(), content_type);","}","","inline Result ClientImpl::Delete(const std::string \u0026path,","                                 const std::string \u0026body,","                                 const std::string \u0026content_type,","                                 Progress progress) {","  return Delete(path, Headers(), body.data(), body.size(), content_type,","                progress);","}","","inline Result ClientImpl::Delete(const std::string \u0026path,","                                 const Headers \u0026headers,","                                 const std::string \u0026body,","                                 const std::string \u0026content_type) {","  return Delete(path, headers, body.data(), body.size(), content_type);","}","","inline Result ClientImpl::Delete(const std::string \u0026path,","                                 const Headers \u0026headers,","                                 const std::string \u0026body,","                                 const std::string \u0026content_type,","                                 Progress progress) {","  return Delete(path, headers, body.data(), body.size(), content_type,","                progress);","}","","inline Result ClientImpl::Options(const std::string \u0026path) {","  return Options(path, Headers());","}","","inline Result ClientImpl::Options(const std::string \u0026path,","                                  const Headers \u0026headers) {","  Request req;","  req.method = \"OPTIONS\";","  req.headers = headers;","  req.path = path;","  if (max_timeout_msec_ \u003e 0) {","    req.start_time_ = std::chrono::steady_clock::now();","  }","","  return send_(std::move(req));","}","","inline void ClientImpl::stop() {","  std::lock_guard\u003cstd::mutex\u003e guard(socket_mutex_);","","  // If there is anything ongoing right now, the ONLY thread-safe thing we can","  // do is to shutdown_socket, so that threads using this socket suddenly","  // discover they can't read/write any more and error out. Everything else","  // (closing the socket, shutting ssl down) is unsafe because these actions are","  // not thread-safe.","  if (socket_requests_in_flight_ \u003e 0) {","    shutdown_socket(socket_);","","    // Aside from that, we set a flag for the socket to be closed when we're","    // done.","    socket_should_be_closed_when_request_is_done_ = true;","    return;","  }","","  // Otherwise, still holding the mutex, we can shut everything down ourselves","  shutdown_ssl(socket_, true);","  shutdown_socket(socket_);","  close_socket(socket_);","}","","inline std::string ClientImpl::host() const { return host_; }","","inline int ClientImpl::port() const { return port_; }","","inline size_t ClientImpl::is_socket_open() const {","  std::lock_guard\u003cstd::mutex\u003e guard(socket_mutex_);","  return socket_.is_open();","}","","inline socket_t ClientImpl::socket() const { return socket_.sock; }","","inline void ClientImpl::set_connection_timeout(time_t sec, time_t usec) {","  connection_timeout_sec_ = sec;","  connection_timeout_usec_ = usec;","}","","inline void ClientImpl::set_read_timeout(time_t sec, time_t usec) {","  read_timeout_sec_ = sec;","  read_timeout_usec_ = usec;","}","","inline void ClientImpl::set_write_timeout(time_t sec, time_t usec) {","  write_timeout_sec_ = sec;","  write_timeout_usec_ = usec;","}","","inline void ClientImpl::set_max_timeout(time_t msec) {","  max_timeout_msec_ = msec;","}","","inline void ClientImpl::set_basic_auth(const std::string \u0026username,","                                       const std::string \u0026password) {","  basic_auth_username_ = username;","  basic_auth_password_ = password;","}","","inline void ClientImpl::set_bearer_token_auth(const std::string \u0026token) {","  bearer_token_auth_token_ = token;","}","","#ifdef CPPHTTPLIB_OPENSSL_SUPPORT","inline void ClientImpl::set_digest_auth(const std::string \u0026username,","                                        const std::string \u0026password) {","  digest_auth_username_ = username;","  digest_auth_password_ = password;","}","#endif","","inline void ClientImpl::set_keep_alive(bool on) { keep_alive_ = on; }","","inline void ClientImpl::set_follow_location(bool on) { follow_location_ = on; }","","inline void ClientImpl::set_url_encode(bool on) { url_encode_ = on; }","","inline void","ClientImpl::set_hostname_addr_map(std::map\u003cstd::string, std::string\u003e addr_map) {","  addr_map_ = std::move(addr_map);","}","","inline void ClientImpl::set_default_headers(Headers headers) {","  default_headers_ = std::move(headers);","}","","inline void ClientImpl::set_header_writer(","    std::function\u003cssize_t(Stream \u0026, Headers \u0026)\u003e const \u0026writer) {","  header_writer_ = writer;","}","","inline void ClientImpl::set_address_family(int family) {","  address_family_ = family;","}","","inline void ClientImpl::set_tcp_nodelay(bool on) { tcp_nodelay_ = on; }","","inline void ClientImpl::set_ipv6_v6only(bool on) { ipv6_v6only_ = on; }","","inline void ClientImpl::set_socket_options(SocketOptions socket_options) {","  socket_options_ = std::move(socket_options);","}","","inline void ClientImpl::set_compress(bool on) { compress_ = on; }","","inline void ClientImpl::set_decompress(bool on) { decompress_ = on; }","","inline void ClientImpl::set_interface(const std::string \u0026intf) {","  interface_ = intf;","}","","inline void ClientImpl::set_proxy(const std::string \u0026host, int port) {","  proxy_host_ = host;","  proxy_port_ = port;","}","","inline void ClientImpl::set_proxy_basic_auth(const std::string \u0026username,","                                             const std::string \u0026password) {","  proxy_basic_auth_username_ = username;","  proxy_basic_auth_password_ = password;","}","","inline void ClientImpl::set_proxy_bearer_token_auth(const std::string \u0026token) {","  proxy_bearer_token_auth_token_ = token;","}","","#ifdef CPPHTTPLIB_OPENSSL_SUPPORT","inline void ClientImpl::set_proxy_digest_auth(const std::string \u0026username,","                                              const std::string \u0026password) {","  proxy_digest_auth_username_ = username;","  proxy_digest_auth_password_ = password;","}","","inline void ClientImpl::set_ca_cert_path(const std::string \u0026ca_cert_file_path,","                                         const std::string \u0026ca_cert_dir_path) {","  ca_cert_file_path_ = ca_cert_file_path;","  ca_cert_dir_path_ = ca_cert_dir_path;","}","","inline void ClientImpl::set_ca_cert_store(X509_STORE *ca_cert_store) {","  if (ca_cert_store \u0026\u0026 ca_cert_store != ca_cert_store_) {","    ca_cert_store_ = ca_cert_store;","  }","}","","inline X509_STORE *ClientImpl::create_ca_cert_store(const char *ca_cert,","                                                    std::size_t size) const {","  auto mem = BIO_new_mem_buf(ca_cert, static_cast\u003cint\u003e(size));","  auto se = detail::scope_exit([\u0026] { BIO_free_all(mem); });","  if (!mem) { return nullptr; }","","  auto inf = PEM_X509_INFO_read_bio(mem, nullptr, nullptr, nullptr);","  if (!inf) { return nullptr; }","","  auto cts = X509_STORE_new();","  if (cts) {","    for (auto i = 0; i \u003c static_cast\u003cint\u003e(sk_X509_INFO_num(inf)); i++) {","      auto itmp = sk_X509_INFO_value(inf, i);","      if (!itmp) { continue; }","","      if (itmp-\u003ex509) { X509_STORE_add_cert(cts, itmp-\u003ex509); }","      if (itmp-\u003ecrl) { X509_STORE_add_crl(cts, itmp-\u003ecrl); }","    }","  }","","  sk_X509_INFO_pop_free(inf, X509_INFO_free);","  return cts;","}","","inline void ClientImpl::enable_server_certificate_verification(bool enabled) {","  server_certificate_verification_ = enabled;","}","","inline void ClientImpl::enable_server_hostname_verification(bool enabled) {","  server_hostname_verification_ = enabled;","}","","inline void ClientImpl::set_server_certificate_verifier(","    std::function\u003cSSLVerifierResponse(SSL *ssl)\u003e verifier) {","  server_certificate_verifier_ = verifier;","}","#endif","","inline void ClientImpl::set_logger(Logger logger) {","  logger_ = std::move(logger);","}","","/*"," * SSL Implementation"," */","#ifdef CPPHTTPLIB_OPENSSL_SUPPORT","namespace detail {","","template \u003ctypename U, typename V\u003e","inline SSL *ssl_new(socket_t sock, SSL_CTX *ctx, std::mutex \u0026ctx_mutex,","                    U SSL_connect_or_accept, V setup) {","  SSL *ssl = nullptr;","  {","    std::lock_guard\u003cstd::mutex\u003e guard(ctx_mutex);","    ssl = SSL_new(ctx);","  }","","  if (ssl) {","    set_nonblocking(sock, true);","    auto bio = BIO_new_socket(static_cast\u003cint\u003e(sock), BIO_NOCLOSE);","    BIO_set_nbio(bio, 1);","    SSL_set_bio(ssl, bio, bio);","","    if (!setup(ssl) || SSL_connect_or_accept(ssl) != 1) {","      SSL_shutdown(ssl);","      {","        std::lock_guard\u003cstd::mutex\u003e guard(ctx_mutex);","        SSL_free(ssl);","      }","      set_nonblocking(sock, false);","      return nullptr;","    }","    BIO_set_nbio(bio, 0);","    set_nonblocking(sock, false);","  }","","  return ssl;","}","","inline void ssl_delete(std::mutex \u0026ctx_mutex, SSL *ssl, socket_t sock,","                       bool shutdown_gracefully) {","  // sometimes we may want to skip this to try to avoid SIGPIPE if we know","  // the remote has closed the network connection","  // Note that it is not always possible to avoid SIGPIPE, this is merely a","  // best-efforts.","  if (shutdown_gracefully) {","    (void)(sock);","    // SSL_shutdown() returns 0 on first call (indicating close_notify alert","    // sent) and 1 on subsequent call (indicating close_notify alert received)","    if (SSL_shutdown(ssl) == 0) {","      // Expected to return 1, but even if it doesn't, we free ssl","      SSL_shutdown(ssl);","    }","  }","","  std::lock_guard\u003cstd::mutex\u003e guard(ctx_mutex);","  SSL_free(ssl);","}","","template \u003ctypename U\u003e","bool ssl_connect_or_accept_nonblocking(socket_t sock, SSL *ssl,","                                       U ssl_connect_or_accept,","                                       time_t timeout_sec,","                                       time_t timeout_usec) {","  auto res = 0;","  while ((res = ssl_connect_or_accept(ssl)) != 1) {","    auto err = SSL_get_error(ssl, res);","    switch (err) {","    case SSL_ERROR_WANT_READ:","      if (select_read(sock, timeout_sec, timeout_usec) \u003e 0) { continue; }","      break;","    case SSL_ERROR_WANT_WRITE:","      if (select_write(sock, timeout_sec, timeout_usec) \u003e 0) { continue; }","      break;","    default: break;","    }","    return false;","  }","  return true;","}","","template \u003ctypename T\u003e","inline bool process_server_socket_ssl(","    const std::atomic\u003csocket_t\u003e \u0026svr_sock, SSL *ssl, socket_t sock,","    size_t keep_alive_max_count, time_t keep_alive_timeout_sec,","    time_t read_timeout_sec, time_t read_timeout_usec, time_t write_timeout_sec,","    time_t write_timeout_usec, T callback) {","  return process_server_socket_core(","      svr_sock, sock, keep_alive_max_count, keep_alive_timeout_sec,","      [\u0026](bool close_connection, bool \u0026connection_closed) {","        SSLSocketStream strm(sock, ssl, read_timeout_sec, read_timeout_usec,","                             write_timeout_sec, write_timeout_usec);","        return callback(strm, close_connection, connection_closed);","      });","}","","template \u003ctypename T\u003e","inline bool process_client_socket_ssl(","    SSL *ssl, socket_t sock, time_t read_timeout_sec, time_t read_timeout_usec,","    time_t write_timeout_sec, time_t write_timeout_usec,","    time_t max_timeout_msec,","    std::chrono::time_point\u003cstd::chrono::steady_clock\u003e start_time, T callback) {","  SSLSocketStream strm(sock, ssl, read_timeout_sec, read_timeout_usec,","                       write_timeout_sec, write_timeout_usec, max_timeout_msec,","                       start_time);","  return callback(strm);","}","","// SSL socket stream implementation","inline SSLSocketStream::SSLSocketStream(","    socket_t sock, SSL *ssl, time_t read_timeout_sec, time_t read_timeout_usec,","    time_t write_timeout_sec, time_t write_timeout_usec,","    time_t max_timeout_msec,","    std::chrono::time_point\u003cstd::chrono::steady_clock\u003e start_time)","    : sock_(sock), ssl_(ssl), read_timeout_sec_(read_timeout_sec),","      read_timeout_usec_(read_timeout_usec),","      write_timeout_sec_(write_timeout_sec),","      write_timeout_usec_(write_timeout_usec),","      max_timeout_msec_(max_timeout_msec), start_time_(start_time) {","  SSL_clear_mode(ssl, SSL_MODE_AUTO_RETRY);","}","","inline SSLSocketStream::~SSLSocketStream() = default;","","inline bool SSLSocketStream::is_readable() const {","  return SSL_pending(ssl_) \u003e 0;","}","","inline bool SSLSocketStream::wait_readable() const {","  if (max_timeout_msec_ \u003c= 0) {","    return select_read(sock_, read_timeout_sec_, read_timeout_usec_) \u003e 0;","  }","","  time_t read_timeout_sec;","  time_t read_timeout_usec;","  calc_actual_timeout(max_timeout_msec_, duration(), read_timeout_sec_,","                      read_timeout_usec_, read_timeout_sec, read_timeout_usec);","","  return select_read(sock_, read_timeout_sec, read_timeout_usec) \u003e 0;","}","","inline bool SSLSocketStream::wait_writable() const {","  return select_write(sock_, write_timeout_sec_, write_timeout_usec_) \u003e 0 \u0026\u0026","         is_socket_alive(sock_) \u0026\u0026 !is_ssl_peer_could_be_closed(ssl_, sock_);","}","","inline ssize_t SSLSocketStream::read(char *ptr, size_t size) {","  if (SSL_pending(ssl_) \u003e 0) {","    return SSL_read(ssl_, ptr, static_cast\u003cint\u003e(size));","  } else if (wait_readable()) {","    auto ret = SSL_read(ssl_, ptr, static_cast\u003cint\u003e(size));","    if (ret \u003c 0) {","      auto err = SSL_get_error(ssl_, ret);","      auto n = 1000;","#ifdef _WIN32","      while (--n \u003e= 0 \u0026\u0026 (err == SSL_ERROR_WANT_READ ||","                          (err == SSL_ERROR_SYSCALL \u0026\u0026","                           WSAGetLastError() == WSAETIMEDOUT))) {","#else","      while (--n \u003e= 0 \u0026\u0026 err == SSL_ERROR_WANT_READ) {","#endif","        if (SSL_pending(ssl_) \u003e 0) {","          return SSL_read(ssl_, ptr, static_cast\u003cint\u003e(size));","        } else if (wait_readable()) {","          std::this_thread::sleep_for(std::chrono::microseconds{10});","          ret = SSL_read(ssl_, ptr, static_cast\u003cint\u003e(size));","          if (ret \u003e= 0) { return ret; }","          err = SSL_get_error(ssl_, ret);","        } else {","          return -1;","        }","      }","    }","    return ret;","  } else {","    return -1;","  }","}","","inline ssize_t SSLSocketStream::write(const char *ptr, size_t size) {","  if (wait_writable()) {","    auto handle_size = static_cast\u003cint\u003e(","        std::min\u003csize_t\u003e(size, (std::numeric_limits\u003cint\u003e::max)()));","","    auto ret = SSL_write(ssl_, ptr, static_cast\u003cint\u003e(handle_size));","    if (ret \u003c 0) {","      auto err = SSL_get_error(ssl_, ret);","      auto n = 1000;","#ifdef _WIN32","      while (--n \u003e= 0 \u0026\u0026 (err == SSL_ERROR_WANT_WRITE ||","                          (err == SSL_ERROR_SYSCALL \u0026\u0026","                           WSAGetLastError() == WSAETIMEDOUT))) {","#else","      while (--n \u003e= 0 \u0026\u0026 err == SSL_ERROR_WANT_WRITE) {","#endif","        if (wait_writable()) {","          std::this_thread::sleep_for(std::chrono::microseconds{10});","          ret = SSL_write(ssl_, ptr, static_cast\u003cint\u003e(handle_size));","          if (ret \u003e= 0) { return ret; }","          err = SSL_get_error(ssl_, ret);","        } else {","          return -1;","        }","      }","    }","    return ret;","  }","  return -1;","}","","inline void SSLSocketStream::get_remote_ip_and_port(std::string \u0026ip,","                                                    int \u0026port) const {","  detail::get_remote_ip_and_port(sock_, ip, port);","}","","inline void SSLSocketStream::get_local_ip_and_port(std::string \u0026ip,","                                                   int \u0026port) const {","  detail::get_local_ip_and_port(sock_, ip, port);","}","","inline socket_t SSLSocketStream::socket() const { return sock_; }","","inline time_t SSLSocketStream::duration() const {","  return std::chrono::duration_cast\u003cstd::chrono::milliseconds\u003e(","             std::chrono::steady_clock::now() - start_time_)","      .count();","}","","} // namespace detail","","// SSL HTTP server implementation","inline SSLServer::SSLServer(const char *cert_path, const char *private_key_path,","                            const char *client_ca_cert_file_path,","                            const char *client_ca_cert_dir_path,","                            const char *private_key_password) {","  ctx_ = SSL_CTX_new(TLS_server_method());","","  if (ctx_) {","    SSL_CTX_set_options(ctx_,","                        SSL_OP_NO_COMPRESSION |","                            SSL_OP_NO_SESSION_RESUMPTION_ON_RENEGOTIATION);","","    SSL_CTX_set_min_proto_version(ctx_, TLS1_2_VERSION);","","    if (private_key_password != nullptr \u0026\u0026 (private_key_password[0] != '\\0')) {","      SSL_CTX_set_default_passwd_cb_userdata(","          ctx_,","          reinterpret_cast\u003cvoid *\u003e(const_cast\u003cchar *\u003e(private_key_password)));","    }","","    if (SSL_CTX_use_certificate_chain_file(ctx_, cert_path) != 1 ||","        SSL_CTX_use_PrivateKey_file(ctx_, private_key_path, SSL_FILETYPE_PEM) !=","            1 ||","        SSL_CTX_check_private_key(ctx_) != 1) {","      SSL_CTX_free(ctx_);","      ctx_ = nullptr;","    } else if (client_ca_cert_file_path || client_ca_cert_dir_path) {","      SSL_CTX_load_verify_locations(ctx_, client_ca_cert_file_path,","                                    client_ca_cert_dir_path);","","      SSL_CTX_set_verify(","          ctx_, SSL_VERIFY_PEER | SSL_VERIFY_FAIL_IF_NO_PEER_CERT, nullptr);","    }","  }","}","","inline SSLServer::SSLServer(X509 *cert, EVP_PKEY *private_key,","                            X509_STORE *client_ca_cert_store) {","  ctx_ = SSL_CTX_new(TLS_server_method());","","  if (ctx_) {","    SSL_CTX_set_options(ctx_,","                        SSL_OP_NO_COMPRESSION |","                            SSL_OP_NO_SESSION_RESUMPTION_ON_RENEGOTIATION);","","    SSL_CTX_set_min_proto_version(ctx_, TLS1_2_VERSION);","","    if (SSL_CTX_use_certificate(ctx_, cert) != 1 ||","        SSL_CTX_use_PrivateKey(ctx_, private_key) != 1) {","      SSL_CTX_free(ctx_);","      ctx_ = nullptr;","    } else if (client_ca_cert_store) {","      SSL_CTX_set_cert_store(ctx_, client_ca_cert_store);","","      SSL_CTX_set_verify(","          ctx_, SSL_VERIFY_PEER | SSL_VERIFY_FAIL_IF_NO_PEER_CERT, nullptr);","    }","  }","}","","inline SSLServer::SSLServer(","    const std::function\u003cbool(SSL_CTX \u0026ssl_ctx)\u003e \u0026setup_ssl_ctx_callback) {","  ctx_ = SSL_CTX_new(TLS_method());","  if (ctx_) {","    if (!setup_ssl_ctx_callback(*ctx_)) {","      SSL_CTX_free(ctx_);","      ctx_ = nullptr;","    }","  }","}","","inline SSLServer::~SSLServer() {","  if (ctx_) { SSL_CTX_free(ctx_); }","}","","inline bool SSLServer::is_valid() const { return ctx_; }","","inline SSL_CTX *SSLServer::ssl_context() const { return ctx_; }","","inline void SSLServer::update_certs(X509 *cert, EVP_PKEY *private_key,","                                    X509_STORE *client_ca_cert_store) {","","  std::lock_guard\u003cstd::mutex\u003e guard(ctx_mutex_);","","  SSL_CTX_use_certificate(ctx_, cert);","  SSL_CTX_use_PrivateKey(ctx_, private_key);","","  if (client_ca_cert_store != nullptr) {","    SSL_CTX_set_cert_store(ctx_, client_ca_cert_store);","  }","}","","inline bool SSLServer::process_and_close_socket(socket_t sock) {","  auto ssl = detail::ssl_new(","      sock, ctx_, ctx_mutex_,","      [\u0026](SSL *ssl2) {","        return detail::ssl_connect_or_accept_nonblocking(","            sock, ssl2, SSL_accept, read_timeout_sec_, read_timeout_usec_);","      },","      [](SSL * /*ssl2*/) { return true; });","","  auto ret = false;","  if (ssl) {","    std::string remote_addr;","    int remote_port = 0;","    detail::get_remote_ip_and_port(sock, remote_addr, remote_port);","","    std::string local_addr;","    int local_port = 0;","    detail::get_local_ip_and_port(sock, local_addr, local_port);","","    ret = detail::process_server_socket_ssl(","        svr_sock_, ssl, sock, keep_alive_max_count_, keep_alive_timeout_sec_,","        read_timeout_sec_, read_timeout_usec_, write_timeout_sec_,","        write_timeout_usec_,","        [\u0026](Stream \u0026strm, bool close_connection, bool \u0026connection_closed) {","          return process_request(strm, remote_addr, remote_port, local_addr,","                                 local_port, close_connection,","                                 connection_closed,","                                 [\u0026](Request \u0026req) { req.ssl = ssl; });","        });","","    // Shutdown gracefully if the result seemed successful, non-gracefully if","    // the connection appeared to be closed.","    const bool shutdown_gracefully = ret;","    detail::ssl_delete(ctx_mutex_, ssl, sock, shutdown_gracefully);","  }","","  detail::shutdown_socket(sock);","  detail::close_socket(sock);","  return ret;","}","","// SSL HTTP client implementation","inline SSLClient::SSLClient(const std::string \u0026host)","    : SSLClient(host, 443, std::string(), std::string()) {}","","inline SSLClient::SSLClient(const std::string \u0026host, int port)","    : SSLClient(host, port, std::string(), std::string()) {}","","inline SSLClient::SSLClient(const std::string \u0026host, int port,","                            const std::string \u0026client_cert_path,","                            const std::string \u0026client_key_path,","                            const std::string \u0026private_key_password)","    : ClientImpl(host, port, client_cert_path, client_key_path) {","  ctx_ = SSL_CTX_new(TLS_client_method());","","  SSL_CTX_set_min_proto_version(ctx_, TLS1_2_VERSION);","","  detail::split(\u0026host_[0], \u0026host_[host_.size()], '.',","                [\u0026](const char *b, const char *e) {","                  host_components_.emplace_back(b, e);","                });","","  if (!client_cert_path.empty() \u0026\u0026 !client_key_path.empty()) {","    if (!private_key_password.empty()) {","      SSL_CTX_set_default_passwd_cb_userdata(","          ctx_, reinterpret_cast\u003cvoid *\u003e(","                    const_cast\u003cchar *\u003e(private_key_password.c_str())));","    }","","    if (SSL_CTX_use_certificate_file(ctx_, client_cert_path.c_str(),","                                     SSL_FILETYPE_PEM) != 1 ||","        SSL_CTX_use_PrivateKey_file(ctx_, client_key_path.c_str(),","                                    SSL_FILETYPE_PEM) != 1) {","      SSL_CTX_free(ctx_);","      ctx_ = nullptr;","    }","  }","}","","inline SSLClient::SSLClient(const std::string \u0026host, int port,","                            X509 *client_cert, EVP_PKEY *client_key,","                            const std::string \u0026private_key_password)","    : ClientImpl(host, port) {","  ctx_ = SSL_CTX_new(TLS_client_method());","","  detail::split(\u0026host_[0], \u0026host_[host_.size()], '.',","                [\u0026](const char *b, const char *e) {","                  host_components_.emplace_back(b, e);","                });","","  if (client_cert != nullptr \u0026\u0026 client_key != nullptr) {","    if (!private_key_password.empty()) {","      SSL_CTX_set_default_passwd_cb_userdata(","          ctx_, reinterpret_cast\u003cvoid *\u003e(","                    const_cast\u003cchar *\u003e(private_key_password.c_str())));","    }","","    if (SSL_CTX_use_certificate(ctx_, client_cert) != 1 ||","        SSL_CTX_use_PrivateKey(ctx_, client_key) != 1) {","      SSL_CTX_free(ctx_);","      ctx_ = nullptr;","    }","  }","}","","inline SSLClient::~SSLClient() {","  if (ctx_) { SSL_CTX_free(ctx_); }","  // Make sure to shut down SSL since shutdown_ssl will resolve to the","  // base function rather than the derived function once we get to the","  // base class destructor, and won't free the SSL (causing a leak).","  shutdown_ssl_impl(socket_, true);","}","","inline bool SSLClient::is_valid() const { return ctx_; }","","inline void SSLClient::set_ca_cert_store(X509_STORE *ca_cert_store) {","  if (ca_cert_store) {","    if (ctx_) {","      if (SSL_CTX_get_cert_store(ctx_) != ca_cert_store) {","        // Free memory allocated for old cert and use new store `ca_cert_store`","        SSL_CTX_set_cert_store(ctx_, ca_cert_store);","      }","    } else {","      X509_STORE_free(ca_cert_store);","    }","  }","}","","inline void SSLClient::load_ca_cert_store(const char *ca_cert,","                                          std::size_t size) {","  set_ca_cert_store(ClientImpl::create_ca_cert_store(ca_cert, size));","}","","inline long SSLClient::get_openssl_verify_result() const {","  return verify_result_;","}","","inline SSL_CTX *SSLClient::ssl_context() const { return ctx_; }","","inline bool SSLClient::create_and_connect_socket(Socket \u0026socket, Error \u0026error) {","  return is_valid() \u0026\u0026 ClientImpl::create_and_connect_socket(socket, error);","}","","// Assumes that socket_mutex_ is locked and that there are no requests in flight","inline bool SSLClient::connect_with_proxy(","    Socket \u0026socket,","    std::chrono::time_point\u003cstd::chrono::steady_clock\u003e start_time,","    Response \u0026res, bool \u0026success, Error \u0026error) {","  success = true;","  Response proxy_res;","  if (!detail::process_client_socket(","          socket.sock, read_timeout_sec_, read_timeout_usec_,","          write_timeout_sec_, write_timeout_usec_, max_timeout_msec_,","          start_time, [\u0026](Stream \u0026strm) {","            Request req2;","            req2.method = \"CONNECT\";","            req2.path = host_and_port_;","            if (max_timeout_msec_ \u003e 0) {","              req2.start_time_ = std::chrono::steady_clock::now();","            }","            return process_request(strm, req2, proxy_res, false, error);","          })) {","    // Thread-safe to close everything because we are assuming there are no","    // requests in flight","    shutdown_ssl(socket, true);","    shutdown_socket(socket);","    close_socket(socket);","    success = false;","    return false;","  }","","  if (proxy_res.status == StatusCode::ProxyAuthenticationRequired_407) {","    if (!proxy_digest_auth_username_.empty() \u0026\u0026","        !proxy_digest_auth_password_.empty()) {","      std::map\u003cstd::string, std::string\u003e auth;","      if (detail::parse_www_authenticate(proxy_res, auth, true)) {","        proxy_res = Response();","        if (!detail::process_client_socket(","                socket.sock, read_timeout_sec_, read_timeout_usec_,","                write_timeout_sec_, write_timeout_usec_, max_timeout_msec_,","                start_time, [\u0026](Stream \u0026strm) {","                  Request req3;","                  req3.method = \"CONNECT\";","                  req3.path = host_and_port_;","                  req3.headers.insert(detail::make_digest_authentication_header(","                      req3, auth, 1, detail::random_string(10),","                      proxy_digest_auth_username_, proxy_digest_auth_password_,","                      true));","                  if (max_timeout_msec_ \u003e 0) {","                    req3.start_time_ = std::chrono::steady_clock::now();","                  }","                  return process_request(strm, req3, proxy_res, false, error);","                })) {","          // Thread-safe to close everything because we are assuming there are","          // no requests in flight","          shutdown_ssl(socket, true);","          shutdown_socket(socket);","          close_socket(socket);","          success = false;","          return false;","        }","      }","    }","  }","","  // If status code is not 200, proxy request is failed.","  // Set error to ProxyConnection and return proxy response","  // as the response of the request","  if (proxy_res.status != StatusCode::OK_200) {","    error = Error::ProxyConnection;","    res = std::move(proxy_res);","    // Thread-safe to close everything because we are assuming there are","    // no requests in flight","    shutdown_ssl(socket, true);","    shutdown_socket(socket);","    close_socket(socket);","    return false;","  }","","  return true;","}","","inline bool SSLClient::load_certs() {","  auto ret = true;","","  std::call_once(initialize_cert_, [\u0026]() {","    std::lock_guard\u003cstd::mutex\u003e guard(ctx_mutex_);","    if (!ca_cert_file_path_.empty()) {","      if (!SSL_CTX_load_verify_locations(ctx_, ca_cert_file_path_.c_str(),","                                         nullptr)) {","        ret = false;","      }","    } else if (!ca_cert_dir_path_.empty()) {","      if (!SSL_CTX_load_verify_locations(ctx_, nullptr,","                                         ca_cert_dir_path_.c_str())) {","        ret = false;","      }","    } else {","      auto loaded = false;","#ifdef _WIN32","      loaded =","          detail::load_system_certs_on_windows(SSL_CTX_get_cert_store(ctx_));","#elif defined(CPPHTTPLIB_USE_CERTS_FROM_MACOSX_KEYCHAIN) \u0026\u0026 defined(__APPLE__)","#if TARGET_OS_OSX","      loaded = detail::load_system_certs_on_macos(SSL_CTX_get_cert_store(ctx_));","#endif // TARGET_OS_OSX","#endif // _WIN32","      if (!loaded) { SSL_CTX_set_default_verify_paths(ctx_); }","    }","  });","","  return ret;","}","","inline bool SSLClient::initialize_ssl(Socket \u0026socket, Error \u0026error) {","  auto ssl = detail::ssl_new(","      socket.sock, ctx_, ctx_mutex_,","      [\u0026](SSL *ssl2) {","        if (server_certificate_verification_) {","          if (!load_certs()) {","            error = Error::SSLLoadingCerts;","            return false;","          }","          SSL_set_verify(ssl2, SSL_VERIFY_NONE, nullptr);","        }","","        if (!detail::ssl_connect_or_accept_nonblocking(","                socket.sock, ssl2, SSL_connect, connection_timeout_sec_,","                connection_timeout_usec_)) {","          error = Error::SSLConnection;","          return false;","        }","","        if (server_certificate_verification_) {","          auto verification_status = SSLVerifierResponse::NoDecisionMade;","","          if (server_certificate_verifier_) {","            verification_status = server_certificate_verifier_(ssl2);","          }","","          if (verification_status == SSLVerifierResponse::CertificateRejected) {","            error = Error::SSLServerVerification;","            return false;","          }","","          if (verification_status == SSLVerifierResponse::NoDecisionMade) {","            verify_result_ = SSL_get_verify_result(ssl2);","","            if (verify_result_ != X509_V_OK) {","              error = Error::SSLServerVerification;","              return false;","            }","","            auto server_cert = SSL_get1_peer_certificate(ssl2);","            auto se = detail::scope_exit([\u0026] { X509_free(server_cert); });","","            if (server_cert == nullptr) {","              error = Error::SSLServerVerification;","              return false;","            }","","            if (server_hostname_verification_) {","              if (!verify_host(server_cert)) {","                error = Error::SSLServerHostnameVerification;","                return false;","              }","            }","          }","        }","","        return true;","      },","      [\u0026](SSL *ssl2) {","#if defined(OPENSSL_IS_BORINGSSL)","        SSL_set_tlsext_host_name(ssl2, host_.c_str());","#else","        // NOTE: Direct call instead of using the OpenSSL macro to suppress","        // -Wold-style-cast warning","        SSL_ctrl(ssl2, SSL_CTRL_SET_TLSEXT_HOSTNAME, TLSEXT_NAMETYPE_host_name,","                 static_cast\u003cvoid *\u003e(const_cast\u003cchar *\u003e(host_.c_str())));","#endif","        return true;","      });","","  if (ssl) {","    socket.ssl = ssl;","    return true;","  }","","  shutdown_socket(socket);","  close_socket(socket);","  return false;","}","","inline void SSLClient::shutdown_ssl(Socket \u0026socket, bool shutdown_gracefully) {","  shutdown_ssl_impl(socket, shutdown_gracefully);","}","","inline void SSLClient::shutdown_ssl_impl(Socket \u0026socket,","                                         bool shutdown_gracefully) {","  if (socket.sock == INVALID_SOCKET) {","    assert(socket.ssl == nullptr);","    return;","  }","  if (socket.ssl) {","    detail::ssl_delete(ctx_mutex_, socket.ssl, socket.sock,","                       shutdown_gracefully);","    socket.ssl = nullptr;","  }","  assert(socket.ssl == nullptr);","}","","inline bool SSLClient::process_socket(","    const Socket \u0026socket,","    std::chrono::time_point\u003cstd::chrono::steady_clock\u003e start_time,","    std::function\u003cbool(Stream \u0026strm)\u003e callback) {","  assert(socket.ssl);","  return detail::process_client_socket_ssl(","      socket.ssl, socket.sock, read_timeout_sec_, read_timeout_usec_,","      write_timeout_sec_, write_timeout_usec_, max_timeout_msec_, start_time,","      std::move(callback));","}","","inline bool SSLClient::is_ssl() const { return true; }","","inline bool SSLClient::verify_host(X509 *server_cert) const {","  /* Quote from RFC2818 section 3.1 \"Server Identity\"","","     If a subjectAltName extension of type dNSName is present, that MUST","     be used as the identity. Otherwise, the (most specific) Common Name","     field in the Subject field of the certificate MUST be used. Although","     the use of the Common Name is existing practice, it is deprecated and","     Certification Authorities are encouraged to use the dNSName instead.","","     Matching is performed using the matching rules specified by","     [RFC2459].  If more than one identity of a given type is present in","     the certificate (e.g., more than one dNSName name, a match in any one","     of the set is considered acceptable.) Names may contain the wildcard","     character * which is considered to match any single domain name","     component or component fragment. E.g., *.a.com matches foo.a.com but","     not bar.foo.a.com. f*.com matches foo.com but not bar.com.","","     In some cases, the URI is specified as an IP address rather than a","     hostname. In this case, the iPAddress subjectAltName must be present","     in the certificate and must exactly match the IP in the URI.","","  */","  return verify_host_with_subject_alt_name(server_cert) ||","         verify_host_with_common_name(server_cert);","}","","inline bool","SSLClient::verify_host_with_subject_alt_name(X509 *server_cert) const {","  auto ret = false;","","  auto type = GEN_DNS;","","  struct in6_addr addr6 = {};","  struct in_addr addr = {};","  size_t addr_len = 0;","","#ifndef __MINGW32__","  if (inet_pton(AF_INET6, host_.c_str(), \u0026addr6)) {","    type = GEN_IPADD;","    addr_len = sizeof(struct in6_addr);","  } else if (inet_pton(AF_INET, host_.c_str(), \u0026addr)) {","    type = GEN_IPADD;","    addr_len = sizeof(struct in_addr);","  }","#endif","","  auto alt_names = static_cast\u003cconst struct stack_st_GENERAL_NAME *\u003e(","      X509_get_ext_d2i(server_cert, NID_subject_alt_name, nullptr, nullptr));","","  if (alt_names) {","    auto dsn_matched = false;","    auto ip_matched = false;","","    auto count = sk_GENERAL_NAME_num(alt_names);","","    for (decltype(count) i = 0; i \u003c count \u0026\u0026 !dsn_matched; i++) {","      auto val = sk_GENERAL_NAME_value(alt_names, i);","      if (val-\u003etype == type) {","        auto name =","            reinterpret_cast\u003cconst char *\u003e(ASN1_STRING_get0_data(val-\u003ed.ia5));","        auto name_len = static_cast\u003csize_t\u003e(ASN1_STRING_length(val-\u003ed.ia5));","","        switch (type) {","        case GEN_DNS: dsn_matched = check_host_name(name, name_len); break;","","        case GEN_IPADD:","          if (!memcmp(\u0026addr6, name, addr_len) ||","              !memcmp(\u0026addr, name, addr_len)) {","            ip_matched = true;","          }","          break;","        }","      }","    }","","    if (dsn_matched || ip_matched) { ret = true; }","  }","","  GENERAL_NAMES_free(const_cast\u003cSTACK_OF(GENERAL_NAME) *\u003e(","      reinterpret_cast\u003cconst STACK_OF(GENERAL_NAME) *\u003e(alt_names)));","  return ret;","}","","inline bool SSLClient::verify_host_with_common_name(X509 *server_cert) const {","  const auto subject_name = X509_get_subject_name(server_cert);","","  if (subject_name != nullptr) {","    char name[BUFSIZ];","    auto name_len = X509_NAME_get_text_by_NID(subject_name, NID_commonName,","                                              name, sizeof(name));","","    if (name_len != -1) {","      return check_host_name(name, static_cast\u003csize_t\u003e(name_len));","    }","  }","","  return false;","}","","inline bool SSLClient::check_host_name(const char *pattern,","                                       size_t pattern_len) const {","  if (host_.size() == pattern_len \u0026\u0026 host_ == pattern) { return true; }","","  // Wildcard match","  // https://bugs.launchpad.net/ubuntu/+source/firefox-3.0/+bug/376484","  std::vector\u003cstd::string\u003e pattern_components;","  detail::split(\u0026pattern[0], \u0026pattern[pattern_len], '.',","                [\u0026](const char *b, const char *e) {","                  pattern_components.emplace_back(b, e);","                });","","  if (host_components_.size() != pattern_components.size()) { return false; }","","  auto itr = pattern_components.begin();","  for (const auto \u0026h : host_components_) {","    auto \u0026p = *itr;","    if (p != h \u0026\u0026 p != \"*\") {","      auto partial_match = (p.size() \u003e 0 \u0026\u0026 p[p.size() - 1] == '*' \u0026\u0026","                            !p.compare(0, p.size() - 1, h));","      if (!partial_match) { return false; }","    }","    ++itr;","  }","","  return true;","}","#endif","","// Universal client implementation","inline Client::Client(const std::string \u0026scheme_host_port)","    : Client(scheme_host_port, std::string(), std::string()) {}","","inline Client::Client(const std::string \u0026scheme_host_port,","                      const std::string \u0026client_cert_path,","                      const std::string \u0026client_key_path) {","  const static std::regex re(","      R\"((?:([a-z]+):\\/\\/)?(?:\\[([a-fA-F\\d:]+)\\]|([^:/?#]+))(?::(\\d+))?)\");","","  std::smatch m;","  if (std::regex_match(scheme_host_port, m, re)) {","    auto scheme = m[1].str();","","#ifdef CPPHTTPLIB_OPENSSL_SUPPORT","    if (!scheme.empty() \u0026\u0026 (scheme != \"http\" \u0026\u0026 scheme != \"https\")) {","#else","    if (!scheme.empty() \u0026\u0026 scheme != \"http\") {","#endif","#ifndef CPPHTTPLIB_NO_EXCEPTIONS","      std::string msg = \"'\" + scheme + \"' scheme is not supported.\";","      throw std::invalid_argument(msg);","#endif","      return;","    }","","    auto is_ssl = scheme == \"https\";","","    auto host = m[2].str();","    if (host.empty()) { host = m[3].str(); }","","    auto port_str = m[4].str();","    auto port = !port_str.empty() ? std::stoi(port_str) : (is_ssl ? 443 : 80);","","    if (is_ssl) {","#ifdef CPPHTTPLIB_OPENSSL_SUPPORT","      cli_ = detail::make_unique\u003cSSLClient\u003e(host, port, client_cert_path,","                                            client_key_path);","      is_ssl_ = is_ssl;","#endif","    } else {","      cli_ = detail::make_unique\u003cClientImpl\u003e(host, port, client_cert_path,","                                             client_key_path);","    }","  } else {","    // NOTE: Update TEST(UniversalClientImplTest, Ipv6LiteralAddress)","    // if port param below changes.","    cli_ = detail::make_unique\u003cClientImpl\u003e(scheme_host_port, 80,","                                           client_cert_path, client_key_path);","  }","} // namespace detail","","inline Client::Client(const std::string \u0026host, int port)","    : cli_(detail::make_unique\u003cClientImpl\u003e(host, port)) {}","","inline Client::Client(const std::string \u0026host, int port,","                      const std::string \u0026client_cert_path,","                      const std::string \u0026client_key_path)","    : cli_(detail::make_unique\u003cClientImpl\u003e(host, port, client_cert_path,","                                           client_key_path)) {}","","inline Client::~Client() = default;","","inline bool Client::is_valid() const {","  return cli_ != nullptr \u0026\u0026 cli_-\u003eis_valid();","}","","inline Result Client::Get(const std::string \u0026path) { return cli_-\u003eGet(path); }","inline Result Client::Get(const std::string \u0026path, const Headers \u0026headers) {","  return cli_-\u003eGet(path, headers);","}","inline Result Client::Get(const std::string \u0026path, Progress progress) {","  return cli_-\u003eGet(path, std::move(progress));","}","inline Result Client::Get(const std::string \u0026path, const Headers \u0026headers,","                          Progress progress) {","  return cli_-\u003eGet(path, headers, std::move(progress));","}","inline Result Client::Get(const std::string \u0026path,","                          ContentReceiver content_receiver) {","  return cli_-\u003eGet(path, std::move(content_receiver));","}","inline Result Client::Get(const std::string \u0026path, const Headers \u0026headers,","                          ContentReceiver content_receiver) {","  return cli_-\u003eGet(path, headers, std::move(content_receiver));","}","inline Result Client::Get(const std::string \u0026path,","                          ContentReceiver content_receiver, Progress progress) {","  return cli_-\u003eGet(path, std::move(content_receiver), std::move(progress));","}","inline Result Client::Get(const std::string \u0026path, const Headers \u0026headers,","                          ContentReceiver content_receiver, Progress progress) {","  return cli_-\u003eGet(path, headers, std::move(content_receiver),","                   std::move(progress));","}","inline Result Client::Get(const std::string \u0026path,","                          ResponseHandler response_handler,","                          ContentReceiver content_receiver) {","  return cli_-\u003eGet(path, std::move(response_handler),","                   std::move(content_receiver));","}","inline Result Client::Get(const std::string \u0026path, const Headers \u0026headers,","                          ResponseHandler response_handler,","                          ContentReceiver content_receiver) {","  return cli_-\u003eGet(path, headers, std::move(response_handler),","                   std::move(content_receiver));","}","inline Result Client::Get(const std::string \u0026path,","                          ResponseHandler response_handler,","                          ContentReceiver content_receiver, Progress progress) {","  return cli_-\u003eGet(path, std::move(response_handler),","                   std::move(content_receiver), std::move(progress));","}","inline Result Client::Get(const std::string \u0026path, const Headers \u0026headers,","                          ResponseHandler response_handler,","                          ContentReceiver content_receiver, Progress progress) {","  return cli_-\u003eGet(path, headers, std::move(response_handler),","                   std::move(content_receiver), std::move(progress));","}","inline Result Client::Get(const std::string \u0026path, const Params \u0026params,","                          const Headers \u0026headers, Progress progress) {","  return cli_-\u003eGet(path, params, headers, std::move(progress));","}","inline Result Client::Get(const std::string \u0026path, const Params \u0026params,","                          const Headers \u0026headers,","                          ContentReceiver content_receiver, Progress progress) {","  return cli_-\u003eGet(path, params, headers, std::move(content_receiver),","                   std::move(progress));","}","inline Result Client::Get(const std::string \u0026path, const Params \u0026params,","                          const Headers \u0026headers,","                          ResponseHandler response_handler,","                          ContentReceiver content_receiver, Progress progress) {","  return cli_-\u003eGet(path, params, headers, std::move(response_handler),","                   std::move(content_receiver), std::move(progress));","}","","inline Result Client::Head(const std::string \u0026path) { return cli_-\u003eHead(path); }","inline Result Client::Head(const std::string \u0026path, const Headers \u0026headers) {","  return cli_-\u003eHead(path, headers);","}","","inline Result Client::Post(const std::string \u0026path) { return cli_-\u003ePost(path); }","inline Result Client::Post(const std::string \u0026path, const Headers \u0026headers) {","  return cli_-\u003ePost(path, headers);","}","inline Result Client::Post(const std::string \u0026path, const char *body,","                           size_t content_length,","                           const std::string \u0026content_type) {","  return cli_-\u003ePost(path, body, content_length, content_type);","}","inline Result Client::Post(const std::string \u0026path, const Headers \u0026headers,","                           const char *body, size_t content_length,","                           const std::string \u0026content_type) {","  return cli_-\u003ePost(path, headers, body, content_length, content_type);","}","inline Result Client::Post(const std::string \u0026path, const Headers \u0026headers,","                           const char *body, size_t content_length,","                           const std::string \u0026content_type, Progress progress) {","  return cli_-\u003ePost(path, headers, body, content_length, content_type,","                    progress);","}","inline Result Client::Post(const std::string \u0026path, const std::string \u0026body,","                           const std::string \u0026content_type) {","  return cli_-\u003ePost(path, body, content_type);","}","inline Result Client::Post(const std::string \u0026path, const std::string \u0026body,","                           const std::string \u0026content_type, Progress progress) {","  return cli_-\u003ePost(path, body, content_type, progress);","}","inline Result Client::Post(const std::string \u0026path, const Headers \u0026headers,","                           const std::string \u0026body,","                           const std::string \u0026content_type) {","  return cli_-\u003ePost(path, headers, body, content_type);","}","inline Result Client::Post(const std::string \u0026path, const Headers \u0026headers,","                           const std::string \u0026body,","                           const std::string \u0026content_type, Progress progress) {","  return cli_-\u003ePost(path, headers, body, content_type, progress);","}","inline Result Client::Post(const std::string \u0026path, size_t content_length,","                           ContentProvider content_provider,","                           const std::string \u0026content_type) {","  return cli_-\u003ePost(path, content_length, std::move(content_provider),","                    content_type);","}","inline Result Client::Post(const std::string \u0026path,","                           ContentProviderWithoutLength content_provider,","                           const std::string \u0026content_type) {","  return cli_-\u003ePost(path, std::move(content_provider), content_type);","}","inline Result Client::Post(const std::string \u0026path, const Headers \u0026headers,","                           size_t content_length,","                           ContentProvider content_provider,","                           const std::string \u0026content_type) {","  return cli_-\u003ePost(path, headers, content_length, std::move(content_provider),","                    content_type);","}","inline Result Client::Post(const std::string \u0026path, const Headers \u0026headers,","                           ContentProviderWithoutLength content_provider,","                           const std::string \u0026content_type) {","  return cli_-\u003ePost(path, headers, std::move(content_provider), content_type);","}","inline Result Client::Post(const std::string \u0026path, const Params \u0026params) {","  return cli_-\u003ePost(path, params);","}","inline Result Client::Post(const std::string \u0026path, const Headers \u0026headers,","                           const Params \u0026params) {","  return cli_-\u003ePost(path, headers, params);","}","inline Result Client::Post(const std::string \u0026path, const Headers \u0026headers,","                           const Params \u0026params, Progress progress) {","  return cli_-\u003ePost(path, headers, params, progress);","}","inline Result Client::Post(const std::string \u0026path,","                           const MultipartFormDataItems \u0026items) {","  return cli_-\u003ePost(path, items);","}","inline Result Client::Post(const std::string \u0026path, const Headers \u0026headers,","                           const MultipartFormDataItems \u0026items) {","  return cli_-\u003ePost(path, headers, items);","}","inline Result Client::Post(const std::string \u0026path, const Headers \u0026headers,","                           const MultipartFormDataItems \u0026items,","                           const std::string \u0026boundary) {","  return cli_-\u003ePost(path, headers, items, boundary);","}","inline Result","Client::Post(const std::string \u0026path, const Headers \u0026headers,","             const MultipartFormDataItems \u0026items,","             const MultipartFormDataProviderItems \u0026provider_items) {","  return cli_-\u003ePost(path, headers, items, provider_items);","}","inline Result Client::Put(const std::string \u0026path) { return cli_-\u003ePut(path); }","inline Result Client::Put(const std::string \u0026path, const char *body,","                          size_t content_length,","                          const std::string \u0026content_type) {","  return cli_-\u003ePut(path, body, content_length, content_type);","}","inline Result Client::Put(const std::string \u0026path, const Headers \u0026headers,","                          const char *body, size_t content_length,","                          const std::string \u0026content_type) {","  return cli_-\u003ePut(path, headers, body, content_length, content_type);","}","inline Result Client::Put(const std::string \u0026path, const Headers \u0026headers,","                          const char *body, size_t content_length,","                          const std::string \u0026content_type, Progress progress) {","  return cli_-\u003ePut(path, headers, body, content_length, content_type, progress);","}","inline Result Client::Put(const std::string \u0026path, const std::string \u0026body,","                          const std::string \u0026content_type) {","  return cli_-\u003ePut(path, body, content_type);","}","inline Result Client::Put(const std::string \u0026path, const std::string \u0026body,","                          const std::string \u0026content_type, Progress progress) {","  return cli_-\u003ePut(path, body, content_type, progress);","}","inline Result Client::Put(const std::string \u0026path, const Headers \u0026headers,","                          const std::string \u0026body,","                          const std::string \u0026content_type) {","  return cli_-\u003ePut(path, headers, body, content_type);","}","inline Result Client::Put(const std::string \u0026path, const Headers \u0026headers,","                          const std::string \u0026body,","                          const std::string \u0026content_type, Progress progress) {","  return cli_-\u003ePut(path, headers, body, content_type, progress);","}","inline Result Client::Put(const std::string \u0026path, size_t content_length,","                          ContentProvider content_provider,","                          const std::string \u0026content_type) {","  return cli_-\u003ePut(path, content_length, std::move(content_provider),","                   content_type);","}","inline Result Client::Put(const std::string \u0026path,","                          ContentProviderWithoutLength content_provider,","                          const std::string \u0026content_type) {","  return cli_-\u003ePut(path, std::move(content_provider), content_type);","}","inline Result Client::Put(const std::string \u0026path, const Headers \u0026headers,","                          size_t content_length,","                          ContentProvider content_provider,","                          const std::string \u0026content_type) {","  return cli_-\u003ePut(path, headers, content_length, std::move(content_provider),","                   content_type);","}","inline Result Client::Put(const std::string \u0026path, const Headers \u0026headers,","                          ContentProviderWithoutLength content_provider,","                          const std::string \u0026content_type) {","  return cli_-\u003ePut(path, headers, std::move(content_provider), content_type);","}","inline Result Client::Put(const std::string \u0026path, const Params \u0026params) {","  return cli_-\u003ePut(path, params);","}","inline Result Client::Put(const std::string \u0026path, const Headers \u0026headers,","                          const Params \u0026params) {","  return cli_-\u003ePut(path, headers, params);","}","inline Result Client::Put(const std::string \u0026path, const Headers \u0026headers,","                          const Params \u0026params, Progress progress) {","  return cli_-\u003ePut(path, headers, params, progress);","}","inline Result Client::Put(const std::string \u0026path,","                          const MultipartFormDataItems \u0026items) {","  return cli_-\u003ePut(path, items);","}","inline Result Client::Put(const std::string \u0026path, const Headers \u0026headers,","                          const MultipartFormDataItems \u0026items) {","  return cli_-\u003ePut(path, headers, items);","}","inline Result Client::Put(const std::string \u0026path, const Headers \u0026headers,","                          const MultipartFormDataItems \u0026items,","                          const std::string \u0026boundary) {","  return cli_-\u003ePut(path, headers, items, boundary);","}","inline Result","Client::Put(const std::string \u0026path, const Headers \u0026headers,","            const MultipartFormDataItems \u0026items,","            const MultipartFormDataProviderItems \u0026provider_items) {","  return cli_-\u003ePut(path, headers, items, provider_items);","}","inline Result Client::Patch(const std::string \u0026path) {","  return cli_-\u003ePatch(path);","}","inline Result Client::Patch(const std::string \u0026path, const char *body,","                            size_t content_length,","                            const std::string \u0026content_type) {","  return cli_-\u003ePatch(path, body, content_length, content_type);","}","inline Result Client::Patch(const std::string \u0026path, const char *body,","                            size_t content_length,","                            const std::string \u0026content_type,","                            Progress progress) {","  return cli_-\u003ePatch(path, body, content_length, content_type, progress);","}","inline Result Client::Patch(const std::string \u0026path, const Headers \u0026headers,","                            const char *body, size_t content_length,","                            const std::string \u0026content_type) {","  return cli_-\u003ePatch(path, headers, body, content_length, content_type);","}","inline Result Client::Patch(const std::string \u0026path, const Headers \u0026headers,","                            const char *body, size_t content_length,","                            const std::string \u0026content_type,","                            Progress progress) {","  return cli_-\u003ePatch(path, headers, body, content_length, content_type,","                     progress);","}","inline Result Client::Patch(const std::string \u0026path, const std::string \u0026body,","                            const std::string \u0026content_type) {","  return cli_-\u003ePatch(path, body, content_type);","}","inline Result Client::Patch(const std::string \u0026path, const std::string \u0026body,","                            const std::string \u0026content_type,","                            Progress progress) {","  return cli_-\u003ePatch(path, body, content_type, progress);","}","inline Result Client::Patch(const std::string \u0026path, const Headers \u0026headers,","                            const std::string \u0026body,","                            const std::string \u0026content_type) {","  return cli_-\u003ePatch(path, headers, body, content_type);","}","inline Result Client::Patch(const std::string \u0026path, const Headers \u0026headers,","                            const std::string \u0026body,","                            const std::string \u0026content_type,","                            Progress progress) {","  return cli_-\u003ePatch(path, headers, body, content_type, progress);","}","inline Result Client::Patch(const std::string \u0026path, size_t content_length,","                            ContentProvider content_provider,","                            const std::string \u0026content_type) {","  return cli_-\u003ePatch(path, content_length, std::move(content_provider),","                     content_type);","}","inline Result Client::Patch(const std::string \u0026path,","                            ContentProviderWithoutLength content_provider,","                            const std::string \u0026content_type) {","  return cli_-\u003ePatch(path, std::move(content_provider), content_type);","}","inline Result Client::Patch(const std::string \u0026path, const Headers \u0026headers,","                            size_t content_length,","                            ContentProvider content_provider,","                            const std::string \u0026content_type) {","  return cli_-\u003ePatch(path, headers, content_length, std::move(content_provider),","                     content_type);","}","inline Result Client::Patch(const std::string \u0026path, const Headers \u0026headers,","                            ContentProviderWithoutLength content_provider,","                            const std::string \u0026content_type) {","  return cli_-\u003ePatch(path, headers, std::move(content_provider), content_type);","}","inline Result Client::Delete(const std::string \u0026path) {","  return cli_-\u003eDelete(path);","}","inline Result Client::Delete(const std::string \u0026path, const Headers \u0026headers) {","  return cli_-\u003eDelete(path, headers);","}","inline Result Client::Delete(const std::string \u0026path, const char *body,","                             size_t content_length,","                             const std::string \u0026content_type) {","  return cli_-\u003eDelete(path, body, content_length, content_type);","}","inline Result Client::Delete(const std::string \u0026path, const char *body,","                             size_t content_length,","                             const std::string \u0026content_type,","                             Progress progress) {","  return cli_-\u003eDelete(path, body, content_length, content_type, progress);","}","inline Result Client::Delete(const std::string \u0026path, const Headers \u0026headers,","                             const char *body, size_t content_length,","                             const std::string \u0026content_type) {","  return cli_-\u003eDelete(path, headers, body, content_length, content_type);","}","inline Result Client::Delete(const std::string \u0026path, const Headers \u0026headers,","                             const char *body, size_t content_length,","                             const std::string \u0026content_type,","                             Progress progress) {","  return cli_-\u003eDelete(path, headers, body, content_length, content_type,","                      progress);","}","inline Result Client::Delete(const std::string \u0026path, const std::string \u0026body,","                             const std::string \u0026content_type) {","  return cli_-\u003eDelete(path, body, content_type);","}","inline Result Client::Delete(const std::string \u0026path, const std::string \u0026body,","                             const std::string \u0026content_type,","                             Progress progress) {","  return cli_-\u003eDelete(path, body, content_type, progress);","}","inline Result Client::Delete(const std::string \u0026path, const Headers \u0026headers,","                             const std::string \u0026body,","                             const std::string \u0026content_type) {","  return cli_-\u003eDelete(path, headers, body, content_type);","}","inline Result Client::Delete(const std::string \u0026path, const Headers \u0026headers,","                             const std::string \u0026body,","                             const std::string \u0026content_type,","                             Progress progress) {","  return cli_-\u003eDelete(path, headers, body, content_type, progress);","}","inline Result Client::Options(const std::string \u0026path) {","  return cli_-\u003eOptions(path);","}","inline Result Client::Options(const std::string \u0026path, const Headers \u0026headers) {","  return cli_-\u003eOptions(path, headers);","}","","inline bool Client::send(Request \u0026req, Response \u0026res, Error \u0026error) {","  return cli_-\u003esend(req, res, error);","}","","inline Result Client::send(const Request \u0026req) { return cli_-\u003esend(req); }","","inline void Client::stop() { cli_-\u003estop(); }","","inline std::string Client::host() const { return cli_-\u003ehost(); }","","inline int Client::port() const { return cli_-\u003eport(); }","","inline size_t Client::is_socket_open() const { return cli_-\u003eis_socket_open(); }","","inline socket_t Client::socket() const { return cli_-\u003esocket(); }","","inline void","Client::set_hostname_addr_map(std::map\u003cstd::string, std::string\u003e addr_map) {","  cli_-\u003eset_hostname_addr_map(std::move(addr_map));","}","","inline void Client::set_default_headers(Headers headers) {","  cli_-\u003eset_default_headers(std::move(headers));","}","","inline void Client::set_header_writer(","    std::function\u003cssize_t(Stream \u0026, Headers \u0026)\u003e const \u0026writer) {","  cli_-\u003eset_header_writer(writer);","}","","inline void Client::set_address_family(int family) {","  cli_-\u003eset_address_family(family);","}","","inline void Client::set_tcp_nodelay(bool on) { cli_-\u003eset_tcp_nodelay(on); }","","inline void Client::set_socket_options(SocketOptions socket_options) {","  cli_-\u003eset_socket_options(std::move(socket_options));","}","","inline void Client::set_connection_timeout(time_t sec, time_t usec) {","  cli_-\u003eset_connection_timeout(sec, usec);","}","","inline void Client::set_read_timeout(time_t sec, time_t usec) {","  cli_-\u003eset_read_timeout(sec, usec);","}","","inline void Client::set_write_timeout(time_t sec, time_t usec) {","  cli_-\u003eset_write_timeout(sec, usec);","}","","inline void Client::set_basic_auth(const std::string \u0026username,","                                   const std::string \u0026password) {","  cli_-\u003eset_basic_auth(username, password);","}","inline void Client::set_bearer_token_auth(const std::string \u0026token) {","  cli_-\u003eset_bearer_token_auth(token);","}","#ifdef CPPHTTPLIB_OPENSSL_SUPPORT","inline void Client::set_digest_auth(const std::string \u0026username,","                                    const std::string \u0026password) {","  cli_-\u003eset_digest_auth(username, password);","}","#endif","","inline void Client::set_keep_alive(bool on) { cli_-\u003eset_keep_alive(on); }","inline void Client::set_follow_location(bool on) {","  cli_-\u003eset_follow_location(on);","}","","inline void Client::set_url_encode(bool on) { cli_-\u003eset_url_encode(on); }","","inline void Client::set_compress(bool on) { cli_-\u003eset_compress(on); }","","inline void Client::set_decompress(bool on) { cli_-\u003eset_decompress(on); }","","inline void Client::set_interface(const std::string \u0026intf) {","  cli_-\u003eset_interface(intf);","}","","inline void Client::set_proxy(const std::string \u0026host, int port) {","  cli_-\u003eset_proxy(host, port);","}","inline void Client::set_proxy_basic_auth(const std::string \u0026username,","                                         const std::string \u0026password) {","  cli_-\u003eset_proxy_basic_auth(username, password);","}","inline void Client::set_proxy_bearer_token_auth(const std::string \u0026token) {","  cli_-\u003eset_proxy_bearer_token_auth(token);","}","#ifdef CPPHTTPLIB_OPENSSL_SUPPORT","inline void Client::set_proxy_digest_auth(const std::string \u0026username,","                                          const std::string \u0026password) {","  cli_-\u003eset_proxy_digest_auth(username, password);","}","#endif","","#ifdef CPPHTTPLIB_OPENSSL_SUPPORT","inline void Client::enable_server_certificate_verification(bool enabled) {","  cli_-\u003eenable_server_certificate_verification(enabled);","}","","inline void Client::enable_server_hostname_verification(bool enabled) {","  cli_-\u003eenable_server_hostname_verification(enabled);","}","","inline void Client::set_server_certificate_verifier(","    std::function\u003cSSLVerifierResponse(SSL *ssl)\u003e verifier) {","  cli_-\u003eset_server_certificate_verifier(verifier);","}","#endif","","inline void Client::set_logger(Logger logger) {","  cli_-\u003eset_logger(std::move(logger));","}","","#ifdef CPPHTTPLIB_OPENSSL_SUPPORT","inline void Client::set_ca_cert_path(const std::string \u0026ca_cert_file_path,","                                     const std::string \u0026ca_cert_dir_path) {","  cli_-\u003eset_ca_cert_path(ca_cert_file_path, ca_cert_dir_path);","}","","inline void Client::set_ca_cert_store(X509_STORE *ca_cert_store) {","  if (is_ssl_) {","    static_cast\u003cSSLClient \u0026\u003e(*cli_).set_ca_cert_store(ca_cert_store);","  } else {","    cli_-\u003eset_ca_cert_store(ca_cert_store);","  }","}","","inline void Client::load_ca_cert_store(const char *ca_cert, std::size_t size) {","  set_ca_cert_store(cli_-\u003ecreate_ca_cert_store(ca_cert, size));","}","","inline long Client::get_openssl_verify_result() const {","  if (is_ssl_) {","    return static_cast\u003cSSLClient \u0026\u003e(*cli_).get_openssl_verify_result();","  }","  return -1; // NOTE: -1 doesn't match any of X509_V_ERR_???","}","","inline SSL_CTX *Client::ssl_context() const {","  if (is_ssl_) { return static_cast\u003cSSLClient \u0026\u003e(*cli_).ssl_context(); }","  return nullptr;","}","#endif","","// ----------------------------------------------------------------------------","","} // namespace httplib","","#endif // CPPHTTPLIB_HTTPLIB_H"],"stylingDirectives":[[[0,2,"pl-c"],[0,2,"pl-c"]],[[0,13,"pl-c"],[0,2,"pl-c"]],[[0,2,"pl-c"],[0,2,"pl-c"]],[[0,56,"pl-c"],[0,2,"pl-c"]],[[0,15,"pl-c"],[0,2,"pl-c"]],[[0,2,"pl-c"],[0,2,"pl-c"]],[],[[1,7,"pl-k"]],[[1,7,"pl-k"],[8,28,"pl-en"]],[],[[1,7,"pl-k"],[8,26,"pl-en"],[27,35,"pl-s"],[27,28,"pl-pds"],[34,35,"pl-pds"]],[],[[0,2,"pl-c"],[0,2,"pl-c"]],[[0,16,"pl-c"]],[[0,3,"pl-c"],[1,3,"pl-c"]],[],[[1,7,"pl-k"]],[[1,7,"pl-k"],[8,43,"pl-en"],[44,45,"pl-c1"]],[[1,6,"pl-k"]],[],[[1,7,"pl-k"]],[[1,7,"pl-k"],[8,59,"pl-en"],[60,65,"pl-c1"]],[[1,6,"pl-k"]],[],[[1,7,"pl-k"]],[[1,7,"pl-k"],[8,38,"pl-en"],[39,42,"pl-c1"]],[[1,6,"pl-k"]],[],[[1,7,"pl-k"]],[[1,7,"pl-k"],[8,44,"pl-en"],[45,48,"pl-c1"]],[[1,6,"pl-k"]],[],[[1,7,"pl-k"]],[[1,7,"pl-k"],[8,45,"pl-en"],[46,47,"pl-c1"]],[[1,6,"pl-k"]],[],[[1,7,"pl-k"]],[[1,7,"pl-k"],[8,45,"pl-en"],[46,47,"pl-c1"]],[[1,6,"pl-k"]],[],[[1,7,"pl-k"]],[[1,7,"pl-k"],[8,46,"pl-en"],[47,48,"pl-c1"]],[[1,6,"pl-k"]],[],[[1,7,"pl-k"]],[[1,7,"pl-k"],[8,46,"pl-en"],[47,48,"pl-c1"]],[[1,6,"pl-k"]],[],[[1,7,"pl-k"]],[[1,7,"pl-k"],[8,47,"pl-en"],[48,49,"pl-c1"]],[[1,6,"pl-k"]],[],[[1,7,"pl-k"]],[[1,7,"pl-k"],[8,45,"pl-en"],[46,49,"pl-c1"]],[[1,6,"pl-k"]],[],[[1,7,"pl-k"]],[[1,7,"pl-k"],[8,46,"pl-en"],[47,48,"pl-c1"]],[[1,6,"pl-k"]],[],[[1,7,"pl-k"]],[[1,7,"pl-k"],[8,46,"pl-en"],[47,48,"pl-c1"]],[[1,6,"pl-k"]],[],[[1,7,"pl-k"]],[[1,7,"pl-k"],[8,47,"pl-en"],[48,49,"pl-c1"]],[[1,6,"pl-k"]],[],[[1,7,"pl-k"]],[[1,7,"pl-k"],[8,45,"pl-en"],[46,47,"pl-c1"]],[[1,6,"pl-k"]],[],[[1,7,"pl-k"]],[[1,7,"pl-k"],[8,39,"pl-en"],[40,41,"pl-c1"]],[[1,6,"pl-k"]],[],[[1,7,"pl-k"]],[[1,6,"pl-k"]],[[1,7,"pl-k"],[8,40,"pl-en"],[41,46,"pl-c1"]],[[1,5,"pl-k"]],[[1,7,"pl-k"],[8,40,"pl-en"],[41,42,"pl-c1"]],[[1,6,"pl-k"]],[[1,6,"pl-k"]],[],[[1,7,"pl-k"]],[[1,7,"pl-k"],[8,41,"pl-en"],[42,46,"pl-c1"]],[[1,6,"pl-k"]],[],[[1,7,"pl-k"]],[[1,7,"pl-k"],[8,36,"pl-en"],[37,41,"pl-c1"]],[[1,6,"pl-k"]],[],[[1,7,"pl-k"]],[[1,7,"pl-k"],[8,37,"pl-en"],[38,40,"pl-c1"]],[[1,6,"pl-k"]],[],[[1,7,"pl-k"]],[[1,7,"pl-k"],[8,53,"pl-en"],[54,58,"pl-c1"]],[[1,6,"pl-k"]],[],[[1,7,"pl-k"]],[[1,7,"pl-k"],[8,37,"pl-en"],[60,66,"pl-c1"]],[[1,6,"pl-k"]],[],[[1,7,"pl-k"]],[[1,7,"pl-k"],[8,54,"pl-en"],[55,59,"pl-c1"]],[[1,6,"pl-k"]],[],[[1,7,"pl-k"]],[[1,7,"pl-k"],[8,34,"pl-en"],[35,39,"pl-c1"]],[[1,6,"pl-k"]],[],[[1,7,"pl-k"]],[[1,7,"pl-k"],[8,30,"pl-en"],[31,36,"pl-c1"]],[[1,6,"pl-k"]],[],[[1,7,"pl-k"]],[[1,7,"pl-k"],[8,30,"pl-en"],[31,36,"pl-c1"]],[[1,6,"pl-k"]],[],[[1,7,"pl-k"]],[[1,7,"pl-k"],[8,30,"pl-en"],[31,37,"pl-en"],[38,44,"pl-c1"]],[],[],[[1,7,"pl-k"]],[[1,7,"pl-k"],[8,37,"pl-en"],[38,44,"pl-en"],[45,51,"pl-c1"]],[],[],[[1,7,"pl-k"]],[[1,7,"pl-k"],[8,36,"pl-en"]],[[14,16,"pl-c1"],[56,57,"pl-c1"]],[[62,63,"pl-c1"]],[[24,25,"pl-c1"]],[[1,6,"pl-k"]],[],[[1,7,"pl-k"]],[[1,7,"pl-k"],[8,29,"pl-en"],[30,31,"pl-c1"]],[[1,6,"pl-k"]],[],[[1,7,"pl-k"]],[[1,7,"pl-k"],[8,29,"pl-en"],[30,31,"pl-c1"]],[[1,6,"pl-k"]],[],[[1,7,"pl-k"]],[[1,7,"pl-k"],[8,33,"pl-en"],[34,35,"pl-c1"]],[[1,6,"pl-k"]],[],[[1,7,"pl-k"]],[[1,7,"pl-k"],[8,34,"pl-en"],[35,40,"pl-c1"]],[[1,6,"pl-k"]],[],[[0,2,"pl-c"],[0,2,"pl-c"]],[[0,10,"pl-c"]],[[0,3,"pl-c"],[1,3,"pl-c"]],[],[[1,6,"pl-k"]],[[1,7,"pl-k"]],[[1,7,"pl-k"],[8,31,"pl-en"]],[[1,6,"pl-k"],[7,32,"pl-c"],[7,9,"pl-c"]],[],[[1,7,"pl-k"]],[[1,7,"pl-k"],[8,33,"pl-en"]],[[1,6,"pl-k"],[7,34,"pl-c"],[7,9,"pl-c"]],[],[[1,3,"pl-k"]],[[1,3,"pl-k"]],[[1,6,"pl-k"]],[[1,6,"pl-k"]],[],[[1,7,"pl-k"]],[],[[1,6,"pl-k"]],[[0,5,"pl-k"],[6,13,"pl-c1"]],[[1,5,"pl-k"]],[[0,5,"pl-k"],[6,13,"pl-c1"],[16,20,"pl-k"]],[[1,6,"pl-k"]],[[1,6,"pl-k"],[7,18,"pl-c"],[7,9,"pl-c"]],[],[[1,7,"pl-k"]],[[1,7,"pl-k"],[8,15,"pl-en"],[16,17,"pl-v"]],[[1,6,"pl-k"],[7,17,"pl-c"],[7,9,"pl-c"]],[],[[1,7,"pl-k"]],[[1,7,"pl-k"],[8,15,"pl-en"],[16,17,"pl-v"]],[[1,6,"pl-k"],[7,17,"pl-c"],[7,9,"pl-c"]],[],[[1,7,"pl-k"]],[[1,7,"pl-k"],[8,16,"pl-en"]],[[1,6,"pl-k"],[7,18,"pl-c"],[7,9,"pl-c"]],[],[[1,8,"pl-k"],[9,15,"pl-s"],[9,10,"pl-pds"],[14,15,"pl-pds"]],[[1,8,"pl-k"],[9,21,"pl-s"],[9,10,"pl-pds"],[20,21,"pl-pds"]],[[1,8,"pl-k"],[9,21,"pl-s"],[9,10,"pl-pds"],[20,21,"pl-pds"]],[],[[1,3,"pl-k"]],[[1,3,"pl-k"]],[[0,78,"pl-c"],[0,2,"pl-c"]],[[1,8,"pl-k"],[9,19,"pl-s"],[9,10,"pl-pds"],[18,19,"pl-pds"]],[[1,7,"pl-k"],[8,32,"pl-en"],[33,34,"pl-c1"]],[[1,6,"pl-k"]],[[1,6,"pl-k"]],[],[[1,7,"pl-k"]],[[1,7,"pl-k"],[8,34,"pl-en"],[35,39,"pl-c1"]],[[1,6,"pl-k"]],[],[[0,5,"pl-k"],[6,12,"pl-c1"],[15,23,"pl-k"],[24,28,"pl-k"]],[[0,5,"pl-k"],[6,14,"pl-c1"]],[[0,5,"pl-k"],[6,15,"pl-c1"],[18,21,"pl-k"]],[],[[1,5,"pl-k"],[6,19,"pl-c"],[6,8,"pl-c"]],[],[[1,8,"pl-k"],[9,22,"pl-s"],[9,10,"pl-pds"],[21,22,"pl-pds"]],[[1,3,"pl-k"]],[[1,8,"pl-k"],[9,20,"pl-s"],[9,10,"pl-pds"],[19,20,"pl-pds"]],[[1,6,"pl-k"]],[[1,6,"pl-k"]],[[1,8,"pl-k"],[9,20,"pl-s"],[9,10,"pl-pds"],[19,20,"pl-pds"]],[[1,7,"pl-k"]],[[1,7,"pl-k"],[8,18,"pl-en"],[19,23,"pl-c1"]],[[1,6,"pl-k"]],[[1,6,"pl-k"]],[[1,8,"pl-k"],[9,19,"pl-s"],[9,10,"pl-pds"],[18,19,"pl-pds"]],[[1,8,"pl-k"],[9,18,"pl-s"],[9,10,"pl-pds"],[17,18,"pl-pds"]],[[1,8,"pl-k"],[9,23,"pl-s"],[9,10,"pl-pds"],[22,23,"pl-pds"]],[[1,6,"pl-k"]],[[1,8,"pl-k"],[9,19,"pl-s"],[9,10,"pl-pds"],[18,19,"pl-pds"]],[[1,6,"pl-k"]],[[1,8,"pl-k"],[9,18,"pl-s"],[9,10,"pl-pds"],[17,18,"pl-pds"]],[[1,8,"pl-k"],[9,24,"pl-s"],[9,10,"pl-pds"],[23,24,"pl-pds"]],[[1,8,"pl-k"],[9,17,"pl-s"],[9,10,"pl-pds"],[16,17,"pl-pds"]],[[1,8,"pl-k"],[9,20,"pl-s"],[9,10,"pl-pds"],[19,20,"pl-pds"]],[[1,8,"pl-k"],[9,21,"pl-s"],[9,10,"pl-pds"],[20,21,"pl-pds"]],[[1,8,"pl-k"],[9,23,"pl-s"],[9,10,"pl-pds"],[22,23,"pl-pds"]],[[1,8,"pl-k"],[9,19,"pl-s"],[9,10,"pl-pds"],[18,19,"pl-pds"]],[[1,8,"pl-k"],[9,19,"pl-s"],[9,10,"pl-pds"],[18,19,"pl-pds"]],[],[[0,5,"pl-k"],[6,14,"pl-c1"],[17,20,"pl-k"]],[[1,7,"pl-k"]],[[1,7,"pl-k"],[8,22,"pl-en"],[25,26,"pl-c1"]],[[1,6,"pl-k"]],[[1,6,"pl-k"],[7,15,"pl-c"],[7,9,"pl-c"]],[],[[1,8,"pl-k"],[9,20,"pl-s"],[9,10,"pl-pds"],[19,20,"pl-pds"]],[[1,8,"pl-k"],[9,16,"pl-s"],[9,10,"pl-pds"],[15,16,"pl-pds"]],[[1,8,"pl-k"],[9,17,"pl-s"],[9,10,"pl-pds"],[16,17,"pl-pds"]],[[1,8,"pl-k"],[9,18,"pl-s"],[9,10,"pl-pds"],[17,18,"pl-pds"]],[[1,8,"pl-k"],[9,17,"pl-s"],[9,10,"pl-pds"],[16,17,"pl-pds"]],[[1,8,"pl-k"],[9,18,"pl-s"],[9,10,"pl-pds"],[17,18,"pl-pds"]],[[1,8,"pl-k"],[9,29,"pl-s"],[9,10,"pl-pds"],[28,29,"pl-pds"]],[[1,8,"pl-k"],[9,18,"pl-s"],[9,10,"pl-pds"],[17,18,"pl-pds"]],[[1,8,"pl-k"],[9,18,"pl-s"],[9,10,"pl-pds"],[17,18,"pl-pds"]],[[1,8,"pl-k"],[9,20,"pl-s"],[9,10,"pl-pds"],[19,20,"pl-pds"]],[[1,8,"pl-k"],[9,18,"pl-s"],[9,10,"pl-pds"],[17,18,"pl-pds"]],[[1,8,"pl-k"],[9,21,"pl-s"],[9,10,"pl-pds"],[20,21,"pl-pds"]],[[1,8,"pl-k"],[9,18,"pl-s"],[9,10,"pl-pds"],[17,18,"pl-pds"]],[[1,8,"pl-k"],[9,19,"pl-s"],[9,10,"pl-pds"],[18,19,"pl-pds"]],[[1,8,"pl-k"],[9,15,"pl-s"],[9,10,"pl-pds"],[14,15,"pl-pds"]],[[1,8,"pl-k"],[9,14,"pl-s"],[9,10,"pl-pds"],[13,14,"pl-pds"]],[[1,8,"pl-k"],[9,17,"pl-s"],[9,10,"pl-pds"],[16,17,"pl-pds"]],[[1,8,"pl-k"],[9,16,"pl-s"],[9,10,"pl-pds"],[15,16,"pl-pds"]],[[1,8,"pl-k"],[9,17,"pl-s"],[9,10,"pl-pds"],[16,17,"pl-pds"]],[[1,8,"pl-k"],[9,16,"pl-s"],[9,10,"pl-pds"],[15,16,"pl-pds"]],[[1,8,"pl-k"],[9,14,"pl-s"],[9,10,"pl-pds"],[13,14,"pl-pds"]],[[1,8,"pl-k"],[9,18,"pl-s"],[9,10,"pl-pds"],[17,18,"pl-pds"]],[[1,8,"pl-k"],[9,17,"pl-s"],[9,10,"pl-pds"],[16,17,"pl-pds"]],[[1,8,"pl-k"],[9,21,"pl-s"],[9,10,"pl-pds"],[20,21,"pl-pds"]],[[1,8,"pl-k"],[9,17,"pl-s"],[9,10,"pl-pds"],[16,17,"pl-pds"]],[[1,8,"pl-k"],[9,24,"pl-s"],[9,10,"pl-pds"],[23,24,"pl-pds"]],[[1,8,"pl-k"],[9,24,"pl-s"],[9,10,"pl-pds"],[23,24,"pl-pds"]],[[1,8,"pl-k"],[9,18,"pl-s"],[9,10,"pl-pds"],[17,18,"pl-pds"]],[],[[1,6,"pl-k"]],[[1,6,"pl-k"]],[[1,8,"pl-k"],[9,21,"pl-s"],[9,10,"pl-pds"],[20,21,"pl-pds"]],[],[[0,76,"pl-c"],[0,2,"pl-c"]],[[0,7,"pl-c"],[0,2,"pl-c"]],[[1,6,"pl-k"]],[[1,6,"pl-k"]],[[1,6,"pl-k"]],[[1,6,"pl-k"]],[],[[1,6,"pl-k"]],[[1,7,"pl-k"]],[[1,6,"pl-k"]],[[1,5,"pl-k"]],[[1,8,"pl-k"],[9,31,"pl-s"],[9,10,"pl-pds"],[30,31,"pl-pds"]],[[1,3,"pl-k"]],[[1,8,"pl-k"],[9,42,"pl-s"],[9,10,"pl-pds"],[41,42,"pl-pds"]],[[1,8,"pl-k"],[9,30,"pl-s"],[9,10,"pl-pds"],[29,30,"pl-pds"]],[[1,6,"pl-k"],[7,23,"pl-c"],[7,9,"pl-c"]],[[1,6,"pl-k"],[7,16,"pl-c"],[7,9,"pl-c"]],[],[[1,8,"pl-k"],[9,24,"pl-s"],[9,10,"pl-pds"],[23,24,"pl-pds"]],[[1,8,"pl-k"],[9,24,"pl-s"],[9,10,"pl-pds"],[23,24,"pl-pds"]],[[1,8,"pl-k"],[9,24,"pl-s"],[9,10,"pl-pds"],[23,24,"pl-pds"]],[[1,8,"pl-k"],[9,27,"pl-s"],[9,10,"pl-pds"],[26,27,"pl-pds"]],[],[[1,3,"pl-k"]],[[1,8,"pl-k"],[9,28,"pl-s"],[9,10,"pl-pds"],[27,28,"pl-pds"]],[[1,6,"pl-k"]],[],[[1,8,"pl-k"],[9,19,"pl-s"],[9,10,"pl-pds"],[18,19,"pl-pds"]],[[1,8,"pl-k"],[9,18,"pl-s"],[9,10,"pl-pds"],[17,18,"pl-pds"]],[],[[1,3,"pl-k"]],[[1,3,"pl-k"]],[[1,6,"pl-k"]],[[1,6,"pl-k"]],[[1,7,"pl-k"],[8,33,"pl-en"]],[[1,5,"pl-k"]],[[1,6,"pl-k"]],[[1,6,"pl-k"]],[],[[1,6,"pl-k"]],[],[[1,6,"pl-k"]],[[1,8,"pl-k"],[9,17,"pl-s"],[9,10,"pl-pds"],[16,17,"pl-pds"]],[[1,6,"pl-k"]],[],[[1,6,"pl-k"]],[[1,8,"pl-k"],[9,26,"pl-s"],[9,10,"pl-pds"],[25,26,"pl-pds"]],[[1,8,"pl-k"],[9,26,"pl-s"],[9,10,"pl-pds"],[25,26,"pl-pds"]],[[1,6,"pl-k"]],[],[[1,6,"pl-k"]],[[1,8,"pl-k"],[9,17,"pl-s"],[9,10,"pl-pds"],[16,17,"pl-pds"]],[[1,6,"pl-k"]],[],[[0,2,"pl-c"],[0,2,"pl-c"]],[[0,14,"pl-c"]],[[0,3,"pl-c"],[1,3,"pl-c"]],[[0,9,"pl-k"],[10,17,"pl-en"]],[],[[0,9,"pl-k"],[10,16,"pl-en"]],[],[[0,2,"pl-c"],[0,2,"pl-c"]],[[0,40,"pl-c"]],[[0,2,"pl-c"]],[[0,65,"pl-c"]],[[0,72,"pl-c"]],[[0,2,"pl-c"]],[[0,3,"pl-c"],[1,3,"pl-c"]],[],[[0,9,"pl-k"],[10,15,"pl-k"],[16,17,"pl-en"],[19,24,"pl-k"]],[[0,8,"pl-k"]],[[0,11,"pl-en"]],[[2,8,"pl-k"],[28,31,"pl-k"],[32,33,"pl-c1"]],[],[],[[0,9,"pl-k"],[10,15,"pl-k"],[16,17,"pl-en"]],[[0,8,"pl-k"]],[[0,11,"pl-en"],[17,23,"pl-c1"]],[[2,9,"pl-k"],[10,18,"pl-k"]],[[2,8,"pl-k"],[28,31,"pl-k"]],[],[],[[0,9,"pl-k"],[10,21,"pl-en"]],[],[[0,6,"pl-k"],[7,15,"pl-k"],[16,20,"pl-k"],[21,29,"pl-en"],[30,33,"pl-k"]],[[2,7,"pl-k"],[8,14,"pl-k"],[15,23,"pl-k"],[24,28,"pl-k"],[35,38,"pl-c1"]],[[6,7,"pl-c1"],[11,12,"pl-c1"],[16,17,"pl-c1"],[21,22,"pl-c1"],[26,27,"pl-c1"],[31,32,"pl-c1"],[36,37,"pl-c1"],[41,42,"pl-c1"],[46,47,"pl-c1"],[51,52,"pl-c1"],[56,58,"pl-c1"],[61,63,"pl-c1"],[66,68,"pl-c1"],[71,73,"pl-c1"],[76,78,"pl-c1"]],[[6,8,"pl-c1"],[11,13,"pl-c1"],[16,18,"pl-c1"],[21,23,"pl-c1"],[26,28,"pl-c1"],[31,33,"pl-c1"],[36,38,"pl-c1"],[41,43,"pl-c1"],[46,48,"pl-c1"],[51,53,"pl-c1"],[56,58,"pl-c1"],[61,63,"pl-c1"],[66,68,"pl-c1"],[71,73,"pl-c1"],[76,78,"pl-c1"]],[[6,8,"pl-c1"],[11,13,"pl-c1"],[16,18,"pl-c1"],[21,23,"pl-c1"],[26,28,"pl-c1"],[31,33,"pl-c1"],[36,38,"pl-c1"],[41,43,"pl-c1"],[46,48,"pl-c1"],[51,53,"pl-c1"],[56,58,"pl-c1"],[61,63,"pl-c1"],[66,68,"pl-c1"],[71,73,"pl-c1"],[76,78,"pl-c1"]],[[6,8,"pl-c1"],[11,13,"pl-c1"],[16,18,"pl-c1"],[21,23,"pl-c1"],[26,28,"pl-c1"],[31,33,"pl-c1"],[36,38,"pl-c1"],[41,43,"pl-c1"],[46,48,"pl-c1"],[51,53,"pl-c1"],[56,58,"pl-c1"],[61,63,"pl-c1"],[66,68,"pl-c1"],[71,73,"pl-c1"],[76,78,"pl-c1"]],[[6,8,"pl-c1"],[11,13,"pl-c1"],[16,18,"pl-c1"],[21,23,"pl-c1"],[26,28,"pl-c1"],[31,33,"pl-c1"],[36,38,"pl-c1"],[41,43,"pl-c1"],[46,49,"pl-c1"],[51,54,"pl-c1"],[56,59,"pl-c1"],[61,64,"pl-c1"],[66,69,"pl-c1"],[71,74,"pl-c1"],[76,79,"pl-c1"]],[[6,9,"pl-c1"],[11,14,"pl-c1"],[16,19,"pl-c1"],[21,24,"pl-c1"],[26,29,"pl-c1"],[31,34,"pl-c1"],[36,39,"pl-c1"],[41,44,"pl-c1"],[46,49,"pl-c1"],[51,54,"pl-c1"],[56,59,"pl-c1"],[61,64,"pl-c1"],[66,69,"pl-c1"],[71,74,"pl-c1"],[76,79,"pl-c1"]],[[6,9,"pl-c1"],[11,13,"pl-c1"],[16,18,"pl-c1"],[21,23,"pl-c1"],[26,28,"pl-c1"],[31,33,"pl-c1"],[36,38,"pl-c1"],[41,43,"pl-c1"],[46,48,"pl-c1"],[51,53,"pl-c1"],[56,59,"pl-c1"],[61,64,"pl-c1"],[66,69,"pl-c1"],[71,74,"pl-c1"],[76,79,"pl-c1"]],[[6,9,"pl-c1"],[11,14,"pl-c1"],[16,19,"pl-c1"],[21,24,"pl-c1"],[26,29,"pl-c1"],[31,34,"pl-c1"],[36,39,"pl-c1"],[41,44,"pl-c1"],[46,49,"pl-c1"],[51,54,"pl-c1"],[56,59,"pl-c1"],[61,64,"pl-c1"],[66,69,"pl-c1"],[71,74,"pl-c1"],[76,79,"pl-c1"]],[[6,9,"pl-c1"],[11,14,"pl-c1"],[16,19,"pl-c1"],[21,24,"pl-c1"],[26,29,"pl-c1"],[31,34,"pl-c1"],[36,39,"pl-c1"],[41,44,"pl-c1"],[46,49,"pl-c1"],[51,54,"pl-c1"],[56,59,"pl-c1"],[61,64,"pl-c1"],[66,69,"pl-c1"],[71,74,"pl-c1"],[76,79,"pl-c1"]],[[6,9,"pl-c1"],[11,14,"pl-c1"],[16,19,"pl-c1"],[21,24,"pl-c1"],[26,29,"pl-c1"],[31,34,"pl-c1"],[36,39,"pl-c1"],[41,44,"pl-c1"],[46,49,"pl-c1"],[51,54,"pl-c1"],[56,59,"pl-c1"],[61,64,"pl-c1"],[66,69,"pl-c1"],[71,74,"pl-c1"],[76,79,"pl-c1"]],[[6,9,"pl-c1"],[11,14,"pl-c1"],[16,19,"pl-c1"],[21,24,"pl-c1"],[26,29,"pl-c1"],[31,34,"pl-c1"],[36,39,"pl-c1"],[41,44,"pl-c1"],[46,49,"pl-c1"],[51,54,"pl-c1"],[56,59,"pl-c1"],[61,64,"pl-c1"],[66,69,"pl-c1"],[71,74,"pl-c1"],[76,79,"pl-c1"]],[[6,9,"pl-c1"],[11,14,"pl-c1"],[16,19,"pl-c1"],[21,24,"pl-c1"],[26,29,"pl-c1"],[31,34,"pl-c1"],[36,39,"pl-c1"],[41,44,"pl-c1"],[46,49,"pl-c1"],[51,54,"pl-c1"],[56,59,"pl-c1"],[61,64,"pl-c1"],[66,69,"pl-c1"],[71,74,"pl-c1"],[76,79,"pl-c1"]],[[6,9,"pl-c1"],[11,14,"pl-c1"],[16,19,"pl-c1"],[21,24,"pl-c1"],[26,29,"pl-c1"],[31,34,"pl-c1"],[36,39,"pl-c1"],[41,44,"pl-c1"],[46,49,"pl-c1"],[51,54,"pl-c1"],[56,59,"pl-c1"],[61,64,"pl-c1"],[66,69,"pl-c1"],[71,74,"pl-c1"],[76,79,"pl-c1"]],[[6,9,"pl-c1"],[11,14,"pl-c1"],[16,19,"pl-c1"],[21,24,"pl-c1"],[26,29,"pl-c1"],[31,34,"pl-c1"],[36,39,"pl-c1"],[41,44,"pl-c1"],[46,49,"pl-c1"],[51,54,"pl-c1"],[56,59,"pl-c1"],[61,64,"pl-c1"],[66,69,"pl-c1"],[71,74,"pl-c1"],[76,79,"pl-c1"]],[[6,9,"pl-c1"],[11,14,"pl-c1"],[16,19,"pl-c1"],[21,24,"pl-c1"],[26,29,"pl-c1"],[31,34,"pl-c1"],[36,39,"pl-c1"],[41,44,"pl-c1"],[46,49,"pl-c1"],[51,54,"pl-c1"],[56,59,"pl-c1"],[61,64,"pl-c1"],[66,69,"pl-c1"],[71,74,"pl-c1"],[76,79,"pl-c1"]],[[6,9,"pl-c1"],[11,14,"pl-c1"],[16,19,"pl-c1"],[21,24,"pl-c1"],[26,29,"pl-c1"],[31,34,"pl-c1"],[36,39,"pl-c1"],[41,44,"pl-c1"],[46,49,"pl-c1"],[51,54,"pl-c1"],[56,59,"pl-c1"],[61,64,"pl-c1"],[66,69,"pl-c1"],[71,74,"pl-c1"],[76,79,"pl-c1"]],[[6,9,"pl-c1"],[11,14,"pl-c1"],[16,19,"pl-c1"],[21,24,"pl-c1"],[26,29,"pl-c1"],[31,34,"pl-c1"],[36,39,"pl-c1"],[41,44,"pl-c1"],[46,49,"pl-c1"],[51,54,"pl-c1"],[56,59,"pl-c1"],[61,64,"pl-c1"],[66,69,"pl-c1"],[71,74,"pl-c1"],[76,79,"pl-c1"]],[[6,9,"pl-c1"]],[],[[2,8,"pl-k"],[16,24,"pl-k"],[25,29,"pl-k"],[31,35,"pl-k"]],[],[],[[0,6,"pl-k"],[7,11,"pl-k"],[12,17,"pl-en"],[18,23,"pl-k"],[40,45,"pl-k"]],[[2,8,"pl-k"],[11,15,"pl-c1"],[23,27,"pl-c1"]],[[9,19,"pl-c1"],[22,27,"pl-c1"],[33,36,"pl-c1"],[42,47,"pl-c1"],[54,58,"pl-k"],[63,67,"pl-k"]],[[11,17,"pl-k"],[18,26,"pl-c1"],[34,42,"pl-c1"]],[],[],[],[[0,6,"pl-k"],[7,15,"pl-en"]],[[2,6,"pl-k"],[7,15,"pl-en"],[18,23,"pl-k"],[40,45,"pl-k"],[62,67,"pl-k"]],[[4,10,"pl-k"],[11,16,"pl-c1"]],[],[],[],[[0,6,"pl-k"],[7,11,"pl-en"]],[[2,8,"pl-c1"],[9,17,"pl-en"],[20,25,"pl-k"],[44,49,"pl-k"]],[[4,10,"pl-k"],[11,20,"pl-c1"],[25,29,"pl-c1"],[37,41,"pl-c1"],[45,46,"pl-c1"]],[],[],[[2,8,"pl-c1"],[9,18,"pl-en"],[19,24,"pl-k"],[25,29,"pl-k"],[34,40,"pl-c1"],[44,50,"pl-c1"],[54,59,"pl-k"]],[[4,10,"pl-k"],[17,18,"pl-c1"]],[[22,31,"pl-c1"],[36,37,"pl-c1"],[43,44,"pl-c1"]],[[32,76,"pl-c"],[32,34,"pl-c"]],[[32,51,"pl-c"],[32,34,"pl-c"]],[[55,61,"pl-c1"],[74,75,"pl-c1"]],[[37,39,"pl-c1"]],[[36,47,"pl-k"],[48,56,"pl-k"],[57,61,"pl-k"],[63,71,"pl-c1"]],[],[],[],[[2,26,"pl-c"],[2,4,"pl-c"]],[],[[0,19,"pl-c"],[0,2,"pl-c"]],[[0,67,"pl-c"],[0,2,"pl-c"]],[],[[0,6,"pl-k"],[7,17,"pl-en"]],[[2,10,"pl-k"],[11,21,"pl-en"],[36,40,"pl-k"],[41,45,"pl-k"]],[[60,64,"pl-c1"]],[],[[2,12,"pl-en"],[31,39,"pl-k"]],[],[[35,57,"pl-smi"]],[[8,15,"pl-c1"]],[],[],[[2,13,"pl-en"]],[[4,6,"pl-k"],[34,38,"pl-c1"],[40,53,"pl-c1"]],[],[],[[2,6,"pl-k"],[7,14,"pl-en"],[19,23,"pl-c1"],[25,47,"pl-smi"],[50,55,"pl-c1"]],[],[[0,8,"pl-k"]],[[2,12,"pl-en"],[13,18,"pl-k"],[35,41,"pl-k"]],[[2,6,"pl-k"],[7,15,"pl-k"],[17,22,"pl-k"],[39,45,"pl-k"]],[[14,22,"pl-k"],[41,47,"pl-k"]],[],[[16,20,"pl-k"],[21,25,"pl-k"]],[[2,6,"pl-k"]],[],[],[[2,21,"pl-c"],[2,4,"pl-c"]],[],[[0,4,"pl-k"]],[[2,69,"pl-c"],[2,4,"pl-c"]],[],[[2,52,"pl-c"],[2,4,"pl-c"]],[],[[2,57,"pl-c"],[2,4,"pl-c"]],[],[],[],[[0,4,"pl-k"]],[[2,26,"pl-c"],[2,4,"pl-c"]],[[17,20,"pl-c1"]],[[26,29,"pl-c1"]],[[19,22,"pl-c1"]],[[19,22,"pl-c1"]],[],[[2,25,"pl-c"],[2,4,"pl-c"]],[[11,14,"pl-c1"]],[[16,19,"pl-c1"]],[[17,20,"pl-c1"]],[[36,39,"pl-c1"]],[[18,21,"pl-c1"]],[[21,24,"pl-c1"]],[[23,26,"pl-c1"]],[[20,23,"pl-c1"]],[[24,27,"pl-c1"]],[[15,18,"pl-c1"]],[],[[2,25,"pl-c"],[2,4,"pl-c"]],[[24,27,"pl-c1"]],[[25,28,"pl-c1"]],[[14,17,"pl-c1"]],[[17,20,"pl-c1"]],[[20,23,"pl-c1"]],[[17,20,"pl-c1"]],[[15,18,"pl-c1"]],[[26,29,"pl-c1"]],[[26,29,"pl-c1"]],[],[[2,27,"pl-c"],[2,4,"pl-c"]],[[19,22,"pl-c1"]],[[21,24,"pl-c1"]],[[24,27,"pl-c1"]],[[18,21,"pl-c1"]],[[17,20,"pl-c1"]],[[25,28,"pl-c1"]],[[22,25,"pl-c1"]],[[36,39,"pl-c1"]],[[23,26,"pl-c1"]],[[17,20,"pl-c1"]],[[13,16,"pl-c1"]],[[23,26,"pl-c1"]],[[27,30,"pl-c1"]],[[24,27,"pl-c1"]],[[19,22,"pl-c1"]],[[29,32,"pl-c1"]],[[28,31,"pl-c1"]],[[26,29,"pl-c1"]],[[18,21,"pl-c1"]],[[27,30,"pl-c1"]],[[29,32,"pl-c1"]],[[15,18,"pl-c1"]],[[25,28,"pl-c1"]],[[17,20,"pl-c1"]],[[24,27,"pl-c1"]],[[29,32,"pl-c1"]],[[24,27,"pl-c1"]],[[36,39,"pl-c1"]],[[35,38,"pl-c1"]],[],[[2,27,"pl-c"],[2,4,"pl-c"]],[[28,31,"pl-c1"]],[[23,26,"pl-c1"]],[[19,22,"pl-c1"]],[[27,30,"pl-c1"]],[[23,26,"pl-c1"]],[[32,35,"pl-c1"]],[[30,33,"pl-c1"]],[[28,31,"pl-c1"]],[[21,24,"pl-c1"]],[[20,23,"pl-c1"]],[[38,41,"pl-c1"]],[],[],[[0,5,"pl-k"]],[],[],[],[[0,5,"pl-k"]],[[0,5,"pl-k"]],[],[[0,5,"pl-k"],[31,35,"pl-k"],[36,44,"pl-c1"],[54,62,"pl-c1"]],[],[[0,6,"pl-k"],[7,15,"pl-en"]],[[0,5,"pl-k"],[38,42,"pl-k"],[43,48,"pl-k"]],[],[[0,6,"pl-k"],[7,24,"pl-en"]],[],[],[],[],[],[[0,5,"pl-k"]],[[0,5,"pl-k"]],[],[[0,5,"pl-k"],[6,14,"pl-en"]],[[0,7,"pl-k"]],[[2,10,"pl-en"],[30,34,"pl-c1"]],[],[[2,10,"pl-en"],[11,16,"pl-k"],[31,37,"pl-k"]],[[12,20,"pl-k"],[22,27,"pl-k"],[42,48,"pl-k"]],[[2,10,"pl-en"],[26,32,"pl-k"]],[[12,20,"pl-k"],[37,43,"pl-k"]],[],[[16,20,"pl-k"],[21,26,"pl-k"],[27,31,"pl-k"],[39,45,"pl-c1"]],[[16,20,"pl-k"]],[[16,20,"pl-k"]],[[16,20,"pl-k"],[21,26,"pl-k"]],[],[],[[0,8,"pl-k"]],[[2,7,"pl-k"],[8,27,"pl-en"],[28,33,"pl-k"]],[[2,9,"pl-k"]],[[4,12,"pl-k"],[13,32,"pl-en"]],[],[[2,12,"pl-k"]],[[20,26,"pl-en"],[27,32,"pl-k"],[33,37,"pl-k"],[61,69,"pl-k"]],[[12,17,"pl-c1"],[21,32,"pl-k"],[33,39,"pl-c1"]],[[6,12,"pl-k"]],[],[],[[2,10,"pl-k"]],[],[],[],[],[],[],[[0,5,"pl-k"]],[[18,22,"pl-k"],[23,29,"pl-c1"],[38,44,"pl-c1"]],[],[[0,5,"pl-k"]],[[18,22,"pl-k"],[23,29,"pl-c1"]],[],[[0,5,"pl-k"],[54,58,"pl-k"],[59,63,"pl-k"]],[],[[0,6,"pl-k"],[7,32,"pl-en"]],[],[],[],[],[],[[0,5,"pl-k"]],[],[[0,5,"pl-k"]],[[18,22,"pl-k"],[23,28,"pl-k"],[29,33,"pl-k"],[41,47,"pl-c1"],[61,69,"pl-c1"]],[[23,31,"pl-c1"]],[],[[0,5,"pl-k"]],[[18,22,"pl-k"],[23,28,"pl-k"],[29,33,"pl-k"],[41,47,"pl-c1"]],[],[[0,5,"pl-k"]],[[18,22,"pl-k"],[23,28,"pl-k"]],[],[[0,5,"pl-k"],[6,19,"pl-en"]],[[0,7,"pl-k"]],[[2,7,"pl-k"],[31,35,"pl-k"]],[[2,7,"pl-k"],[40,44,"pl-k"]],[],[],[[2,15,"pl-en"]],[],[[8,25,"pl-en"]],[],[[2,6,"pl-k"],[7,15,"pl-en"]],[[44,49,"pl-k"]],[[4,10,"pl-k"],[11,28,"pl-c1"],[29,38,"pl-c1"],[48,57,"pl-c1"]],[],[],[[2,6,"pl-k"],[7,15,"pl-en"],[44,49,"pl-k"]],[[4,10,"pl-k"],[11,18,"pl-c1"],[19,28,"pl-c1"]],[],[],[],[],[],[],[[0,5,"pl-k"],[24,31,"pl-c1"],[33,40,"pl-c1"]],[[0,5,"pl-k"]],[],[[0,6,"pl-k"],[7,14,"pl-en"]],[],[],[],[],[],[],[],[[2,5,"pl-k"],[21,22,"pl-c1"]],[],[[2,5,"pl-k"],[20,21,"pl-c1"]],[],[[2,15,"pl-c"],[2,4,"pl-c"]],[],[],[],[],[],[],[[16,20,"pl-k"],[54,60,"pl-k"],[61,65,"pl-c1"]],[],[[2,15,"pl-c"],[2,4,"pl-c"]],[],[],[],[[1,6,"pl-k"]],[[2,7,"pl-k"],[19,26,"pl-c1"]],[[1,6,"pl-k"]],[],[[2,6,"pl-k"],[7,17,"pl-en"],[18,23,"pl-k"],[42,47,"pl-k"]],[[14,30,"pl-en"],[31,36,"pl-k"],[55,60,"pl-k"],[61,65,"pl-k"],[73,75,"pl-s"],[73,74,"pl-pds"],[74,75,"pl-pds"]],[[31,37,"pl-c1"],[43,44,"pl-c1"],[46,51,"pl-k"]],[[2,10,"pl-c1"],[11,31,"pl-en"],[32,37,"pl-k"],[56,64,"pl-c1"],[71,72,"pl-c1"]],[[32,38,"pl-c1"],[44,45,"pl-c1"],[47,52,"pl-k"]],[[2,8,"pl-c1"],[9,31,"pl-en"],[32,37,"pl-k"],[56,61,"pl-k"]],[[2,6,"pl-k"],[7,17,"pl-en"],[18,23,"pl-k"],[42,47,"pl-k"]],[],[[2,6,"pl-k"],[7,16,"pl-en"],[17,22,"pl-k"],[41,46,"pl-k"]],[[14,29,"pl-en"],[30,35,"pl-k"],[54,60,"pl-c1"],[66,67,"pl-c1"],[69,74,"pl-k"]],[[2,8,"pl-c1"],[9,30,"pl-en"],[31,36,"pl-k"],[55,60,"pl-k"]],[],[[2,6,"pl-k"],[7,29,"pl-en"],[32,37,"pl-k"]],[],[[2,6,"pl-k"],[7,15,"pl-en"],[16,21,"pl-k"],[40,45,"pl-k"]],[[20,34,"pl-en"],[35,40,"pl-k"],[59,64,"pl-k"]],[[33,48,"pl-en"],[49,54,"pl-k"],[73,78,"pl-k"]],[],[[2,23,"pl-c"],[2,4,"pl-c"]],[[2,8,"pl-c1"]],[[2,8,"pl-c1"],[27,28,"pl-c1"]],[],[[2,6,"pl-k"],[38,43,"pl-c1"]],[[2,8,"pl-c1"],[32,33,"pl-c1"]],[],[],[],[],[[0,6,"pl-k"],[7,15,"pl-en"]],[],[[2,5,"pl-k"],[16,17,"pl-c1"]],[],[],[],[[24,44,"pl-c"],[24,26,"pl-c"]],[],[[2,6,"pl-k"],[7,17,"pl-en"],[18,23,"pl-k"],[42,47,"pl-k"]],[[14,30,"pl-en"],[31,36,"pl-k"],[55,60,"pl-k"],[61,65,"pl-k"],[73,75,"pl-s"],[73,74,"pl-pds"],[74,75,"pl-pds"]],[[31,37,"pl-c1"],[43,44,"pl-c1"],[46,51,"pl-k"]],[[2,10,"pl-c1"],[11,31,"pl-en"],[32,37,"pl-k"],[56,64,"pl-c1"],[71,72,"pl-c1"]],[[32,38,"pl-c1"],[44,45,"pl-c1"],[47,52,"pl-k"]],[[2,8,"pl-c1"],[9,31,"pl-en"],[32,37,"pl-k"],[56,61,"pl-k"]],[[2,6,"pl-k"],[7,17,"pl-en"],[18,23,"pl-k"],[42,47,"pl-k"]],[],[[2,6,"pl-k"],[7,19,"pl-en"],[20,25,"pl-k"],[44,47,"pl-k"]],[[2,6,"pl-k"],[7,18,"pl-en"],[19,24,"pl-k"],[25,29,"pl-k"],[34,40,"pl-c1"],[44,49,"pl-k"]],[[2,6,"pl-k"],[7,18,"pl-en"],[19,24,"pl-k"],[41,46,"pl-k"]],[[2,6,"pl-k"],[7,18,"pl-en"],[36,41,"pl-k"]],[],[[2,6,"pl-k"],[7,27,"pl-en"]],[[6,12,"pl-c1"],[21,26,"pl-k"]],[[58,65,"pl-c1"]],[],[[2,6,"pl-k"],[7,27,"pl-en"]],[[6,11,"pl-k"]],[[58,65,"pl-c1"]],[],[[2,6,"pl-k"],[7,35,"pl-en"]],[[6,11,"pl-k"]],[[58,65,"pl-c1"]],[],[[2,6,"pl-k"],[7,23,"pl-en"],[24,29,"pl-k"]],[[24,29,"pl-k"]],[[2,6,"pl-k"],[7,23,"pl-en"],[24,29,"pl-k"]],[],[[2,10,"pl-en"],[15,22,"pl-k"]],[[2,10,"pl-en"],[11,16,"pl-k"],[31,38,"pl-k"]],[[12,20,"pl-k"],[22,27,"pl-k"],[42,49,"pl-k"]],[[2,10,"pl-en"],[26,33,"pl-k"]],[[12,20,"pl-k"],[37,44,"pl-k"]],[[2,11,"pl-en"]],[[4,6,"pl-k"]],[[6,41,"pl-c1"]],[],[],[],[[2,23,"pl-c"],[2,4,"pl-c"]],[[2,8,"pl-c1"],[27,28,"pl-c1"]],[],[],[[2,6,"pl-k"],[38,43,"pl-c1"]],[[2,6,"pl-k"],[35,40,"pl-c1"]],[],[],[],[],[[0,5,"pl-k"],[6,12,"pl-en"]],[[0,7,"pl-k"]],[[2,9,"pl-k"],[10,17,"pl-en"],[22,29,"pl-k"]],[],[[2,9,"pl-k"],[10,14,"pl-k"],[15,26,"pl-en"],[29,34,"pl-k"]],[[2,9,"pl-k"],[10,14,"pl-k"],[15,28,"pl-en"],[31,36,"pl-k"]],[[2,9,"pl-k"],[10,14,"pl-k"],[15,28,"pl-en"],[31,36,"pl-k"]],[],[[2,9,"pl-k"],[10,17,"pl-c1"],[18,22,"pl-en"],[23,27,"pl-k"],[34,40,"pl-c1"]],[[2,9,"pl-k"],[10,17,"pl-c1"],[18,23,"pl-en"],[24,29,"pl-k"],[30,34,"pl-k"],[41,47,"pl-c1"]],[[2,9,"pl-k"],[10,14,"pl-k"],[15,37,"pl-en"],[55,58,"pl-k"],[66,71,"pl-k"]],[[2,9,"pl-k"],[10,14,"pl-k"],[15,36,"pl-en"],[54,57,"pl-k"],[65,70,"pl-k"]],[[2,9,"pl-k"],[10,18,"pl-c1"],[19,25,"pl-en"],[28,33,"pl-k"]],[],[[2,9,"pl-k"],[10,16,"pl-c1"],[17,25,"pl-en"],[28,33,"pl-k"]],[],[[2,9,"pl-c1"],[10,15,"pl-en"],[16,21,"pl-k"],[22,26,"pl-k"]],[[2,9,"pl-c1"],[10,15,"pl-en"],[16,21,"pl-k"]],[],[],[[0,5,"pl-k"],[6,15,"pl-en"]],[[0,7,"pl-k"]],[[2,11,"pl-en"],[16,23,"pl-k"]],[[2,9,"pl-k"],[10,20,"pl-en"],[25,32,"pl-k"]],[],[[2,9,"pl-k"],[10,14,"pl-k"],[15,22,"pl-en"],[37,41,"pl-k"]],[[2,9,"pl-k"],[10,14,"pl-k"],[15,23,"pl-en"]],[],[[2,9,"pl-k"],[10,14,"pl-k"],[15,22,"pl-en"]],[],[],[[0,5,"pl-k"],[6,16,"pl-en"],[17,22,"pl-k"]],[[0,7,"pl-k"]],[[2,10,"pl-k"],[11,21,"pl-en"],[22,28,"pl-c1"],[32,38,"pl-c1"],[45,46,"pl-c1"]],[[18,23,"pl-c1"]],[[4,9,"pl-k"]],[[15,27,"pl-c1"],[28,34,"pl-c1"],[36,40,"pl-c1"]],[],[],[],[],[[2,12,"pl-en"],[13,18,"pl-k"],[35,41,"pl-k"]],[[2,13,"pl-en"],[16,24,"pl-k"],[27,34,"pl-k"]],[],[[2,6,"pl-k"],[7,14,"pl-en"],[29,33,"pl-k"],[41,49,"pl-k"]],[],[[35,39,"pl-c1"]],[[6,8,"pl-k"],[33,34,"pl-c1"],[44,48,"pl-c1"]],[[8,14,"pl-k"],[15,20,"pl-c1"]],[],[[12,21,"pl-c1"],[22,31,"pl-c1"]],[],[],[[10,20,"pl-c1"]],[[4,10,"pl-k"],[11,15,"pl-c1"]],[],[],[[2,6,"pl-k"],[7,15,"pl-en"],[18,26,"pl-k"]],[[4,33,"pl-c"],[4,6,"pl-c"]],[],[[35,39,"pl-c1"]],[[18,22,"pl-c1"]],[],[],[[10,20,"pl-c1"]],[],[[4,14,"pl-c"],[4,6,"pl-c"]],[[4,7,"pl-k"],[9,13,"pl-k"]],[[8,12,"pl-c1"]],[],[],[],[[0,8,"pl-k"]],[[2,8,"pl-k"],[9,15,"pl-en"]],[[4,12,"pl-k"],[13,19,"pl-en"]],[],[[4,8,"pl-k"],[9,17,"pl-en"]],[[6,9,"pl-k"]],[[22,26,"pl-c1"]],[],[[39,43,"pl-c1"],[50,56,"pl-smi"]],[],[[16,21,"pl-smi"],[22,26,"pl-c1"]],[[26,32,"pl-k"],[40,45,"pl-smi"],[46,51,"pl-c1"],[63,72,"pl-smi"]],[],[[10,12,"pl-k"],[20,29,"pl-smi"],[39,44,"pl-smi"],[45,50,"pl-c1"],[56,61,"pl-k"]],[],[[21,26,"pl-smi"],[27,32,"pl-c1"]],[[16,21,"pl-smi"],[22,31,"pl-c1"]],[],[],[[8,14,"pl-c1"],[15,19,"pl-c1"],[23,34,"pl-k"],[35,39,"pl-k"]],[[8,10,"pl-c1"]],[],[],[[1,3,"pl-k"]],[[5,12,"pl-c1"]],[[6,25,"pl-c1"]],[[1,6,"pl-k"]],[],[],[],[],[[2,8,"pl-k"],[9,15,"pl-k"],[16,22,"pl-en"]],[],[],[[26,30,"pl-k"]],[],[[2,6,"pl-k"]],[[2,8,"pl-c1"],[32,33,"pl-c1"]],[],[],[],[],[],[[0,5,"pl-k"],[29,33,"pl-k"],[34,39,"pl-k"],[51,56,"pl-k"]],[],[[0,5,"pl-k"],[36,40,"pl-k"],[41,49,"pl-c1"]],[],[[0,9,"pl-k"],[10,16,"pl-en"]],[],[[0,4,"pl-k"],[5,24,"pl-en"],[25,33,"pl-c1"],[40,43,"pl-k"],[51,54,"pl-k"]],[[25,30,"pl-k"],[31,35,"pl-k"],[45,54,"pl-c1"]],[[0,4,"pl-k"],[5,19,"pl-en"],[20,28,"pl-c1"],[35,38,"pl-k"],[46,49,"pl-k"],[59,62,"pl-k"]],[[0,4,"pl-k"],[5,24,"pl-en"],[25,33,"pl-c1"],[40,43,"pl-k"],[51,54,"pl-k"],[64,70,"pl-c1"]],[[25,31,"pl-c1"]],[],[[2,21,"pl-c"],[2,4,"pl-c"]],[],[[0,4,"pl-k"],[5,27,"pl-en"],[28,36,"pl-c1"]],[],[[0,5,"pl-k"],[6,10,"pl-k"],[12,26,"pl-en"],[27,30,"pl-k"]],[],[[12,33,"pl-en"],[34,39,"pl-k"]],[],[[0,9,"pl-k"],[10,16,"pl-en"]],[],[[0,5,"pl-k"],[6,17,"pl-en"]],[[0,7,"pl-k"]],[[2,9,"pl-k"],[10,22,"pl-en"],[27,34,"pl-k"]],[],[[2,52,"pl-c"],[2,4,"pl-c"]],[[2,9,"pl-k"],[10,14,"pl-k"],[15,20,"pl-en"],[39,44,"pl-k"]],[],[],[[0,3,"pl-c"],[0,2,"pl-c"]],[[0,78,"pl-c"]],[[0,2,"pl-c"]],[[0,56,"pl-c"]],[[0,71,"pl-c"]],[[0,65,"pl-c"]],[[0,72,"pl-c"]],[[0,2,"pl-c"]],[[0,19,"pl-c"]],[[0,60,"pl-c"]],[[0,20,"pl-c"]],[[0,40,"pl-c"]],[[0,2,"pl-c"]],[[0,36,"pl-c"]],[[0,41,"pl-c"]],[[0,32,"pl-c"]],[[0,46,"pl-c"]],[[0,3,"pl-c"],[1,3,"pl-c"]],[[0,5,"pl-k"],[6,23,"pl-en"],[24,29,"pl-k"]],[[0,7,"pl-k"]],[[2,19,"pl-en"],[20,25,"pl-k"]],[],[[2,6,"pl-k"],[7,12,"pl-en"],[31,36,"pl-k"],[37,45,"pl-k"]],[],[[0,8,"pl-k"]],[[2,66,"pl-c"],[2,4,"pl-c"]],[[2,76,"pl-c"],[2,4,"pl-c"]],[[2,13,"pl-c"],[2,4,"pl-c"]],[[2,8,"pl-k"],[9,18,"pl-k"],[19,23,"pl-k"],[36,39,"pl-s"],[36,37,"pl-pds"],[38,39,"pl-pds"]],[],[[2,77,"pl-c"],[2,4,"pl-c"]],[[2,16,"pl-c"],[2,4,"pl-c"]],[[2,43,"pl-c"],[2,4,"pl-c"]],[],[[2,70,"pl-c"],[2,4,"pl-c"]],[[2,29,"pl-c"],[2,4,"pl-c"]],[],[],[],[[0,3,"pl-c"],[0,2,"pl-c"]],[[0,44,"pl-c"]],[[0,44,"pl-c"]],[[0,2,"pl-c"]],[[0,68,"pl-c"]],[[0,77,"pl-c"]],[[0,78,"pl-c"]],[[0,3,"pl-c"],[1,3,"pl-c"]],[[0,5,"pl-k"],[6,18,"pl-en"],[19,24,"pl-k"]],[[0,7,"pl-k"]],[[2,14,"pl-en"],[15,20,"pl-k"]],[],[[2,6,"pl-k"],[7,12,"pl-en"],[31,36,"pl-k"],[37,45,"pl-k"]],[],[[0,8,"pl-k"]],[],[],[],[[0,7,"pl-c1"],[8,21,"pl-en"],[36,41,"pl-k"]],[],[[2,21,"pl-c"],[2,4,"pl-c"]],[],[[0,5,"pl-k"],[6,12,"pl-en"]],[[0,7,"pl-k"]],[[2,7,"pl-k"],[32,36,"pl-k"],[37,42,"pl-k"]],[],[[2,7,"pl-k"]],[[20,24,"pl-k"],[25,30,"pl-k"]],[],[[2,6,"pl-k"],[7,12,"pl-k"],[13,28,"pl-en"]],[],[],[],[[2,7,"pl-k"]],[[36,41,"pl-k"]],[],[[2,7,"pl-k"],[49,53,"pl-k"]],[[6,11,"pl-k"],[35,40,"pl-k"]],[],[[2,7,"pl-k"]],[[20,23,"pl-k"],[24,29,"pl-k"]],[],[[2,8,"pl-en"]],[],[[2,9,"pl-k"],[10,17,"pl-en"]],[],[[2,9,"pl-k"],[10,14,"pl-k"],[15,23,"pl-en"],[26,31,"pl-k"]],[],[[10,13,"pl-en"],[14,19,"pl-k"]],[[10,14,"pl-en"],[15,20,"pl-k"]],[[10,14,"pl-en"],[15,20,"pl-k"]],[[10,13,"pl-en"],[14,19,"pl-k"]],[[10,13,"pl-en"],[14,19,"pl-k"]],[[10,15,"pl-en"],[16,21,"pl-k"]],[[10,15,"pl-en"],[16,21,"pl-k"]],[[10,16,"pl-en"],[17,22,"pl-k"]],[[10,16,"pl-en"],[17,22,"pl-k"]],[[10,17,"pl-en"],[18,23,"pl-k"]],[],[[2,6,"pl-k"],[7,19,"pl-en"],[20,25,"pl-k"]],[[20,25,"pl-k"]],[[2,6,"pl-k"],[7,22,"pl-en"],[23,28,"pl-k"],[55,60,"pl-k"]],[],[[2,6,"pl-k"],[7,25,"pl-en"],[26,31,"pl-k"]],[[10,49,"pl-en"],[50,55,"pl-k"]],[[50,55,"pl-k"]],[[10,35,"pl-en"],[36,41,"pl-k"]],[[10,34,"pl-en"]],[],[[2,11,"pl-k"],[12,17,"pl-k"],[18,34,"pl-en"]],[[10,27,"pl-en"]],[[4,10,"pl-k"],[11,33,"pl-c1"]],[],[],[],[],[[10,31,"pl-en"]],[[10,33,"pl-en"]],[[10,34,"pl-en"]],[],[[10,41,"pl-en"]],[[10,20,"pl-en"]],[],[[10,28,"pl-en"],[29,32,"pl-k"]],[[10,25,"pl-en"],[26,30,"pl-k"]],[[10,25,"pl-en"],[26,30,"pl-k"]],[[10,28,"pl-en"]],[],[[10,29,"pl-en"]],[],[[2,19,"pl-en"],[34,41,"pl-c1"],[64,69,"pl-k"]],[],[[10,34,"pl-en"],[35,41,"pl-c1"]],[[10,32,"pl-en"],[33,39,"pl-c1"]],[],[[10,26,"pl-en"],[27,33,"pl-c1"],[39,45,"pl-c1"],[53,54,"pl-c1"]],[[2,11,"pl-k"],[12,17,"pl-k"],[18,21,"pl-en"],[23,28,"pl-k"],[29,35,"pl-en"]],[[10,26,"pl-en"],[27,32,"pl-k"]],[],[[10,27,"pl-en"],[28,34,"pl-c1"],[40,46,"pl-c1"],[54,55,"pl-c1"]],[[2,11,"pl-k"],[12,17,"pl-k"],[18,21,"pl-en"],[23,28,"pl-k"],[29,35,"pl-en"]],[[10,27,"pl-en"],[28,33,"pl-k"]],[],[[10,27,"pl-en"],[28,34,"pl-c1"],[40,46,"pl-c1"],[54,55,"pl-c1"]],[[2,11,"pl-k"],[12,17,"pl-k"],[18,21,"pl-en"],[23,28,"pl-k"],[29,35,"pl-en"]],[[10,27,"pl-en"],[28,33,"pl-k"]],[],[[10,32,"pl-en"],[33,39,"pl-c1"]],[],[[2,6,"pl-k"],[7,19,"pl-en"],[20,25,"pl-k"],[45,48,"pl-k"],[55,58,"pl-k"],[74,75,"pl-c1"]],[[2,5,"pl-k"],[6,22,"pl-en"],[23,28,"pl-k"],[48,51,"pl-k"],[67,68,"pl-c1"]],[[2,6,"pl-k"],[7,24,"pl-en"]],[],[[2,6,"pl-k"],[7,13,"pl-en"],[14,19,"pl-k"],[39,42,"pl-k"],[49,52,"pl-k"],[68,69,"pl-c1"]],[],[[2,6,"pl-k"],[7,17,"pl-en"],[20,25,"pl-k"]],[[2,6,"pl-k"],[7,23,"pl-en"],[26,31,"pl-k"]],[[2,6,"pl-k"],[7,11,"pl-en"]],[[2,6,"pl-k"],[7,19,"pl-en"]],[],[[28,32,"pl-k"]],[],[[0,10,"pl-k"]],[[2,6,"pl-k"],[7,22,"pl-en"],[37,42,"pl-k"]],[[23,26,"pl-k"],[40,45,"pl-k"]],[[23,26,"pl-k"],[39,43,"pl-k"]],[[23,27,"pl-k"]],[[23,28,"pl-k"],[43,47,"pl-k"]],[],[[14,22,"pl-c1"]],[[2,8,"pl-c1"]],[[2,8,"pl-c1"]],[[2,8,"pl-c1"]],[[2,8,"pl-c1"]],[[2,8,"pl-c1"]],[[2,8,"pl-c1"]],[[2,8,"pl-c1"]],[[2,8,"pl-c1"]],[[2,8,"pl-c1"]],[],[[0,8,"pl-k"]],[[2,7,"pl-k"]],[],[[2,7,"pl-k"]],[],[],[],[[2,8,"pl-k"]],[[2,14,"pl-en"],[15,20,"pl-k"]],[],[[10,32,"pl-en"]],[[10,32,"pl-en"]],[],[[2,10,"pl-c1"],[11,31,"pl-en"],[32,37,"pl-k"],[57,60,"pl-k"]],[[32,35,"pl-k"]],[[62,67,"pl-k"]],[[2,5,"pl-k"],[6,19,"pl-en"],[20,25,"pl-k"],[45,48,"pl-k"],[55,58,"pl-k"]],[[2,6,"pl-k"],[7,22,"pl-en"]],[],[[2,6,"pl-k"],[7,14,"pl-en"]],[[2,6,"pl-k"],[7,26,"pl-en"],[27,32,"pl-k"]],[[2,6,"pl-k"],[7,23,"pl-en"]],[[24,29,"pl-k"],[50,55,"pl-k"]],[[2,6,"pl-k"],[7,42,"pl-en"]],[],[[6,11,"pl-k"],[48,53,"pl-k"]],[],[[2,6,"pl-k"],[7,25,"pl-en"],[26,31,"pl-k"],[32,36,"pl-k"],[55,60,"pl-k"]],[[2,6,"pl-k"],[7,19,"pl-en"],[20,25,"pl-k"]],[[70,75,"pl-k"]],[[2,6,"pl-k"],[7,21,"pl-en"],[36,40,"pl-k"]],[],[[2,6,"pl-k"],[7,34,"pl-en"],[49,53,"pl-k"]],[[35,40,"pl-k"]],[[2,6,"pl-k"],[7,26,"pl-en"],[41,45,"pl-k"]],[[27,32,"pl-k"]],[[27,31,"pl-k"]],[[2,6,"pl-k"],[7,34,"pl-en"],[49,54,"pl-k"]],[[50,55,"pl-k"]],[[35,40,"pl-k"]],[[2,6,"pl-k"],[7,19,"pl-en"]],[[2,6,"pl-k"]],[[2,36,"pl-en"]],[],[],[],[[2,6,"pl-k"],[7,24,"pl-en"]],[],[],[[61,66,"pl-k"]],[],[[2,9,"pl-k"],[10,14,"pl-k"],[15,39,"pl-en"],[40,48,"pl-c1"]],[],[[14,18,"pl-k"],[32,37,"pl-c1"]],[[14,18,"pl-k"],[38,43,"pl-c1"]],[],[[2,8,"pl-k"],[9,24,"pl-en"]],[],[],[],[],[],[],[[39,65,"pl-s"],[39,40,"pl-pds"],[64,65,"pl-pds"]],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[[2,5,"pl-k"]],[[2,6,"pl-k"]],[[2,6,"pl-k"]],[],[],[],[[16,23,"pl-c1"]],[],[],[],[[0,4,"pl-k"],[5,10,"pl-k"],[11,16,"pl-en"]],[[12,13,"pl-c1"]],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[[2,26,"pl-c"],[2,4,"pl-c"]],[],[],[],[[12,21,"pl-en"]],[],[[14,22,"pl-k"],[43,48,"pl-k"]],[],[[0,5,"pl-k"],[6,12,"pl-en"]],[[0,7,"pl-k"]],[[2,8,"pl-en"],[13,20,"pl-k"]],[[2,8,"pl-en"]],[],[],[[8,24,"pl-en"]],[[2,13,"pl-c"],[2,4,"pl-c"]],[[2,10,"pl-k"],[11,15,"pl-en"],[18,23,"pl-k"],[26,32,"pl-k"],[41,48,"pl-c1"]],[[2,6,"pl-k"],[7,15,"pl-k"],[23,32,"pl-c1"],[34,39,"pl-k"],[42,48,"pl-k"],[57,64,"pl-c1"]],[[2,6,"pl-k"],[7,15,"pl-k"],[23,32,"pl-c1"],[34,39,"pl-k"],[42,48,"pl-k"],[57,64,"pl-c1"]],[[2,7,"pl-k"],[18,23,"pl-en"],[26,31,"pl-k"],[34,40,"pl-k"]],[[12,17,"pl-en"],[22,28,"pl-k"]],[[2,7,"pl-k"],[18,26,"pl-k"],[30,35,"pl-k"],[38,44,"pl-k"]],[[12,20,"pl-k"],[26,32,"pl-k"]],[[2,7,"pl-k"],[18,26,"pl-k"],[31,36,"pl-k"],[39,45,"pl-k"],[51,54,"pl-c1"]],[[12,20,"pl-k"],[27,33,"pl-k"],[39,42,"pl-c1"]],[],[[2,10,"pl-c"],[2,4,"pl-c"]],[[8,13,"pl-en"],[16,21,"pl-k"],[24,30,"pl-k"]],[],[[2,20,"pl-c"],[2,4,"pl-c"]],[[2,6,"pl-k"],[7,25,"pl-en"],[26,31,"pl-k"],[50,55,"pl-k"]],[[14,38,"pl-en"],[39,44,"pl-k"]],[[39,44,"pl-k"],[45,49,"pl-k"],[57,59,"pl-s"],[57,58,"pl-pds"],[58,59,"pl-pds"]],[[39,45,"pl-c1"],[51,52,"pl-c1"],[54,59,"pl-k"]],[[2,10,"pl-c1"],[11,39,"pl-en"],[40,45,"pl-k"]],[[40,48,"pl-c1"],[55,56,"pl-c1"],[58,64,"pl-c1"],[70,71,"pl-c1"],[73,78,"pl-k"]],[[2,8,"pl-c1"],[9,39,"pl-en"],[40,45,"pl-k"],[64,69,"pl-k"]],[],[[0,8,"pl-k"]],[],[],[],[],[],[[0,5,"pl-k"],[6,16,"pl-en"]],[[0,7,"pl-k"]],[[2,10,"pl-k"],[11,21,"pl-en"],[22,27,"pl-k"]],[],[[2,10,"pl-k"],[11,21,"pl-en"],[22,27,"pl-k"],[47,50,"pl-k"]],[],[[2,10,"pl-k"],[11,21,"pl-en"],[22,27,"pl-k"],[47,50,"pl-k"]],[[22,27,"pl-k"]],[[22,27,"pl-k"]],[],[[2,9,"pl-k"],[10,21,"pl-en"]],[],[[2,9,"pl-k"],[10,14,"pl-k"],[15,23,"pl-en"],[26,31,"pl-k"]],[],[[9,12,"pl-en"],[13,18,"pl-k"]],[[9,12,"pl-en"],[13,18,"pl-k"],[38,43,"pl-k"]],[[9,12,"pl-en"],[13,18,"pl-k"]],[[9,12,"pl-en"],[13,18,"pl-k"],[38,43,"pl-k"]],[],[[9,12,"pl-en"],[13,18,"pl-k"]],[[9,12,"pl-en"],[13,18,"pl-k"],[38,43,"pl-k"]],[],[[9,12,"pl-en"],[13,18,"pl-k"]],[],[[9,12,"pl-en"],[13,18,"pl-k"],[38,43,"pl-k"]],[],[[9,12,"pl-en"],[13,18,"pl-k"]],[],[[9,12,"pl-en"],[13,18,"pl-k"],[38,43,"pl-k"]],[],[],[[9,12,"pl-en"],[13,18,"pl-k"]],[],[[9,12,"pl-en"],[13,18,"pl-k"],[38,43,"pl-k"]],[],[],[],[[9,12,"pl-en"],[13,18,"pl-k"],[38,43,"pl-k"]],[[13,18,"pl-k"],[57,64,"pl-c1"]],[[9,12,"pl-en"],[13,18,"pl-k"],[38,43,"pl-k"]],[[13,18,"pl-k"]],[[33,40,"pl-c1"]],[[9,12,"pl-en"],[13,18,"pl-k"],[38,43,"pl-k"]],[[13,18,"pl-k"]],[[67,74,"pl-c1"]],[],[[9,13,"pl-en"],[14,19,"pl-k"]],[[9,13,"pl-en"],[14,19,"pl-k"],[39,44,"pl-k"]],[],[[9,13,"pl-en"],[14,19,"pl-k"]],[[9,13,"pl-en"],[14,19,"pl-k"],[39,44,"pl-k"]],[[9,13,"pl-en"],[14,19,"pl-k"],[39,44,"pl-k"],[45,49,"pl-k"],[57,63,"pl-c1"]],[[14,19,"pl-k"]],[[9,13,"pl-en"],[14,19,"pl-k"],[39,44,"pl-k"],[63,68,"pl-k"],[69,73,"pl-k"]],[[14,20,"pl-c1"],[37,42,"pl-k"]],[[9,13,"pl-en"],[14,19,"pl-k"],[39,44,"pl-k"],[63,68,"pl-k"],[69,73,"pl-k"]],[[14,20,"pl-c1"],[37,42,"pl-k"]],[],[[9,13,"pl-en"],[14,19,"pl-k"],[39,44,"pl-k"]],[[14,19,"pl-k"]],[[9,13,"pl-en"],[14,19,"pl-k"],[39,44,"pl-k"]],[[14,19,"pl-k"]],[[9,13,"pl-en"],[14,19,"pl-k"],[39,44,"pl-k"]],[[14,19,"pl-k"],[39,44,"pl-k"]],[[9,13,"pl-en"],[14,19,"pl-k"],[39,44,"pl-k"]],[[14,19,"pl-k"],[39,44,"pl-k"]],[],[[9,13,"pl-en"],[14,19,"pl-k"],[39,45,"pl-c1"]],[],[[14,19,"pl-k"]],[[9,13,"pl-en"],[14,19,"pl-k"]],[],[[14,19,"pl-k"]],[[9,13,"pl-en"],[14,19,"pl-k"],[39,44,"pl-k"]],[[14,20,"pl-c1"]],[[14,19,"pl-k"]],[[9,13,"pl-en"],[14,19,"pl-k"],[39,44,"pl-k"]],[],[[14,19,"pl-k"]],[[9,13,"pl-en"],[14,19,"pl-k"],[39,44,"pl-k"]],[[9,13,"pl-en"],[14,19,"pl-k"],[39,44,"pl-k"]],[[14,19,"pl-k"]],[[9,13,"pl-en"],[14,19,"pl-k"],[39,44,"pl-k"]],[[14,19,"pl-k"]],[[9,13,"pl-en"],[14,19,"pl-k"],[39,44,"pl-k"]],[[9,13,"pl-en"],[14,19,"pl-k"],[39,44,"pl-k"]],[[14,19,"pl-k"]],[[9,13,"pl-en"],[14,19,"pl-k"],[39,44,"pl-k"]],[[14,19,"pl-k"],[51,56,"pl-k"]],[[9,13,"pl-en"],[14,19,"pl-k"],[39,44,"pl-k"]],[[14,19,"pl-k"]],[[14,19,"pl-k"]],[],[[9,12,"pl-en"],[13,18,"pl-k"]],[[9,12,"pl-en"],[13,18,"pl-k"],[38,43,"pl-k"],[44,48,"pl-k"],[56,62,"pl-c1"]],[[13,18,"pl-k"]],[[9,12,"pl-en"],[13,18,"pl-k"],[38,43,"pl-k"],[62,67,"pl-k"],[68,72,"pl-k"]],[[13,19,"pl-c1"],[36,41,"pl-k"]],[[9,12,"pl-en"],[13,18,"pl-k"],[38,43,"pl-k"],[62,67,"pl-k"],[68,72,"pl-k"]],[[13,19,"pl-c1"],[36,41,"pl-k"]],[],[[9,12,"pl-en"],[13,18,"pl-k"],[38,43,"pl-k"]],[[13,18,"pl-k"]],[[9,12,"pl-en"],[13,18,"pl-k"],[38,43,"pl-k"]],[[13,18,"pl-k"]],[[9,12,"pl-en"],[13,18,"pl-k"],[38,43,"pl-k"]],[[13,18,"pl-k"],[38,43,"pl-k"]],[[9,12,"pl-en"],[13,18,"pl-k"],[38,43,"pl-k"]],[[13,18,"pl-k"],[38,43,"pl-k"]],[],[[9,12,"pl-en"],[13,18,"pl-k"],[38,44,"pl-c1"]],[[47,52,"pl-k"]],[[9,12,"pl-en"],[13,18,"pl-k"]],[],[[13,18,"pl-k"]],[[9,12,"pl-en"],[13,18,"pl-k"],[38,43,"pl-k"]],[[13,19,"pl-c1"]],[[13,18,"pl-k"]],[[9,12,"pl-en"],[13,18,"pl-k"],[38,43,"pl-k"]],[],[[13,18,"pl-k"]],[[9,12,"pl-en"],[13,18,"pl-k"],[38,43,"pl-k"]],[[9,12,"pl-en"],[13,18,"pl-k"],[38,43,"pl-k"]],[[13,18,"pl-k"]],[[9,12,"pl-en"],[13,18,"pl-k"],[38,43,"pl-k"]],[[13,18,"pl-k"]],[[9,12,"pl-en"],[13,18,"pl-k"],[38,43,"pl-k"]],[[9,12,"pl-en"],[13,18,"pl-k"],[38,43,"pl-k"]],[[13,18,"pl-k"]],[[9,12,"pl-en"],[13,18,"pl-k"],[38,43,"pl-k"]],[[13,18,"pl-k"],[50,55,"pl-k"]],[[9,12,"pl-en"],[13,18,"pl-k"],[38,43,"pl-k"]],[[13,18,"pl-k"]],[[13,18,"pl-k"]],[],[[9,14,"pl-en"],[15,20,"pl-k"]],[[9,14,"pl-en"],[15,20,"pl-k"],[40,45,"pl-k"],[46,50,"pl-k"],[58,64,"pl-c1"]],[[15,20,"pl-k"]],[[9,14,"pl-en"],[15,20,"pl-k"],[40,45,"pl-k"],[46,50,"pl-k"],[58,64,"pl-c1"]],[[15,20,"pl-k"]],[[9,14,"pl-en"],[15,20,"pl-k"],[40,45,"pl-k"]],[[15,20,"pl-k"],[21,25,"pl-k"],[33,39,"pl-c1"]],[[15,20,"pl-k"]],[[9,14,"pl-en"],[15,20,"pl-k"],[40,45,"pl-k"]],[[15,20,"pl-k"],[21,25,"pl-k"],[33,39,"pl-c1"]],[[15,20,"pl-k"]],[[9,14,"pl-en"],[15,20,"pl-k"],[40,45,"pl-k"]],[[15,20,"pl-k"]],[[9,14,"pl-en"],[15,20,"pl-k"],[40,45,"pl-k"]],[[15,20,"pl-k"]],[[9,14,"pl-en"],[15,20,"pl-k"],[40,45,"pl-k"]],[[15,20,"pl-k"],[40,45,"pl-k"]],[[9,14,"pl-en"],[15,20,"pl-k"],[40,45,"pl-k"]],[[15,20,"pl-k"],[40,45,"pl-k"]],[],[[9,14,"pl-en"],[15,20,"pl-k"],[40,46,"pl-c1"]],[],[[15,20,"pl-k"]],[[9,14,"pl-en"],[15,20,"pl-k"]],[],[[15,20,"pl-k"]],[[9,14,"pl-en"],[15,20,"pl-k"],[40,45,"pl-k"]],[[15,21,"pl-c1"]],[[15,20,"pl-k"]],[[9,14,"pl-en"],[15,20,"pl-k"],[40,45,"pl-k"]],[],[[15,20,"pl-k"]],[],[[9,15,"pl-en"],[16,21,"pl-k"]],[[9,15,"pl-en"],[16,21,"pl-k"],[41,46,"pl-k"]],[[9,15,"pl-en"],[16,21,"pl-k"],[41,46,"pl-k"],[47,51,"pl-k"]],[[16,22,"pl-c1"],[39,44,"pl-k"]],[[9,15,"pl-en"],[16,21,"pl-k"],[41,46,"pl-k"],[47,51,"pl-k"]],[[16,22,"pl-c1"],[39,44,"pl-k"]],[],[[9,15,"pl-en"],[16,21,"pl-k"],[41,46,"pl-k"]],[[16,21,"pl-k"],[22,26,"pl-k"],[34,40,"pl-c1"]],[[16,21,"pl-k"]],[[9,15,"pl-en"],[16,21,"pl-k"],[41,46,"pl-k"]],[[16,21,"pl-k"],[22,26,"pl-k"],[34,40,"pl-c1"]],[[16,21,"pl-k"]],[[9,15,"pl-en"],[16,21,"pl-k"],[41,46,"pl-k"]],[[16,21,"pl-k"]],[[9,15,"pl-en"],[16,21,"pl-k"],[41,46,"pl-k"]],[[16,21,"pl-k"]],[[9,15,"pl-en"],[16,21,"pl-k"],[41,46,"pl-k"]],[[16,21,"pl-k"],[41,46,"pl-k"]],[[9,15,"pl-en"],[16,21,"pl-k"],[41,46,"pl-k"]],[[16,21,"pl-k"],[41,46,"pl-k"]],[],[],[[9,16,"pl-en"],[17,22,"pl-k"]],[[9,16,"pl-en"],[17,22,"pl-k"],[42,47,"pl-k"]],[],[[2,6,"pl-k"],[7,11,"pl-en"]],[[9,13,"pl-en"],[14,19,"pl-k"]],[],[[2,6,"pl-k"],[7,11,"pl-en"]],[],[[14,18,"pl-en"],[21,26,"pl-k"]],[[2,5,"pl-k"],[6,10,"pl-en"],[13,18,"pl-k"]],[],[[2,8,"pl-c1"],[9,23,"pl-en"],[26,31,"pl-k"]],[[2,10,"pl-c1"],[11,17,"pl-en"],[20,25,"pl-k"]],[],[[2,6,"pl-k"],[7,28,"pl-en"]],[],[[2,6,"pl-k"],[7,26,"pl-en"]],[],[[2,6,"pl-k"]],[[2,19,"pl-en"],[34,41,"pl-c1"],[64,69,"pl-k"]],[],[[2,6,"pl-k"],[7,25,"pl-en"],[26,29,"pl-k"]],[[2,6,"pl-k"],[7,22,"pl-en"],[23,27,"pl-k"]],[[2,6,"pl-k"],[7,22,"pl-en"],[23,27,"pl-k"]],[[2,6,"pl-k"],[7,25,"pl-en"]],[],[[2,6,"pl-k"],[7,29,"pl-en"],[30,36,"pl-c1"],[42,48,"pl-c1"],[56,57,"pl-c1"]],[[2,11,"pl-k"],[12,17,"pl-k"],[18,21,"pl-en"],[23,28,"pl-k"],[29,35,"pl-en"]],[[2,6,"pl-k"]],[[2,24,"pl-en"],[25,30,"pl-k"]],[],[[2,6,"pl-k"],[7,23,"pl-en"],[24,30,"pl-c1"],[36,42,"pl-c1"],[50,51,"pl-c1"]],[[2,11,"pl-k"],[12,17,"pl-k"],[18,21,"pl-en"],[23,28,"pl-k"],[29,35,"pl-en"]],[[2,6,"pl-k"],[7,23,"pl-en"],[24,29,"pl-k"]],[],[[2,6,"pl-k"],[7,24,"pl-en"],[25,31,"pl-c1"],[37,43,"pl-c1"],[51,52,"pl-c1"]],[[2,11,"pl-k"],[12,17,"pl-k"],[18,21,"pl-en"],[23,28,"pl-k"],[29,35,"pl-en"]],[[2,6,"pl-k"],[7,24,"pl-en"],[25,30,"pl-k"]],[],[[2,6,"pl-k"],[7,22,"pl-en"],[23,29,"pl-c1"]],[[2,11,"pl-k"],[12,17,"pl-k"],[18,21,"pl-en"],[23,28,"pl-k"],[29,35,"pl-en"]],[[2,6,"pl-k"],[7,22,"pl-en"],[23,28,"pl-k"]],[],[[2,6,"pl-k"],[7,21,"pl-en"],[22,27,"pl-k"],[51,56,"pl-k"]],[[2,6,"pl-k"],[7,28,"pl-en"],[29,34,"pl-k"]],[[1,6,"pl-k"]],[[2,6,"pl-k"],[7,22,"pl-en"],[23,28,"pl-k"]],[[23,28,"pl-k"]],[[1,6,"pl-k"]],[],[[2,6,"pl-k"],[7,21,"pl-en"],[22,26,"pl-k"]],[[2,6,"pl-k"],[7,26,"pl-en"],[27,31,"pl-k"]],[],[[2,6,"pl-k"],[7,21,"pl-en"],[22,26,"pl-k"]],[],[[2,6,"pl-k"],[7,19,"pl-en"],[20,24,"pl-k"]],[],[[2,6,"pl-k"],[7,21,"pl-en"],[22,26,"pl-k"]],[],[[2,6,"pl-k"],[7,20,"pl-en"],[21,26,"pl-k"]],[],[[2,6,"pl-k"],[7,16,"pl-en"],[17,22,"pl-k"],[42,45,"pl-k"]],[[2,6,"pl-k"],[7,27,"pl-en"],[28,33,"pl-k"]],[[28,33,"pl-k"]],[[2,6,"pl-k"],[7,34,"pl-en"],[35,40,"pl-k"]],[[1,6,"pl-k"]],[[2,6,"pl-k"],[7,28,"pl-en"],[29,34,"pl-k"]],[[29,34,"pl-k"]],[[1,6,"pl-k"]],[],[[1,6,"pl-k"]],[[2,6,"pl-k"],[7,23,"pl-en"],[24,29,"pl-k"]],[[24,29,"pl-k"]],[[2,6,"pl-k"],[7,24,"pl-en"]],[[14,34,"pl-en"],[35,40,"pl-k"],[41,45,"pl-k"],[61,67,"pl-c1"],[74,79,"pl-k"]],[[1,6,"pl-k"]],[],[[1,6,"pl-k"]],[[2,6,"pl-k"],[7,45,"pl-en"],[46,50,"pl-k"]],[[2,6,"pl-k"],[7,42,"pl-en"],[43,47,"pl-k"]],[[2,6,"pl-k"],[7,38,"pl-en"]],[],[[1,6,"pl-k"]],[],[[2,6,"pl-k"],[7,17,"pl-en"]],[],[[0,10,"pl-k"]],[[2,8,"pl-k"],[9,15,"pl-en"]],[[4,12,"pl-c1"]],[[1,6,"pl-k"]],[[15,22,"pl-c1"]],[[1,6,"pl-k"]],[],[[4,8,"pl-k"],[9,16,"pl-en"],[19,24,"pl-k"],[27,33,"pl-k"]],[],[],[[2,9,"pl-k"],[10,14,"pl-k"],[15,40,"pl-en"]],[],[[2,12,"pl-c"],[2,4,"pl-c"]],[[2,19,"pl-c"],[2,4,"pl-c"]],[[2,22,"pl-c"],[2,4,"pl-c"]],[[2,19,"pl-c"],[2,4,"pl-c"]],[[2,56,"pl-c"],[2,4,"pl-c"]],[[2,79,"pl-c"],[2,4,"pl-c"]],[[2,64,"pl-c"],[2,4,"pl-c"]],[[2,9,"pl-k"],[10,14,"pl-k"],[15,27,"pl-en"],[44,48,"pl-k"]],[[2,6,"pl-k"],[7,22,"pl-en"],[39,44,"pl-k"]],[[2,6,"pl-k"],[7,19,"pl-en"]],[],[[2,6,"pl-k"],[7,22,"pl-en"]],[[23,27,"pl-k"]],[],[[2,6,"pl-k"],[7,34,"pl-en"],[49,54,"pl-k"]],[[49,54,"pl-k"]],[],[[2,6,"pl-k"],[7,20,"pl-en"],[21,26,"pl-k"]],[],[[2,32,"pl-c"],[2,4,"pl-c"]],[[2,7,"pl-k"]],[[2,7,"pl-k"],[8,11,"pl-k"]],[[2,7,"pl-k"]],[],[[2,24,"pl-c"],[2,4,"pl-c"]],[],[[2,9,"pl-k"]],[],[],[[2,47,"pl-c"],[2,4,"pl-c"]],[[2,8,"pl-c1"],[38,39,"pl-c1"]],[],[[2,6,"pl-k"],[55,60,"pl-c1"]],[],[[2,20,"pl-c"],[2,4,"pl-c"]],[],[],[[2,20,"pl-c"],[2,4,"pl-c"]],[],[],[[2,18,"pl-c"],[2,4,"pl-c"]],[[16,23,"pl-c1"]],[],[],[[2,13,"pl-c"],[2,4,"pl-c"]],[],[],[],[[2,8,"pl-c1"]],[[2,8,"pl-c1"]],[[2,8,"pl-c1"]],[[2,8,"pl-c1"]],[[2,8,"pl-c1"]],[[2,8,"pl-c1"]],[[2,8,"pl-c1"]],[],[],[],[],[[1,6,"pl-k"]],[],[],[[1,6,"pl-k"]],[],[[2,6,"pl-k"],[21,26,"pl-c1"]],[[2,6,"pl-k"],[26,31,"pl-c1"]],[],[[2,6,"pl-k"],[21,25,"pl-c1"]],[],[[2,5,"pl-k"]],[[2,6,"pl-k"]],[[2,6,"pl-k"]],[[34,41,"pl-c1"]],[],[[2,6,"pl-k"],[19,24,"pl-c1"]],[[2,6,"pl-k"],[21,25,"pl-c1"]],[],[],[],[],[[2,5,"pl-k"],[21,22,"pl-c1"]],[],[],[],[],[[1,6,"pl-k"]],[],[],[[1,6,"pl-k"]],[],[[1,6,"pl-k"]],[],[],[],[[31,38,"pl-c1"]],[[1,6,"pl-k"]],[],[[1,6,"pl-k"]],[[2,6,"pl-k"],[42,46,"pl-c1"]],[[2,6,"pl-k"],[39,43,"pl-c1"]],[],[[1,6,"pl-k"]],[],[],[],[[0,8,"pl-k"]],[[2,6,"pl-k"],[7,12,"pl-en"]],[[9,14,"pl-en"]],[],[[2,10,"pl-c1"],[11,31,"pl-en"],[46,51,"pl-k"]],[[2,6,"pl-k"],[7,25,"pl-en"],[40,45,"pl-k"]],[[41,46,"pl-k"]],[[2,6,"pl-k"],[7,20,"pl-en"],[49,53,"pl-k"]],[],[[2,6,"pl-k"],[7,15,"pl-en"]],[[2,6,"pl-k"],[7,21,"pl-en"]],[[22,26,"pl-k"]],[[28,54,"pl-en"]],[[20,25,"pl-k"],[26,30,"pl-k"],[38,44,"pl-c1"]],[],[],[[6,11,"pl-k"]],[[9,35,"pl-en"]],[[6,11,"pl-k"],[33,38,"pl-k"]],[[6,11,"pl-k"],[30,35,"pl-k"],[36,40,"pl-k"],[48,54,"pl-c1"]],[],[],[[6,11,"pl-k"]],[[31,61,"pl-en"]],[[6,11,"pl-k"],[35,40,"pl-k"]],[[6,11,"pl-k"],[60,65,"pl-k"]],[],[[14,32,"pl-en"],[33,38,"pl-k"],[58,63,"pl-k"]],[],[[2,9,"pl-k"],[10,14,"pl-k"]],[[2,16,"pl-en"],[17,22,"pl-k"]],[],[[31,35,"pl-k"]],[[2,9,"pl-k"],[10,14,"pl-k"],[15,21,"pl-en"],[24,29,"pl-k"]],[],[],[[0,5,"pl-k"],[6,12,"pl-en"]],[[0,7,"pl-k"]],[[2,24,"pl-c"],[2,4,"pl-c"]],[[2,10,"pl-k"],[11,17,"pl-en"],[18,23,"pl-k"]],[],[[2,10,"pl-k"],[11,17,"pl-en"],[18,23,"pl-k"]],[[18,23,"pl-k"]],[[18,23,"pl-k"]],[],[[2,24,"pl-c"],[2,4,"pl-c"]],[[2,10,"pl-k"],[11,17,"pl-en"],[18,23,"pl-k"],[43,46,"pl-k"]],[],[[2,10,"pl-k"],[11,17,"pl-en"],[18,23,"pl-k"],[43,46,"pl-k"]],[[18,23,"pl-k"]],[[18,23,"pl-k"]],[],[[2,8,"pl-en"],[22,29,"pl-k"]],[[10,18,"pl-k"],[33,40,"pl-k"]],[],[[2,9,"pl-en"]],[],[[2,6,"pl-k"],[7,15,"pl-en"],[18,23,"pl-k"]],[],[[9,12,"pl-en"],[13,18,"pl-k"]],[[9,12,"pl-en"],[13,18,"pl-k"],[38,43,"pl-k"]],[[9,12,"pl-en"],[13,18,"pl-k"]],[[9,12,"pl-en"],[13,18,"pl-k"],[38,43,"pl-k"]],[],[[9,12,"pl-en"],[13,18,"pl-k"]],[[9,12,"pl-en"],[13,18,"pl-k"],[38,43,"pl-k"]],[],[[9,12,"pl-en"],[13,18,"pl-k"]],[],[[9,12,"pl-en"],[13,18,"pl-k"],[38,43,"pl-k"]],[],[[9,12,"pl-en"],[13,18,"pl-k"]],[],[[9,12,"pl-en"],[13,18,"pl-k"],[38,43,"pl-k"]],[],[],[[9,12,"pl-en"],[13,18,"pl-k"],[38,43,"pl-k"]],[],[],[[9,12,"pl-en"],[13,18,"pl-k"]],[],[],[[9,12,"pl-en"],[13,18,"pl-k"],[38,43,"pl-k"]],[[13,18,"pl-k"],[57,64,"pl-c1"]],[[9,12,"pl-en"],[13,18,"pl-k"],[38,43,"pl-k"]],[[13,18,"pl-k"]],[[33,40,"pl-c1"]],[[9,12,"pl-en"],[13,18,"pl-k"],[38,43,"pl-k"]],[[13,18,"pl-k"]],[[67,74,"pl-c1"]],[],[[9,13,"pl-en"],[14,19,"pl-k"]],[[9,13,"pl-en"],[14,19,"pl-k"],[39,44,"pl-k"]],[],[[9,13,"pl-en"],[14,19,"pl-k"]],[[9,13,"pl-en"],[14,19,"pl-k"],[39,44,"pl-k"]],[[9,13,"pl-en"],[14,19,"pl-k"],[39,44,"pl-k"],[45,49,"pl-k"],[57,63,"pl-c1"]],[[14,19,"pl-k"]],[[9,13,"pl-en"],[14,19,"pl-k"],[39,44,"pl-k"],[63,68,"pl-k"],[69,73,"pl-k"]],[[14,20,"pl-c1"],[37,42,"pl-k"]],[[9,13,"pl-en"],[14,19,"pl-k"],[39,44,"pl-k"],[63,68,"pl-k"],[69,73,"pl-k"]],[[14,20,"pl-c1"],[37,42,"pl-k"]],[],[[9,13,"pl-en"],[14,19,"pl-k"],[39,44,"pl-k"]],[[14,19,"pl-k"]],[[9,13,"pl-en"],[14,19,"pl-k"],[39,44,"pl-k"]],[[14,19,"pl-k"]],[[9,13,"pl-en"],[14,19,"pl-k"],[39,44,"pl-k"]],[[14,19,"pl-k"],[39,44,"pl-k"]],[[9,13,"pl-en"],[14,19,"pl-k"],[39,44,"pl-k"]],[[14,19,"pl-k"],[39,44,"pl-k"]],[],[[9,13,"pl-en"],[14,19,"pl-k"],[39,45,"pl-c1"]],[],[[14,19,"pl-k"]],[[9,13,"pl-en"],[14,19,"pl-k"]],[],[[14,19,"pl-k"]],[[9,13,"pl-en"],[14,19,"pl-k"],[39,44,"pl-k"]],[[14,20,"pl-c1"]],[[14,19,"pl-k"]],[[9,13,"pl-en"],[14,19,"pl-k"],[39,44,"pl-k"]],[],[[14,19,"pl-k"]],[[9,13,"pl-en"],[14,19,"pl-k"],[39,44,"pl-k"]],[[9,13,"pl-en"],[14,19,"pl-k"],[39,44,"pl-k"]],[[14,19,"pl-k"]],[[9,13,"pl-en"],[14,19,"pl-k"],[39,44,"pl-k"]],[[14,19,"pl-k"]],[[9,13,"pl-en"],[14,19,"pl-k"],[39,44,"pl-k"]],[[9,13,"pl-en"],[14,19,"pl-k"],[39,44,"pl-k"]],[[14,19,"pl-k"]],[[9,13,"pl-en"],[14,19,"pl-k"],[39,44,"pl-k"]],[[14,19,"pl-k"],[51,56,"pl-k"]],[[9,13,"pl-en"],[14,19,"pl-k"],[39,44,"pl-k"]],[[14,19,"pl-k"]],[[14,19,"pl-k"]],[],[[9,12,"pl-en"],[13,18,"pl-k"]],[[9,12,"pl-en"],[13,18,"pl-k"],[38,43,"pl-k"],[44,48,"pl-k"],[56,62,"pl-c1"]],[[13,18,"pl-k"]],[[9,12,"pl-en"],[13,18,"pl-k"],[38,43,"pl-k"],[62,67,"pl-k"],[68,72,"pl-k"]],[[13,19,"pl-c1"],[36,41,"pl-k"]],[[9,12,"pl-en"],[13,18,"pl-k"],[38,43,"pl-k"],[62,67,"pl-k"],[68,72,"pl-k"]],[[13,19,"pl-c1"],[36,41,"pl-k"]],[],[[9,12,"pl-en"],[13,18,"pl-k"],[38,43,"pl-k"]],[[13,18,"pl-k"]],[[9,12,"pl-en"],[13,18,"pl-k"],[38,43,"pl-k"]],[[13,18,"pl-k"]],[[9,12,"pl-en"],[13,18,"pl-k"],[38,43,"pl-k"]],[[13,18,"pl-k"],[38,43,"pl-k"]],[[9,12,"pl-en"],[13,18,"pl-k"],[38,43,"pl-k"]],[[13,18,"pl-k"],[38,43,"pl-k"]],[],[[9,12,"pl-en"],[13,18,"pl-k"],[38,44,"pl-c1"]],[[47,52,"pl-k"]],[[9,12,"pl-en"],[13,18,"pl-k"]],[],[[13,18,"pl-k"]],[[9,12,"pl-en"],[13,18,"pl-k"],[38,43,"pl-k"]],[[13,19,"pl-c1"]],[[13,18,"pl-k"]],[[9,12,"pl-en"],[13,18,"pl-k"],[38,43,"pl-k"]],[],[[13,18,"pl-k"]],[[9,12,"pl-en"],[13,18,"pl-k"],[38,43,"pl-k"]],[[9,12,"pl-en"],[13,18,"pl-k"],[38,43,"pl-k"]],[[13,18,"pl-k"]],[[9,12,"pl-en"],[13,18,"pl-k"],[38,43,"pl-k"]],[[13,18,"pl-k"]],[[9,12,"pl-en"],[13,18,"pl-k"],[38,43,"pl-k"]],[[9,12,"pl-en"],[13,18,"pl-k"],[38,43,"pl-k"]],[[13,18,"pl-k"]],[[9,12,"pl-en"],[13,18,"pl-k"],[38,43,"pl-k"]],[[13,18,"pl-k"],[50,55,"pl-k"]],[[9,12,"pl-en"],[13,18,"pl-k"],[38,43,"pl-k"]],[[13,18,"pl-k"]],[[13,18,"pl-k"]],[],[[9,14,"pl-en"],[15,20,"pl-k"]],[[9,14,"pl-en"],[15,20,"pl-k"],[40,45,"pl-k"],[46,50,"pl-k"],[58,64,"pl-c1"]],[[15,20,"pl-k"]],[[9,14,"pl-en"],[15,20,"pl-k"],[40,45,"pl-k"],[46,50,"pl-k"],[58,64,"pl-c1"]],[[15,20,"pl-k"]],[[9,14,"pl-en"],[15,20,"pl-k"],[40,45,"pl-k"]],[[15,20,"pl-k"],[21,25,"pl-k"],[33,39,"pl-c1"]],[[15,20,"pl-k"]],[[9,14,"pl-en"],[15,20,"pl-k"],[40,45,"pl-k"]],[[15,20,"pl-k"],[21,25,"pl-k"],[33,39,"pl-c1"]],[[15,20,"pl-k"]],[[9,14,"pl-en"],[15,20,"pl-k"],[40,45,"pl-k"]],[[15,20,"pl-k"]],[[9,14,"pl-en"],[15,20,"pl-k"],[40,45,"pl-k"]],[[15,20,"pl-k"]],[[9,14,"pl-en"],[15,20,"pl-k"],[40,45,"pl-k"]],[[15,20,"pl-k"],[40,45,"pl-k"]],[[9,14,"pl-en"],[15,20,"pl-k"],[40,45,"pl-k"]],[[15,20,"pl-k"],[40,45,"pl-k"]],[],[[9,14,"pl-en"],[15,20,"pl-k"],[40,46,"pl-c1"]],[],[[15,20,"pl-k"]],[[9,14,"pl-en"],[15,20,"pl-k"]],[],[[15,20,"pl-k"]],[[9,14,"pl-en"],[15,20,"pl-k"],[40,45,"pl-k"]],[[15,21,"pl-c1"]],[[15,20,"pl-k"]],[[9,14,"pl-en"],[15,20,"pl-k"],[40,45,"pl-k"]],[],[[15,20,"pl-k"]],[],[[9,15,"pl-en"],[16,21,"pl-k"]],[[9,15,"pl-en"],[16,21,"pl-k"],[41,46,"pl-k"]],[[9,15,"pl-en"],[16,21,"pl-k"],[41,46,"pl-k"],[47,51,"pl-k"]],[[16,22,"pl-c1"],[39,44,"pl-k"]],[[9,15,"pl-en"],[16,21,"pl-k"],[41,46,"pl-k"],[47,51,"pl-k"]],[[16,22,"pl-c1"],[39,44,"pl-k"]],[],[[9,15,"pl-en"],[16,21,"pl-k"],[41,46,"pl-k"]],[[16,21,"pl-k"],[22,26,"pl-k"],[34,40,"pl-c1"]],[[16,21,"pl-k"]],[[9,15,"pl-en"],[16,21,"pl-k"],[41,46,"pl-k"]],[[16,21,"pl-k"],[22,26,"pl-k"],[34,40,"pl-c1"]],[[16,21,"pl-k"]],[[9,15,"pl-en"],[16,21,"pl-k"],[41,46,"pl-k"]],[[16,21,"pl-k"]],[[9,15,"pl-en"],[16,21,"pl-k"],[41,46,"pl-k"]],[[16,21,"pl-k"]],[[9,15,"pl-en"],[16,21,"pl-k"],[41,46,"pl-k"]],[[16,21,"pl-k"],[41,46,"pl-k"]],[[9,15,"pl-en"],[16,21,"pl-k"],[41,46,"pl-k"]],[[16,21,"pl-k"],[41,46,"pl-k"]],[],[],[[9,16,"pl-en"],[17,22,"pl-k"]],[[9,16,"pl-en"],[17,22,"pl-k"],[42,47,"pl-k"]],[],[[2,6,"pl-k"],[7,11,"pl-en"]],[[9,13,"pl-en"],[14,19,"pl-k"]],[],[[2,6,"pl-k"],[7,11,"pl-en"]],[],[[14,18,"pl-en"],[21,26,"pl-k"]],[[2,5,"pl-k"],[6,10,"pl-en"],[13,18,"pl-k"]],[],[[2,8,"pl-c1"],[9,23,"pl-en"],[26,31,"pl-k"]],[[2,10,"pl-c1"],[11,17,"pl-en"],[20,25,"pl-k"]],[],[[2,6,"pl-k"],[7,28,"pl-en"]],[],[[2,6,"pl-k"],[7,26,"pl-en"]],[],[[2,6,"pl-k"]],[[2,19,"pl-en"],[34,41,"pl-c1"],[64,69,"pl-k"]],[],[[2,6,"pl-k"],[7,25,"pl-en"],[26,29,"pl-k"]],[[2,6,"pl-k"],[7,22,"pl-en"],[23,27,"pl-k"]],[[2,6,"pl-k"],[7,25,"pl-en"]],[],[[2,6,"pl-k"],[7,29,"pl-en"],[30,36,"pl-c1"],[42,48,"pl-c1"],[56,57,"pl-c1"]],[[2,11,"pl-k"],[12,17,"pl-k"],[18,21,"pl-en"],[23,28,"pl-k"],[29,35,"pl-en"]],[[2,6,"pl-k"]],[[2,24,"pl-en"],[25,30,"pl-k"]],[],[[2,6,"pl-k"],[7,23,"pl-en"],[24,30,"pl-c1"],[36,42,"pl-c1"],[50,51,"pl-c1"]],[[2,11,"pl-k"],[12,17,"pl-k"],[18,21,"pl-en"],[23,28,"pl-k"],[29,35,"pl-en"]],[[2,6,"pl-k"],[7,23,"pl-en"],[24,29,"pl-k"]],[],[[2,6,"pl-k"],[7,24,"pl-en"],[25,31,"pl-c1"],[37,43,"pl-c1"],[51,52,"pl-c1"]],[[2,11,"pl-k"],[12,17,"pl-k"],[18,21,"pl-en"],[23,28,"pl-k"],[29,35,"pl-en"]],[[2,6,"pl-k"],[7,24,"pl-en"],[25,30,"pl-k"]],[],[[2,6,"pl-k"],[7,22,"pl-en"],[23,29,"pl-c1"]],[[2,11,"pl-k"],[12,17,"pl-k"],[18,21,"pl-en"],[23,28,"pl-k"],[29,35,"pl-en"]],[[2,6,"pl-k"],[7,22,"pl-en"],[23,28,"pl-k"]],[],[[2,6,"pl-k"],[7,21,"pl-en"],[22,27,"pl-k"],[51,56,"pl-k"]],[[2,6,"pl-k"],[7,28,"pl-en"],[29,34,"pl-k"]],[[1,6,"pl-k"]],[[2,6,"pl-k"],[7,22,"pl-en"],[23,28,"pl-k"]],[[23,28,"pl-k"]],[[1,6,"pl-k"]],[],[[2,6,"pl-k"],[7,21,"pl-en"],[22,26,"pl-k"]],[[2,6,"pl-k"],[7,26,"pl-en"],[27,31,"pl-k"]],[],[[2,6,"pl-k"],[7,21,"pl-en"],[22,26,"pl-k"]],[],[[2,6,"pl-k"],[7,19,"pl-en"],[20,24,"pl-k"]],[],[[2,6,"pl-k"],[7,21,"pl-en"],[22,26,"pl-k"]],[],[[2,6,"pl-k"],[7,20,"pl-en"],[21,26,"pl-k"]],[],[[2,6,"pl-k"],[7,16,"pl-en"],[17,22,"pl-k"],[42,45,"pl-k"]],[[2,6,"pl-k"],[7,27,"pl-en"],[28,33,"pl-k"]],[[28,33,"pl-k"]],[[2,6,"pl-k"],[7,34,"pl-en"],[35,40,"pl-k"]],[[1,6,"pl-k"]],[[2,6,"pl-k"],[7,28,"pl-en"],[29,34,"pl-k"]],[[29,34,"pl-k"]],[[1,6,"pl-k"]],[],[[1,6,"pl-k"]],[[2,6,"pl-k"],[7,45,"pl-en"],[46,50,"pl-k"]],[[2,6,"pl-k"],[7,42,"pl-en"],[43,47,"pl-k"]],[[2,6,"pl-k"],[7,38,"pl-en"]],[],[[1,6,"pl-k"]],[],[[2,6,"pl-k"],[7,17,"pl-en"]],[],[[2,8,"pl-c"],[2,4,"pl-c"]],[[1,6,"pl-k"]],[[2,6,"pl-k"],[7,23,"pl-en"],[24,29,"pl-k"]],[[24,29,"pl-k"]],[],[[2,6,"pl-k"],[7,24,"pl-en"]],[[2,6,"pl-k"],[7,25,"pl-en"],[26,31,"pl-k"],[32,36,"pl-k"],[52,58,"pl-c1"]],[],[[2,6,"pl-k"],[7,32,"pl-en"],[35,40,"pl-k"]],[],[[11,22,"pl-en"],[25,30,"pl-k"]],[[1,6,"pl-k"]],[],[[0,8,"pl-k"]],[],[],[[1,6,"pl-k"]],[[2,6,"pl-k"],[17,22,"pl-c1"]],[[1,6,"pl-k"]],[],[],[[1,6,"pl-k"]],[[0,5,"pl-k"],[6,15,"pl-en"],[18,24,"pl-k"],[25,31,"pl-en"]],[[0,7,"pl-k"]],[[2,11,"pl-en"],[12,17,"pl-k"],[18,22,"pl-k"],[35,40,"pl-k"],[41,45,"pl-k"]],[[12,17,"pl-k"],[18,22,"pl-k"],[51,58,"pl-c1"]],[[12,17,"pl-k"],[18,22,"pl-k"],[50,57,"pl-c1"]],[[12,17,"pl-k"],[18,22,"pl-k"],[47,54,"pl-c1"]],[],[[2,11,"pl-en"]],[[47,54,"pl-c1"]],[],[[2,11,"pl-en"]],[[6,11,"pl-k"],[26,30,"pl-k"]],[],[[2,12,"pl-en"],[15,23,"pl-k"]],[],[[2,6,"pl-k"],[7,15,"pl-en"],[18,23,"pl-k"],[24,32,"pl-k"]],[],[[11,22,"pl-en"],[25,30,"pl-k"]],[],[[2,6,"pl-k"],[7,19,"pl-en"]],[[55,62,"pl-c1"]],[],[[0,8,"pl-k"]],[[2,6,"pl-k"],[7,31,"pl-en"],[32,40,"pl-c1"],[47,55,"pl-k"]],[],[],[],[],[],[[0,5,"pl-k"],[6,15,"pl-en"],[16,21,"pl-k"]],[[0,7,"pl-k"]],[[2,10,"pl-k"],[11,20,"pl-en"],[21,26,"pl-k"]],[],[[2,10,"pl-k"],[11,20,"pl-en"],[21,26,"pl-k"],[46,49,"pl-k"]],[],[[2,10,"pl-k"],[11,20,"pl-en"],[21,26,"pl-k"],[46,49,"pl-k"]],[[21,26,"pl-k"]],[[21,26,"pl-k"]],[[21,26,"pl-k"]],[],[[2,10,"pl-k"],[11,20,"pl-en"],[21,26,"pl-k"],[46,49,"pl-k"]],[],[[21,26,"pl-k"]],[],[[2,12,"pl-en"],[15,23,"pl-k"]],[],[[2,6,"pl-k"],[7,15,"pl-en"],[18,23,"pl-k"],[24,32,"pl-k"]],[],[[2,6,"pl-k"],[7,24,"pl-en"]],[[2,6,"pl-k"],[7,25,"pl-en"],[26,31,"pl-k"],[32,36,"pl-k"],[52,58,"pl-c1"]],[],[[2,6,"pl-k"],[7,32,"pl-en"],[35,40,"pl-k"]],[],[[11,22,"pl-en"],[25,30,"pl-k"]],[],[[0,8,"pl-k"]],[[2,6,"pl-k"],[7,32,"pl-en"],[63,71,"pl-k"]],[[2,6,"pl-k"],[7,19,"pl-en"],[36,40,"pl-k"],[62,70,"pl-k"]],[[2,6,"pl-k"],[7,24,"pl-en"],[41,45,"pl-k"]],[],[[2,6,"pl-k"]],[[2,16,"pl-en"],[17,22,"pl-k"]],[],[[31,35,"pl-k"],[61,69,"pl-k"]],[[2,6,"pl-k"],[7,13,"pl-en"],[16,21,"pl-k"],[22,30,"pl-k"]],[],[[2,6,"pl-k"],[7,25,"pl-en"]],[],[],[[21,25,"pl-k"]],[[2,6,"pl-k"],[7,21,"pl-en"]],[],[[2,6,"pl-k"],[7,17,"pl-en"]],[],[[2,6,"pl-k"],[7,18,"pl-en"],[38,43,"pl-k"]],[[2,6,"pl-k"],[7,40,"pl-en"],[60,65,"pl-k"]],[[2,6,"pl-k"],[7,35,"pl-en"],[55,60,"pl-k"]],[[2,6,"pl-k"],[7,22,"pl-en"],[23,28,"pl-k"],[29,33,"pl-k"],[44,50,"pl-c1"],[64,69,"pl-k"]],[],[],[],[],[],[],[],[[2,6,"pl-k"],[24,25,"pl-c1"]],[],[[2,8,"pl-k"],[9,14,"pl-k"],[15,25,"pl-en"]],[],[[1,6,"pl-k"]],[],[[0,2,"pl-c"],[0,2,"pl-c"]],[[0,38,"pl-c"]],[[0,3,"pl-c"],[1,3,"pl-c"]],[],[[0,9,"pl-k"],[10,16,"pl-en"]],[],[[0,9,"pl-k"],[10,18,"pl-k"],[22,30,"pl-k"]],[[0,6,"pl-k"],[7,11,"pl-k"],[12,36,"pl-en"],[37,42,"pl-k"]],[[2,6,"pl-k"],[72,77,"pl-c1"]],[[2,6,"pl-k"]],[[29,49,"pl-c1"]],[[19,24,"pl-c1"]],[[2,10,"pl-c1"],[11,22,"pl-k"],[23,29,"pl-c1"],[37,48,"pl-k"],[49,55,"pl-c1"]],[],[],[[0,9,"pl-k"],[10,16,"pl-c1"],[20,26,"pl-k"],[27,36,"pl-k"],[37,43,"pl-c1"],[44,51,"pl-en"],[52,57,"pl-k"],[58,62,"pl-en"]],[[2,8,"pl-k"],[13,14,"pl-c1"]],[],[],[[0,6,"pl-k"],[7,11,"pl-k"],[12,22,"pl-en"],[23,28,"pl-k"]],[[2,8,"pl-k"],[14,19,"pl-c1"]],[[9,20,"pl-c1"],[25,31,"pl-c1"],[39,43,"pl-c1"]],[[24,32,"pl-k"],[33,37,"pl-k"],[43,49,"pl-k"],[50,62,"pl-c1"]],[],[],[[0,6,"pl-k"],[7,15,"pl-c1"],[16,36,"pl-en"],[37,42,"pl-k"]],[[37,42,"pl-k"],[61,69,"pl-c1"]],[[37,43,"pl-c1"],[48,52,"pl-k"]],[[21,26,"pl-c1"]],[[2,6,"pl-k"],[21,32,"pl-c1"]],[[2,6,"pl-k"],[16,21,"pl-smi"]],[[2,14,"pl-c1"],[19,30,"pl-k"],[31,38,"pl-c1"]],[[2,4,"pl-k"],[16,22,"pl-smi"]],[[4,6,"pl-k"],[8,18,"pl-c1"],[23,29,"pl-smi"]],[[6,12,"pl-k"],[13,26,"pl-c1"],[31,37,"pl-smi"],[38,42,"pl-c1"],[46,53,"pl-c1"],[55,57,"pl-c1"]],[[6,10,"pl-k"]],[[25,29,"pl-c1"]],[],[],[[2,8,"pl-k"]],[],[],[[0,6,"pl-k"],[7,15,"pl-c1"],[16,36,"pl-en"],[37,42,"pl-k"]],[[37,42,"pl-k"],[61,69,"pl-c1"]],[[37,43,"pl-c1"]],[[2,6,"pl-k"],[15,20,"pl-c1"]],[[2,8,"pl-k"],[9,29,"pl-c1"]],[],[],[[2,21,"pl-c"],[2,4,"pl-c"]],[],[[0,6,"pl-k"],[7,15,"pl-c1"],[16,45,"pl-en"],[46,51,"pl-k"]],[[46,54,"pl-c1"],[60,66,"pl-c1"],[71,76,"pl-k"]],[[2,8,"pl-k"],[9,37,"pl-c1"]],[],[],[[0,6,"pl-k"],[7,15,"pl-c1"],[16,46,"pl-en"],[47,52,"pl-k"]],[[47,55,"pl-c1"],[61,67,"pl-c1"],[72,77,"pl-k"]],[[2,8,"pl-k"],[9,37,"pl-c1"]],[],[],[[0,9,"pl-k"],[10,16,"pl-en"]],[],[[0,6,"pl-k"],[7,11,"pl-k"],[12,31,"pl-en"],[32,40,"pl-c1"],[47,50,"pl-k"],[58,61,"pl-k"]],[[32,37,"pl-k"],[38,42,"pl-k"],[52,61,"pl-c1"]],[[2,8,"pl-k"],[9,19,"pl-c1"]],[[1,6,"pl-k"]],[[20,36,"pl-k"],[37,42,"pl-k"],[43,47,"pl-k"]],[[1,5,"pl-k"]],[],[[1,6,"pl-k"]],[[31,32,"pl-c1"]],[],[],[[0,6,"pl-k"],[7,11,"pl-k"],[12,26,"pl-en"],[27,35,"pl-c1"],[42,45,"pl-k"],[53,56,"pl-k"],[66,69,"pl-k"]],[[2,8,"pl-k"],[9,28,"pl-c1"],[60,66,"pl-k"]],[],[],[[0,6,"pl-k"],[7,11,"pl-k"],[12,31,"pl-en"],[32,40,"pl-c1"],[47,50,"pl-k"],[58,61,"pl-k"]],[[32,38,"pl-c1"],[44,50,"pl-c1"]],[[1,6,"pl-k"]],[[2,6,"pl-k"],[17,28,"pl-k"],[29,37,"pl-c1"],[45,49,"pl-c1"],[59,63,"pl-c1"]],[[1,5,"pl-k"]],[[2,9,"pl-c1"]],[[10,16,"pl-smi"],[19,30,"pl-k"],[31,35,"pl-k"]],[[10,17,"pl-smi"],[20,31,"pl-k"],[32,40,"pl-c1"],[49,56,"pl-smi"]],[[1,6,"pl-k"]],[[2,8,"pl-k"],[9,28,"pl-c1"],[61,67,"pl-k"]],[],[],[[2,21,"pl-c"],[2,4,"pl-c"]],[],[[0,6,"pl-k"],[7,11,"pl-k"],[12,34,"pl-en"],[35,43,"pl-c1"]],[[2,24,"pl-c1"]],[[1,6,"pl-k"]],[],[[1,5,"pl-k"]],[],[[1,6,"pl-k"]],[[25,26,"pl-c1"]],[],[],[[0,6,"pl-k"],[7,12,"pl-k"],[13,17,"pl-k"],[19,33,"pl-en"],[34,37,"pl-k"]],[[2,8,"pl-k"]],[[2,6,"pl-k"],[33,39,"pl-k"],[40,50,"pl-s"],[40,41,"pl-pds"],[49,50,"pl-pds"]],[[2,6,"pl-k"],[42,48,"pl-k"],[49,69,"pl-s"],[49,50,"pl-pds"],[68,69,"pl-pds"]],[[2,6,"pl-k"],[35,41,"pl-k"],[42,54,"pl-s"],[42,43,"pl-pds"],[53,54,"pl-pds"]],[[2,6,"pl-k"],[35,41,"pl-k"],[42,55,"pl-s"],[42,43,"pl-pds"],[54,55,"pl-pds"]],[[2,6,"pl-k"],[27,33,"pl-k"],[34,38,"pl-s"],[34,35,"pl-pds"],[37,38,"pl-pds"]],[[2,6,"pl-k"],[32,38,"pl-k"],[39,48,"pl-s"],[39,40,"pl-pds"],[47,48,"pl-pds"]],[[2,6,"pl-k"],[33,39,"pl-k"],[40,50,"pl-s"],[40,41,"pl-pds"],[49,50,"pl-pds"]],[[2,6,"pl-k"]],[[4,10,"pl-k"],[11,42,"pl-s"],[11,12,"pl-pds"],[41,42,"pl-pds"]],[[2,6,"pl-k"],[34,40,"pl-k"],[41,53,"pl-s"],[41,42,"pl-pds"],[52,53,"pl-pds"]],[[2,6,"pl-k"],[37,43,"pl-k"],[44,59,"pl-s"],[44,45,"pl-pds"],[58,59,"pl-pds"]],[[2,6,"pl-k"],[39,45,"pl-k"],[46,63,"pl-s"],[46,47,"pl-pds"],[62,63,"pl-pds"]],[[2,6,"pl-k"],[36,42,"pl-k"],[43,57,"pl-s"],[43,44,"pl-pds"],[56,57,"pl-pds"]],[[2,6,"pl-k"],[40,46,"pl-k"],[47,65,"pl-s"],[47,48,"pl-pds"],[64,65,"pl-pds"]],[[2,6,"pl-k"],[31,37,"pl-k"],[38,47,"pl-s"],[38,39,"pl-pds"],[46,47,"pl-pds"]],[[2,6,"pl-k"],[40,46,"pl-k"],[47,65,"pl-s"],[47,48,"pl-pds"],[64,65,"pl-pds"]],[[2,6,"pl-k"],[41,47,"pl-k"],[48,67,"pl-s"],[48,49,"pl-pds"],[66,67,"pl-pds"]],[[2,6,"pl-k"],[30,36,"pl-k"],[37,44,"pl-s"],[37,38,"pl-pds"],[43,44,"pl-pds"]],[[2,6,"pl-k"],[33,39,"pl-k"],[40,51,"pl-s"],[40,41,"pl-pds"],[50,51,"pl-pds"]],[[2,6,"pl-k"],[36,42,"pl-k"],[43,57,"pl-s"],[43,44,"pl-pds"],[56,57,"pl-pds"]],[[2,6,"pl-k"],[33,39,"pl-k"],[40,51,"pl-s"],[40,41,"pl-pds"],[50,51,"pl-pds"]],[[2,6,"pl-k"],[31,37,"pl-k"],[38,46,"pl-s"],[38,39,"pl-pds"],[45,46,"pl-pds"]],[[2,6,"pl-k"],[42,48,"pl-k"],[49,69,"pl-s"],[49,50,"pl-pds"],[68,69,"pl-pds"]],[[2,6,"pl-k"],[42,48,"pl-k"],[49,69,"pl-s"],[49,50,"pl-pds"],[68,69,"pl-pds"]],[[2,6,"pl-k"],[35,41,"pl-k"],[42,55,"pl-s"],[42,43,"pl-pds"],[54,55,"pl-pds"]],[[2,6,"pl-k"],[37,43,"pl-k"],[44,58,"pl-s"],[44,45,"pl-pds"],[57,58,"pl-pds"]],[[2,6,"pl-k"],[40,46,"pl-k"],[47,65,"pl-s"],[47,48,"pl-pds"],[64,65,"pl-pds"]],[[2,6,"pl-k"],[34,40,"pl-k"],[41,52,"pl-s"],[41,42,"pl-pds"],[51,52,"pl-pds"]],[[2,6,"pl-k"],[33,39,"pl-k"],[40,51,"pl-s"],[40,41,"pl-pds"],[50,51,"pl-pds"]],[[2,6,"pl-k"],[41,47,"pl-k"],[48,68,"pl-s"],[48,49,"pl-pds"],[67,68,"pl-pds"]],[[2,6,"pl-k"],[38,44,"pl-k"],[45,61,"pl-s"],[45,46,"pl-pds"],[60,61,"pl-pds"]],[[2,6,"pl-k"]],[[4,10,"pl-k"],[11,42,"pl-s"],[11,12,"pl-pds"],[41,42,"pl-pds"]],[[2,6,"pl-k"],[39,45,"pl-k"],[46,63,"pl-s"],[46,47,"pl-pds"],[62,63,"pl-pds"]],[[2,6,"pl-k"],[33,39,"pl-k"],[40,50,"pl-s"],[40,41,"pl-pds"],[49,50,"pl-pds"]],[[2,6,"pl-k"],[29,35,"pl-k"],[36,42,"pl-s"],[36,37,"pl-pds"],[41,42,"pl-pds"]],[[2,6,"pl-k"],[39,45,"pl-k"],[46,63,"pl-s"],[46,47,"pl-pds"],[62,63,"pl-pds"]],[[2,6,"pl-k"],[43,49,"pl-k"],[50,71,"pl-s"],[50,51,"pl-pds"],[70,71,"pl-pds"]],[[2,6,"pl-k"],[40,46,"pl-k"],[47,66,"pl-s"],[47,48,"pl-pds"],[65,66,"pl-pds"]],[[2,6,"pl-k"],[35,41,"pl-k"],[42,56,"pl-s"],[42,43,"pl-pds"],[55,56,"pl-pds"]],[[2,6,"pl-k"],[45,51,"pl-k"],[52,76,"pl-s"],[52,53,"pl-pds"],[75,76,"pl-pds"]],[[2,6,"pl-k"],[44,50,"pl-k"],[51,74,"pl-s"],[51,52,"pl-pds"],[73,74,"pl-pds"]],[[2,6,"pl-k"],[42,48,"pl-k"],[49,69,"pl-s"],[49,50,"pl-pds"],[68,69,"pl-pds"]],[[2,6,"pl-k"],[34,40,"pl-k"],[41,55,"pl-s"],[41,42,"pl-pds"],[54,55,"pl-pds"]],[[2,6,"pl-k"],[43,49,"pl-k"],[50,71,"pl-s"],[50,51,"pl-pds"],[70,71,"pl-pds"]],[[2,6,"pl-k"],[45,51,"pl-k"],[52,75,"pl-s"],[52,53,"pl-pds"],[74,75,"pl-pds"]],[[2,6,"pl-k"],[31,37,"pl-k"],[38,46,"pl-s"],[38,39,"pl-pds"],[45,46,"pl-pds"]],[[2,6,"pl-k"],[41,47,"pl-k"],[48,67,"pl-s"],[48,49,"pl-pds"],[66,67,"pl-pds"]],[[2,6,"pl-k"],[33,39,"pl-k"],[40,51,"pl-s"],[40,41,"pl-pds"],[50,51,"pl-pds"]],[[2,6,"pl-k"],[40,46,"pl-k"],[47,65,"pl-s"],[47,48,"pl-pds"],[64,65,"pl-pds"]],[[2,6,"pl-k"],[45,51,"pl-k"],[52,75,"pl-s"],[52,53,"pl-pds"],[74,75,"pl-pds"]],[[2,6,"pl-k"],[40,46,"pl-k"],[47,66,"pl-s"],[47,48,"pl-pds"],[65,66,"pl-pds"]],[[2,6,"pl-k"]],[[4,10,"pl-k"],[11,44,"pl-s"],[11,12,"pl-pds"],[43,44,"pl-pds"]],[[2,6,"pl-k"]],[[4,10,"pl-k"],[11,42,"pl-s"],[11,12,"pl-pds"],[41,42,"pl-pds"]],[[2,6,"pl-k"],[39,45,"pl-k"],[46,63,"pl-s"],[46,47,"pl-pds"],[62,63,"pl-pds"]],[[2,6,"pl-k"],[35,41,"pl-k"],[42,55,"pl-s"],[42,43,"pl-pds"],[54,55,"pl-pds"]],[[2,6,"pl-k"],[43,49,"pl-k"],[50,71,"pl-s"],[50,51,"pl-pds"],[70,71,"pl-pds"]],[[2,6,"pl-k"],[39,45,"pl-k"],[46,63,"pl-s"],[46,47,"pl-pds"],[62,63,"pl-pds"]],[[2,6,"pl-k"]],[[4,10,"pl-k"],[11,39,"pl-s"],[11,12,"pl-pds"],[38,39,"pl-pds"]],[[2,6,"pl-k"],[46,52,"pl-k"],[53,78,"pl-s"],[53,54,"pl-pds"],[77,78,"pl-pds"]],[[2,6,"pl-k"],[44,50,"pl-k"],[51,73,"pl-s"],[51,52,"pl-pds"],[72,73,"pl-pds"]],[[2,6,"pl-k"],[37,43,"pl-k"],[44,59,"pl-s"],[44,45,"pl-pds"],[58,59,"pl-pds"]],[[2,6,"pl-k"],[36,42,"pl-k"],[43,57,"pl-s"],[43,44,"pl-pds"],[56,57,"pl-pds"]],[[2,6,"pl-k"]],[[4,10,"pl-k"],[11,44,"pl-s"],[11,12,"pl-pds"],[43,44,"pl-pds"]],[],[[2,9,"pl-k"]],[[2,6,"pl-k"],[44,50,"pl-k"],[51,74,"pl-s"],[51,52,"pl-pds"],[73,74,"pl-pds"]],[],[],[],[[0,6,"pl-k"],[19,40,"pl-en"],[41,46,"pl-k"]],[[2,4,"pl-k"],[10,20,"pl-c1"],[21,36,"pl-s"],[21,22,"pl-pds"],[35,36,"pl-pds"]],[[4,13,"pl-k"],[14,18,"pl-k"],[46,61,"pl-c1"],[62,71,"pl-s"],[62,63,"pl-pds"],[70,71,"pl-pds"]],[[4,10,"pl-k"],[15,31,"pl-c1"],[32,47,"pl-s"],[32,33,"pl-pds"],[46,47,"pl-pds"]],[[9,15,"pl-c1"]],[],[[2,8,"pl-k"],[9,11,"pl-s"],[9,10,"pl-pds"],[10,11,"pl-pds"]],[],[],[[0,9,"pl-k"],[10,15,"pl-k"],[16,19,"pl-en"],[21,26,"pl-k"],[27,33,"pl-en"]],[[0,6,"pl-k"]],[[0,24,"pl-en"],[25,30,"pl-k"]],[[2,34,"pl-c1"]],[[20,26,"pl-c1"],[32,38,"pl-c1"],[47,63,"pl-c1"]],[[2,8,"pl-k"],[10,14,"pl-c1"]],[],[],[[0,9,"pl-k"],[10,15,"pl-k"],[16,19,"pl-en"],[21,26,"pl-k"],[27,33,"pl-en"]],[[0,6,"pl-k"]],[[0,25,"pl-en"],[26,31,"pl-k"]],[[2,34,"pl-c1"]],[[20,26,"pl-c1"],[32,38,"pl-c1"],[47,64,"pl-c1"]],[[2,8,"pl-k"],[10,14,"pl-c1"]],[],[],[[0,9,"pl-k"],[10,15,"pl-k"],[16,19,"pl-en"],[21,26,"pl-k"],[27,33,"pl-en"]],[[0,6,"pl-k"]],[[0,25,"pl-en"],[26,31,"pl-k"]],[[2,34,"pl-c1"]],[[20,26,"pl-c1"],[32,38,"pl-c1"],[47,64,"pl-c1"]],[[2,8,"pl-k"],[10,14,"pl-c1"]],[],[],[[0,6,"pl-k"],[19,28,"pl-en"],[29,34,"pl-k"]],[[2,8,"pl-k"]],[[2,6,"pl-k"],[23,29,"pl-k"],[30,50,"pl-s"],[30,31,"pl-pds"],[49,50,"pl-pds"]],[[2,6,"pl-k"],[26,32,"pl-k"],[33,65,"pl-s"],[33,34,"pl-pds"],[64,65,"pl-pds"]],[[2,6,"pl-k"],[29,35,"pl-k"],[36,63,"pl-s"],[36,37,"pl-pds"],[62,63,"pl-pds"]],[[2,6,"pl-k"],[20,26,"pl-k"],[27,54,"pl-s"],[27,28,"pl-pds"],[53,54,"pl-pds"]],[[2,6,"pl-k"],[21,27,"pl-k"],[28,56,"pl-s"],[28,29,"pl-pds"],[55,56,"pl-pds"]],[[2,6,"pl-k"],[35,41,"pl-k"],[42,75,"pl-s"],[42,43,"pl-pds"],[74,75,"pl-pds"]],[[2,6,"pl-k"],[24,30,"pl-k"],[31,61,"pl-s"],[31,32,"pl-pds"],[60,61,"pl-pds"]],[[2,6,"pl-k"],[29,35,"pl-k"],[36,59,"pl-s"],[36,37,"pl-pds"],[58,59,"pl-pds"]],[[2,6,"pl-k"],[31,37,"pl-k"],[38,70,"pl-s"],[38,39,"pl-pds"],[69,70,"pl-pds"]],[[2,6,"pl-k"],[37,43,"pl-k"],[44,76,"pl-s"],[44,45,"pl-pds"],[75,76,"pl-pds"]],[[2,6,"pl-k"]],[[4,10,"pl-k"],[11,52,"pl-s"],[11,12,"pl-pds"],[51,52,"pl-pds"]],[[2,6,"pl-k"]],[[4,10,"pl-k"],[11,59,"pl-s"],[11,12,"pl-pds"],[58,59,"pl-pds"]],[[2,6,"pl-k"],[27,33,"pl-k"],[34,54,"pl-s"],[34,35,"pl-pds"],[53,54,"pl-pds"]],[[2,6,"pl-k"],[33,39,"pl-k"],[40,62,"pl-s"],[40,41,"pl-pds"],[61,62,"pl-pds"]],[[2,6,"pl-k"],[31,37,"pl-k"],[38,63,"pl-s"],[38,39,"pl-pds"],[62,63,"pl-pds"]],[[2,6,"pl-k"],[23,29,"pl-k"],[30,39,"pl-s"],[30,31,"pl-pds"],[38,39,"pl-pds"]],[[2,9,"pl-k"],[11,16,"pl-k"]],[],[],[[2,8,"pl-k"],[9,18,"pl-s"],[9,10,"pl-pds"],[17,18,"pl-pds"]],[],[],[[0,6,"pl-k"],[21,29,"pl-k"],[50,55,"pl-k"]],[[8,17,"pl-c1"]],[[8,12,"pl-s"],[8,9,"pl-pds"],[11,12,"pl-pds"],[16,27,"pl-k"],[71,74,"pl-s"],[71,72,"pl-pds"],[73,74,"pl-pds"]],[[2,8,"pl-k"]],[],[],[[0,6,"pl-k"],[7,15,"pl-c1"],[16,52,"pl-en"],[53,58,"pl-k"]],[[53,61,"pl-c1"]],[[53,59,"pl-c1"],[64,69,"pl-k"]],[[2,8,"pl-k"],[9,37,"pl-c1"]],[],[],[[0,9,"pl-k"],[10,15,"pl-k"],[16,19,"pl-en"],[21,26,"pl-k"],[27,33,"pl-en"]],[[0,6,"pl-k"],[7,11,"pl-k"],[12,46,"pl-en"]],[[4,9,"pl-k"]],[[2,34,"pl-c1"],[49,55,"pl-c1"],[61,67,"pl-c1"]],[[4,26,"pl-c1"]],[],[],[],[[0,9,"pl-k"],[10,15,"pl-k"],[16,19,"pl-en"],[21,26,"pl-k"],[27,33,"pl-en"]],[[0,6,"pl-k"],[7,11,"pl-k"],[12,40,"pl-en"]],[[4,9,"pl-k"]],[[2,34,"pl-c1"]],[[20,26,"pl-c1"],[32,38,"pl-c1"],[47,63,"pl-c1"]],[],[],[[0,9,"pl-k"],[10,15,"pl-k"],[16,19,"pl-en"],[21,26,"pl-k"],[27,33,"pl-en"]],[[0,6,"pl-k"],[7,11,"pl-k"],[12,41,"pl-en"]],[[4,9,"pl-k"]],[[2,34,"pl-c1"]],[[20,26,"pl-c1"],[32,38,"pl-c1"],[47,64,"pl-c1"]],[],[],[[0,9,"pl-k"],[10,15,"pl-k"],[16,19,"pl-en"],[21,26,"pl-k"],[27,33,"pl-en"]],[[0,6,"pl-k"],[7,11,"pl-k"],[12,39,"pl-en"]],[[4,9,"pl-k"]],[[2,6,"pl-k"]],[[70,75,"pl-c1"]],[[2,17,"pl-c1"]],[],[],[[0,9,"pl-k"],[10,15,"pl-k"],[16,19,"pl-en"],[21,26,"pl-k"],[27,33,"pl-en"]],[[0,6,"pl-k"],[7,11,"pl-k"],[12,42,"pl-en"]],[[4,9,"pl-k"]],[[8,30,"pl-c1"]],[],[],[[0,9,"pl-k"],[10,15,"pl-k"],[16,19,"pl-en"],[21,26,"pl-k"],[27,33,"pl-en"]],[[0,6,"pl-k"],[7,11,"pl-k"]],[[0,24,"pl-en"],[25,30,"pl-k"]],[[8,24,"pl-c1"]],[],[],[[0,9,"pl-k"],[10,15,"pl-k"],[16,19,"pl-en"],[21,26,"pl-k"],[27,33,"pl-en"]],[[0,6,"pl-k"],[7,11,"pl-k"]],[[0,25,"pl-en"],[26,31,"pl-k"]],[[8,25,"pl-c1"]],[],[],[[0,9,"pl-k"],[10,15,"pl-k"],[16,19,"pl-en"],[21,26,"pl-k"],[27,33,"pl-en"]],[[0,6,"pl-k"],[7,11,"pl-k"]],[[0,23,"pl-en"],[24,29,"pl-k"]],[[8,23,"pl-c1"]],[],[],[[0,2,"pl-c"],[0,2,"pl-c"]],[[0,80,"pl-c"]],[[0,12,"pl-c"]],[[0,3,"pl-c"],[1,3,"pl-c"]],[],[[12,21,"pl-en"],[22,27,"pl-k"]],[],[[0,4,"pl-k"],[5,14,"pl-en"],[15,20,"pl-k"]],[],[[12,31,"pl-en"],[32,37,"pl-k"],[57,62,"pl-k"]],[],[[36,53,"pl-en"],[54,59,"pl-k"]],[],[],[[0,32,"pl-en"],[33,38,"pl-k"]],[[33,38,"pl-k"]],[[33,37,"pl-k"],[49,54,"pl-c1"]],[],[[0,9,"pl-k"],[10,16,"pl-en"]],[],[[1,3,"pl-k"]],[[0,6,"pl-k"],[20,39,"pl-en"],[40,45,"pl-k"],[46,50,"pl-k"]],[],[[2,6,"pl-k"],[13,24,"pl-k"],[25,28,"pl-k"],[30,36,"pl-c1"]],[[2,6,"pl-k"],[16,35,"pl-c1"],[45,46,"pl-c1"],[56,63,"pl-c1"],[65,66,"pl-c1"]],[[2,4,"pl-k"],[13,14,"pl-c1"]],[[7,13,"pl-c1"]],[[13,32,"pl-c1"]],[[17,18,"pl-c1"]],[[8,18,"pl-k"],[27,43,"pl-k"],[56,60,"pl-c1"]],[[4,6,"pl-k"],[16,27,"pl-k"],[28,31,"pl-k"],[36,40,"pl-c1"],[50,55,"pl-c1"]],[],[[2,8,"pl-k"]],[],[[1,6,"pl-k"]],[],[[0,6,"pl-k"],[7,15,"pl-en"]],[[2,10,"pl-en"],[11,16,"pl-k"]],[[2,6,"pl-k"],[7,14,"pl-en"],[17,22,"pl-k"]],[[2,6,"pl-k"],[7,13,"pl-en"],[16,21,"pl-k"]],[],[[0,8,"pl-k"]],[[1,3,"pl-k"]],[[2,8,"pl-k"],[9,14,"pl-en"]],[[1,5,"pl-k"]],[[2,8,"pl-k"],[9,13,"pl-en"]],[[1,6,"pl-k"]],[[2,5,"pl-k"],[14,15,"pl-c1"]],[],[],[[12,30,"pl-en"],[31,36,"pl-k"]],[],[[12,22,"pl-en"],[23,28,"pl-k"],[45,49,"pl-k"]],[],[[12,21,"pl-en"],[22,27,"pl-k"]],[],[[0,4,"pl-k"],[5,11,"pl-en"]],[[4,9,"pl-k"],[10,14,"pl-k"],[27,33,"pl-c1"],[40,44,"pl-k"]],[[18,22,"pl-k"],[23,28,"pl-k"],[29,33,"pl-k"],[42,48,"pl-c1"],[50,55,"pl-k"],[56,60,"pl-k"],[69,75,"pl-c1"]],[],[],[[0,4,"pl-k"],[5,11,"pl-en"]],[[4,9,"pl-k"],[28,32,"pl-k"]],[[18,22,"pl-k"],[23,28,"pl-k"],[29,33,"pl-k"],[42,48,"pl-c1"],[50,55,"pl-k"],[56,60,"pl-k"],[69,75,"pl-c1"]],[],[],[[0,4,"pl-k"],[5,10,"pl-en"],[11,16,"pl-k"],[17,21,"pl-k"],[26,31,"pl-k"],[32,36,"pl-k"],[41,45,"pl-k"]],[[25,29,"pl-k"],[30,35,"pl-k"],[36,40,"pl-k"],[44,49,"pl-k"],[50,54,"pl-k"]],[],[[0,4,"pl-k"],[5,10,"pl-en"],[11,16,"pl-k"],[17,21,"pl-k"],[26,31,"pl-k"],[32,36,"pl-k"],[41,45,"pl-k"],[49,55,"pl-c1"]],[[25,29,"pl-k"],[30,35,"pl-k"],[36,40,"pl-k"],[44,49,"pl-k"],[50,54,"pl-k"]],[],[[0,4,"pl-k"],[5,26,"pl-en"]],[[4,12,"pl-c1"],[19,25,"pl-c1"],[44,50,"pl-c1"]],[[4,10,"pl-c1"],[30,36,"pl-c1"]],[[4,10,"pl-c1"]],[],[[18,22,"pl-k"]],[],[[0,8,"pl-c1"],[9,29,"pl-en"],[30,35,"pl-k"],[55,60,"pl-k"]],[[30,33,"pl-k"],[40,43,"pl-k"],[60,64,"pl-k"]],[[30,34,"pl-k"]],[[30,36,"pl-c1"]],[[30,36,"pl-c1"]],[[30,36,"pl-c1"],[55,61,"pl-c1"]],[[30,36,"pl-c1"]],[[30,36,"pl-c1"]],[[30,35,"pl-k"]],[],[[0,5,"pl-k"],[6,10,"pl-k"],[12,28,"pl-en"],[29,34,"pl-k"],[53,58,"pl-k"]],[[29,34,"pl-k"],[35,39,"pl-k"],[46,52,"pl-c1"]],[],[[12,31,"pl-en"],[32,37,"pl-k"]],[],[[0,4,"pl-k"],[5,21,"pl-en"],[22,27,"pl-k"],[28,32,"pl-k"],[45,51,"pl-c1"]],[],[[0,4,"pl-k"],[5,21,"pl-en"],[22,27,"pl-k"]],[],[[0,4,"pl-k"],[5,29,"pl-en"],[30,35,"pl-k"]],[],[],[[0,4,"pl-k"],[5,23,"pl-en"],[24,29,"pl-k"]],[],[[0,3,"pl-k"],[4,16,"pl-en"],[17,25,"pl-c1"]],[],[[0,7,"pl-c1"],[8,19,"pl-en"],[20,28,"pl-c1"],[35,40,"pl-k"],[41,45,"pl-k"],[52,58,"pl-c1"],[65,68,"pl-k"]],[],[[0,7,"pl-c1"],[8,19,"pl-en"],[20,28,"pl-c1"],[35,39,"pl-k"],[46,52,"pl-c1"],[59,62,"pl-k"]],[],[[0,4,"pl-k"],[5,10,"pl-k"],[11,23,"pl-en"],[33,34,"pl-c1"]],[],[[13,26,"pl-en"],[27,32,"pl-k"],[47,52,"pl-k"]],[],[[0,5,"pl-k"],[6,18,"pl-en"],[19,24,"pl-k"]],[[0,7,"pl-k"]],[[2,14,"pl-en"],[19,26,"pl-k"]],[[2,15,"pl-en"],[18,26,"pl-k"],[29,36,"pl-k"]],[],[[2,6,"pl-k"],[7,18,"pl-en"],[21,26,"pl-k"],[27,35,"pl-k"]],[[2,6,"pl-k"],[7,20,"pl-en"],[23,28,"pl-k"],[29,37,"pl-k"]],[[2,6,"pl-k"],[7,20,"pl-en"],[23,28,"pl-k"],[29,37,"pl-k"]],[[2,9,"pl-c1"],[10,14,"pl-en"],[15,19,"pl-k"],[26,32,"pl-c1"],[39,47,"pl-k"]],[[2,9,"pl-c1"],[10,15,"pl-en"],[16,21,"pl-k"],[22,26,"pl-k"],[33,39,"pl-c1"],[46,54,"pl-k"]],[[2,6,"pl-k"],[7,29,"pl-en"],[47,50,"pl-k"],[58,63,"pl-k"],[64,72,"pl-k"]],[[2,6,"pl-k"],[7,28,"pl-en"],[46,49,"pl-k"],[57,62,"pl-k"],[63,71,"pl-k"]],[[2,10,"pl-c1"],[11,17,"pl-en"],[20,25,"pl-k"],[26,34,"pl-k"]],[[2,8,"pl-c1"],[9,17,"pl-en"],[20,25,"pl-k"],[26,34,"pl-k"]],[],[[2,7,"pl-k"],[21,31,"pl-en"],[34,39,"pl-k"]],[],[[0,8,"pl-k"]],[],[[2,8,"pl-c1"],[20,21,"pl-c1"]],[],[],[[0,5,"pl-k"],[6,16,"pl-en"]],[[0,7,"pl-k"]],[[2,9,"pl-k"],[10,21,"pl-en"],[26,33,"pl-k"]],[],[[2,9,"pl-k"],[24,28,"pl-k"],[29,34,"pl-k"],[35,39,"pl-k"],[47,53,"pl-c1"]],[[2,9,"pl-k"],[10,14,"pl-k"],[15,23,"pl-en"],[24,29,"pl-k"],[30,34,"pl-k"],[42,48,"pl-c1"],[62,66,"pl-k"]],[],[],[],[[0,5,"pl-k"],[6,18,"pl-en"]],[[0,7,"pl-k"]],[[2,9,"pl-k"],[10,23,"pl-en"],[28,35,"pl-k"]],[],[[2,9,"pl-k"],[10,14,"pl-k"],[15,23,"pl-en"],[26,31,"pl-k"]],[],[[2,9,"pl-k"],[24,28,"pl-k"],[29,34,"pl-k"],[35,39,"pl-k"],[47,53,"pl-c1"]],[[2,9,"pl-k"],[10,14,"pl-k"],[15,25,"pl-en"],[26,31,"pl-k"],[32,36,"pl-k"],[44,50,"pl-c1"]],[],[],[],[[0,5,"pl-k"],[6,18,"pl-en"],[19,24,"pl-k"]],[[0,7,"pl-k"]],[[2,15,"pl-en"],[18,26,"pl-k"],[29,36,"pl-k"]],[],[[2,6,"pl-k"],[7,15,"pl-en"],[16,21,"pl-k"],[22,26,"pl-k"],[34,40,"pl-c1"],[54,58,"pl-k"],[59,67,"pl-c"],[59,61,"pl-c"],[65,67,"pl-c"]],[[35,43,"pl-k"]],[],[],[[1,6,"pl-k"]],[[0,5,"pl-k"],[6,21,"pl-en"],[22,27,"pl-k"]],[[0,7,"pl-k"]],[[2,17,"pl-en"]],[[2,18,"pl-en"],[21,29,"pl-k"]],[],[[2,6,"pl-k"],[7,15,"pl-en"],[16,21,"pl-k"],[22,26,"pl-k"],[34,40,"pl-c1"],[54,58,"pl-k"]],[[35,43,"pl-k"]],[],[[0,8,"pl-k"]],[[2,6,"pl-k"],[19,24,"pl-c1"]],[],[],[],[[0,5,"pl-k"],[6,23,"pl-en"],[24,29,"pl-k"]],[[0,7,"pl-k"]],[[2,19,"pl-en"]],[[2,20,"pl-en"],[23,31,"pl-k"]],[],[[2,6,"pl-k"],[7,15,"pl-en"],[18,23,"pl-k"],[24,32,"pl-k"]],[],[[2,6,"pl-k"],[7,17,"pl-en"],[18,23,"pl-k"],[24,28,"pl-k"],[36,42,"pl-c1"]],[[37,45,"pl-k"]],[],[[0,8,"pl-k"]],[[2,6,"pl-k"],[19,24,"pl-c1"]],[],[],[[1,6,"pl-k"]],[],[[1,6,"pl-k"]],[[0,5,"pl-k"],[6,23,"pl-en"],[24,29,"pl-k"]],[[0,7,"pl-k"]],[[2,19,"pl-en"]],[[2,20,"pl-en"]],[],[[2,6,"pl-k"],[7,15,"pl-en"],[16,21,"pl-k"],[22,26,"pl-k"],[34,40,"pl-c1"],[54,58,"pl-k"]],[[35,43,"pl-k"]],[],[[0,8,"pl-k"]],[[31,38,"pl-c1"]],[],[],[[0,5,"pl-k"],[6,25,"pl-en"],[26,31,"pl-k"]],[[0,7,"pl-k"]],[[2,21,"pl-en"]],[[2,22,"pl-en"]],[],[[2,6,"pl-k"],[7,15,"pl-en"],[18,23,"pl-k"],[24,32,"pl-k"]],[],[[2,6,"pl-k"],[7,17,"pl-en"],[18,23,"pl-k"],[24,28,"pl-k"],[36,42,"pl-c1"]],[[37,45,"pl-k"]],[],[[0,8,"pl-k"]],[],[[34,41,"pl-c1"]],[],[[1,6,"pl-k"]],[],[[1,6,"pl-k"]],[[0,5,"pl-k"],[6,21,"pl-en"],[24,30,"pl-k"],[31,41,"pl-en"]],[[0,7,"pl-k"]],[[2,17,"pl-en"]],[[2,18,"pl-en"]],[],[[2,6,"pl-k"],[7,15,"pl-en"],[16,21,"pl-k"],[22,26,"pl-k"],[34,40,"pl-c1"],[54,58,"pl-k"]],[[35,43,"pl-k"]],[],[[0,8,"pl-k"]],[[20,27,"pl-c1"]],[],[],[[0,5,"pl-k"],[6,23,"pl-en"],[26,32,"pl-k"],[33,45,"pl-en"]],[[0,7,"pl-k"]],[[2,19,"pl-en"]],[[2,20,"pl-en"]],[],[[2,6,"pl-k"],[7,15,"pl-en"],[18,23,"pl-k"],[24,32,"pl-k"]],[],[[2,6,"pl-k"],[7,17,"pl-en"],[18,23,"pl-k"],[24,28,"pl-k"],[36,42,"pl-c1"]],[[37,45,"pl-k"]],[],[[0,8,"pl-k"]],[[20,27,"pl-c1"]],[],[[1,6,"pl-k"]],[],[[0,76,"pl-c"],[0,2,"pl-c"]],[[0,67,"pl-c"],[0,2,"pl-c"]],[[0,5,"pl-k"],[6,24,"pl-en"]],[[0,7,"pl-k"]],[[2,20,"pl-en"],[35,39,"pl-k"]],[[21,27,"pl-c1"]],[[2,7,"pl-k"],[8,12,"pl-k"],[14,17,"pl-en"],[20,25,"pl-k"]],[[2,8,"pl-c1"],[9,13,"pl-en"],[16,21,"pl-k"]],[[2,6,"pl-k"],[7,20,"pl-en"],[23,28,"pl-k"]],[[2,6,"pl-k"],[7,14,"pl-en"]],[],[[0,8,"pl-k"]],[[2,6,"pl-k"],[7,13,"pl-en"],[14,18,"pl-k"]],[],[],[[2,6,"pl-k"]],[[2,7,"pl-k"],[8,14,"pl-c1"]],[[2,8,"pl-c1"],[35,36,"pl-c1"]],[],[],[],[[0,5,"pl-k"],[6,10,"pl-en"]],[[0,7,"pl-k"]],[[2,6,"pl-en"],[7,12,"pl-k"],[13,17,"pl-k"]],[[2,7,"pl-en"]],[],[[2,6,"pl-k"],[7,11,"pl-en"],[12,17,"pl-k"],[18,22,"pl-k"]],[[2,6,"pl-k"],[7,12,"pl-en"]],[],[[2,6,"pl-k"],[7,14,"pl-en"],[17,22,"pl-k"]],[[2,8,"pl-c1"],[9,13,"pl-en"],[16,21,"pl-k"]],[[2,7,"pl-k"],[8,12,"pl-k"],[14,18,"pl-en"],[21,26,"pl-k"]],[],[[0,8,"pl-k"]],[[1,3,"pl-k"]],[[18,22,"pl-c1"]],[[21,25,"pl-c1"]],[[1,5,"pl-k"]],[[2,5,"pl-k"],[13,14,"pl-c1"]],[[1,6,"pl-k"]],[[2,8,"pl-c1"],[17,18,"pl-c1"]],[[2,6,"pl-k"],[16,23,"pl-c1"]],[[2,6,"pl-k"],[28,33,"pl-c1"]],[],[],[[0,57,"pl-c"],[0,2,"pl-c"]],[[0,9,"pl-k"],[10,16,"pl-en"]],[],[[0,6,"pl-k"],[7,11,"pl-k"],[12,25,"pl-en"],[26,30,"pl-k"]],[[2,8,"pl-k"],[9,21,"pl-c1"],[33,36,"pl-s"],[33,34,"pl-pds"],[35,36,"pl-pds"],[45,48,"pl-s"],[45,46,"pl-pds"],[47,48,"pl-pds"],[57,60,"pl-s"],[57,58,"pl-pds"],[59,60,"pl-pds"],[69,72,"pl-s"],[69,70,"pl-pds"],[71,72,"pl-pds"]],[[14,17,"pl-s"],[14,15,"pl-pds"],[16,17,"pl-pds"],[26,30,"pl-s"],[26,27,"pl-pds"],[27,29,"pl-cce"],[29,30,"pl-pds"],[39,42,"pl-s"],[39,40,"pl-pds"],[41,42,"pl-pds"],[51,54,"pl-s"],[51,52,"pl-pds"],[53,54,"pl-pds"],[63,66,"pl-s"],[63,64,"pl-pds"],[65,66,"pl-pds"]],[[14,17,"pl-s"],[14,15,"pl-pds"],[16,17,"pl-pds"],[26,29,"pl-s"],[26,27,"pl-pds"],[28,29,"pl-pds"],[38,41,"pl-s"],[38,39,"pl-pds"],[40,41,"pl-pds"],[50,53,"pl-s"],[50,51,"pl-pds"],[52,53,"pl-pds"],[62,65,"pl-s"],[62,63,"pl-pds"],[64,65,"pl-pds"],[74,77,"pl-s"],[74,75,"pl-pds"],[76,77,"pl-pds"]],[],[],[[0,6,"pl-k"],[7,11,"pl-k"],[12,20,"pl-en"],[21,26,"pl-k"]],[[2,4,"pl-k"],[8,13,"pl-c1"],[19,25,"pl-k"],[26,31,"pl-c1"]],[[2,5,"pl-k"],[7,11,"pl-k"]],[[4,6,"pl-k"],[9,22,"pl-c1"],[29,35,"pl-k"],[36,41,"pl-c1"]],[],[[2,8,"pl-k"],[9,13,"pl-c1"]],[],[],[[0,6,"pl-k"],[7,11,"pl-k"],[12,25,"pl-en"],[26,31,"pl-k"],[50,56,"pl-k"],[57,65,"pl-c1"]],[],[[0,6,"pl-k"],[7,11,"pl-k"],[12,20,"pl-en"],[21,25,"pl-k"],[31,37,"pl-k"],[43,45,"pl-c1"],[54,57,"pl-c1"]],[],[[0,6,"pl-k"],[7,11,"pl-k"],[12,23,"pl-en"],[24,28,"pl-k"],[34,40,"pl-k"],[41,44,"pl-c1"],[48,59,"pl-k"],[60,68,"pl-k"],[69,73,"pl-k"]],[],[[0,6,"pl-k"],[7,11,"pl-k"],[12,26,"pl-en"],[27,31,"pl-k"],[37,43,"pl-k"],[44,52,"pl-c1"],[59,70,"pl-c1"]],[],[[0,6,"pl-k"],[7,11,"pl-k"],[12,28,"pl-en"],[29,34,"pl-k"]],[[2,4,"pl-k"],[8,13,"pl-c1"],[19,25,"pl-k"],[26,30,"pl-c1"]],[],[[2,4,"pl-k"],[8,12,"pl-c1"],[18,19,"pl-c1"]],[[4,10,"pl-k"],[11,25,"pl-c1"],[28,29,"pl-c1"]],[[4,8,"pl-k"],[9,11,"pl-k"],[15,19,"pl-c1"],[25,26,"pl-c1"]],[[4,10,"pl-k"],[11,25,"pl-c1"],[28,29,"pl-c1"],[35,49,"pl-c1"],[52,53,"pl-c1"]],[[4,8,"pl-k"]],[[4,10,"pl-c1"],[15,16,"pl-c1"]],[],[[4,6,"pl-k"],[9,23,"pl-c1"],[33,39,"pl-k"],[40,45,"pl-c1"]],[],[],[[4,9,"pl-k"],[17,21,"pl-c1"],[26,27,"pl-c1"]],[[6,10,"pl-k"]],[[6,8,"pl-k"],[15,18,"pl-s"],[15,16,"pl-pds"],[17,18,"pl-pds"],[27,31,"pl-s"],[27,28,"pl-pds"],[28,30,"pl-cce"],[30,31,"pl-pds"],[35,49,"pl-c1"]],[[8,12,"pl-k"]],[[8,14,"pl-k"],[15,20,"pl-c1"]],[],[],[],[[4,10,"pl-k"],[11,25,"pl-c1"]],[],[],[],[[0,6,"pl-k"],[7,11,"pl-k"],[12,26,"pl-en"],[27,32,"pl-k"],[51,57,"pl-k"],[58,74,"pl-c1"]],[],[[2,21,"pl-c"],[2,4,"pl-c"]],[],[[2,21,"pl-c"],[2,4,"pl-c"]],[],[[0,79,"pl-c"],[0,2,"pl-c"]],[],[[0,2,"pl-c"],[0,2,"pl-c"]],[[0,75,"pl-c"]],[[0,3,"pl-c"],[1,3,"pl-c"]],[],[[0,9,"pl-k"],[10,16,"pl-en"]],[],[[0,6,"pl-k"],[7,11,"pl-k"],[12,18,"pl-en"],[19,23,"pl-k"],[27,30,"pl-k"]],[[2,4,"pl-k"],[6,10,"pl-c1"],[19,26,"pl-c1"]],[[12,15,"pl-s"],[12,13,"pl-pds"],[14,15,"pl-pds"]],[[4,10,"pl-k"],[11,15,"pl-c1"]],[[4,8,"pl-k"],[9,11,"pl-k"],[13,16,"pl-s"],[13,14,"pl-pds"],[15,16,"pl-pds"],[30,33,"pl-s"],[30,31,"pl-pds"],[32,33,"pl-pds"]],[[12,15,"pl-s"],[12,13,"pl-pds"],[14,15,"pl-pds"],[18,20,"pl-c1"]],[[4,10,"pl-k"],[11,15,"pl-c1"]],[[4,8,"pl-k"],[9,11,"pl-k"],[13,16,"pl-s"],[13,14,"pl-pds"],[15,16,"pl-pds"],[30,33,"pl-s"],[30,31,"pl-pds"],[32,33,"pl-pds"]],[[12,15,"pl-s"],[12,13,"pl-pds"],[14,15,"pl-pds"],[18,20,"pl-c1"]],[[4,10,"pl-k"],[11,15,"pl-c1"]],[],[[2,8,"pl-k"],[9,14,"pl-c1"]],[],[],[[0,6,"pl-k"],[7,11,"pl-k"],[12,25,"pl-en"],[26,31,"pl-k"],[48,54,"pl-c1"],[58,64,"pl-c1"]],[[26,29,"pl-k"]],[[2,4,"pl-k"],[13,17,"pl-c1"],[23,29,"pl-k"],[30,35,"pl-c1"]],[],[[8,9,"pl-c1"]],[[2,5,"pl-k"]],[[4,6,"pl-k"],[17,23,"pl-k"],[24,29,"pl-c1"]],[[4,8,"pl-k"],[13,14,"pl-c1"]],[[4,6,"pl-k"],[8,14,"pl-c1"]],[[18,20,"pl-c1"]],[[6,10,"pl-k"]],[[6,12,"pl-k"],[13,18,"pl-c1"]],[],[],[[2,8,"pl-k"],[9,13,"pl-c1"]],[],[],[[0,6,"pl-k"],[19,32,"pl-en"],[33,39,"pl-c1"]],[[2,8,"pl-k"],[9,14,"pl-k"],[15,19,"pl-k"],[30,48,"pl-s"],[30,31,"pl-pds"],[47,48,"pl-pds"]],[],[[2,4,"pl-k"]],[[22,24,"pl-c1"]],[[10,11,"pl-c1"]],[[4,9,"pl-k"],[15,16,"pl-c1"]],[[2,8,"pl-k"]],[],[],[[0,6,"pl-k"],[7,13,"pl-c1"],[14,21,"pl-en"],[22,25,"pl-k"],[32,36,"pl-k"]],[[2,4,"pl-k"],[13,19,"pl-c1"]],[[9,10,"pl-c1"],[14,25,"pl-k"],[26,30,"pl-k"],[39,43,"pl-c1"]],[[4,10,"pl-k"],[11,12,"pl-c1"]],[[4,8,"pl-k"],[9,11,"pl-k"],[20,26,"pl-c1"]],[[9,10,"pl-c1"],[14,25,"pl-k"],[26,30,"pl-k"],[32,36,"pl-c1"],[49,50,"pl-c1"],[54,58,"pl-c1"]],[[9,10,"pl-c1"],[14,25,"pl-k"],[26,30,"pl-k"],[32,36,"pl-c1"],[47,51,"pl-c1"]],[[4,10,"pl-k"],[11,12,"pl-c1"]],[[4,8,"pl-k"],[9,11,"pl-k"],[20,26,"pl-c1"]],[[9,10,"pl-c1"],[14,25,"pl-k"],[26,30,"pl-k"],[32,36,"pl-c1"],[49,51,"pl-c1"],[55,58,"pl-c1"]],[[9,10,"pl-c1"],[14,25,"pl-k"],[26,30,"pl-k"],[32,36,"pl-c1"],[49,50,"pl-c1"],[54,58,"pl-c1"]],[[9,10,"pl-c1"],[14,25,"pl-k"],[26,30,"pl-k"],[32,36,"pl-c1"],[47,51,"pl-c1"]],[[4,10,"pl-k"],[11,12,"pl-c1"]],[[4,8,"pl-k"],[9,11,"pl-k"],[20,26,"pl-c1"],[30,58,"pl-c"],[30,32,"pl-c"]],[[4,10,"pl-k"],[11,12,"pl-c1"]],[[4,8,"pl-k"],[9,11,"pl-k"],[20,27,"pl-c1"]],[[9,10,"pl-c1"],[14,25,"pl-k"],[26,30,"pl-k"],[32,36,"pl-c1"],[49,51,"pl-c1"],[55,58,"pl-c1"]],[[9,10,"pl-c1"],[14,25,"pl-k"],[26,30,"pl-k"],[32,36,"pl-c1"],[49,50,"pl-c1"],[54,58,"pl-c1"]],[[9,10,"pl-c1"],[14,25,"pl-k"],[26,30,"pl-k"],[32,36,"pl-c1"],[47,51,"pl-c1"]],[[4,10,"pl-k"],[11,12,"pl-c1"]],[[4,8,"pl-k"],[9,11,"pl-k"],[20,28,"pl-c1"]],[[9,10,"pl-c1"],[14,25,"pl-k"],[26,30,"pl-k"],[32,36,"pl-c1"],[49,51,"pl-c1"],[55,58,"pl-c1"]],[[9,10,"pl-c1"],[14,25,"pl-k"],[26,30,"pl-k"],[32,36,"pl-c1"],[49,51,"pl-c1"],[55,59,"pl-c1"]],[[9,10,"pl-c1"],[14,25,"pl-k"],[26,30,"pl-k"],[32,36,"pl-c1"],[49,50,"pl-c1"],[54,58,"pl-c1"]],[[9,10,"pl-c1"],[14,25,"pl-k"],[26,30,"pl-k"],[32,36,"pl-c1"],[47,51,"pl-c1"]],[[4,10,"pl-k"],[11,12,"pl-c1"]],[],[],[[2,15,"pl-c"],[2,4,"pl-c"]],[[2,8,"pl-k"],[9,10,"pl-c1"]],[],[],[[0,65,"pl-c"],[0,2,"pl-c"]],[[0,72,"pl-c"],[0,2,"pl-c"]],[[0,6,"pl-k"],[19,32,"pl-en"],[33,38,"pl-k"]],[[2,8,"pl-k"],[9,14,"pl-k"],[15,19,"pl-k"]],[[6,72,"pl-s"],[6,7,"pl-pds"],[71,72,"pl-pds"]],[],[],[[6,13,"pl-c1"],[17,21,"pl-c1"]],[],[[2,6,"pl-k"],[13,14,"pl-c1"]],[[2,6,"pl-k"],[15,16,"pl-c1"]],[],[[2,5,"pl-k"],[7,11,"pl-k"]],[[18,19,"pl-c1"],[23,34,"pl-k"],[35,42,"pl-c1"]],[[12,13,"pl-c1"]],[[4,9,"pl-k"],[19,20,"pl-c1"]],[[10,19,"pl-c1"],[43,47,"pl-c1"]],[[14,15,"pl-c1"]],[],[],[],[[2,4,"pl-k"],[14,15,"pl-c1"],[23,32,"pl-c1"],[49,50,"pl-c1"],[63,64,"pl-c1"],[69,73,"pl-c1"]],[],[[2,7,"pl-k"],[13,17,"pl-c1"],[22,23,"pl-c1"]],[[8,17,"pl-c1"],[18,21,"pl-s"],[18,19,"pl-pds"],[20,21,"pl-pds"]],[],[],[[2,8,"pl-k"]],[],[],[[0,6,"pl-k"],[7,11,"pl-k"],[12,25,"pl-en"],[26,31,"pl-k"]],[[2,8,"pl-c1"],[17,18,"pl-c1"]],[[2,8,"pl-c1"],[13,14,"pl-c1"]],[],[[2,15,"pl-c"],[2,4,"pl-c"]],[[2,7,"pl-k"],[18,22,"pl-c1"],[39,42,"pl-s"],[39,40,"pl-pds"],[41,42,"pl-pds"]],[],[],[],[[2,7,"pl-k"],[18,22,"pl-c1"]],[[4,21,"pl-c"],[4,6,"pl-c"]],[[4,8,"pl-k"]],[[4,9,"pl-k"],[20,24,"pl-c1"],[41,44,"pl-s"],[41,42,"pl-pds"],[43,44,"pl-pds"]],[[6,8,"pl-k"],[21,25,"pl-s"],[21,22,"pl-pds"],[22,24,"pl-cce"],[24,25,"pl-pds"]],[[8,14,"pl-k"],[15,20,"pl-c1"]],[[8,12,"pl-k"],[13,15,"pl-k"],[28,32,"pl-s"],[28,29,"pl-pds"],[29,31,"pl-cce"],[31,32,"pl-pds"]],[[8,14,"pl-k"],[15,20,"pl-c1"]],[],[],[],[],[[4,8,"pl-k"]],[[4,10,"pl-c1"],[17,18,"pl-c1"]],[],[[4,6,"pl-k"],[14,21,"pl-c1"],[32,35,"pl-s"],[32,33,"pl-pds"],[34,35,"pl-pds"]],[],[[6,10,"pl-k"],[11,13,"pl-k"],[21,28,"pl-c1"],[39,43,"pl-s"],[39,40,"pl-pds"],[42,43,"pl-pds"]],[[6,8,"pl-k"],[19,20,"pl-c1"],[24,30,"pl-k"],[31,36,"pl-c1"]],[],[[6,10,"pl-k"]],[],[],[],[[4,17,"pl-c"],[4,6,"pl-c"]],[[4,9,"pl-k"],[20,24,"pl-c1"],[41,44,"pl-s"],[41,42,"pl-pds"],[43,44,"pl-pds"]],[],[],[],[],[[2,8,"pl-k"],[9,13,"pl-c1"]],[],[],[[0,6,"pl-k"],[7,25,"pl-en"],[26,31,"pl-k"]],[[1,3,"pl-k"]],[[2,6,"pl-k"],[15,34,"pl-c1"],[40,45,"pl-c1"]],[[9,15,"pl-c1"],[22,27,"pl-c1"]],[[1,5,"pl-k"]],[[9,13,"pl-c1"],[19,24,"pl-c1"]],[[1,6,"pl-k"]],[],[[0,6,"pl-k"],[7,11,"pl-k"],[12,29,"pl-en"],[32,37,"pl-k"]],[[2,8,"pl-k"],[17,18,"pl-c1"],[22,29,"pl-c1"],[34,41,"pl-smi"]],[],[[0,6,"pl-k"],[7,11,"pl-k"],[12,28,"pl-en"],[31,36,"pl-k"]],[[2,8,"pl-k"],[17,18,"pl-c1"],[22,29,"pl-c1"],[34,41,"pl-smi"]],[],[],[[0,6,"pl-k"],[19,37,"pl-en"],[38,43,"pl-k"]],[],[[10,14,"pl-c1"],[15,18,"pl-s"],[15,16,"pl-pds"],[17,18,"pl-pds"]],[],[],[[2,5,"pl-k"],[7,11,"pl-k"]],[[4,6,"pl-k"],[8,20,"pl-c1"],[21,32,"pl-k"],[33,40,"pl-c1"],[54,57,"pl-s"],[54,55,"pl-pds"],[56,57,"pl-pds"],[66,69,"pl-s"],[66,67,"pl-pds"],[68,69,"pl-pds"]],[[13,16,"pl-s"],[13,14,"pl-pds"],[15,16,"pl-pds"],[25,28,"pl-s"],[25,26,"pl-pds"],[27,28,"pl-pds"],[37,40,"pl-s"],[37,38,"pl-pds"],[39,40,"pl-pds"],[49,52,"pl-s"],[49,50,"pl-pds"],[51,52,"pl-pds"],[61,65,"pl-s"],[61,62,"pl-pds"],[62,64,"pl-cce"],[64,65,"pl-pds"],[74,77,"pl-s"],[74,75,"pl-pds"],[76,77,"pl-pds"]],[[13,16,"pl-s"],[13,14,"pl-pds"],[15,16,"pl-pds"]],[],[[6,10,"pl-k"]],[],[[17,20,"pl-s"],[17,18,"pl-pds"],[19,20,"pl-pds"],[24,33,"pl-c1"],[34,35,"pl-c1"]],[[17,28,"pl-k"],[29,32,"pl-k"],[34,45,"pl-k"],[46,54,"pl-k"],[55,59,"pl-k"]],[],[],[],[],[[2,8,"pl-k"],[17,20,"pl-c1"]],[],[],[[0,6,"pl-k"],[19,29,"pl-en"],[30,35,"pl-k"]],[],[[9,16,"pl-c1"],[19,23,"pl-c1"]],[],[[2,5,"pl-k"],[7,13,"pl-c1"],[18,19,"pl-c1"]],[[4,10,"pl-k"]],[[4,8,"pl-k"],[9,12,"pl-s"],[9,10,"pl-pds"],[11,12,"pl-pds"],[24,29,"pl-s"],[24,25,"pl-pds"],[28,29,"pl-pds"],[31,36,"pl-k"]],[[4,8,"pl-k"],[9,12,"pl-s"],[9,10,"pl-pds"],[11,12,"pl-pds"],[24,29,"pl-s"],[24,25,"pl-pds"],[28,29,"pl-pds"],[31,36,"pl-k"]],[[4,8,"pl-k"],[9,13,"pl-s"],[9,10,"pl-pds"],[10,12,"pl-cce"],[12,13,"pl-pds"],[25,30,"pl-s"],[25,26,"pl-pds"],[29,30,"pl-pds"],[32,37,"pl-k"]],[[4,8,"pl-k"],[9,13,"pl-s"],[9,10,"pl-pds"],[10,12,"pl-cce"],[12,13,"pl-pds"],[25,30,"pl-s"],[25,26,"pl-pds"],[29,30,"pl-pds"],[32,37,"pl-k"]],[[4,8,"pl-k"],[9,13,"pl-s"],[9,10,"pl-pds"],[10,12,"pl-cce"],[12,13,"pl-pds"],[25,30,"pl-s"],[25,26,"pl-pds"],[29,30,"pl-pds"],[32,37,"pl-k"]],[[4,8,"pl-k"],[9,12,"pl-s"],[9,10,"pl-pds"],[11,12,"pl-pds"],[24,29,"pl-s"],[24,25,"pl-pds"],[28,29,"pl-pds"],[31,36,"pl-k"]],[[4,59,"pl-c"],[4,6,"pl-c"]],[[4,8,"pl-k"],[9,12,"pl-s"],[9,10,"pl-pds"],[11,12,"pl-pds"],[24,29,"pl-s"],[24,25,"pl-pds"],[28,29,"pl-pds"],[31,36,"pl-k"]],[[4,11,"pl-k"]],[[6,10,"pl-k"],[15,26,"pl-k"],[27,34,"pl-c1"]],[[6,8,"pl-k"],[15,19,"pl-c1"]],[[18,21,"pl-s"],[18,19,"pl-pds"],[20,21,"pl-pds"]],[[8,12,"pl-k"],[17,18,"pl-c1"]],[[8,12,"pl-k"],[19,27,"pl-c1"],[33,39,"pl-k"],[47,48,"pl-c1"],[50,56,"pl-s"],[50,51,"pl-pds"],[55,56,"pl-pds"]],[[8,14,"pl-c1"],[22,23,"pl-c1"]],[[15,21,"pl-c1"],[27,38,"pl-k"],[39,45,"pl-c1"]],[[8,12,"pl-k"]],[],[],[[6,11,"pl-k"]],[],[],[],[[2,8,"pl-k"]],[],[],[[0,6,"pl-k"],[19,29,"pl-en"],[30,35,"pl-k"]],[[30,34,"pl-k"]],[],[],[[2,5,"pl-k"],[7,13,"pl-c1"],[18,19,"pl-c1"],[27,31,"pl-c1"]],[[4,6,"pl-k"],[16,19,"pl-s"],[16,17,"pl-pds"],[18,19,"pl-pds"],[27,28,"pl-c1"],[33,37,"pl-c1"]],[[6,8,"pl-k"],[16,17,"pl-c1"],[22,25,"pl-s"],[22,23,"pl-pds"],[24,25,"pl-pds"]],[[8,12,"pl-k"],[19,20,"pl-c1"]],[[8,10,"pl-k"],[12,25,"pl-c1"],[33,34,"pl-c1"],[36,37,"pl-c1"]],[[10,35,"pl-c"],[10,12,"pl-c"]],[[10,14,"pl-k"],[20,21,"pl-c1"]],[[10,16,"pl-c1"],[23,30,"pl-c1"]],[[10,12,"pl-k"],[20,21,"pl-c1"],[32,38,"pl-c1"]],[[15,16,"pl-c1"],[18,28,"pl-c"],[18,20,"pl-c"]],[[10,14,"pl-k"]],[],[],[[8,12,"pl-k"]],[[8,12,"pl-k"],[19,20,"pl-c1"]],[[8,10,"pl-k"],[12,25,"pl-c1"],[33,34,"pl-c1"],[36,37,"pl-c1"]],[[10,31,"pl-c"],[10,12,"pl-c"]],[[20,31,"pl-k"],[32,36,"pl-k"]],[[15,16,"pl-c1"],[18,25,"pl-c"],[18,20,"pl-c"]],[[10,14,"pl-k"]],[],[],[],[[6,10,"pl-k"],[11,13,"pl-k"],[48,51,"pl-s"],[48,49,"pl-pds"],[50,51,"pl-pds"]],[[16,19,"pl-s"],[16,17,"pl-pds"],[18,19,"pl-pds"]],[[6,10,"pl-k"]],[],[],[],[],[[2,8,"pl-k"]],[],[],[[0,6,"pl-k"],[19,33,"pl-en"],[34,39,"pl-k"]],[],[[2,14,"pl-k"],[15,19,"pl-k"],[25,35,"pl-c1"],[36,56,"pl-s"],[36,37,"pl-pds"],[37,39,"pl-cce"],[55,56,"pl-pds"]],[[2,4,"pl-k"],[6,23,"pl-c1"],[40,46,"pl-k"],[49,50,"pl-c1"],[52,55,"pl-c1"]],[[2,8,"pl-k"],[9,20,"pl-c1"]],[],[],[[0,6,"pl-k"],[7,11,"pl-k"],[12,27,"pl-en"],[28,32,"pl-k"],[38,44,"pl-k"],[50,53,"pl-s"],[50,51,"pl-pds"],[52,53,"pl-pds"],[62,66,"pl-s"],[62,63,"pl-pds"],[63,65,"pl-cce"],[65,66,"pl-pds"]],[],[[0,6,"pl-k"],[17,23,"pl-c1"],[25,31,"pl-c1"],[33,37,"pl-en"],[38,43,"pl-k"],[44,48,"pl-k"],[53,58,"pl-k"],[59,63,"pl-k"],[68,74,"pl-c1"]],[[38,44,"pl-c1"]],[[2,7,"pl-k"],[25,40,"pl-c1"]],[],[],[[2,7,"pl-k"],[17,18,"pl-c1"],[22,37,"pl-c1"],[48,49,"pl-c1"]],[],[],[[2,8,"pl-k"],[9,23,"pl-c1"]],[],[],[[0,6,"pl-k"],[19,28,"pl-en"],[29,34,"pl-k"]],[[2,6,"pl-k"],[11,15,"pl-c1"],[18,22,"pl-c1"],[28,32,"pl-c1"],[39,43,"pl-c1"],[47,48,"pl-c1"],[52,56,"pl-c1"]],[[2,8,"pl-k"],[11,17,"pl-c1"],[20,25,"pl-smi"],[29,35,"pl-smi"],[40,45,"pl-smi"]],[],[],[[0,6,"pl-k"],[19,42,"pl-en"],[43,48,"pl-k"]],[[2,4,"pl-k"],[8,14,"pl-c1"],[20,21,"pl-c1"],[27,32,"pl-c1"],[38,41,"pl-s"],[38,39,"pl-pds"],[40,41,"pl-pds"],[47,51,"pl-c1"],[57,60,"pl-s"],[57,58,"pl-pds"],[59,60,"pl-pds"]],[[4,10,"pl-k"],[13,19,"pl-c1"],[20,21,"pl-c1"],[25,29,"pl-c1"],[34,35,"pl-c1"]],[],[[2,8,"pl-k"]],[],[],[[0,6,"pl-k"],[7,11,"pl-k"]],[[0,6,"pl-en"],[7,12,"pl-k"],[13,17,"pl-k"],[30,36,"pl-c1"],[43,47,"pl-k"]],[[21,25,"pl-k"],[26,31,"pl-k"],[32,36,"pl-k"],[45,51,"pl-c1"],[53,58,"pl-k"],[59,63,"pl-k"],[72,78,"pl-c1"]],[],[[2,7,"pl-k"],[8,12,"pl-k"],[18,27,"pl-c1"]],[[2,7,"pl-k"],[8,12,"pl-k"],[21,32,"pl-k"],[38,44,"pl-c1"]],[[2,7,"pl-k"],[8,12,"pl-k"]],[[2,7,"pl-k"],[8,12,"pl-k"],[24,35,"pl-k"],[41,47,"pl-c1"]],[[2,7,"pl-k"],[8,12,"pl-k"]],[[2,7,"pl-k"],[8,12,"pl-k"]],[],[[2,4,"pl-c1"]],[],[],[[0,6,"pl-k"],[7,11,"pl-k"]],[[0,6,"pl-en"],[7,12,"pl-k"],[31,35,"pl-k"]],[[21,25,"pl-k"],[26,31,"pl-k"],[32,36,"pl-k"],[45,51,"pl-c1"],[53,58,"pl-k"],[59,63,"pl-k"],[72,78,"pl-c1"]],[],[[2,8,"pl-c1"],[13,17,"pl-c1"],[25,29,"pl-c1"],[36,45,"pl-c1"]],[],[],[[0,6,"pl-k"],[7,11,"pl-k"],[12,17,"pl-en"],[18,23,"pl-k"],[24,28,"pl-k"],[33,38,"pl-k"],[39,43,"pl-k"],[48,52,"pl-k"]],[[32,36,"pl-k"],[37,42,"pl-k"],[43,47,"pl-k"],[51,56,"pl-k"],[57,61,"pl-k"]],[[2,8,"pl-k"],[9,14,"pl-c1"],[45,51,"pl-c1"],[62,71,"pl-c1"]],[],[],[[0,6,"pl-k"],[7,11,"pl-k"],[12,17,"pl-en"],[18,23,"pl-k"],[24,28,"pl-k"],[33,38,"pl-k"],[39,43,"pl-k"],[48,52,"pl-k"],[56,62,"pl-c1"]],[[32,36,"pl-k"],[37,42,"pl-k"],[43,47,"pl-k"],[51,56,"pl-k"],[57,61,"pl-k"]],[[2,8,"pl-c1"],[13,14,"pl-c1"]],[[2,8,"pl-c1"],[15,16,"pl-c1"]],[[2,8,"pl-c1"],[17,18,"pl-c1"]],[],[[2,7,"pl-k"],[36,40,"pl-s"],[36,37,"pl-pds"],[37,39,"pl-cce"],[39,40,"pl-pds"]],[[4,6,"pl-k"]],[[6,10,"pl-k"],[15,19,"pl-c1"]],[[6,8,"pl-k"],[12,17,"pl-smi"],[22,28,"pl-smi"],[32,34,"pl-c1"],[40,45,"pl-smi"],[53,59,"pl-smi"]],[[16,17,"pl-c1"]],[],[],[],[],[],[[2,4,"pl-k"]],[[4,8,"pl-k"],[13,17,"pl-c1"]],[[4,6,"pl-k"],[10,15,"pl-smi"],[20,26,"pl-smi"],[30,32,"pl-c1"],[38,43,"pl-smi"],[51,57,"pl-smi"]],[],[],[],[[0,6,"pl-k"],[7,45,"pl-en"],[60,64,"pl-k"]],[[46,52,"pl-c1"]],[],[],[],[[0,6,"pl-k"],[7,12,"pl-k"],[13,17,"pl-k"],[19,42,"pl-en"],[45,50,"pl-k"]],[[2,4,"pl-k"],[23,28,"pl-c1"]],[[4,10,"pl-k"]],[[4,8,"pl-k"]],[[4,10,"pl-k"],[28,32,"pl-c1"]],[],[],[],[[0,6,"pl-k"],[7,13,"pl-c1"],[14,38,"pl-en"],[41,46,"pl-k"]],[[2,4,"pl-k"],[23,28,"pl-c1"]],[[4,10,"pl-k"]],[[4,8,"pl-k"]],[[4,10,"pl-k"],[28,32,"pl-c1"]],[],[],[],[[0,6,"pl-k"],[7,11,"pl-k"],[12,45,"pl-en"],[48,53,"pl-k"]],[[2,6,"pl-k"],[13,16,"pl-c1"],[21,25,"pl-c1"]],[[2,8,"pl-k"],[9,13,"pl-c1"],[19,20,"pl-c1"],[29,30,"pl-c1"],[35,39,"pl-s"],[35,36,"pl-pds"],[36,38,"pl-cce"],[38,39,"pl-pds"],[48,49,"pl-c1"],[54,58,"pl-s"],[54,55,"pl-pds"],[55,57,"pl-cce"],[57,58,"pl-pds"]],[],[],[[0,6,"pl-k"],[7,11,"pl-k"],[12,39,"pl-en"]],[[28,29,"pl-c1"]],[[19,24,"pl-c1"]],[],[[1,7,"pl-k"]],[[2,6,"pl-k"],[19,20,"pl-c1"]],[[1,6,"pl-k"]],[],[[2,5,"pl-k"],[7,13,"pl-c1"],[18,19,"pl-c1"]],[[4,6,"pl-k"],[8,12,"pl-c1"]],[[6,54,"pl-c"],[6,8,"pl-c"]],[[6,49,"pl-c"],[6,8,"pl-c"]],[[6,12,"pl-k"],[13,18,"pl-c1"]],[],[[4,8,"pl-k"]],[[4,8,"pl-k"],[19,23,"pl-c1"],[31,32,"pl-c1"]],[],[[4,6,"pl-k"],[12,13,"pl-c1"]],[[6,12,"pl-k"],[13,18,"pl-c1"]],[[6,10,"pl-k"],[11,13,"pl-k"],[20,21,"pl-c1"]],[[6,8,"pl-k"],[15,16,"pl-c1"]],[[8,14,"pl-k"],[15,20,"pl-c1"]],[[8,12,"pl-k"]],[[8,13,"pl-k"]],[],[],[],[[4,10,"pl-c1"]],[],[[1,6,"pl-k"]],[[4,6,"pl-k"],[16,20,"pl-s"],[16,17,"pl-pds"],[17,19,"pl-cce"],[19,20,"pl-pds"],[24,29,"pl-k"]],[[1,5,"pl-k"]],[[4,6,"pl-k"],[21,25,"pl-s"],[21,22,"pl-pds"],[22,24,"pl-cce"],[24,25,"pl-pds"],[37,41,"pl-s"],[37,38,"pl-pds"],[38,40,"pl-cce"],[40,41,"pl-pds"],[45,50,"pl-k"]],[],[[1,6,"pl-k"]],[],[],[[2,8,"pl-k"],[9,13,"pl-c1"]],[],[],[[0,6,"pl-k"],[7,11,"pl-k"],[12,38,"pl-en"],[39,43,"pl-k"]],[[2,4,"pl-k"],[53,54,"pl-c1"]],[],[[45,49,"pl-s"],[45,46,"pl-pds"],[46,48,"pl-cce"],[48,49,"pl-pds"]],[[4,8,"pl-k"]],[[4,6,"pl-k"],[25,30,"pl-c1"]],[[6,12,"pl-c1"],[55,59,"pl-s"],[55,56,"pl-pds"],[56,58,"pl-cce"],[58,59,"pl-pds"]],[[23,29,"pl-c1"]],[],[],[],[],[],[[0,6,"pl-k"],[7,17,"pl-en"],[18,23,"pl-k"],[24,28,"pl-k"],[38,42,"pl-c1"]],[],[[0,6,"pl-k"],[7,18,"pl-en"],[23,28,"pl-c1"]],[],[[0,6,"pl-k"],[7,11,"pl-k"],[12,22,"pl-en"],[23,28,"pl-k"],[29,33,"pl-k"]],[[2,7,"pl-c1"]],[],[[1,3,"pl-k"]],[[2,6,"pl-k"],[15,34,"pl-c1"]],[[2,4,"pl-k"],[12,17,"pl-c1"],[23,29,"pl-k"],[30,35,"pl-c1"]],[],[[1,3,"pl-k"]],[[13,24,"pl-c1"],[31,36,"pl-c1"]],[[40,44,"pl-c1"]],[[1,5,"pl-k"]],[[13,24,"pl-c1"],[31,36,"pl-c1"],[71,75,"pl-c1"]],[[63,67,"pl-c1"]],[[1,6,"pl-k"]],[],[[2,4,"pl-k"],[40,46,"pl-k"],[47,52,"pl-c1"]],[],[],[[2,4,"pl-k"],[9,22,"pl-c1"],[41,47,"pl-k"],[48,53,"pl-c1"]],[[2,79,"pl-c"],[2,4,"pl-c"]],[[2,9,"pl-c"],[2,4,"pl-c"]],[[2,79,"pl-c"],[2,4,"pl-c"]],[[2,4,"pl-k"],[6,17,"pl-k"],[34,42,"pl-smi"]],[[27,35,"pl-c1"]],[[4,53,"pl-c"],[4,6,"pl-c"]],[[4,10,"pl-k"],[11,16,"pl-c1"]],[],[[10,21,"pl-k"],[22,28,"pl-c1"],[35,43,"pl-smi"]],[],[[1,3,"pl-k"]],[],[[6,32,"pl-en"],[41,45,"pl-c1"],[69,73,"pl-c1"]],[[1,5,"pl-k"]],[[16,34,"pl-c1"],[43,47,"pl-c1"],[64,65,"pl-c1"],[67,68,"pl-c1"],[70,74,"pl-c1"]],[[1,6,"pl-k"]],[],[[2,43,"pl-c"],[2,4,"pl-c"]],[[2,4,"pl-k"],[19,23,"pl-c1"],[36,37,"pl-c1"]],[[4,9,"pl-c1"]],[[25,29,"pl-c1"]],[[4,10,"pl-k"],[11,15,"pl-c1"]],[],[],[[2,4,"pl-k"],[19,23,"pl-c1"]],[[4,9,"pl-c1"]],[[4,10,"pl-k"],[11,16,"pl-c1"]],[],[],[[1,3,"pl-k"]],[[12,32,"pl-c1"],[59,60,"pl-c1"],[62,63,"pl-c1"]],[[1,5,"pl-k"]],[[12,25,"pl-c1"],[52,53,"pl-c1"],[55,56,"pl-c1"],[58,59,"pl-c1"]],[[1,6,"pl-k"]],[],[[2,4,"pl-k"],[15,22,"pl-c1"]],[[4,9,"pl-c1"]],[[4,10,"pl-k"],[11,16,"pl-c1"]],[],[[1,5,"pl-k"]],[[10,14,"pl-c1"]],[[2,4,"pl-k"],[14,15,"pl-c1"],[19,25,"pl-k"],[26,31,"pl-c1"]],[],[[2,8,"pl-k"],[9,13,"pl-en"]],[[2,4,"pl-k"],[6,11,"pl-c1"],[26,27,"pl-c1"]],[[4,9,"pl-c1"]],[[4,10,"pl-k"],[11,16,"pl-c1"]],[],[[10,21,"pl-k"],[22,28,"pl-c1"],[33,40,"pl-smi"]],[],[[12,16,"pl-c1"],[17,21,"pl-c1"],[59,60,"pl-c1"]],[],[[2,43,"pl-c"],[2,4,"pl-c"]],[[2,4,"pl-k"],[38,39,"pl-c1"]],[[4,9,"pl-c1"]],[[25,29,"pl-c1"]],[[4,10,"pl-k"],[11,16,"pl-c1"]],[],[[1,6,"pl-k"]],[],[[2,8,"pl-k"],[9,13,"pl-c1"]],[],[],[[0,6,"pl-k"],[7,11,"pl-k"],[12,25,"pl-en"],[28,33,"pl-k"]],[[2,8,"pl-k"],[30,34,"pl-c1"],[46,53,"pl-c1"]],[],[],[[0,6,"pl-k"],[7,13,"pl-c1"],[14,24,"pl-en"],[27,32,"pl-k"],[35,41,"pl-k"]],[],[[0,6,"pl-k"],[7,12,"pl-k"],[13,17,"pl-k"],[19,29,"pl-en"],[32,37,"pl-k"]],[[2,8,"pl-k"],[30,32,"pl-s"],[30,31,"pl-pds"],[31,32,"pl-pds"],[35,46,"pl-k"],[47,52,"pl-k"],[53,57,"pl-k"]],[],[],[[0,6,"pl-k"],[7,11,"pl-k"],[12,23,"pl-en"]],[[1,3,"pl-k"]],[[2,4,"pl-k"]],[[4,21,"pl-en"]],[[12,19,"pl-c1"]],[],[],[[2,4,"pl-k"]],[[4,17,"pl-en"]],[[16,20,"pl-c1"]],[],[],[[2,4,"pl-k"]],[[4,17,"pl-en"]],[],[],[],[[23,28,"pl-c1"]],[[1,5,"pl-k"]],[[2,4,"pl-k"],[15,22,"pl-c1"]],[[4,10,"pl-c1"]],[[12,19,"pl-c1"]],[],[],[[2,4,"pl-k"],[14,15,"pl-c1"]],[[4,11,"pl-en"]],[[11,12,"pl-c1"]],[],[[1,6,"pl-k"]],[[10,11,"pl-c1"]],[],[[0,6,"pl-k"],[7,10,"pl-k"],[11,23,"pl-en"],[24,32,"pl-c1"]],[[1,6,"pl-k"]],[[2,8,"pl-k"],[9,20,"pl-c1"]],[[1,5,"pl-k"]],[[2,8,"pl-k"],[9,14,"pl-c1"]],[[1,6,"pl-k"]],[],[],[[0,9,"pl-k"],[10,18,"pl-k"],[22,28,"pl-k"],[29,36,"pl-c1"],[37,49,"pl-en"]],[[2,9,"pl-c1"],[16,17,"pl-c1"]],[[2,7,"pl-k"],[9,13,"pl-c1"]],[[10,12,"pl-c1"]],[[4,6,"pl-k"],[14,15,"pl-c1"]],[[6,33,"pl-c1"],[60,61,"pl-c1"]],[[6,14,"pl-k"]],[],[[4,9,"pl-k"]],[],[[2,8,"pl-k"]],[],[],[[0,6,"pl-k"],[7,14,"pl-c1"],[15,26,"pl-en"],[27,35,"pl-c1"],[42,46,"pl-k"],[53,59,"pl-c1"],[66,69,"pl-k"]],[[2,8,"pl-k"],[9,21,"pl-c1"]],[[4,10,"pl-k"],[11,15,"pl-c1"]],[[1,6,"pl-k"]],[[16,27,"pl-k"],[28,32,"pl-k"],[42,53,"pl-k"],[54,57,"pl-k"]],[[1,5,"pl-k"]],[],[[1,6,"pl-k"]],[],[],[],[],[[0,6,"pl-k"],[7,14,"pl-c1"],[15,26,"pl-en"],[27,35,"pl-c1"],[42,47,"pl-k"],[48,52,"pl-k"],[59,65,"pl-c1"]],[[27,30,"pl-k"]],[[2,8,"pl-k"],[9,21,"pl-c1"]],[[4,10,"pl-k"],[11,15,"pl-c1"]],[[1,6,"pl-k"]],[[16,27,"pl-k"],[28,33,"pl-k"],[34,38,"pl-k"],[48,59,"pl-k"],[60,63,"pl-k"]],[[1,5,"pl-k"]],[],[[1,6,"pl-k"]],[],[],[],[],[[0,6,"pl-k"],[7,10,"pl-k"],[11,23,"pl-en"],[24,30,"pl-k"],[31,37,"pl-en"],[44,50,"pl-c1"],[57,60,"pl-k"]],[[1,6,"pl-k"]],[[2,8,"pl-k"],[11,18,"pl-c1"]],[[1,5,"pl-k"]],[[2,8,"pl-k"],[11,15,"pl-c1"]],[[1,6,"pl-k"]],[],[],[[0,9,"pl-k"],[10,14,"pl-k"]],[[0,6,"pl-k"],[7,14,"pl-c1"],[15,26,"pl-en"],[27,35,"pl-c1"],[42,48,"pl-c1"],[54,60,"pl-c1"]],[[2,8,"pl-k"],[9,15,"pl-en"]],[[6,8,"pl-smi"]],[[6,12,"pl-smi"]],[],[[2,6,"pl-k"],[17,28,"pl-k"],[29,32,"pl-k"],[40,44,"pl-c1"],[54,58,"pl-c1"]],[],[[2,8,"pl-k"],[9,21,"pl-c1"],[30,36,"pl-k"],[37,49,"pl-c1"],[56,57,"pl-c1"]],[],[],[[0,6,"pl-k"],[7,14,"pl-c1"],[15,26,"pl-en"],[27,35,"pl-c1"],[42,48,"pl-c1"],[54,60,"pl-c1"]],[[2,8,"pl-k"],[21,25,"pl-c1"]],[],[],[[0,6,"pl-k"],[7,14,"pl-c1"],[15,27,"pl-en"],[28,36,"pl-c1"],[43,49,"pl-c1"],[55,61,"pl-c1"]],[[2,8,"pl-k"],[21,26,"pl-c1"]],[],[],[[0,6,"pl-k"],[13,39,"pl-en"],[40,48,"pl-c1"],[55,61,"pl-c1"]],[[40,46,"pl-c1"]],[[2,8,"pl-k"],[9,15,"pl-en"]],[[11,13,"pl-smi"]],[[11,17,"pl-smi"]],[],[[2,6,"pl-k"],[17,28,"pl-k"],[29,32,"pl-k"],[40,44,"pl-c1"],[54,58,"pl-c1"]],[],[[2,6,"pl-k"]],[[6,18,"pl-c1"],[27,33,"pl-k"],[34,46,"pl-c1"],[58,59,"pl-c1"]],[],[[2,4,"pl-k"],[18,19,"pl-c1"],[23,29,"pl-k"]],[],[[2,4,"pl-k"],[17,18,"pl-c1"],[31,38,"pl-smi"]],[[4,8,"pl-k"],[17,18,"pl-c1"]],[[4,13,"pl-c1"],[20,26,"pl-k"]],[[4,8,"pl-k"],[15,25,"pl-c1"]],[[26,42,"pl-k"],[43,47,"pl-k"]],[[4,8,"pl-k"],[29,30,"pl-c1"]],[[4,10,"pl-k"]],[],[],[[2,8,"pl-k"]],[],[],[[0,6,"pl-k"],[7,11,"pl-k"],[12,27,"pl-en"],[28,36,"pl-c1"]],[[2,7,"pl-k"],[8,12,"pl-k"],[19,38,"pl-c1"],[45,46,"pl-c1"],[48,49,"pl-c1"]],[[2,4,"pl-k"],[13,14,"pl-c1"]],[[4,10,"pl-k"],[11,15,"pl-c1"]],[[4,8,"pl-k"],[9,11,"pl-k"],[19,20,"pl-c1"]],[[4,10,"pl-k"],[11,16,"pl-c1"]],[],[[2,6,"pl-k"],[11,12,"pl-c1"]],[[2,8,"pl-k"],[9,28,"pl-c1"],[40,41,"pl-c1"],[44,50,"pl-k"],[69,70,"pl-c1"]],[],[],[[0,5,"pl-k"],[6,18,"pl-en"],[19,24,"pl-k"]],[[0,7,"pl-k"]],[[2,14,"pl-en"],[15,23,"pl-c1"],[30,36,"pl-c1"],[55,61,"pl-c1"]],[[15,21,"pl-c1"],[41,47,"pl-c1"]],[[15,21,"pl-c1"],[41,42,"pl-c1"]],[],[],[[2,15,"pl-en"],[18,26,"pl-k"]],[],[[2,6,"pl-k"],[7,18,"pl-en"],[21,26,"pl-k"],[27,35,"pl-k"]],[[2,6,"pl-k"],[7,20,"pl-en"],[23,28,"pl-k"],[29,37,"pl-k"]],[[2,6,"pl-k"],[7,20,"pl-en"],[23,28,"pl-k"],[29,37,"pl-k"]],[[2,9,"pl-c1"],[10,14,"pl-en"],[15,19,"pl-k"],[26,32,"pl-c1"],[39,47,"pl-k"]],[[2,9,"pl-c1"],[10,15,"pl-en"],[16,21,"pl-k"],[22,26,"pl-k"],[33,39,"pl-c1"],[46,54,"pl-k"]],[[2,6,"pl-k"],[7,29,"pl-en"],[47,50,"pl-k"],[58,63,"pl-k"],[64,72,"pl-k"]],[[2,6,"pl-k"],[7,28,"pl-en"],[46,49,"pl-k"],[57,62,"pl-k"],[63,71,"pl-k"]],[[2,10,"pl-c1"],[11,17,"pl-en"],[20,25,"pl-k"],[26,34,"pl-k"]],[[2,8,"pl-c1"],[9,17,"pl-en"],[20,25,"pl-k"],[26,34,"pl-k"]],[],[[0,8,"pl-k"]],[[2,10,"pl-c1"]],[[2,8,"pl-c1"]],[[2,8,"pl-c1"]],[[2,8,"pl-c1"]],[[2,8,"pl-c1"]],[[2,8,"pl-c1"]],[[2,7,"pl-k"]],[],[[14,18,"pl-k"]],[[2,8,"pl-c1"],[26,27,"pl-c1"]],[[2,8,"pl-c1"],[35,36,"pl-c1"]],[],[[2,8,"pl-k"],[9,14,"pl-k"],[15,21,"pl-c1"],[40,45,"pl-c1"],[48,49,"pl-c1"]],[],[],[[1,6,"pl-k"]],[[0,5,"pl-k"],[6,21,"pl-en"],[22,27,"pl-k"]],[[0,7,"pl-k"]],[[2,17,"pl-en"]],[[6,14,"pl-c1"],[31,37,"pl-c1"]],[[6,12,"pl-c1"],[32,38,"pl-c1"]],[[6,12,"pl-c1"],[33,39,"pl-c1"],[59,60,"pl-c1"]],[],[],[[2,18,"pl-en"],[21,29,"pl-k"]],[],[[2,6,"pl-k"],[7,18,"pl-en"],[21,26,"pl-k"],[27,35,"pl-k"]],[[2,6,"pl-k"],[7,20,"pl-en"],[23,28,"pl-k"],[29,37,"pl-k"]],[[2,6,"pl-k"],[7,20,"pl-en"],[23,28,"pl-k"],[29,37,"pl-k"]],[[2,9,"pl-c1"],[10,14,"pl-en"],[15,19,"pl-k"],[26,32,"pl-c1"],[39,47,"pl-k"]],[[2,9,"pl-c1"],[10,15,"pl-en"],[16,21,"pl-k"],[22,26,"pl-k"],[33,39,"pl-c1"],[46,54,"pl-k"]],[[2,6,"pl-k"],[7,29,"pl-en"],[47,50,"pl-k"],[58,63,"pl-k"],[64,72,"pl-k"]],[[2,6,"pl-k"],[7,28,"pl-en"],[46,49,"pl-k"],[57,62,"pl-k"],[63,71,"pl-k"]],[[2,10,"pl-c1"],[11,17,"pl-en"],[20,25,"pl-k"],[26,34,"pl-k"]],[[2,8,"pl-c1"],[9,17,"pl-en"],[20,25,"pl-k"],[26,34,"pl-k"]],[],[[0,8,"pl-k"]],[[2,10,"pl-c1"]],[],[[2,8,"pl-c1"]],[[2,8,"pl-c1"]],[[2,8,"pl-c1"]],[[2,8,"pl-c1"]],[[2,8,"pl-c1"]],[[2,7,"pl-k"]],[],[[1,6,"pl-k"]],[],[[0,6,"pl-k"],[7,11,"pl-k"],[12,22,"pl-en"],[23,28,"pl-k"],[41,49,"pl-c1"],[62,70,"pl-c1"]],[[23,29,"pl-c1"]],[[2,7,"pl-k"],[8,17,"pl-k"],[18,21,"pl-en"],[29,30,"pl-k"]],[],[[2,7,"pl-k"],[8,12,"pl-k"]],[],[],[[2,66,"pl-c"],[2,4,"pl-c"]],[[2,4,"pl-k"],[6,17,"pl-c1"],[24,25,"pl-c1"],[44,45,"pl-c1"],[49,55,"pl-k"],[56,60,"pl-c1"]],[],[[2,7,"pl-k"],[8,12,"pl-k"],[21,38,"pl-c1"]],[[2,7,"pl-k"],[8,12,"pl-k"]],[],[[2,7,"pl-k"],[9,13,"pl-c1"]],[[4,6,"pl-k"]],[[6,11,"pl-k"],[13,39,"pl-c"],[13,15,"pl-c"]],[],[],[[4,8,"pl-k"],[15,26,"pl-c1"],[33,34,"pl-c1"]],[[4,6,"pl-k"],[14,15,"pl-c1"]],[[6,11,"pl-k"],[13,29,"pl-c"],[13,15,"pl-c"]],[[6,10,"pl-k"],[11,13,"pl-k"],[22,23,"pl-c1"]],[[6,8,"pl-k"],[10,27,"pl-c1"]],[[8,13,"pl-k"],[15,25,"pl-c"],[15,17,"pl-c"]],[],[[6,10,"pl-k"]],[[6,12,"pl-k"],[13,17,"pl-c1"],[19,36,"pl-c"],[19,21,"pl-c"]],[],[],[],[[2,8,"pl-k"],[9,14,"pl-c1"]],[],[],[[0,9,"pl-k"],[10,18,"pl-k"]],[[0,6,"pl-k"],[7,11,"pl-k"]],[[0,26,"pl-en"],[27,32,"pl-k"],[45,53,"pl-c1"],[66,74,"pl-c1"]],[[27,33,"pl-c1"]],[[27,33,"pl-c1"]],[[2,8,"pl-c1"],[32,33,"pl-c1"]],[[2,6,"pl-k"],[13,18,"pl-c1"]],[[2,6,"pl-k"]],[[2,7,"pl-k"],[17,18,"pl-c1"],[22,32,"pl-c1"]],[[4,8,"pl-k"],[37,38,"pl-c1"]],[[4,8,"pl-k"],[29,34,"pl-c1"]],[[10,18,"pl-c1"]],[[4,6,"pl-k"],[37,42,"pl-k"]],[],[],[[2,8,"pl-k"]],[],[],[[0,9,"pl-k"],[10,18,"pl-k"]],[[0,6,"pl-k"],[7,11,"pl-k"]],[[0,21,"pl-en"],[22,27,"pl-k"],[40,48,"pl-c1"],[61,69,"pl-c1"]],[[22,28,"pl-c1"]],[[22,28,"pl-c1"],[53,59,"pl-c1"]],[[22,28,"pl-c1"],[48,54,"pl-c1"]],[[22,28,"pl-c1"]],[[2,8,"pl-k"],[9,35,"pl-c1"]],[],[[10,14,"pl-k"],[33,37,"pl-k"]],[[21,25,"pl-smi"]],[],[[8,14,"pl-k"],[15,23,"pl-c1"]],[],[],[],[[0,6,"pl-k"],[7,11,"pl-k"],[12,33,"pl-en"]],[[4,12,"pl-c1"],[19,25,"pl-c1"],[44,50,"pl-c1"]],[[4,10,"pl-c1"],[30,36,"pl-c1"]],[[4,10,"pl-c1"]],[],[[18,22,"pl-k"]],[[15,19,"pl-smi"]],[],[],[[2,8,"pl-k"],[9,17,"pl-c1"]],[],[],[[0,6,"pl-k"],[7,10,"pl-k"],[11,26,"pl-en"],[27,35,"pl-c1"]],[[1,6,"pl-k"]],[[2,8,"pl-k"],[9,17,"pl-c1"]],[[1,5,"pl-k"]],[[2,8,"pl-k"],[9,17,"pl-c1"]],[[1,6,"pl-k"]],[],[],[[0,6,"pl-k"],[19,56,"pl-en"],[57,62,"pl-k"]],[[2,4,"pl-k"],[8,12,"pl-c1"],[17,18,"pl-c1"],[24,25,"pl-c1"],[30,34,"pl-s"],[30,31,"pl-pds"],[31,33,"pl-cce"],[33,34,"pl-pds"]],[[4,8,"pl-k"]],[[8,9,"pl-c1"],[13,16,"pl-s"],[13,14,"pl-pds"],[15,16,"pl-pds"]],[[4,10,"pl-k"]],[],[[2,8,"pl-k"]],[],[],[[0,6,"pl-k"]],[[0,39,"pl-en"],[40,45,"pl-k"]],[[2,4,"pl-k"],[8,12,"pl-c1"],[17,18,"pl-c1"],[24,25,"pl-c1"],[30,33,"pl-s"],[30,31,"pl-pds"],[32,33,"pl-pds"]],[[4,8,"pl-k"]],[[8,9,"pl-c1"],[13,17,"pl-s"],[13,14,"pl-pds"],[14,16,"pl-cce"],[16,17,"pl-pds"]],[[4,10,"pl-k"]],[],[[2,8,"pl-k"]],[],[],[[0,9,"pl-k"],[10,18,"pl-k"]],[[0,8,"pl-c1"],[9,22,"pl-en"],[23,28,"pl-k"],[48,53,"pl-k"],[71,74,"pl-k"]],[[23,26,"pl-k"],[43,46,"pl-k"],[61,65,"pl-k"]],[[23,27,"pl-k"]],[],[[2,21,"pl-c"],[2,4,"pl-c"]],[[2,7,"pl-k"],[8,12,"pl-k"],[21,28,"pl-c1"]],[[2,8,"pl-k"],[9,17,"pl-en"]],[[2,8,"pl-k"],[9,17,"pl-en"]],[],[[2,8,"pl-c1"],[17,18,"pl-c1"],[20,26,"pl-k"],[27,33,"pl-k"],[34,42,"pl-en"]],[[8,19,"pl-smi"]],[[8,19,"pl-smi"]],[],[[2,4,"pl-k"],[10,15,"pl-c1"]],[[14,19,"pl-c1"]],[[4,59,"pl-c"],[4,6,"pl-c"]],[[10,19,"pl-smi"]],[[10,18,"pl-smi"]],[[4,8,"pl-k"]],[[4,6,"pl-k"],[14,19,"pl-c1"],[37,42,"pl-c1"]],[[10,19,"pl-smi"]],[[10,18,"pl-smi"]],[],[],[[1,3,"pl-k"]],[[2,4,"pl-k"],[12,21,"pl-smi"]],[[4,9,"pl-k"],[10,14,"pl-k"],[30,36,"pl-c1"]],[[4,6,"pl-k"],[18,24,"pl-k"],[51,57,"pl-k"]],[],[[1,6,"pl-k"]],[[4,8,"pl-k"],[16,22,"pl-c1"],[29,38,"pl-smi"],[46,57,"pl-smi"]],[[29,40,"pl-smi"]],[[1,5,"pl-k"]],[[4,8,"pl-k"],[16,22,"pl-c1"],[29,38,"pl-smi"],[46,57,"pl-smi"],[65,76,"pl-smi"]],[[1,6,"pl-k"]],[],[[4,6,"pl-k"]],[],[[11,21,"pl-smi"]],[],[[6,10,"pl-k"],[28,67,"pl-c1"]],[[6,15,"pl-c1"],[31,36,"pl-c1"],[55,58,"pl-c1"],[67,75,"pl-smi"]],[],[[12,19,"pl-smi"],[22,38,"pl-k"]],[[12,22,"pl-smi"],[25,36,"pl-k"],[37,46,"pl-c1"]],[[10,16,"pl-k"],[25,31,"pl-k"],[37,45,"pl-smi"]],[],[[1,7,"pl-k"]],[[1,7,"pl-k"]],[[6,11,"pl-c1"]],[[1,6,"pl-k"]],[[1,6,"pl-k"]],[],[[6,8,"pl-k"],[28,42,"pl-c1"]],[],[[1,6,"pl-k"]],[[6,80,"pl-c"],[6,8,"pl-c"]],[[6,27,"pl-c"],[6,8,"pl-c"]],[[6,28,"pl-c1"],[61,62,"pl-c1"]],[[1,6,"pl-k"]],[],[[6,10,"pl-k"]],[[6,8,"pl-k"],[11,26,"pl-c1"]],[[8,20,"pl-c1"]],[],[],[],[[4,10,"pl-k"]],[],[[1,6,"pl-k"]],[],[[2,6,"pl-k"],[17,31,"pl-c1"]],[],[[2,4,"pl-k"],[6,17,"pl-c1"],[32,37,"pl-c1"]],[[1,3,"pl-k"]],[[4,12,"pl-c1"]],[[1,6,"pl-k"]],[[4,10,"pl-k"]],[],[[2,6,"pl-k"],[12,30,"pl-c1"],[37,49,"pl-c1"]],[],[[2,5,"pl-k"],[7,11,"pl-k"],[38,45,"pl-smi"]],[[4,22,"pl-c"],[4,6,"pl-c"]],[[1,6,"pl-k"]],[[4,8,"pl-k"]],[[8,18,"pl-c1"],[23,32,"pl-smi"],[38,49,"pl-smi"],[55,66,"pl-smi"],[68,75,"pl-c1"],[77,78,"pl-c1"]],[],[[4,7,"pl-c"],[4,6,"pl-c"]],[[0,78,"pl-c"]],[[0,68,"pl-c"]],[[0,6,"pl-c"]],[[0,61,"pl-c"]],[[0,6,"pl-c"]],[[0,17,"pl-c"]],[[0,89,"pl-c"]],[[0,6,"pl-c"]],[[0,34,"pl-c"]],[[0,80,"pl-c"]],[[0,21,"pl-c"]],[[0,6,"pl-c"]],[[0,7,"pl-c"],[5,7,"pl-c"]],[[4,6,"pl-k"]],[[13,19,"pl-c1"],[24,33,"pl-smi"],[39,50,"pl-smi"],[56,67,"pl-smi"]],[],[[1,5,"pl-k"]],[],[[1,6,"pl-k"]],[[4,8,"pl-k"]],[[8,14,"pl-c1"],[19,28,"pl-smi"],[34,45,"pl-smi"],[66,77,"pl-smi"]],[[1,5,"pl-k"]],[[4,8,"pl-k"],[16,22,"pl-c1"],[27,36,"pl-smi"],[42,53,"pl-smi"],[59,70,"pl-smi"]],[[1,6,"pl-k"]],[],[[1,6,"pl-k"]],[[4,6,"pl-k"],[34,42,"pl-k"]],[],[[1,3,"pl-k"]],[[4,6,"pl-k"],[8,13,"pl-c1"],[45,46,"pl-c1"]],[[6,18,"pl-c1"]],[[6,14,"pl-k"]],[],[[1,6,"pl-k"]],[],[[4,6,"pl-k"],[23,37,"pl-c1"],[70,71,"pl-c1"]],[],[[4,6,"pl-k"],[12,21,"pl-smi"]],[[6,20,"pl-c1"],[68,69,"pl-c1"],[72,73,"pl-c1"]],[],[],[[4,6,"pl-k"],[26,40,"pl-c1"]],[],[[4,22,"pl-c"],[4,6,"pl-c"]],[[4,8,"pl-k"],[16,21,"pl-c1"]],[[4,6,"pl-k"],[8,23,"pl-c1"],[44,50,"pl-k"]],[],[[4,16,"pl-c1"]],[],[[4,6,"pl-k"],[16,21,"pl-k"]],[],[],[[2,8,"pl-k"]],[],[],[[0,6,"pl-k"],[7,11,"pl-k"],[12,27,"pl-en"],[28,36,"pl-c1"],[43,47,"pl-k"]],[[1,6,"pl-k"]],[[2,6,"pl-k"],[29,32,"pl-c1"],[35,38,"pl-c1"]],[[2,13,"pl-c1"]],[[1,5,"pl-k"]],[[2,6,"pl-k"],[15,20,"pl-c1"],[36,37,"pl-c1"]],[[2,7,"pl-c1"]],[],[[1,6,"pl-k"]],[],[],[[0,6,"pl-k"],[7,11,"pl-k"],[12,31,"pl-en"]],[[1,6,"pl-k"]],[[2,8,"pl-k"],[9,24,"pl-c1"]],[[1,5,"pl-k"]],[[2,8,"pl-k"]],[[1,6,"pl-k"]],[],[],[[0,6,"pl-k"],[7,11,"pl-k"],[12,27,"pl-en"],[28,36,"pl-c1"],[43,48,"pl-k"]],[[2,8,"pl-k"],[9,17,"pl-en"]],[[2,8,"pl-k"],[9,17,"pl-en"]],[],[[2,8,"pl-c1"],[17,18,"pl-c1"],[20,26,"pl-k"],[27,33,"pl-k"],[34,42,"pl-en"]],[[8,17,"pl-smi"]],[[8,19,"pl-smi"]],[[8,19,"pl-smi"],[22,23,"pl-c1"]],[],[[2,4,"pl-k"],[6,17,"pl-c1"],[23,28,"pl-c1"],[32,35,"pl-s"],[32,33,"pl-pds"],[34,35,"pl-pds"],[57,63,"pl-k"],[64,69,"pl-c1"]],[[2,6,"pl-k"],[12,30,"pl-c1"],[37,49,"pl-c1"]],[],[[2,6,"pl-k"],[13,18,"pl-c1"]],[[2,5,"pl-k"],[7,11,"pl-k"],[38,45,"pl-smi"]],[[4,9,"pl-k"],[10,14,"pl-k"]],[[4,6,"pl-k"],[11,15,"pl-c1"],[25,32,"pl-smi"],[34,45,"pl-k"],[46,55,"pl-c1"],[60,70,"pl-smi"]],[[12,16,"pl-c1"]],[[6,11,"pl-k"]],[],[],[],[[2,8,"pl-k"]],[],[],[[1,3,"pl-k"]],[[1,7,"pl-k"],[8,17,"pl-en"]],[[1,6,"pl-k"]],[],[[1,6,"pl-k"]],[[0,6,"pl-k"],[19,24,"pl-en"],[25,28,"pl-k"],[45,50,"pl-k"]],[[2,8,"pl-k"],[9,16,"pl-en"]],[[2,12,"pl-c1"]],[[2,6,"pl-k"],[12,30,"pl-c1"],[37,48,"pl-c1"]],[],[],[[2,5,"pl-k"],[7,11,"pl-k"],[40,48,"pl-smi"]],[[4,6,"pl-k"],[13,21,"pl-smi"],[37,45,"pl-smi"]],[],[[14,22,"pl-smi"],[24,33,"pl-smi"]],[[6,8,"pl-k"],[15,23,"pl-smi"],[25,34,"pl-smi"]],[[8,12,"pl-k"],[18,34,"pl-k"],[35,41,"pl-k"],[42,53,"pl-en"],[62,70,"pl-smi"]],[[8,12,"pl-k"]],[[8,10,"pl-k"],[12,21,"pl-c1"],[36,44,"pl-smi"]],[[10,16,"pl-k"],[17,28,"pl-c1"]],[],[[8,12,"pl-k"],[13,15,"pl-k"],[22,30,"pl-smi"],[32,41,"pl-smi"]],[[8,12,"pl-k"],[18,34,"pl-k"],[35,41,"pl-k"],[42,54,"pl-en"],[63,71,"pl-smi"]],[[8,10,"pl-k"],[13,34,"pl-c1"],[40,49,"pl-smi"]],[[10,14,"pl-k"]],[[10,12,"pl-k"],[14,23,"pl-c1"],[39,48,"pl-smi"]],[[12,59,"pl-c"],[12,14,"pl-c"]],[[12,16,"pl-k"],[36,45,"pl-smi"],[46,53,"pl-smi"],[54,55,"pl-c1"]],[[12,14,"pl-k"],[32,36,"pl-c1"],[56,60,"pl-c1"]],[[31,42,"pl-c1"]],[[14,18,"pl-k"]],[[14,20,"pl-k"],[21,32,"pl-c1"]],[],[],[],[],[],[],[[2,8,"pl-k"]],[],[[1,6,"pl-k"]],[],[[0,6,"pl-k"],[7,15,"pl-c1"],[16,36,"pl-en"]],[[4,9,"pl-k"],[29,34,"pl-k"],[52,55,"pl-k"]],[[4,7,"pl-k"],[24,28,"pl-k"],[42,46,"pl-k"]],[[34,40,"pl-c1"]],[[4,10,"pl-c1"],[36,42,"pl-c1"]],[[4,10,"pl-c1"],[30,36,"pl-c1"]],[[4,10,"pl-c1"],[31,36,"pl-k"]],[[2,6,"pl-k"],[14,27,"pl-c1"]],[[38,39,"pl-c1"]],[[6,15,"pl-c1"]],[[10,18,"pl-c1"],[26,32,"pl-k"],[33,41,"pl-en"],[47,51,"pl-k"],[62,66,"pl-k"]],[[8,10,"pl-k"],[18,23,"pl-c1"]],[[1,6,"pl-k"]],[[10,14,"pl-k"],[28,33,"pl-c1"]],[[10,12,"pl-k"],[25,30,"pl-c1"]],[[10,12,"pl-k"],[15,30,"pl-c1"]],[],[[12,18,"pl-k"],[19,24,"pl-c1"]],[],[[1,6,"pl-k"]],[],[],[[8,23,"pl-c1"],[31,35,"pl-c1"]],[],[[8,12,"pl-k"]],[[12,21,"pl-en"],[41,52,"pl-k"],[53,62,"pl-c1"]],[],[[8,10,"pl-k"],[18,19,"pl-c1"]],[[10,12,"pl-k"],[14,33,"pl-c1"]],[],[[12,18,"pl-k"],[19,24,"pl-c1"]],[],[[18,44,"pl-c1"]],[],[[10,12,"pl-k"]],[[12,14,"pl-k"],[60,64,"pl-c1"]],[[12,18,"pl-k"],[19,24,"pl-c1"]],[],[],[],[[8,23,"pl-c1"],[31,36,"pl-c1"]],[[8,27,"pl-c1"]],[],[[8,27,"pl-c1"]],[],[],[],[[8,14,"pl-k"],[15,19,"pl-c1"]],[],[],[[2,4,"pl-k"]],[],[[4,8,"pl-k"]],[[4,6,"pl-k"]],[],[],[[2,8,"pl-k"]],[],[],[[0,6,"pl-k"],[7,11,"pl-k"],[12,27,"pl-en"],[28,33,"pl-k"],[34,40,"pl-k"],[41,57,"pl-en"]],[[28,37,"pl-c1"],[65,68,"pl-k"]],[[2,4,"pl-k"],[11,20,"pl-smi"]],[[11,16,"pl-c1"],[17,33,"pl-k"],[34,39,"pl-k"],[40,46,"pl-k"],[47,58,"pl-en"],[70,78,"pl-smi"]],[[4,8,"pl-k"],[9,11,"pl-k"],[18,27,"pl-smi"]],[],[[8,13,"pl-c1"],[14,30,"pl-k"],[31,36,"pl-k"],[37,43,"pl-k"],[44,56,"pl-en"],[68,77,"pl-smi"]],[[4,8,"pl-k"]],[[4,10,"pl-k"],[11,16,"pl-c1"]],[],[],[[13,17,"pl-k"]],[[2,4,"pl-k"],[6,17,"pl-c1"],[18,34,"pl-k"],[35,40,"pl-k"],[41,47,"pl-k"],[48,56,"pl-en"]],[[24,28,"pl-c1"],[32,43,"pl-k"],[44,53,"pl-c1"],[61,65,"pl-c1"],[70,77,"pl-c1"]],[[18,19,"pl-c1"]],[[4,10,"pl-k"],[11,16,"pl-c1"]],[],[],[[13,17,"pl-c1"]],[[2,8,"pl-k"],[9,13,"pl-c1"]],[],[],[[0,6,"pl-k"],[7,11,"pl-k"],[12,33,"pl-en"],[34,42,"pl-c1"],[66,69,"pl-k"]],[[2,8,"pl-k"],[9,25,"pl-en"]],[[2,11,"pl-c1"],[23,29,"pl-k"]],[[2,4,"pl-k"],[7,18,"pl-c1"],[25,41,"pl-k"],[42,48,"pl-k"],[49,57,"pl-en"]],[],[[4,19,"pl-c1"]],[],[],[],[[0,6,"pl-k"],[7,11,"pl-k"],[12,34,"pl-en"],[35,43,"pl-c1"],[67,70,"pl-k"]],[[2,8,"pl-k"],[9,25,"pl-en"]],[[2,11,"pl-c1"],[23,29,"pl-k"]],[],[[2,4,"pl-k"],[7,18,"pl-c1"],[25,41,"pl-k"],[42,48,"pl-k"],[49,57,"pl-en"]],[],[[1,7,"pl-k"]],[[4,6,"pl-k"],[13,22,"pl-smi"]],[[1,3,"pl-k"]],[[6,12,"pl-k"],[13,18,"pl-en"]],[[6,15,"pl-c1"],[22,28,"pl-k"]],[[6,8,"pl-k"],[10,20,"pl-c1"],[69,70,"pl-c1"]],[[21,24,"pl-smi"]],[],[[1,5,"pl-k"],[48,60,"pl-c"],[48,50,"pl-c"]],[[6,11,"pl-c1"]],[[6,15,"pl-c1"],[22,28,"pl-k"]],[[6,8,"pl-k"],[10,20,"pl-c1"],[65,66,"pl-c1"]],[],[],[[1,6,"pl-k"]],[[6,12,"pl-k"]],[],[[1,6,"pl-k"]],[[4,19,"pl-c1"]],[],[],[],[[0,6,"pl-k"],[7,16,"pl-k"],[17,25,"pl-k"],[26,29,"pl-k"],[30,42,"pl-en"],[43,48,"pl-k"],[49,53,"pl-k"],[58,64,"pl-c1"]],[[43,51,"pl-k"],[52,55,"pl-k"]],[[2,8,"pl-k"],[15,16,"pl-c1"]],[],[[15,27,"pl-c1"]],[[23,24,"pl-c1"],[30,31,"pl-c1"]],[[19,80,"pl-c"],[19,21,"pl-c"]],[[42,50,"pl-k"],[51,54,"pl-k"],[67,68,"pl-c1"]],[[24,26,"pl-c1"]],[[23,34,"pl-k"],[35,43,"pl-k"],[44,48,"pl-k"]],[],[],[[0,6,"pl-k"],[7,15,"pl-k"],[16,19,"pl-k"],[20,27,"pl-en"],[28,33,"pl-k"]],[[2,8,"pl-k"],[9,21,"pl-c1"],[24,28,"pl-c1"],[34,38,"pl-c1"],[42,43,"pl-c1"]],[],[],[[0,9,"pl-k"],[10,13,"pl-en"]],[],[[0,6,"pl-k"],[7,16,"pl-k"],[17,25,"pl-k"],[26,29,"pl-k"],[30,38,"pl-k"],[38,40,"pl-s"],[38,39,"pl-pds"],[39,40,"pl-pds"],[43,48,"pl-k"],[49,53,"pl-k"],[58,64,"pl-c1"]],[[2,8,"pl-k"],[9,21,"pl-c1"],[28,29,"pl-c1"]],[],[],[[2,18,"pl-c"],[2,4,"pl-c"]],[],[[0,6,"pl-k"]],[[0,17,"pl-en"],[18,23,"pl-k"]],[[18,23,"pl-k"]],[[18,23,"pl-k"]],[[2,6,"pl-k"],[13,27,"pl-c1"]],[],[[2,6,"pl-k"],[22,26,"pl-c1"]],[[2,4,"pl-k"],[22,25,"pl-c1"],[31,37,"pl-k"],[42,48,"pl-smi"]],[],[[2,7,"pl-k"],[13,21,"pl-k"],[21,23,"pl-s"],[21,22,"pl-pds"],[22,23,"pl-pds"]],[],[[2,8,"pl-k"],[10,17,"pl-c1"]],[[2,9,"pl-k"],[11,17,"pl-k"]],[],[[2,6,"pl-k"],[7,12,"pl-s"],[7,8,"pl-pds"],[11,12,"pl-pds"],[16,22,"pl-k"],[23,33,"pl-s"],[23,24,"pl-pds"],[32,33,"pl-pds"]],[[2,6,"pl-k"],[7,12,"pl-s"],[7,8,"pl-pds"],[11,12,"pl-pds"],[16,22,"pl-k"],[23,33,"pl-s"],[23,24,"pl-pds"],[32,33,"pl-pds"]],[[2,6,"pl-k"],[7,12,"pl-s"],[7,8,"pl-pds"],[11,12,"pl-pds"]],[[2,6,"pl-k"],[7,13,"pl-s"],[7,8,"pl-pds"],[12,13,"pl-pds"],[17,23,"pl-k"],[24,35,"pl-s"],[24,25,"pl-pds"],[34,35,"pl-pds"]],[[2,6,"pl-k"],[7,11,"pl-s"],[7,8,"pl-pds"],[10,11,"pl-pds"]],[[2,6,"pl-k"],[7,12,"pl-s"],[7,8,"pl-pds"],[11,12,"pl-pds"],[16,22,"pl-k"],[23,40,"pl-s"],[23,24,"pl-pds"],[39,40,"pl-pds"]],[[2,6,"pl-k"],[7,12,"pl-s"],[7,8,"pl-pds"],[11,12,"pl-pds"],[16,22,"pl-k"],[23,35,"pl-s"],[23,24,"pl-pds"],[34,35,"pl-pds"]],[[2,6,"pl-k"],[7,12,"pl-s"],[7,8,"pl-pds"],[11,12,"pl-pds"],[16,22,"pl-k"],[23,33,"pl-s"],[23,24,"pl-pds"],[32,33,"pl-pds"]],[],[[2,6,"pl-k"],[7,13,"pl-s"],[7,8,"pl-pds"],[12,13,"pl-pds"],[17,23,"pl-k"],[24,36,"pl-s"],[24,25,"pl-pds"],[35,36,"pl-pds"]],[[2,6,"pl-k"],[7,13,"pl-s"],[7,8,"pl-pds"],[12,13,"pl-pds"],[17,23,"pl-k"],[24,36,"pl-s"],[24,25,"pl-pds"],[35,36,"pl-pds"]],[[2,6,"pl-k"],[7,12,"pl-s"],[7,8,"pl-pds"],[11,12,"pl-pds"],[16,22,"pl-k"],[23,34,"pl-s"],[23,24,"pl-pds"],[33,34,"pl-pds"]],[[2,6,"pl-k"],[7,12,"pl-s"],[7,8,"pl-pds"],[11,12,"pl-pds"],[16,22,"pl-k"],[23,34,"pl-s"],[23,24,"pl-pds"],[33,34,"pl-pds"]],[[2,6,"pl-k"],[7,12,"pl-s"],[7,8,"pl-pds"],[11,12,"pl-pds"],[16,22,"pl-k"],[23,34,"pl-s"],[23,24,"pl-pds"],[33,34,"pl-pds"]],[[2,6,"pl-k"],[7,12,"pl-s"],[7,8,"pl-pds"],[11,12,"pl-pds"],[16,22,"pl-k"],[23,38,"pl-s"],[23,24,"pl-pds"],[37,38,"pl-pds"]],[[2,6,"pl-k"],[7,13,"pl-s"],[7,8,"pl-pds"],[12,13,"pl-pds"],[17,23,"pl-k"],[24,36,"pl-s"],[24,25,"pl-pds"],[35,36,"pl-pds"]],[[2,6,"pl-k"],[7,12,"pl-s"],[7,8,"pl-pds"],[11,12,"pl-pds"],[16,22,"pl-k"],[23,37,"pl-s"],[23,24,"pl-pds"],[36,37,"pl-pds"]],[[2,6,"pl-k"],[7,12,"pl-s"],[7,8,"pl-pds"],[11,12,"pl-pds"],[16,22,"pl-k"],[23,35,"pl-s"],[23,24,"pl-pds"],[34,35,"pl-pds"]],[[2,6,"pl-k"],[7,13,"pl-s"],[7,8,"pl-pds"],[12,13,"pl-pds"],[17,23,"pl-k"],[24,36,"pl-s"],[24,25,"pl-pds"],[35,36,"pl-pds"]],[[2,6,"pl-k"],[7,12,"pl-s"],[7,8,"pl-pds"],[11,12,"pl-pds"]],[[2,6,"pl-k"],[7,13,"pl-s"],[7,8,"pl-pds"],[12,13,"pl-pds"],[17,23,"pl-k"],[24,36,"pl-s"],[24,25,"pl-pds"],[35,36,"pl-pds"]],[],[[2,6,"pl-k"],[7,12,"pl-s"],[7,8,"pl-pds"],[11,12,"pl-pds"],[16,22,"pl-k"],[23,34,"pl-s"],[23,24,"pl-pds"],[33,34,"pl-pds"]],[[2,6,"pl-k"],[7,13,"pl-s"],[7,8,"pl-pds"],[12,13,"pl-pds"],[17,23,"pl-k"],[24,36,"pl-s"],[24,25,"pl-pds"],[35,36,"pl-pds"]],[[2,6,"pl-k"],[7,13,"pl-s"],[7,8,"pl-pds"],[12,13,"pl-pds"],[17,23,"pl-k"],[24,36,"pl-s"],[24,25,"pl-pds"],[35,36,"pl-pds"]],[],[[2,6,"pl-k"],[7,12,"pl-s"],[7,8,"pl-pds"],[11,12,"pl-pds"],[16,22,"pl-k"],[23,34,"pl-s"],[23,24,"pl-pds"],[33,34,"pl-pds"]],[[2,6,"pl-k"],[7,13,"pl-s"],[7,8,"pl-pds"],[12,13,"pl-pds"],[17,23,"pl-k"],[24,36,"pl-s"],[24,25,"pl-pds"],[35,36,"pl-pds"]],[[2,6,"pl-k"],[7,13,"pl-s"],[7,8,"pl-pds"],[12,13,"pl-pds"],[17,23,"pl-k"],[24,36,"pl-s"],[24,25,"pl-pds"],[35,36,"pl-pds"]],[[2,6,"pl-k"],[7,12,"pl-s"],[7,8,"pl-pds"],[11,12,"pl-pds"],[16,22,"pl-k"],[23,35,"pl-s"],[23,24,"pl-pds"],[34,35,"pl-pds"]],[],[[2,6,"pl-k"],[7,12,"pl-s"],[7,8,"pl-pds"],[11,12,"pl-pds"],[16,22,"pl-k"],[23,33,"pl-s"],[23,24,"pl-pds"],[32,33,"pl-pds"]],[[2,6,"pl-k"],[7,12,"pl-s"],[7,8,"pl-pds"],[11,12,"pl-pds"],[16,22,"pl-k"],[23,33,"pl-s"],[23,24,"pl-pds"],[32,33,"pl-pds"]],[[2,6,"pl-k"],[7,13,"pl-s"],[7,8,"pl-pds"],[12,13,"pl-pds"],[17,23,"pl-k"],[24,35,"pl-s"],[24,25,"pl-pds"],[34,35,"pl-pds"]],[[2,6,"pl-k"],[7,14,"pl-s"],[7,8,"pl-pds"],[13,14,"pl-pds"],[18,24,"pl-k"],[25,37,"pl-s"],[25,26,"pl-pds"],[36,37,"pl-pds"]],[],[[2,6,"pl-k"],[7,11,"pl-s"],[7,8,"pl-pds"],[10,11,"pl-pds"],[15,21,"pl-k"],[22,51,"pl-s"],[22,23,"pl-pds"],[50,51,"pl-pds"]],[[2,6,"pl-k"],[7,13,"pl-s"],[7,8,"pl-pds"],[12,13,"pl-pds"],[17,23,"pl-k"],[24,46,"pl-s"],[24,25,"pl-pds"],[45,46,"pl-pds"]],[[2,6,"pl-k"],[7,12,"pl-s"],[7,8,"pl-pds"],[11,12,"pl-pds"],[16,22,"pl-k"],[23,40,"pl-s"],[23,24,"pl-pds"],[39,40,"pl-pds"]],[[2,6,"pl-k"],[7,13,"pl-s"],[7,8,"pl-pds"],[12,13,"pl-pds"],[17,23,"pl-k"],[24,42,"pl-s"],[24,25,"pl-pds"],[41,42,"pl-pds"]],[[2,6,"pl-k"],[7,12,"pl-s"],[7,8,"pl-pds"],[11,12,"pl-pds"],[16,22,"pl-k"],[23,44,"pl-s"],[23,24,"pl-pds"],[43,44,"pl-pds"]],[[2,6,"pl-k"],[7,12,"pl-s"],[7,8,"pl-pds"],[11,12,"pl-pds"],[16,22,"pl-k"],[23,42,"pl-s"],[23,24,"pl-pds"],[41,42,"pl-pds"]],[[2,6,"pl-k"],[7,12,"pl-s"],[7,8,"pl-pds"],[11,12,"pl-pds"]],[[2,6,"pl-k"],[7,14,"pl-s"],[7,8,"pl-pds"],[13,14,"pl-pds"],[18,24,"pl-k"],[25,48,"pl-s"],[25,26,"pl-pds"],[47,48,"pl-pds"]],[[2,6,"pl-k"],[7,13,"pl-s"],[7,8,"pl-pds"],[12,13,"pl-pds"],[17,23,"pl-k"],[24,46,"pl-s"],[24,25,"pl-pds"],[45,46,"pl-pds"]],[[2,6,"pl-k"],[7,12,"pl-s"],[7,8,"pl-pds"],[11,12,"pl-pds"],[16,22,"pl-k"],[23,40,"pl-s"],[23,24,"pl-pds"],[39,40,"pl-pds"]],[[2,6,"pl-k"],[7,11,"pl-s"],[7,8,"pl-pds"],[10,11,"pl-pds"],[15,21,"pl-k"],[22,40,"pl-s"],[22,23,"pl-pds"],[39,40,"pl-pds"]],[[2,6,"pl-k"],[7,12,"pl-s"],[7,8,"pl-pds"],[11,12,"pl-pds"],[16,22,"pl-k"],[23,40,"pl-s"],[23,24,"pl-pds"],[39,40,"pl-pds"]],[[2,6,"pl-k"],[7,13,"pl-s"],[7,8,"pl-pds"],[12,13,"pl-pds"],[17,23,"pl-k"],[24,42,"pl-s"],[24,25,"pl-pds"],[41,42,"pl-pds"]],[],[],[],[[0,6,"pl-k"],[7,11,"pl-k"],[12,37,"pl-en"],[38,43,"pl-k"]],[[2,7,"pl-k"],[13,21,"pl-k"],[21,23,"pl-s"],[21,22,"pl-pds"],[22,23,"pl-pds"]],[],[[2,6,"pl-k"],[13,20,"pl-c1"]],[],[[2,8,"pl-k"]],[[2,6,"pl-k"],[7,22,"pl-s"],[7,8,"pl-pds"],[21,22,"pl-pds"]],[[2,6,"pl-k"],[7,31,"pl-s"],[7,8,"pl-pds"],[30,31,"pl-pds"]],[[2,6,"pl-k"],[7,25,"pl-s"],[7,8,"pl-pds"],[24,25,"pl-pds"]],[[2,6,"pl-k"],[7,24,"pl-s"],[7,8,"pl-pds"],[23,24,"pl-pds"]],[[2,6,"pl-k"],[7,29,"pl-s"],[7,8,"pl-pds"],[28,29,"pl-pds"]],[[2,6,"pl-k"],[7,30,"pl-s"],[7,8,"pl-pds"],[29,30,"pl-pds"],[34,40,"pl-k"],[41,45,"pl-c1"]],[],[[2,6,"pl-k"],[7,26,"pl-s"],[7,8,"pl-pds"],[25,26,"pl-pds"],[30,36,"pl-k"],[37,42,"pl-c1"]],[],[[2,9,"pl-k"],[11,17,"pl-k"],[32,37,"pl-c1"],[38,45,"pl-s"],[38,39,"pl-pds"],[44,45,"pl-pds"],[47,48,"pl-c1"]],[],[],[],[[0,6,"pl-k"],[20,33,"pl-en"],[34,39,"pl-k"],[54,59,"pl-k"]],[[2,6,"pl-k"]],[[6,39,"pl-c1"],[44,60,"pl-c1"],[61,75,"pl-s"],[61,62,"pl-pds"],[74,75,"pl-pds"]],[[2,4,"pl-k"],[14,20,"pl-k"]],[],[[2,7,"pl-k"],[8,12,"pl-k"],[22,38,"pl-c1"],[39,56,"pl-s"],[39,40,"pl-pds"],[55,56,"pl-pds"]],[[3,7,"pl-k"]],[],[[1,6,"pl-k"]],[[2,47,"pl-c"],[2,4,"pl-c"]],[[10,14,"pl-c1"],[15,19,"pl-s"],[15,16,"pl-pds"],[18,19,"pl-pds"]],[[2,4,"pl-k"],[13,19,"pl-k"]],[[1,6,"pl-k"]],[],[[1,6,"pl-k"]],[[2,51,"pl-c"],[2,4,"pl-c"]],[[10,14,"pl-c1"],[15,21,"pl-s"],[15,16,"pl-pds"],[20,21,"pl-pds"]],[[2,4,"pl-k"],[13,19,"pl-k"]],[[1,6,"pl-k"]],[],[[1,6,"pl-k"]],[[2,51,"pl-c"],[2,4,"pl-c"]],[[10,14,"pl-c1"],[15,21,"pl-s"],[15,16,"pl-pds"],[20,21,"pl-pds"]],[[2,4,"pl-k"],[13,19,"pl-k"]],[[1,6,"pl-k"]],[],[[2,8,"pl-k"]],[],[],[[0,6,"pl-k"],[7,11,"pl-k"],[12,34,"pl-en"],[35,40,"pl-k"],[41,45,"pl-k"],[53,59,"pl-c1"]],[[35,39,"pl-k"],[40,48,"pl-c"],[40,42,"pl-c"],[46,48,"pl-c"]],[[2,4,"pl-k"],[22,28,"pl-k"],[29,33,"pl-c1"]],[[2,8,"pl-k"],[9,17,"pl-c1"]],[],[],[[1,6,"pl-k"]],[[0,6,"pl-k"],[7,39,"pl-en"]],[[2,13,"pl-c1"],[22,23,"pl-c1"],[25,31,"pl-k"]],[[8,14,"pl-smi"]],[[8,13,"pl-smi"]],[[8,14,"pl-smi"]],[],[[14,26,"pl-c1"],[70,72,"pl-c1"],[74,75,"pl-c1"]],[],[],[],[[0,6,"pl-k"],[7,40,"pl-en"],[45,55,"pl-c1"]],[],[[0,6,"pl-k"],[7,11,"pl-k"],[12,37,"pl-en"],[38,43,"pl-k"],[44,48,"pl-k"],[56,62,"pl-c1"]],[[38,42,"pl-k"]],[[2,8,"pl-c1"]],[],[[2,4,"pl-k"]],[[4,13,"pl-k"],[14,20,"pl-c1"]],[[29,37,"pl-c1"],[44,52,"pl-smi"]],[],[[10,18,"pl-smi"],[21,32,"pl-k"],[33,41,"pl-c1"],[48,56,"pl-smi"]],[],[[10,17,"pl-smi"],[20,30,"pl-k"],[40,56,"pl-k"],[57,62,"pl-k"]],[],[[25,33,"pl-smi"]],[[18,26,"pl-smi"]],[],[[4,8,"pl-k"],[41,42,"pl-c1"]],[[4,8,"pl-k"]],[],[[15,19,"pl-k"]],[[4,6,"pl-k"]],[[12,21,"pl-smi"],[24,35,"pl-k"],[47,51,"pl-c1"]],[[12,20,"pl-smi"],[23,39,"pl-k"],[54,58,"pl-c1"]],[],[[12,19,"pl-c1"]],[[6,8,"pl-k"],[35,41,"pl-k"],[42,47,"pl-c1"]],[],[[6,8,"pl-k"],[11,19,"pl-c1"],[25,29,"pl-c1"],[38,42,"pl-c1"],[53,62,"pl-smi"]],[[8,14,"pl-k"],[15,20,"pl-c1"]],[],[[6,11,"pl-k"],[19,28,"pl-smi"],[32,33,"pl-c1"]],[],[[4,10,"pl-c1"]],[],[[4,10,"pl-c1"],[17,25,"pl-smi"],[29,30,"pl-c1"]],[[4,9,"pl-k"],[25,26,"pl-c1"]],[],[[2,8,"pl-k"],[9,13,"pl-c1"]],[],[],[[0,6,"pl-k"],[7,43,"pl-en"]],[[2,13,"pl-c1"],[22,23,"pl-c1"],[25,31,"pl-k"]],[[8,14,"pl-smi"]],[[8,13,"pl-smi"]],[[8,14,"pl-smi"]],[],[[2,76,"pl-c"],[2,4,"pl-c"]],[[2,78,"pl-c"],[2,4,"pl-c"]],[[2,73,"pl-c"],[2,4,"pl-c"]],[[2,13,"pl-c"],[2,4,"pl-c"]],[[14,26,"pl-c1"],[35,37,"pl-c1"],[40,42,"pl-c1"]],[],[],[[0,6,"pl-k"],[7,44,"pl-en"],[49,59,"pl-c1"]],[],[[0,6,"pl-k"],[7,11,"pl-k"],[12,39,"pl-en"],[42,47,"pl-k"],[50,56,"pl-k"]],[],[[0,6,"pl-k"],[7,11,"pl-k"],[12,41,"pl-en"],[42,47,"pl-k"],[48,52,"pl-k"],[60,66,"pl-c1"]],[],[[2,8,"pl-c1"]],[],[[2,6,"pl-k"]],[],[[2,4,"pl-k"]],[[4,13,"pl-k"],[14,20,"pl-c1"]],[[29,37,"pl-c1"],[44,52,"pl-smi"]],[],[[10,18,"pl-smi"],[21,32,"pl-k"],[33,41,"pl-c1"],[48,56,"pl-smi"]],[],[[10,17,"pl-smi"],[20,30,"pl-k"],[40,56,"pl-k"],[57,62,"pl-k"]],[],[[25,33,"pl-smi"]],[[18,26,"pl-smi"]],[],[[15,19,"pl-k"]],[[4,9,"pl-k"],[17,25,"pl-smi"],[28,29,"pl-c1"]],[[12,21,"pl-smi"],[24,35,"pl-k"],[47,51,"pl-c1"]],[[12,20,"pl-smi"],[23,39,"pl-k"],[54,58,"pl-c1"]],[],[[12,19,"pl-c1"]],[],[[6,12,"pl-c1"]],[[6,12,"pl-k"]],[[6,10,"pl-k"]],[[6,10,"pl-k"]],[[6,10,"pl-k"],[24,34,"pl-c1"],[44,50,"pl-k"],[51,56,"pl-c1"]],[],[],[[6,8,"pl-k"],[11,19,"pl-c1"],[25,29,"pl-c1"],[38,42,"pl-c1"],[53,62,"pl-smi"]],[[8,14,"pl-k"],[15,20,"pl-c1"]],[],[],[],[[4,6,"pl-k"],[46,52,"pl-k"],[53,58,"pl-c1"]],[],[[4,9,"pl-k"],[25,26,"pl-c1"]],[],[[2,8,"pl-k"],[9,13,"pl-c1"]],[],[[1,6,"pl-k"]],[],[[1,6,"pl-k"]],[[0,6,"pl-k"],[7,43,"pl-en"]],[[11,38,"pl-c1"],[39,46,"pl-c1"],[48,55,"pl-c1"],[57,64,"pl-c1"]],[],[],[[0,6,"pl-k"],[7,44,"pl-en"]],[[2,30,"pl-c1"]],[],[],[[0,6,"pl-k"],[7,11,"pl-k"],[12,39,"pl-en"],[40,45,"pl-k"],[46,50,"pl-k"],[58,64,"pl-c1"]],[[40,44,"pl-k"]],[[13,20,"pl-c1"]],[],[[2,6,"pl-k"]],[[2,6,"pl-k"]],[[2,6,"pl-k"],[17,33,"pl-k"],[34,39,"pl-k"],[40,47,"pl-c1"]],[],[[2,5,"pl-k"]],[[4,6,"pl-k"]],[[6,8,"pl-k"],[10,33,"pl-c1"],[45,50,"pl-k"]],[[6,10,"pl-k"]],[[6,8,"pl-k"],[27,32,"pl-k"]],[],[],[[4,8,"pl-k"],[30,34,"pl-c1"]],[[4,8,"pl-k"],[25,29,"pl-c1"]],[],[[4,6,"pl-k"],[9,36,"pl-c1"]],[[64,71,"pl-c1"]],[[6,12,"pl-k"],[13,18,"pl-c1"]],[],[],[[4,8,"pl-k"],[29,33,"pl-c1"]],[[4,6,"pl-k"]],[[6,14,"pl-c1"],[15,31,"pl-k"],[32,37,"pl-k"],[38,42,"pl-k"],[51,55,"pl-c1"]],[],[],[],[[2,8,"pl-k"],[9,13,"pl-c1"]],[],[],[[0,6,"pl-k"],[7,47,"pl-en"]],[[14,41,"pl-c1"],[42,43,"pl-c1"],[45,46,"pl-c1"],[48,49,"pl-c1"]],[],[],[],[],[[0,6,"pl-k"],[7,48,"pl-en"]],[[2,4,"pl-k"],[19,47,"pl-c1"]],[],[],[[0,6,"pl-k"],[7,11,"pl-k"],[12,41,"pl-en"],[44,49,"pl-k"],[52,58,"pl-k"]],[],[[0,6,"pl-k"],[7,11,"pl-k"],[12,43,"pl-en"],[44,49,"pl-k"],[50,54,"pl-k"]],[[44,50,"pl-c1"]],[],[[2,4,"pl-k"]],[],[[4,10,"pl-k"],[11,12,"pl-c1"]],[],[],[[2,6,"pl-k"],[17,33,"pl-k"],[34,39,"pl-k"],[40,47,"pl-c1"]],[[2,8,"pl-c1"]],[[2,8,"pl-c1"]],[],[],[],[[13,17,"pl-k"]],[[2,7,"pl-k"]],[[4,8,"pl-k"],[26,30,"pl-c1"]],[[4,10,"pl-c1"],[28,32,"pl-c1"]],[],[[16,45,"pl-c1"]],[],[[8,24,"pl-k"],[25,32,"pl-c1"]],[],[[4,6,"pl-k"],[52,58,"pl-k"],[59,64,"pl-c1"]],[],[[4,6,"pl-k"],[9,17,"pl-c1"],[23,27,"pl-c1"],[36,40,"pl-c1"],[59,65,"pl-k"],[66,71,"pl-c1"]],[],[],[[2,8,"pl-k"]],[],[],[[1,6,"pl-k"]],[],[[1,6,"pl-k"]],[[0,6,"pl-k"],[7,39,"pl-en"]],[[9,24,"pl-c1"]],[[2,24,"pl-c1"]],[],[],[[0,6,"pl-k"],[7,40,"pl-en"],[45,58,"pl-c1"]],[],[[0,6,"pl-k"],[7,11,"pl-k"],[12,37,"pl-en"],[38,43,"pl-k"],[44,48,"pl-k"],[56,62,"pl-c1"]],[[38,42,"pl-k"]],[[13,17,"pl-k"]],[],[],[[44,45,"pl-c1"]],[],[[2,6,"pl-k"]],[[2,4,"pl-k"]],[[34,38,"pl-c1"],[73,74,"pl-c1"]],[[4,10,"pl-c1"],[11,16,"pl-k"],[29,49,"pl-c1"]],[],[[4,6,"pl-k"],[8,20,"pl-c1"],[35,41,"pl-k"],[42,47,"pl-c1"]],[],[[4,6,"pl-k"],[9,17,"pl-c1"],[23,27,"pl-c1"],[38,41,"pl-smi"],[46,52,"pl-k"],[53,58,"pl-c1"]],[],[[36,37,"pl-c1"],[48,51,"pl-smi"],[61,65,"pl-smi"]],[],[[4,9,"pl-k"]],[],[[2,8,"pl-k"],[9,13,"pl-c1"]],[],[],[[0,6,"pl-k"],[7,43,"pl-en"],[55,70,"pl-c1"]],[],[[0,6,"pl-k"],[7,44,"pl-en"],[49,62,"pl-c1"]],[],[[0,6,"pl-k"],[7,11,"pl-k"],[12,39,"pl-en"],[42,47,"pl-k"],[50,56,"pl-k"],[65,72,"pl-c1"]],[],[[0,6,"pl-k"],[7,11,"pl-k"],[12,41,"pl-en"],[42,47,"pl-k"],[48,52,"pl-k"],[60,66,"pl-c1"]],[],[[13,17,"pl-k"]],[[44,45,"pl-c1"]],[],[[2,7,"pl-k"],[15,18,"pl-smi"],[27,31,"pl-smi"]],[[34,38,"pl-c1"],[73,74,"pl-c1"]],[[4,10,"pl-c1"],[11,16,"pl-k"],[29,50,"pl-c1"]],[],[[4,6,"pl-k"],[8,20,"pl-c1"],[35,41,"pl-k"],[42,47,"pl-c1"]],[],[[4,6,"pl-k"],[9,17,"pl-c1"],[23,27,"pl-c1"],[38,41,"pl-smi"],[46,52,"pl-k"],[53,58,"pl-c1"]],[],[],[[2,8,"pl-k"],[9,13,"pl-c1"]],[],[[1,6,"pl-k"]],[],[[0,6,"pl-k"],[7,11,"pl-k"],[12,22,"pl-en"],[23,28,"pl-k"],[47,52,"pl-k"]],[[2,8,"pl-k"],[17,21,"pl-c1"],[38,41,"pl-c1"]],[],[],[[0,6,"pl-k"],[7,12,"pl-k"],[13,17,"pl-k"],[19,35,"pl-en"],[36,41,"pl-k"]],[[36,41,"pl-k"],[60,65,"pl-k"],[66,70,"pl-k"]],[[36,42,"pl-c1"]],[[2,6,"pl-k"],[21,32,"pl-c1"]],[[2,6,"pl-k"],[16,21,"pl-smi"]],[[2,14,"pl-c1"],[19,30,"pl-k"],[31,38,"pl-c1"]],[[2,4,"pl-k"],[16,22,"pl-smi"],[26,32,"pl-k"],[37,43,"pl-smi"],[44,49,"pl-c1"]],[[2,8,"pl-k"]],[],[],[[0,9,"pl-k"],[10,18,"pl-k"]],[[0,6,"pl-k"],[7,11,"pl-k"],[12,24,"pl-en"],[25,30,"pl-k"],[31,35,"pl-k"],[42,47,"pl-k"],[48,52,"pl-k"]],[[2,35,"pl-c"],[2,4,"pl-c"]],[[2,7,"pl-k"],[22,37,"pl-c1"],[43,44,"pl-c1"]],[],[],[],[[2,6,"pl-k"]],[[2,7,"pl-k"],[26,29,"pl-s"],[26,27,"pl-pds"],[28,29,"pl-pds"]],[],[],[],[[2,6,"pl-k"],[14,25,"pl-c1"]],[[2,4,"pl-k"],[7,36,"pl-c1"],[46,52,"pl-k"],[53,58,"pl-c1"]],[],[[2,4,"pl-k"],[18,24,"pl-k"],[25,30,"pl-c1"]],[],[[2,6,"pl-k"]],[],[[2,4,"pl-k"],[14,17,"pl-s"],[14,15,"pl-pds"],[16,17,"pl-pds"],[21,27,"pl-k"],[28,33,"pl-c1"]],[],[[2,7,"pl-k"],[20,35,"pl-c1"]],[],[],[],[[2,4,"pl-k"]],[[4,8,"pl-k"]],[[4,6,"pl-k"],[20,26,"pl-k"],[27,32,"pl-c1"]],[],[[4,8,"pl-k"],[15,26,"pl-c1"]],[[4,8,"pl-k"],[15,26,"pl-c1"]],[],[[4,6,"pl-k"],[9,39,"pl-c1"],[48,54,"pl-k"],[55,60,"pl-c1"]],[],[[4,6,"pl-k"],[8,26,"pl-c1"],[32,42,"pl-s"],[32,33,"pl-pds"],[41,42,"pl-pds"]],[[8,26,"pl-c1"],[32,41,"pl-s"],[32,33,"pl-pds"],[40,41,"pl-pds"]],[[6,8,"pl-c1"]],[[6,10,"pl-k"]],[[6,8,"pl-c1"],[14,24,"pl-c1"],[30,35,"pl-c1"]],[],[],[[4,10,"pl-k"],[11,15,"pl-c1"]],[],[],[[2,8,"pl-k"],[9,14,"pl-c1"]],[],[],[[0,6,"pl-k"],[7,11,"pl-k"],[12,24,"pl-en"]],[[2,7,"pl-k"],[8,12,"pl-k"],[22,26,"pl-c1"]],[[2,6,"pl-k"]],[[21,32,"pl-smi"]],[],[[2,5,"pl-k"]],[[4,6,"pl-k"],[21,28,"pl-c1"],[34,40,"pl-k"],[41,46,"pl-c1"]],[],[[4,40,"pl-c"],[4,6,"pl-c"]],[[4,8,"pl-k"],[31,32,"pl-c1"]],[[4,6,"pl-k"],[20,33,"pl-c1"]],[[6,45,"pl-c"],[6,8,"pl-c"]],[[6,8,"pl-k"],[22,26,"pl-c1"],[32,33,"pl-c1"],[37,42,"pl-k"]],[[6,10,"pl-k"]],[[1,6,"pl-k"]],[[6,45,"pl-c"],[6,8,"pl-c"]],[[6,8,"pl-k"],[22,26,"pl-c1"],[32,33,"pl-c1"],[37,42,"pl-k"]],[[28,29,"pl-c1"]],[[1,5,"pl-k"]],[[6,14,"pl-k"],[16,37,"pl-c"],[16,18,"pl-c"]],[[1,6,"pl-k"]],[],[],[[4,6,"pl-k"],[20,24,"pl-c1"],[61,67,"pl-k"],[68,73,"pl-c1"]],[],[[4,30,"pl-c"],[4,6,"pl-c"]],[[4,8,"pl-k"],[27,30,"pl-c1"],[47,51,"pl-c1"]],[],[[4,6,"pl-k"],[9,21,"pl-c1"],[34,37,"pl-c1"]],[[26,31,"pl-k"],[50,55,"pl-k"]],[[32,39,"pl-c1"]],[],[[6,12,"pl-k"],[13,18,"pl-c1"]],[],[],[],[[2,8,"pl-k"],[9,13,"pl-c1"]],[],[],[[0,6,"pl-k"],[7,11,"pl-k"],[12,36,"pl-en"],[51,59,"pl-c1"]],[],[],[[2,6,"pl-k"]],[],[[2,10,"pl-c1"],[15,16,"pl-c1"]],[[2,7,"pl-k"]],[[4,8,"pl-k"],[20,31,"pl-k"],[32,38,"pl-c1"]],[[4,8,"pl-k"],[18,22,"pl-c1"]],[[4,6,"pl-k"],[13,14,"pl-c1"],[18,24,"pl-k"],[25,30,"pl-c1"]],[],[[4,6,"pl-k"],[9,12,"pl-c1"],[18,29,"pl-k"],[30,36,"pl-c1"],[53,59,"pl-k"],[60,65,"pl-c1"]],[[9,20,"pl-k"],[21,29,"pl-c1"]],[],[[4,6,"pl-k"]],[[6,8,"pl-k"],[11,19,"pl-c1"],[31,37,"pl-k"],[38,43,"pl-c1"]],[],[],[],[[2,8,"pl-k"],[9,13,"pl-c1"]],[],[],[[0,6,"pl-k"],[7,11,"pl-k"],[12,36,"pl-en"],[51,59,"pl-c1"]],[[2,6,"pl-k"]],[[2,10,"pl-c1"],[15,16,"pl-c1"]],[[2,7,"pl-k"]],[[4,8,"pl-k"],[20,31,"pl-k"],[32,38,"pl-c1"]],[[4,8,"pl-k"],[18,22,"pl-c1"]],[[4,6,"pl-k"],[13,14,"pl-c1"],[18,24,"pl-k"]],[[9,20,"pl-k"],[21,29,"pl-c1"]],[],[],[],[[0,6,"pl-k"],[7,11,"pl-k"],[12,39,"pl-en"]],[],[[2,6,"pl-k"]],[[2,10,"pl-c1"],[15,16,"pl-c1"]],[[2,5,"pl-k"]],[[4,8,"pl-k"],[18,22,"pl-c1"]],[[4,6,"pl-k"],[13,14,"pl-c1"],[18,24,"pl-k"],[25,29,"pl-c1"]],[[4,6,"pl-k"],[12,13,"pl-c1"],[17,23,"pl-k"],[24,29,"pl-c1"]],[],[[4,6,"pl-k"],[9,12,"pl-c1"],[18,29,"pl-k"],[30,36,"pl-c1"],[45,46,"pl-c1"],[51,57,"pl-k"],[58,63,"pl-c1"]],[[9,20,"pl-k"],[21,29,"pl-c1"]],[],[],[[2,8,"pl-k"],[9,13,"pl-c1"]],[],[],[[0,9,"pl-k"],[10,18,"pl-k"]],[[0,6,"pl-k"],[7,11,"pl-k"],[12,32,"pl-en"]],[],[[2,7,"pl-k"],[8,12,"pl-k"],[22,24,"pl-c1"]],[[2,6,"pl-k"]],[],[[21,32,"pl-smi"]],[],[[2,4,"pl-k"],[19,26,"pl-c1"],[32,38,"pl-k"],[39,44,"pl-c1"]],[],[[2,10,"pl-k"],[11,15,"pl-k"]],[[2,7,"pl-k"],[9,13,"pl-c1"]],[[4,8,"pl-k"]],[],[[16,28,"pl-c1"],[41,44,"pl-c1"],[58,60,"pl-c1"]],[],[[4,6,"pl-k"],[31,34,"pl-c1"],[40,46,"pl-k"],[47,52,"pl-c1"]],[[4,6,"pl-k"],[34,40,"pl-k"],[41,46,"pl-c1"]],[],[[4,6,"pl-k"],[21,22,"pl-c1"],[26,31,"pl-k"]],[],[[4,6,"pl-k"],[9,33,"pl-c1"],[51,58,"pl-c1"]],[[6,12,"pl-k"],[13,18,"pl-c1"]],[],[],[[4,6,"pl-k"],[21,28,"pl-c1"],[34,40,"pl-k"],[41,46,"pl-c1"]],[],[[4,6,"pl-k"],[8,14,"pl-c1"],[27,30,"pl-c1"],[34,40,"pl-s"],[34,35,"pl-pds"],[35,39,"pl-cce"],[39,40,"pl-pds"],[45,46,"pl-c1"],[50,56,"pl-k"],[57,62,"pl-c1"]],[],[[4,6,"pl-k"],[21,28,"pl-c1"],[34,40,"pl-k"],[41,46,"pl-c1"]],[],[],[[2,8,"pl-c1"],[22,23,"pl-c1"]],[],[[2,75,"pl-c"],[2,4,"pl-c"]],[[2,74,"pl-c"],[2,4,"pl-c"]],[[2,80,"pl-c"],[2,4,"pl-c"]],[[2,76,"pl-c"],[2,4,"pl-c"]],[[2,4,"pl-c"],[2,4,"pl-c"]],[[2,74,"pl-c"],[2,4,"pl-c"]],[[2,78,"pl-c"],[2,4,"pl-c"]],[[2,71,"pl-c"],[2,4,"pl-c"]],[[2,62,"pl-c"],[2,4,"pl-c"]],[[2,4,"pl-c"],[2,4,"pl-c"]],[[2,72,"pl-c"],[2,4,"pl-c"]],[[2,57,"pl-c"],[2,4,"pl-c"]],[[2,4,"pl-k"],[19,26,"pl-c1"],[32,38,"pl-k"],[39,43,"pl-c1"]],[],[[2,7,"pl-k"],[9,15,"pl-c1"],[28,31,"pl-c1"],[35,41,"pl-s"],[35,36,"pl-pds"],[36,40,"pl-cce"],[40,41,"pl-pds"],[46,47,"pl-c1"]],[[4,6,"pl-k"],[20,24,"pl-c1"],[61,67,"pl-k"],[68,73,"pl-c1"]],[],[[4,30,"pl-c"],[4,6,"pl-c"]],[[4,13,"pl-k"],[14,18,"pl-k"],[41,42,"pl-c1"]],[[4,8,"pl-k"],[27,30,"pl-c1"],[47,51,"pl-c1"]],[],[[4,16,"pl-c1"],[29,32,"pl-c1"]],[[21,26,"pl-k"],[45,50,"pl-k"]],[[21,28,"pl-smi"],[29,36,"pl-c1"]],[],[],[[4,6,"pl-k"],[21,28,"pl-c1"],[34,40,"pl-k"],[41,46,"pl-c1"]],[],[],[[2,8,"pl-k"],[9,13,"pl-c1"]],[],[],[[0,6,"pl-k"],[7,11,"pl-k"],[12,40,"pl-en"],[41,46,"pl-k"]],[[2,8,"pl-k"],[9,27,"pl-c1"]],[[6,22,"pl-c1"],[32,51,"pl-s"],[32,33,"pl-pds"],[50,51,"pl-pds"],[53,55,"pl-s"],[53,54,"pl-pds"],[54,55,"pl-pds"],[57,58,"pl-c1"],[61,70,"pl-s"],[61,62,"pl-pds"],[69,70,"pl-pds"]],[],[],[[0,9,"pl-k"],[10,18,"pl-k"],[22,30,"pl-k"]],[[0,4,"pl-k"],[5,29,"pl-en"],[36,39,"pl-k"]],[],[[30,34,"pl-k"]],[[2,4,"pl-k"]],[[29,45,"pl-c1"],[46,64,"pl-s"],[46,47,"pl-pds"],[63,64,"pl-pds"]],[],[],[[4,6,"pl-k"],[20,26,"pl-s"],[20,21,"pl-pds"],[25,26,"pl-pds"],[42,51,"pl-s"],[42,43,"pl-pds"],[50,51,"pl-pds"]],[[1,6,"pl-k"]],[],[[1,5,"pl-k"]],[],[[6,12,"pl-k"],[13,18,"pl-c1"]],[[1,6,"pl-k"]],[[6,10,"pl-k"],[11,13,"pl-k"],[24,28,"pl-c1"],[29,33,"pl-s"],[29,30,"pl-pds"],[32,33,"pl-pds"]],[[1,6,"pl-k"]],[],[[1,5,"pl-k"]],[],[[6,12,"pl-k"],[13,18,"pl-c1"]],[[1,6,"pl-k"]],[[6,10,"pl-k"],[11,13,"pl-k"],[27,33,"pl-s"],[27,28,"pl-pds"],[32,33,"pl-pds"]],[[1,6,"pl-k"]],[],[[1,5,"pl-k"]],[],[[6,12,"pl-k"],[13,18,"pl-c1"]],[[1,6,"pl-k"]],[],[],[[4,6,"pl-k"]],[[6,8,"pl-k"],[24,32,"pl-c1"]],[[46,51,"pl-k"],[52,56,"pl-k"],[63,69,"pl-c1"]],[[46,54,"pl-c1"],[60,68,"pl-c1"]],[[10,16,"pl-k"],[31,41,"pl-c1"]],[[46,51,"pl-k"],[52,56,"pl-k"],[64,70,"pl-c1"]],[[44,50,"pl-k"],[51,59,"pl-c1"]],[],[],[[8,14,"pl-k"],[15,23,"pl-c1"],[24,33,"pl-c1"]],[[8,12,"pl-k"]],[],[[8,14,"pl-k"],[15,20,"pl-c1"]],[],[],[],[],[[40,45,"pl-k"],[46,50,"pl-k"],[57,63,"pl-c1"],[67,75,"pl-c1"]],[[40,48,"pl-c1"]],[[4,10,"pl-k"],[11,19,"pl-c1"]],[],[[2,8,"pl-k"],[9,17,"pl-c1"],[18,27,"pl-c1"]],[],[],[[0,9,"pl-k"],[10,18,"pl-k"]],[[0,4,"pl-k"],[5,17,"pl-en"],[38,44,"pl-c1"],[65,68,"pl-k"]],[],[[18,22,"pl-k"]],[[2,8,"pl-k"],[9,33,"pl-c1"]],[[17,26,"pl-c1"]],[[10,15,"pl-k"]],[[8,12,"pl-k"],[19,23,"pl-c1"]],[[8,12,"pl-k"],[41,46,"pl-c1"]],[],[[8,10,"pl-k"],[12,40,"pl-c1"],[43,50,"pl-smi"]],[[16,36,"pl-c1"]],[[10,14,"pl-k"],[15,17,"pl-k"],[20,30,"pl-c1"],[33,40,"pl-smi"],[42,58,"pl-s"],[42,43,"pl-pds"],[57,58,"pl-pds"]],[[16,43,"pl-c1"]],[[10,14,"pl-k"]],[[10,14,"pl-k"],[34,39,"pl-c1"]],[[10,14,"pl-k"],[21,41,"pl-c1"]],[[16,23,"pl-smi"],[25,41,"pl-s"],[25,26,"pl-pds"],[40,41,"pl-pds"]],[[35,43,"pl-c1"],[54,55,"pl-c1"]],[],[[10,12,"pl-k"]],[[18,23,"pl-c1"]],[[12,16,"pl-k"],[17,19,"pl-k"]],[[40,44,"pl-c1"]],[[12,36,"pl-c1"]],[[18,23,"pl-c1"]],[[12,16,"pl-k"],[17,19,"pl-k"],[27,28,"pl-c1"]],[[18,42,"pl-c1"],[54,63,"pl-c1"]],[],[],[],[[8,10,"pl-k"]],[],[],[],[[8,14,"pl-k"]],[],[],[],[[0,6,"pl-k"],[7,14,"pl-c1"],[15,33,"pl-en"],[48,53,"pl-k"]],[[34,39,"pl-k"]],[],[[7,10,"pl-s"],[7,8,"pl-pds"],[9,10,"pl-pds"]],[],[[7,22,"pl-s"],[7,8,"pl-pds"],[17,21,"pl-cce"],[21,22,"pl-pds"]],[[2,8,"pl-k"],[14,19,"pl-c1"],[22,26,"pl-c1"],[32,36,"pl-c1"]],[],[],[[0,6,"pl-k"],[7,14,"pl-c1"],[15,34,"pl-en"],[49,52,"pl-k"]],[[18,29,"pl-s"],[18,19,"pl-pds"],[28,29,"pl-pds"]],[[7,21,"pl-c1"]],[[7,10,"pl-s"],[7,8,"pl-pds"],[9,10,"pl-pds"]],[[7,30,"pl-c1"]],[[7,13,"pl-s"],[7,8,"pl-pds"],[8,12,"pl-cce"],[12,13,"pl-pds"]],[[2,8,"pl-k"],[14,19,"pl-c1"],[22,26,"pl-c1"],[32,36,"pl-c1"]],[],[],[[0,6,"pl-k"],[7,14,"pl-c1"],[15,28,"pl-en"],[43,48,"pl-k"]],[[2,9,"pl-c1"],[22,23,"pl-c1"]],[[2,5,"pl-k"],[7,12,"pl-k"],[13,17,"pl-k"]],[],[[10,15,"pl-smi"]],[[9,13,"pl-s"],[9,10,"pl-pds"],[12,13,"pl-pds"]],[[11,17,"pl-smi"]],[[9,15,"pl-s"],[9,10,"pl-pds"],[10,14,"pl-cce"],[14,15,"pl-pds"]],[],[[4,8,"pl-k"],[20,25,"pl-c1"],[28,32,"pl-c1"],[38,42,"pl-c1"]],[[4,6,"pl-k"],[14,15,"pl-c1"],[19,25,"pl-k"]],[],[],[[2,6,"pl-k"],[18,23,"pl-c1"],[24,30,"pl-s"],[24,25,"pl-pds"],[25,29,"pl-cce"],[29,30,"pl-pds"]],[[2,4,"pl-k"],[12,13,"pl-c1"],[17,23,"pl-k"]],[],[[2,8,"pl-k"]],[],[],[[0,6,"pl-k"],[7,11,"pl-k"],[12,22,"pl-en"],[37,42,"pl-k"],[43,47,"pl-k"],[52,58,"pl-c1"]],[[2,8,"pl-c1"],[18,19,"pl-c1"]],[[2,7,"pl-k"]],[[4,8,"pl-k"],[23,28,"pl-c1"]],[[4,6,"pl-k"],[17,18,"pl-c1"],[22,28,"pl-k"],[29,34,"pl-c1"]],[[14,25,"pl-k"],[26,32,"pl-c1"]],[],[[2,8,"pl-k"],[9,13,"pl-c1"]],[],[],[[0,9,"pl-k"],[10,18,"pl-k"]],[[0,6,"pl-k"],[7,11,"pl-k"],[12,25,"pl-en"],[40,45,"pl-k"]],[[26,32,"pl-c1"],[41,47,"pl-c1"]],[],[[2,8,"pl-c1"]],[[2,6,"pl-k"],[12,16,"pl-c1"]],[],[],[[12,17,"pl-smi"],[24,29,"pl-k"],[30,34,"pl-k"],[39,45,"pl-c1"],[52,56,"pl-k"]],[[4,6,"pl-k"]],[[6,8,"pl-k"],[10,20,"pl-c1"]],[],[[8,12,"pl-k"]],[[13,18,"pl-c1"]],[],[],[[4,10,"pl-k"]],[],[],[[12,23,"pl-smi"],[35,39,"pl-k"],[42,48,"pl-k"],[54,67,"pl-c1"]],[],[[2,7,"pl-k"],[33,49,"pl-c1"]],[[4,6,"pl-k"],[14,27,"pl-c1"]],[],[[6,12,"pl-k"],[13,18,"pl-c1"]],[[6,10,"pl-k"],[11,13,"pl-k"],[16,32,"pl-c1"]],[],[[6,12,"pl-k"],[13,18,"pl-c1"]],[[6,10,"pl-k"],[11,13,"pl-k"]],[],[[6,12,"pl-k"],[13,18,"pl-c1"]],[],[],[],[],[[2,8,"pl-k"],[9,13,"pl-c1"]],[],[],[[0,9,"pl-k"],[10,18,"pl-k"]],[[0,6,"pl-k"],[7,11,"pl-k"],[12,25,"pl-en"],[40,45,"pl-k"]],[[26,32,"pl-c1"],[41,47,"pl-c1"]],[[26,31,"pl-k"]],[[2,6,"pl-k"]],[[2,8,"pl-k"],[9,22,"pl-c1"]],[],[],[],[[0,9,"pl-k"],[10,18,"pl-k"]],[[0,6,"pl-k"],[7,11,"pl-k"]],[[0,28,"pl-en"]],[[29,34,"pl-k"]],[[29,34,"pl-k"]],[[2,8,"pl-c1"],[18,19,"pl-c1"]],[[2,6,"pl-k"],[24,28,"pl-c1"]],[[2,6,"pl-k"],[12,16,"pl-c1"]],[],[],[[12,17,"pl-smi"],[24,29,"pl-k"],[30,34,"pl-k"],[39,45,"pl-c1"],[52,56,"pl-k"]],[[4,6,"pl-k"]],[],[[6,8,"pl-k"],[11,21,"pl-c1"],[42,47,"pl-c1"]],[],[[4,10,"pl-k"]],[],[],[[12,23,"pl-smi"],[35,39,"pl-k"],[42,48,"pl-k"],[54,67,"pl-c1"]],[],[[12,16,"pl-smi"],[23,27,"pl-k"],[48,53,"pl-c1"]],[],[[2,7,"pl-k"],[28,44,"pl-c1"]],[[4,6,"pl-k"],[14,27,"pl-c1"]],[[6,12,"pl-k"],[13,18,"pl-c1"]],[[6,10,"pl-k"],[11,13,"pl-k"],[16,32,"pl-c1"],[41,42,"pl-c1"]],[[6,12,"pl-k"],[13,18,"pl-c1"]],[[6,10,"pl-k"],[11,13,"pl-k"]],[[6,12,"pl-k"],[13,18,"pl-c1"]],[],[],[[2,8,"pl-k"],[9,13,"pl-c1"]],[],[],[[0,9,"pl-k"],[10,18,"pl-k"],[22,30,"pl-k"]],[[0,6,"pl-k"],[7,11,"pl-k"]],[[0,21,"pl-en"],[36,41,"pl-k"]],[[22,27,"pl-k"]],[[2,8,"pl-c1"],[18,19,"pl-c1"]],[[2,6,"pl-k"],[24,28,"pl-c1"]],[[2,6,"pl-k"],[12,16,"pl-c1"]],[],[],[[12,17,"pl-smi"],[24,29,"pl-k"],[30,34,"pl-k"],[39,45,"pl-c1"],[52,56,"pl-k"]],[[4,6,"pl-k"]],[[27,28,"pl-c1"]],[],[],[],[[6,8,"pl-k"],[21,29,"pl-c1"],[36,41,"pl-c1"]],[[34,39,"pl-k"],[40,44,"pl-k"],[52,58,"pl-c1"]],[[40,46,"pl-c1"]],[[32,38,"pl-k"],[39,43,"pl-c1"]],[],[[8,10,"pl-k"],[21,26,"pl-c1"]],[[10,67,"pl-c"],[10,12,"pl-c"]],[[10,14,"pl-k"]],[[14,27,"pl-c1"],[36,40,"pl-c1"],[46,52,"pl-s"],[46,47,"pl-pds"],[47,51,"pl-cce"],[51,52,"pl-pds"],[65,71,"pl-s"],[65,66,"pl-pds"],[66,70,"pl-cce"],[70,71,"pl-pds"]],[[10,12,"pl-k"],[15,25,"pl-c1"],[38,42,"pl-c1"],[52,56,"pl-c1"],[68,73,"pl-c1"]],[],[[8,12,"pl-k"]],[[13,18,"pl-c1"]],[],[],[[4,10,"pl-k"]],[],[],[[12,23,"pl-smi"],[35,39,"pl-k"],[42,48,"pl-k"],[54,67,"pl-c1"]],[],[[2,6,"pl-k"],[31,36,"pl-k"]],[[4,6,"pl-k"],[15,21,"pl-k"]],[],[[21,26,"pl-c1"]],[],[],[[4,6,"pl-k"],[20,28,"pl-c1"],[29,36,"pl-c1"],[38,39,"pl-c1"],[41,45,"pl-c1"]],[[33,38,"pl-k"],[39,43,"pl-k"],[51,57,"pl-c1"]],[[39,45,"pl-c1"]],[[31,37,"pl-k"],[38,42,"pl-c1"]],[],[[11,16,"pl-c1"]],[[6,12,"pl-k"]],[],[],[[4,6,"pl-k"],[17,22,"pl-c1"]],[[6,63,"pl-c"],[6,8,"pl-c"]],[[6,10,"pl-k"],[19,32,"pl-c1"],[41,45,"pl-c1"],[51,57,"pl-s"],[51,52,"pl-pds"],[52,56,"pl-cce"],[56,57,"pl-pds"],[70,76,"pl-s"],[70,71,"pl-pds"],[71,75,"pl-cce"],[75,76,"pl-pds"]],[[6,8,"pl-k"],[11,21,"pl-c1"],[34,38,"pl-c1"],[48,52,"pl-c1"]],[[13,18,"pl-c1"]],[[8,14,"pl-k"]],[],[],[],[[4,13,"pl-k"],[14,19,"pl-k"],[20,24,"pl-k"],[41,48,"pl-s"],[41,42,"pl-pds"],[43,47,"pl-cce"],[47,48,"pl-pds"]],[[4,6,"pl-k"],[9,19,"pl-c1"],[39,46,"pl-c1"],[69,74,"pl-c1"]],[],[[4,14,"pl-c"],[4,6,"pl-c"]],[[4,6,"pl-k"]],[[6,9,"pl-k"],[11,16,"pl-k"],[17,21,"pl-k"]],[[36,41,"pl-smi"],[44,48,"pl-s"],[44,45,"pl-pds"],[47,48,"pl-pds"],[54,60,"pl-smi"],[63,69,"pl-s"],[63,64,"pl-pds"],[64,68,"pl-cce"],[68,69,"pl-pds"]],[[8,10,"pl-k"],[13,23,"pl-c1"],[41,45,"pl-c1"],[60,64,"pl-c1"]],[[15,20,"pl-c1"]],[],[],[],[],[[4,13,"pl-k"],[14,19,"pl-k"],[20,24,"pl-k"],[34,40,"pl-s"],[34,35,"pl-pds"],[35,39,"pl-cce"],[39,40,"pl-pds"]],[[4,6,"pl-k"],[9,19,"pl-c1"],[32,39,"pl-c1"],[55,60,"pl-c1"]],[],[],[[12,16,"pl-smi"],[23,27,"pl-k"],[31,48,"pl-c1"],[49,56,"pl-c1"]],[],[[12,29,"pl-smi"],[36,41,"pl-k"]],[[4,21,"pl-c1"]],[],[],[[2,7,"pl-k"],[28,44,"pl-c1"]],[[4,6,"pl-k"],[14,27,"pl-c1"]],[],[[6,12,"pl-k"],[13,18,"pl-c1"]],[[6,10,"pl-k"],[11,13,"pl-k"],[16,32,"pl-c1"],[41,42,"pl-c1"]],[],[[6,12,"pl-k"],[13,18,"pl-c1"]],[[6,10,"pl-k"],[11,13,"pl-k"]],[],[[6,12,"pl-k"],[13,18,"pl-c1"]],[],[],[],[],[[2,8,"pl-k"],[9,13,"pl-c1"]],[],[],[[0,9,"pl-k"],[10,18,"pl-k"],[22,30,"pl-k"]],[[0,6,"pl-k"],[7,11,"pl-k"],[12,33,"pl-en"]],[[34,39,"pl-k"]],[[34,39,"pl-k"]],[[2,6,"pl-k"]],[[2,8,"pl-k"],[9,30,"pl-c1"]],[],[],[],[[0,9,"pl-k"],[10,18,"pl-k"]],[[0,6,"pl-k"],[7,11,"pl-k"],[12,20,"pl-en"]],[[21,26,"pl-k"],[46,51,"pl-k"]],[],[],[[10,14,"pl-smi"]],[[10,25,"pl-smi"],[29,30,"pl-c1"]],[],[[2,4,"pl-k"],[10,16,"pl-smi"]],[[11,17,"pl-smi"],[21,26,"pl-s"],[21,22,"pl-pds"],[25,26,"pl-pds"],[34,40,"pl-smi"],[44,50,"pl-s"],[44,45,"pl-pds"],[49,50,"pl-pds"]],[[12,18,"pl-smi"],[21,26,"pl-s"],[21,22,"pl-pds"],[25,26,"pl-pds"]],[[12,16,"pl-smi"],[17,22,"pl-c1"]],[[12,19,"pl-smi"],[20,25,"pl-c1"]],[],[],[],[],[[2,6,"pl-k"],[17,21,"pl-c1"]],[[2,4,"pl-k"]],[],[],[],[[4,6,"pl-k"],[12,20,"pl-smi"],[21,26,"pl-c1"],[36,44,"pl-smi"]],[],[[2,8,"pl-k"]],[],[],[[0,6,"pl-k"],[19,38,"pl-en"],[39,44,"pl-k"]],[],[],[[2,5,"pl-k"],[7,11,"pl-k"],[24,29,"pl-c1"],[46,49,"pl-c1"]],[[4,6,"pl-k"],[21,26,"pl-c1"],[41,44,"pl-s"],[41,42,"pl-pds"],[43,44,"pl-pds"]],[[17,22,"pl-smi"]],[[13,16,"pl-s"],[13,14,"pl-pds"],[15,16,"pl-pds"]],[[13,31,"pl-c1"],[36,42,"pl-smi"]],[],[[2,8,"pl-k"]],[],[],[[0,6,"pl-k"],[7,11,"pl-k"],[12,28,"pl-en"],[29,34,"pl-k"],[35,39,"pl-k"],[52,58,"pl-c1"]],[],[],[[2,7,"pl-c1"],[27,30,"pl-s"],[27,28,"pl-pds"],[29,30,"pl-pds"],[36,41,"pl-k"],[42,46,"pl-k"],[51,56,"pl-k"],[57,61,"pl-k"]],[[16,18,"pl-smi"]],[[4,6,"pl-k"],[14,18,"pl-c1"],[32,35,"pl-c1"],[41,47,"pl-k"]],[[10,16,"pl-c1"],[17,26,"pl-c1"]],[],[],[],[[4,10,"pl-c1"],[14,25,"pl-k"],[31,37,"pl-c1"],[47,50,"pl-s"],[47,48,"pl-pds"],[49,50,"pl-pds"]],[[15,20,"pl-k"],[21,25,"pl-k"],[42,48,"pl-c1"],[59,64,"pl-k"],[65,69,"pl-k"]],[[20,26,"pl-c1"]],[[17,23,"pl-c1"]],[[17,23,"pl-c1"]],[],[],[[4,6,"pl-k"],[13,18,"pl-c1"]],[[13,20,"pl-c1"],[21,31,"pl-c1"],[37,41,"pl-c1"],[44,54,"pl-c1"],[60,64,"pl-c1"]],[],[],[],[],[[0,6,"pl-k"],[7,11,"pl-k"],[12,28,"pl-en"],[29,34,"pl-k"]],[[2,18,"pl-c1"],[21,25,"pl-c1"],[31,35,"pl-c1"]],[],[],[[0,6,"pl-k"],[7,11,"pl-k"],[12,36,"pl-en"],[37,42,"pl-k"]],[],[[2,6,"pl-k"],[26,37,"pl-s"],[26,27,"pl-pds"],[36,37,"pl-pds"]],[[2,6,"pl-k"],[26,30,"pl-c1"]],[[2,4,"pl-k"],[34,40,"pl-k"],[41,46,"pl-c1"]],[[2,6,"pl-k"],[26,30,"pl-c1"],[31,34,"pl-s"],[31,32,"pl-pds"],[33,34,"pl-pds"]],[[2,6,"pl-k"],[19,25,"pl-c1"]],[[13,36,"pl-c1"],[50,56,"pl-c1"]],[[2,8,"pl-k"],[19,24,"pl-c1"]],[],[],[[0,6,"pl-k"],[7,11,"pl-k"],[12,36,"pl-en"],[37,42,"pl-k"]],[],[[2,7,"pl-c1"],[10,14,"pl-c1"],[20,24,"pl-c1"],[31,35,"pl-c1"],[39,42,"pl-s"],[39,40,"pl-pds"],[41,42,"pl-pds"],[48,53,"pl-k"],[54,58,"pl-k"],[63,68,"pl-k"],[69,73,"pl-k"]],[[16,18,"pl-smi"]],[[4,6,"pl-k"],[14,18,"pl-c1"],[32,35,"pl-c1"],[41,47,"pl-k"]],[[10,16,"pl-c1"]],[],[],[],[[4,9,"pl-c1"],[16,19,"pl-s"],[16,17,"pl-pds"],[18,19,"pl-pds"],[25,30,"pl-k"],[31,35,"pl-k"],[41,46,"pl-k"],[47,51,"pl-k"],[53,55,"pl-c1"]],[[6,8,"pl-k"],[14,19,"pl-c1"]],[[12,18,"pl-c1"],[23,25,"pl-c1"]],[[8,12,"pl-k"]],[[12,18,"pl-c1"],[23,25,"pl-c1"]],[],[],[],[[4,6,"pl-k"],[13,18,"pl-c1"]],[[13,20,"pl-c1"],[21,44,"pl-c1"]],[[21,44,"pl-c1"]],[],[],[],[],[[1,6,"pl-k"]],[[0,6,"pl-k"],[7,11,"pl-k"],[12,30,"pl-en"],[31,36,"pl-k"]],[[1,5,"pl-k"]],[[0,6,"pl-k"],[7,11,"pl-k"],[12,30,"pl-smi"],[31,36,"pl-k"],[69,72,"pl-k"]],[],[[2,6,"pl-k"],[21,26,"pl-k"]],[[4,10,"pl-k"],[11,22,"pl-c1"],[27,33,"pl-c1"],[41,45,"pl-c1"]],[[26,34,"pl-k"],[35,39,"pl-k"],[45,51,"pl-k"],[52,64,"pl-c1"]],[],[],[[2,4,"pl-k"],[8,12,"pl-c1"],[17,18,"pl-c1"],[24,31,"pl-c1"],[32,33,"pl-c1"],[35,36,"pl-c1"],[38,46,"pl-s"],[38,39,"pl-pds"],[45,46,"pl-pds"],[51,52,"pl-c1"]],[[4,9,"pl-k"],[10,14,"pl-k"],[21,32,"pl-k"],[33,39,"pl-c1"],[41,42,"pl-c1"]],[[4,9,"pl-k"],[10,14,"pl-k"],[21,32,"pl-k"],[33,39,"pl-c1"],[43,47,"pl-c1"],[52,53,"pl-c1"]],[[4,8,"pl-k"],[28,32,"pl-c1"]],[[4,9,"pl-c1"],[34,37,"pl-s"],[34,35,"pl-pds"],[36,37,"pl-pds"],[43,48,"pl-k"],[49,53,"pl-k"],[58,63,"pl-k"],[64,68,"pl-k"]],[[6,8,"pl-k"],[31,37,"pl-k"]],[],[[6,11,"pl-k"],[12,16,"pl-k"],[22,31,"pl-c1"],[38,41,"pl-s"],[38,39,"pl-pds"],[40,41,"pl-pds"]],[[6,8,"pl-k"]],[[27,32,"pl-c1"]],[[8,14,"pl-k"]],[],[],[[6,11,"pl-k"],[12,16,"pl-k"],[23,34,"pl-c1"]],[[6,11,"pl-k"],[12,16,"pl-k"],[23,34,"pl-c1"],[40,41,"pl-c1"]],[[6,8,"pl-k"],[11,19,"pl-c1"],[29,37,"pl-c1"]],[[27,32,"pl-c1"]],[[8,14,"pl-k"]],[],[],[[6,11,"pl-k"],[12,16,"pl-k"]],[[10,21,"pl-k"],[22,29,"pl-c1"],[35,40,"pl-c1"],[46,47,"pl-c1"],[50,60,"pl-c1"]],[[6,11,"pl-k"],[12,16,"pl-k"]],[[10,21,"pl-k"],[22,29,"pl-c1"],[35,40,"pl-c1"],[46,47,"pl-c1"],[50,60,"pl-c1"]],[[6,8,"pl-k"],[21,22,"pl-c1"],[35,36,"pl-c1"]],[[21,22,"pl-c1"],[35,36,"pl-c1"]],[[27,32,"pl-c1"]],[[8,14,"pl-k"]],[],[],[[13,25,"pl-c1"]],[],[[4,10,"pl-k"],[39,44,"pl-c1"]],[],[[2,8,"pl-k"],[9,14,"pl-c1"]],[[1,6,"pl-k"]],[],[[1,5,"pl-k"]],[[2,7,"pl-k"],[16,22,"pl-k"],[23,28,"pl-c1"]],[[1,6,"pl-k"]],[],[[0,5,"pl-k"],[6,29,"pl-en"]],[[0,7,"pl-k"]],[[2,25,"pl-en"],[30,37,"pl-k"]],[],[[2,6,"pl-k"],[7,19,"pl-en"]],[],[],[],[],[],[[2,6,"pl-k"],[7,15,"pl-en"],[18,23,"pl-k"],[26,32,"pl-k"]],[],[[2,6,"pl-k"],[7,12,"pl-en"],[13,18,"pl-k"],[19,23,"pl-k"],[30,36,"pl-c1"],[40,45,"pl-k"]],[[13,18,"pl-k"]],[],[[4,14,"pl-c1"]],[],[[4,9,"pl-k"],[11,19,"pl-c1"],[24,25,"pl-c1"]],[[6,12,"pl-k"]],[[6,10,"pl-k"],[11,12,"pl-c1"],[16,35,"pl-c"],[16,18,"pl-c"]],[[8,17,"pl-c1"],[18,26,"pl-c1"]],[[8,10,"pl-k"],[32,36,"pl-c1"],[41,49,"pl-c1"],[55,61,"pl-k"],[62,66,"pl-c1"]],[[8,10,"pl-k"],[13,27,"pl-c1"],[52,58,"pl-k"],[59,64,"pl-c1"]],[[8,17,"pl-c1"],[38,42,"pl-c1"]],[[17,18,"pl-c1"]],[[8,13,"pl-k"]],[],[[6,10,"pl-k"],[11,12,"pl-c1"],[16,28,"pl-c"],[16,18,"pl-c"]],[[8,23,"pl-c1"]],[[17,18,"pl-c1"]],[[8,13,"pl-k"]],[],[[6,10,"pl-k"],[11,12,"pl-c1"],[16,26,"pl-c"],[16,18,"pl-c"]],[[8,12,"pl-k"],[19,27,"pl-c1"]],[[8,10,"pl-k"],[50,56,"pl-k"],[57,62,"pl-c1"]],[[8,13,"pl-k"],[21,29,"pl-c1"]],[[10,23,"pl-c"],[10,12,"pl-c"]],[[10,12,"pl-k"],[21,22,"pl-c1"]],[[12,14,"pl-k"],[17,32,"pl-c1"]],[[26,31,"pl-c1"]],[[14,20,"pl-k"],[21,26,"pl-c1"]],[],[[12,21,"pl-c1"],[28,32,"pl-c1"]],[[21,22,"pl-c1"]],[[12,17,"pl-k"]],[],[],[[10,15,"pl-k"],[16,20,"pl-k"],[30,38,"pl-c1"]],[],[[10,12,"pl-k"],[15,27,"pl-c1"],[35,39,"pl-c1"],[50,54,"pl-c1"],[66,70,"pl-c1"]],[[32,37,"pl-k"],[53,58,"pl-k"]],[[24,29,"pl-c1"]],[[12,18,"pl-k"],[19,24,"pl-c1"]],[],[],[[10,19,"pl-k"],[20,25,"pl-k"],[26,30,"pl-k"],[55,70,"pl-s"],[55,56,"pl-pds"],[69,70,"pl-pds"]],[],[[10,12,"pl-k"],[14,36,"pl-c1"]],[[18,30,"pl-smi"]],[[16,25,"pl-c1"],[33,39,"pl-c1"],[40,47,"pl-c1"]],[[12,16,"pl-k"]],[[12,24,"pl-k"],[25,30,"pl-k"],[42,64,"pl-smi"]],[[16,65,"pl-s"],[16,20,"pl-pds"],[62,65,"pl-pds"]],[],[],[],[[12,14,"pl-k"],[16,32,"pl-c1"]],[],[[14,38,"pl-c1"],[41,42,"pl-c1"]],[],[[14,18,"pl-k"],[31,35,"pl-c1"],[36,42,"pl-s"],[36,37,"pl-pds"],[41,42,"pl-pds"]],[[14,16,"pl-k"],[31,34,"pl-c1"]],[[22,26,"pl-smi"],[33,39,"pl-smi"]],[[16,20,"pl-k"]],[[28,33,"pl-c1"]],[[16,22,"pl-k"],[23,28,"pl-c1"]],[],[],[[26,30,"pl-c1"],[31,41,"pl-s"],[31,32,"pl-pds"],[40,41,"pl-pds"]],[[14,16,"pl-k"],[31,34,"pl-c1"],[46,54,"pl-smi"],[61,67,"pl-smi"]],[],[[26,30,"pl-c1"],[31,42,"pl-s"],[31,32,"pl-pds"],[41,42,"pl-pds"]],[[14,16,"pl-k"],[31,34,"pl-c1"]],[[16,47,"pl-c"],[16,18,"pl-c"]],[[16,28,"pl-k"],[29,34,"pl-k"],[46,65,"pl-smi"]],[[20,41,"pl-s"],[20,24,"pl-pds"],[38,41,"pl-pds"]],[],[],[[16,18,"pl-k"],[20,36,"pl-c1"],[41,47,"pl-smi"]],[[24,32,"pl-smi"],[35,45,"pl-c1"],[49,50,"pl-c1"],[53,58,"pl-c1"],[61,75,"pl-c"],[61,63,"pl-c"]],[[18,22,"pl-k"]],[[30,35,"pl-c1"]],[[18,24,"pl-k"],[25,30,"pl-c1"]],[],[],[],[],[[10,19,"pl-c1"],[32,36,"pl-c1"]],[[16,24,"pl-c1"]],[],[[8,10,"pl-k"],[22,23,"pl-c1"],[27,33,"pl-k"],[34,38,"pl-c1"]],[[8,13,"pl-k"]],[],[[6,10,"pl-k"],[11,12,"pl-c1"],[16,23,"pl-c"],[16,18,"pl-c"]],[[8,10,"pl-k"],[32,36,"pl-c1"],[41,49,"pl-c1"],[55,61,"pl-k"],[62,66,"pl-c1"]],[[8,12,"pl-k"],[19,27,"pl-c1"]],[[8,10,"pl-k"],[18,26,"pl-c1"]],[[10,12,"pl-k"],[15,31,"pl-c1"],[32,40,"pl-c1"]],[[24,29,"pl-c1"]],[[12,18,"pl-k"],[19,24,"pl-c1"]],[],[[10,19,"pl-c1"],[46,50,"pl-c1"]],[[19,20,"pl-c1"]],[[10,14,"pl-k"]],[[10,14,"pl-k"],[21,29,"pl-c1"],[54,58,"pl-c1"]],[[10,12,"pl-k"],[20,21,"pl-c1"]],[[12,14,"pl-k"],[17,33,"pl-c1"],[34,42,"pl-c1"]],[[26,31,"pl-c1"]],[[14,20,"pl-k"],[21,26,"pl-c1"]],[],[[12,21,"pl-c1"]],[],[[10,16,"pl-k"],[17,21,"pl-c1"]],[],[[8,13,"pl-k"]],[],[[6,10,"pl-k"],[11,12,"pl-c1"],[16,27,"pl-c"],[16,18,"pl-c"]],[[8,10,"pl-k"],[18,22,"pl-c1"],[27,35,"pl-c1"],[41,47,"pl-k"],[48,52,"pl-c1"]],[[8,10,"pl-k"],[12,26,"pl-c1"]],[[10,19,"pl-c1"],[26,30,"pl-c1"]],[[19,20,"pl-c1"]],[[10,14,"pl-k"]],[[10,12,"pl-k"],[20,24,"pl-c1"],[29,37,"pl-c1"],[43,49,"pl-k"],[50,54,"pl-c1"]],[[10,12,"pl-k"],[14,28,"pl-c1"]],[[12,21,"pl-c1"],[28,32,"pl-c1"]],[[24,28,"pl-c1"]],[[12,21,"pl-c1"],[22,30,"pl-c1"],[35,53,"pl-c"],[35,37,"pl-c"]],[[12,16,"pl-k"]],[[12,18,"pl-k"],[19,23,"pl-c1"]],[],[],[[8,13,"pl-k"]],[],[],[],[],[[4,10,"pl-k"],[11,15,"pl-c1"]],[],[],[[0,8,"pl-k"]],[[2,6,"pl-k"],[7,22,"pl-en"]],[[10,14,"pl-smi"],[15,20,"pl-c1"]],[[10,18,"pl-smi"],[19,24,"pl-c1"]],[[10,22,"pl-smi"],[23,28,"pl-c1"]],[],[],[[2,6,"pl-k"],[7,29,"pl-en"],[30,35,"pl-k"],[52,57,"pl-k"],[58,62,"pl-k"],[67,72,"pl-k"]],[[4,9,"pl-k"],[10,14,"pl-k"],[23,29,"pl-c1"]],[[4,6,"pl-k"],[10,14,"pl-c1"],[28,34,"pl-k"],[35,40,"pl-c1"]],[[4,7,"pl-k"],[9,15,"pl-c1"],[20,21,"pl-c1"]],[[6,8,"pl-k"],[10,31,"pl-c1"],[41,62,"pl-c1"]],[[8,14,"pl-k"],[15,20,"pl-c1"]],[],[],[[4,10,"pl-k"],[11,15,"pl-c1"]],[],[],[[2,7,"pl-k"],[28,32,"pl-s"],[28,29,"pl-pds"],[31,32,"pl-pds"]],[[2,7,"pl-k"],[28,34,"pl-s"],[28,29,"pl-pds"],[29,33,"pl-cce"],[33,34,"pl-pds"]],[],[],[],[],[[2,8,"pl-c1"],[18,19,"pl-c1"]],[[2,6,"pl-k"],[19,24,"pl-c1"]],[],[],[[2,11,"pl-c"],[2,4,"pl-c"]],[[2,6,"pl-k"],[7,17,"pl-en"],[18,23,"pl-k"],[40,46,"pl-c1"],[53,59,"pl-c1"]],[[18,23,"pl-k"],[40,45,"pl-k"]],[[4,6,"pl-k"],[24,28,"pl-c1"],[34,40,"pl-k"],[41,46,"pl-c1"]],[[4,7,"pl-k"],[9,15,"pl-c1"],[20,21,"pl-c1"],[29,33,"pl-c1"]],[[6,8,"pl-k"],[33,39,"pl-k"],[40,45,"pl-c1"]],[],[[4,10,"pl-k"],[11,15,"pl-c1"]],[],[],[[2,8,"pl-c1"],[9,17,"pl-en"],[20,25,"pl-k"],[28,34,"pl-k"]],[],[[2,7,"pl-k"],[8,12,"pl-k"],[14,22,"pl-en"],[25,30,"pl-k"],[33,39,"pl-k"]],[],[[14,22,"pl-en"],[23,29,"pl-c1"],[33,38,"pl-k"],[41,47,"pl-k"],[53,59,"pl-c1"]],[],[[2,6,"pl-k"],[7,21,"pl-en"],[22,27,"pl-k"],[44,49,"pl-k"]],[[4,10,"pl-k"],[11,21,"pl-c1"]],[],[],[[2,8,"pl-c1"],[9,17,"pl-en"],[18,23,"pl-k"],[40,45,"pl-k"]],[[4,8,"pl-k"],[15,20,"pl-c1"]],[],[[4,10,"pl-c1"]],[[4,9,"pl-k"]],[[6,10,"pl-k"]],[[6,11,"pl-k"],[13,17,"pl-c1"]],[[8,10,"pl-k"],[32,38,"pl-k"],[39,47,"pl-c1"]],[[8,10,"pl-k"],[30,35,"pl-k"]],[],[],[],[[6,10,"pl-k"]],[[6,8,"pl-k"],[12,16,"pl-c1"],[39,45,"pl-k"],[46,54,"pl-c1"]],[],[[6,8,"pl-k"],[10,20,"pl-c1"],[49,55,"pl-k"]],[],[[18,19,"pl-c1"]],[],[],[[4,10,"pl-k"],[11,19,"pl-c1"]],[],[],[[2,6,"pl-k"],[7,17,"pl-en"],[18,23,"pl-k"],[24,28,"pl-k"],[36,42,"pl-c1"]],[[4,8,"pl-k"],[26,34,"pl-c1"]],[[4,6,"pl-k"],[25,26,"pl-c1"],[42,43,"pl-c1"]],[[6,9,"pl-k"],[11,17,"pl-c1"],[22,23,"pl-c1"]],[],[],[],[[16,17,"pl-c1"]],[],[],[[4,6,"pl-k"],[34,38,"pl-c1"],[49,55,"pl-c1"]],[],[[4,7,"pl-k"],[9,15,"pl-c1"],[20,21,"pl-c1"]],[],[],[],[],[],[[2,6,"pl-k"],[7,16,"pl-en"],[17,23,"pl-c1"]],[],[],[[2,8,"pl-c1"],[21,22,"pl-c1"]],[[2,8,"pl-c1"],[21,22,"pl-c1"]],[],[],[[0,6,"pl-k"],[19,32,"pl-smi"],[33,39,"pl-c1"]],[[2,11,"pl-k"],[12,17,"pl-k"],[18,22,"pl-k"]],[[6,70,"pl-s"],[6,7,"pl-pds"],[69,70,"pl-pds"]],[],[[2,14,"pl-k"],[15,19,"pl-k"],[20,26,"pl-smi"]],[[4,65,"pl-c"],[4,6,"pl-c"]],[[4,73,"pl-c"],[4,6,"pl-c"]],[[4,76,"pl-c"],[4,6,"pl-c"]],[],[[4,53,"pl-c"],[4,6,"pl-c"]],[[32,40,"pl-c1"],[44,52,"pl-c1"],[56,64,"pl-c1"],[68,76,"pl-c1"]],[[4,10,"pl-k"],[11,23,"pl-c1"]],[],[],[],[[2,5,"pl-k"],[7,13,"pl-c1"],[18,19,"pl-c1"]],[[19,25,"pl-c1"],[31,37,"pl-k"],[46,47,"pl-c1"]],[],[[2,8,"pl-k"]],[],[],[[0,6,"pl-k"],[19,47,"pl-smi"]],[[2,8,"pl-k"],[9,40,"pl-s"],[9,10,"pl-pds"],[39,40,"pl-pds"],[43,64,"pl-c1"],[65,67,"pl-c1"]],[],[],[[0,6,"pl-k"],[7,11,"pl-k"],[12,45,"pl-smi"],[46,51,"pl-k"]],[[2,6,"pl-k"],[15,19,"pl-c1"]],[[2,5,"pl-k"],[7,13,"pl-c1"],[18,19,"pl-c1"],[34,38,"pl-c1"]],[[4,8,"pl-k"]],[[4,6,"pl-k"],[9,21,"pl-c1"],[33,36,"pl-s"],[33,34,"pl-pds"],[35,36,"pl-pds"],[45,48,"pl-s"],[45,46,"pl-pds"],[47,48,"pl-pds"]],[[14,19,"pl-c1"]],[[6,11,"pl-k"]],[],[],[[2,8,"pl-k"]],[],[],[[0,9,"pl-k"],[10,18,"pl-k"]],[[0,6,"pl-k"]],[[0,39,"pl-c1"],[40,45,"pl-k"]],[[40,45,"pl-k"]],[[21,25,"pl-s"],[21,22,"pl-pds"],[24,25,"pl-pds"],[39,45,"pl-s"],[39,40,"pl-pds"],[40,44,"pl-cce"],[44,45,"pl-pds"]],[[10,51,"pl-s"],[10,11,"pl-pds"],[48,50,"pl-cce"],[50,51,"pl-pds"],[59,63,"pl-smi"],[66,70,"pl-s"],[66,67,"pl-pds"],[67,69,"pl-cce"],[69,70,"pl-pds"]],[[2,4,"pl-k"],[12,20,"pl-smi"],[21,26,"pl-c1"]],[[12,27,"pl-s"],[12,13,"pl-pds"],[24,26,"pl-cce"],[26,27,"pl-pds"],[35,43,"pl-smi"],[46,50,"pl-s"],[46,47,"pl-pds"],[47,49,"pl-cce"],[49,50,"pl-pds"]],[],[[10,16,"pl-s"],[10,11,"pl-pds"],[11,15,"pl-cce"],[15,16,"pl-pds"]],[[2,4,"pl-k"],[12,24,"pl-smi"],[25,30,"pl-c1"]],[[12,28,"pl-s"],[12,13,"pl-pds"],[27,28,"pl-pds"],[36,48,"pl-smi"],[51,57,"pl-s"],[51,52,"pl-pds"],[52,56,"pl-cce"],[56,57,"pl-pds"]],[],[[10,16,"pl-s"],[10,11,"pl-pds"],[11,15,"pl-cce"],[15,16,"pl-pds"]],[],[[2,8,"pl-k"]],[],[],[[0,6,"pl-k"],[19,56,"pl-smi"],[61,67,"pl-k"],[68,74,"pl-s"],[68,69,"pl-pds"],[69,73,"pl-cce"],[73,74,"pl-pds"]],[],[[0,6,"pl-k"]],[[0,35,"pl-c1"],[36,41,"pl-k"]],[[2,8,"pl-k"],[9,13,"pl-s"],[9,10,"pl-pds"],[12,13,"pl-pds"],[27,35,"pl-s"],[27,28,"pl-pds"],[30,34,"pl-cce"],[34,35,"pl-pds"]],[],[],[[0,6,"pl-k"]],[[0,45,"pl-c1"],[46,51,"pl-k"]],[[2,8,"pl-k"],[9,41,"pl-s"],[9,10,"pl-pds"],[40,41,"pl-pds"]],[],[],[[0,6,"pl-k"]],[[0,28,"pl-c1"],[29,34,"pl-k"]],[[29,34,"pl-k"],[58,62,"pl-k"],[72,76,"pl-c1"]],[],[],[[2,5,"pl-k"],[7,12,"pl-k"],[13,17,"pl-k"]],[[12,51,"pl-c1"]],[[17,24,"pl-smi"],[27,64,"pl-c1"]],[],[],[[2,4,"pl-k"],[24,59,"pl-c1"]],[],[[2,8,"pl-k"]],[],[],[[0,6,"pl-k"],[7,11,"pl-k"],[12,23,"pl-smi"]],[[2,4,"pl-k"],[11,17,"pl-smi"],[18,23,"pl-c1"],[29,32,"pl-c1"],[40,46,"pl-smi"],[54,60,"pl-smi"],[63,66,"pl-c1"]],[[4,11,"pl-c1"],[26,37,"pl-k"],[38,45,"pl-c1"]],[[12,27,"pl-smi"],[34,49,"pl-smi"],[56,60,"pl-smi"],[61,65,"pl-c1"]],[],[[4,11,"pl-c1"],[30,31,"pl-c1"]],[[4,11,"pl-c1"],[29,30,"pl-c1"]],[[4,10,"pl-c1"],[32,33,"pl-c1"]],[],[[4,76,"pl-c"],[4,6,"pl-c"]],[[4,69,"pl-c"],[4,6,"pl-c"]],[[4,58,"pl-c"],[4,6,"pl-c"]],[],[[4,22,"pl-c"],[4,6,"pl-c"]],[[4,6,"pl-k"],[12,18,"pl-smi"],[19,23,"pl-c1"],[58,64,"pl-k"],[65,69,"pl-c1"]],[],[[4,7,"pl-k"],[9,13,"pl-k"],[23,29,"pl-smi"]],[[6,10,"pl-k"],[26,31,"pl-smi"]],[[6,10,"pl-k"],[25,31,"pl-smi"]],[],[[6,8,"pl-k"],[24,25,"pl-c1"],[42,43,"pl-c1"]],[[20,21,"pl-c1"]],[],[],[],[[6,8,"pl-k"],[24,25,"pl-c1"]],[],[[33,34,"pl-c1"]],[],[],[[6,46,"pl-c"],[6,8,"pl-c"]],[[6,77,"pl-c"],[6,8,"pl-c"]],[[6,78,"pl-c"],[6,8,"pl-c"]],[[6,78,"pl-c"],[6,8,"pl-c"]],[[6,79,"pl-c"],[6,8,"pl-c"]],[[6,76,"pl-c"],[6,8,"pl-c"]],[[6,78,"pl-c"],[6,8,"pl-c"]],[[6,25,"pl-c"],[6,8,"pl-c"]],[[6,69,"pl-c"],[6,8,"pl-c"]],[[6,8,"pl-k"],[23,24,"pl-c1"]],[[33,34,"pl-c1"]],[],[],[[6,44,"pl-c"],[6,8,"pl-c"]],[[6,8,"pl-k"],[12,13,"pl-c1"]],[[38,39,"pl-c1"]],[[8,14,"pl-k"],[15,19,"pl-c1"]],[],[],[[6,42,"pl-c"],[6,8,"pl-c"]],[[6,8,"pl-k"],[41,47,"pl-k"],[48,52,"pl-c1"]],[],[[6,63,"pl-c"],[6,8,"pl-c"]],[[6,8,"pl-k"]],[],[[8,10,"pl-k"],[33,34,"pl-c1"],[38,44,"pl-k"],[45,49,"pl-c1"]],[],[],[],[],[],[],[],[[2,8,"pl-k"],[9,14,"pl-c1"]],[],[],[[0,6,"pl-k"],[17,23,"pl-c1"],[25,31,"pl-c1"]],[[0,27,"pl-c1"],[37,43,"pl-c1"]],[[2,8,"pl-c1"],[11,16,"pl-smi"],[21,22,"pl-c1"],[28,34,"pl-smi"],[39,40,"pl-c1"]],[[2,8,"pl-c1"],[9,10,"pl-c1"],[16,21,"pl-smi"],[27,32,"pl-smi"],[35,46,"pl-k"],[47,54,"pl-c1"]],[[2,8,"pl-c1"],[11,16,"pl-smi"],[22,28,"pl-smi"]],[[11,17,"pl-smi"],[20,31,"pl-k"],[32,39,"pl-c1"]],[[3,7,"pl-k"]],[[2,8,"pl-k"],[9,23,"pl-c1"],[26,31,"pl-smi"],[33,44,"pl-k"],[45,51,"pl-c1"],[55,61,"pl-smi"],[66,71,"pl-smi"],[75,76,"pl-c1"]],[],[],[[0,6,"pl-k"],[19,50,"pl-smi"]],[[4,9,"pl-k"],[20,26,"pl-c1"],[28,34,"pl-c1"],[56,62,"pl-c1"]],[[2,6,"pl-k"],[30,35,"pl-smi"]],[[2,6,"pl-k"],[35,41,"pl-smi"],[44,45,"pl-c1"]],[],[[22,30,"pl-s"],[22,23,"pl-pds"],[29,30,"pl-pds"]],[[11,25,"pl-c1"]],[[11,14,"pl-s"],[11,12,"pl-pds"],[13,14,"pl-pds"]],[[11,25,"pl-c1"]],[[11,14,"pl-s"],[11,12,"pl-pds"],[13,14,"pl-pds"]],[[11,25,"pl-c1"]],[[2,8,"pl-k"]],[],[],[[0,9,"pl-k"],[10,18,"pl-k"],[27,35,"pl-k"],[44,52,"pl-k"]],[[0,4,"pl-k"],[5,34,"pl-smi"],[35,40,"pl-k"]],[[35,40,"pl-k"]],[[35,40,"pl-k"]],[[35,41,"pl-c1"]],[],[[2,5,"pl-k"],[7,13,"pl-c1"],[18,19,"pl-c1"],[29,35,"pl-smi"],[36,40,"pl-c1"]],[[4,10,"pl-c1"],[11,15,"pl-s"],[11,12,"pl-pds"],[14,15,"pl-pds"]],[[4,10,"pl-c1"]],[[4,10,"pl-c1"],[11,17,"pl-s"],[11,12,"pl-pds"],[12,16,"pl-cce"],[16,17,"pl-pds"]],[[4,6,"pl-k"],[22,27,"pl-c1"]],[[6,12,"pl-c1"],[13,29,"pl-s"],[13,14,"pl-pds"],[28,29,"pl-pds"]],[[6,12,"pl-c1"]],[[6,12,"pl-c1"],[13,19,"pl-s"],[13,14,"pl-pds"],[14,18,"pl-cce"],[18,19,"pl-pds"]],[],[],[[4,8,"pl-k"]],[[8,35,"pl-c1"],[40,46,"pl-smi"]],[],[[4,10,"pl-c1"],[11,28,"pl-s"],[11,12,"pl-pds"],[27,28,"pl-pds"]],[[4,10,"pl-c1"],[11,42,"pl-c1"]],[[4,10,"pl-c1"],[11,17,"pl-s"],[11,12,"pl-pds"],[12,16,"pl-cce"],[16,17,"pl-pds"]],[[4,10,"pl-c1"],[11,17,"pl-s"],[11,12,"pl-pds"],[12,16,"pl-cce"],[16,17,"pl-pds"]],[],[[4,6,"pl-k"],[9,16,"pl-c1"],[35,40,"pl-smi"],[60,66,"pl-smi"]],[[6,12,"pl-k"],[13,18,"pl-c1"]],[],[[4,10,"pl-c1"],[11,17,"pl-s"],[11,12,"pl-pds"],[12,16,"pl-cce"],[16,17,"pl-pds"]],[],[],[[2,8,"pl-c1"],[9,13,"pl-s"],[9,10,"pl-pds"],[12,13,"pl-pds"]],[[2,8,"pl-c1"]],[[2,8,"pl-c1"],[9,13,"pl-s"],[9,10,"pl-pds"],[12,13,"pl-pds"]],[],[[2,8,"pl-k"],[9,13,"pl-c1"]],[],[],[[0,6,"pl-k"],[7,11,"pl-k"],[12,38,"pl-smi"],[39,44,"pl-k"]],[[39,44,"pl-k"]],[[39,44,"pl-k"]],[[39,45,"pl-c1"]],[],[[2,31,"pl-c1"]],[],[[10,15,"pl-k"]],[[10,15,"pl-k"]],[[10,16,"pl-c1"],[25,31,"pl-c1"]],[[8,14,"pl-c1"]],[[20,24,"pl-smi"],[25,31,"pl-c1"]],[[8,14,"pl-k"],[15,19,"pl-c1"]],[],[],[],[[0,6,"pl-k"],[7,13,"pl-c1"],[14,46,"pl-smi"],[47,52,"pl-k"]],[[47,52,"pl-k"]],[[47,52,"pl-k"]],[[47,53,"pl-c1"]],[[2,8,"pl-c1"],[23,24,"pl-c1"]],[],[[2,31,"pl-c1"]],[],[[10,15,"pl-k"],[59,63,"pl-c1"]],[[10,15,"pl-k"],[59,63,"pl-c1"]],[[10,16,"pl-c1"],[17,27,"pl-c"],[17,19,"pl-c"],[25,27,"pl-c"],[29,35,"pl-c1"]],[],[[8,14,"pl-k"],[15,19,"pl-c1"]],[],[],[[2,8,"pl-k"]],[],[],[[0,9,"pl-k"],[10,18,"pl-k"]],[[0,6,"pl-k"],[7,11,"pl-k"]],[[0,27,"pl-c1"],[42,47,"pl-k"]],[[28,33,"pl-k"]],[[28,33,"pl-k"]],[[28,34,"pl-c1"],[51,56,"pl-k"]],[[2,8,"pl-k"],[9,38,"pl-c1"]],[],[[10,15,"pl-k"],[43,48,"pl-c1"]],[[10,15,"pl-k"],[43,48,"pl-c1"]],[[10,16,"pl-c1"],[25,31,"pl-c1"]],[[8,14,"pl-k"],[15,28,"pl-c1"],[39,56,"pl-smi"]],[],[],[],[],[[0,6,"pl-k"],[7,11,"pl-k"],[12,26,"pl-smi"],[27,32,"pl-k"]],[[2,4,"pl-k"],[10,16,"pl-smi"],[20,26,"pl-s"],[20,21,"pl-pds"],[25,26,"pl-pds"],[34,40,"pl-smi"],[44,49,"pl-s"],[44,45,"pl-pds"],[48,49,"pl-pds"],[57,63,"pl-smi"],[67,74,"pl-s"],[67,68,"pl-pds"],[73,74,"pl-pds"]],[[10,16,"pl-smi"],[20,28,"pl-s"],[20,21,"pl-pds"],[27,28,"pl-pds"]],[[4,10,"pl-k"],[11,15,"pl-c1"]],[],[[2,4,"pl-k"],[10,20,"pl-c1"],[21,37,"pl-s"],[21,22,"pl-pds"],[36,37,"pl-pds"]],[[10,30,"pl-c1"],[31,47,"pl-s"],[31,32,"pl-pds"],[46,47,"pl-pds"],[51,52,"pl-c1"]],[[4,10,"pl-k"],[11,15,"pl-c1"]],[],[[2,4,"pl-k"],[6,34,"pl-c1"],[39,46,"pl-smi"],[51,57,"pl-k"],[58,62,"pl-c1"]],[[2,8,"pl-k"],[9,14,"pl-c1"]],[],[],[[0,6,"pl-k"],[7,11,"pl-k"],[12,20,"pl-smi"],[21,26,"pl-k"]],[[2,6,"pl-k"],[13,18,"pl-c1"]],[[2,7,"pl-k"]],[[4,6,"pl-k"],[14,18,"pl-s"],[14,15,"pl-pds"],[15,17,"pl-cce"],[17,18,"pl-pds"],[28,32,"pl-s"],[28,29,"pl-pds"],[29,31,"pl-cce"],[31,32,"pl-pds"],[36,42,"pl-k"],[43,47,"pl-c1"]],[],[],[[2,8,"pl-k"],[9,14,"pl-c1"]],[],[],[[1,6,"pl-k"]],[[0,6,"pl-k"],[19,33,"pl-smi"],[34,39,"pl-k"],[56,61,"pl-k"]],[[2,6,"pl-k"],[45,53,"pl-c1"]],[[6,20,"pl-c1"]],[],[[2,10,"pl-k"],[11,14,"pl-k"],[29,30,"pl-c1"]],[[2,10,"pl-k"],[11,15,"pl-k"]],[],[[2,19,"pl-c1"],[28,31,"pl-c1"],[41,48,"pl-c1"]],[[2,18,"pl-c1"],[27,30,"pl-c1"],[36,41,"pl-c1"],[47,51,"pl-c1"]],[[2,20,"pl-c1"],[29,32,"pl-c1"]],[],[],[[2,5,"pl-k"],[7,11,"pl-k"],[16,18,"pl-c1"]],[[22,31,"pl-c1"],[32,33,"pl-c1"],[38,50,"pl-c1"],[51,54,"pl-s"],[51,52,"pl-pds"],[53,54,"pl-pds"]],[[10,21,"pl-k"],[22,30,"pl-k"],[31,34,"pl-k"]],[],[],[[2,8,"pl-k"],[12,15,"pl-c1"]],[],[],[[0,6,"pl-k"],[19,22,"pl-smi"],[23,28,"pl-k"]],[[2,8,"pl-k"],[9,23,"pl-c1"],[27,34,"pl-c1"]],[],[],[[0,6,"pl-k"],[19,26,"pl-smi"],[27,32,"pl-k"]],[[2,8,"pl-k"],[9,23,"pl-c1"],[27,37,"pl-c1"]],[],[],[[0,6,"pl-k"],[19,26,"pl-smi"],[27,32,"pl-k"]],[[2,8,"pl-k"],[9,23,"pl-c1"],[27,37,"pl-c1"]],[],[],[[0,6,"pl-k"],[43,76,"pl-c1"]],[[4,9,"pl-k"],[24,29,"pl-k"]],[[4,10,"pl-c1"],[25,30,"pl-k"],[52,57,"pl-k"]],[[4,9,"pl-k"],[33,37,"pl-k"],[49,54,"pl-c1"]],[],[],[],[[10,22,"pl-c1"],[23,26,"pl-s"],[23,24,"pl-pds"],[25,26,"pl-pds"],[31,40,"pl-c1"],[41,42,"pl-c1"]],[[12,15,"pl-c1"]],[],[],[],[[2,4,"pl-k"],[11,15,"pl-c1"],[16,21,"pl-s"],[16,17,"pl-pds"],[20,21,"pl-pds"],[31,34,"pl-c1"]],[[15,17,"pl-c1"],[18,23,"pl-s"],[18,19,"pl-pds"],[22,23,"pl-pds"]],[[4,6,"pl-k"],[12,16,"pl-c1"],[17,27,"pl-s"],[17,18,"pl-pds"],[26,27,"pl-pds"]],[[12,22,"pl-s"],[12,13,"pl-pds"],[21,22,"pl-pds"]],[[6,10,"pl-k"],[11,13,"pl-k"],[19,23,"pl-c1"],[24,30,"pl-s"],[24,25,"pl-pds"],[29,30,"pl-pds"]],[[12,18,"pl-s"],[12,13,"pl-pds"],[17,18,"pl-pds"]],[[6,10,"pl-k"]],[[10,15,"pl-c1"]],[],[],[],[[21,26,"pl-s"],[21,22,"pl-pds"],[25,26,"pl-pds"]],[[2,4,"pl-k"],[11,15,"pl-c1"],[16,27,"pl-s"],[16,17,"pl-pds"],[26,27,"pl-pds"],[37,40,"pl-c1"],[58,60,"pl-c1"],[61,72,"pl-s"],[61,62,"pl-pds"],[71,72,"pl-pds"]],[],[],[],[[4,8,"pl-k"],[21,30,"pl-s"],[21,22,"pl-pds"],[29,30,"pl-pds"]],[[23,32,"pl-s"],[23,24,"pl-pds"],[31,32,"pl-pds"]],[],[],[[4,8,"pl-k"],[25,28,"pl-s"],[25,26,"pl-pds"],[27,28,"pl-pds"],[36,38,"pl-c1"],[39,46,"pl-s"],[39,40,"pl-pds"],[45,46,"pl-pds"],[50,53,"pl-s"],[50,51,"pl-pds"],[52,53,"pl-pds"]],[],[[4,8,"pl-k"],[18,24,"pl-smi"],[27,30,"pl-s"],[27,28,"pl-pds"],[29,30,"pl-pds"],[37,41,"pl-smi"]],[[4,6,"pl-k"],[15,25,"pl-s"],[15,16,"pl-pds"],[24,25,"pl-pds"],[35,38,"pl-s"],[35,36,"pl-pds"],[37,38,"pl-pds"],[41,42,"pl-c1"],[47,51,"pl-smi"]],[],[[4,6,"pl-k"],[12,17,"pl-c1"]],[[17,18,"pl-c1"],[19,20,"pl-c1"],[27,30,"pl-s"],[27,28,"pl-pds"],[29,30,"pl-pds"],[38,40,"pl-c1"],[41,48,"pl-s"],[41,42,"pl-pds"],[47,48,"pl-pds"],[52,55,"pl-s"],[52,53,"pl-pds"],[54,55,"pl-pds"],[58,59,"pl-c1"]],[[6,10,"pl-k"]],[[17,18,"pl-c1"],[19,20,"pl-c1"],[27,30,"pl-s"],[27,28,"pl-pds"],[29,30,"pl-pds"],[38,40,"pl-c1"],[41,48,"pl-s"],[41,42,"pl-pds"],[47,48,"pl-pds"],[52,55,"pl-s"],[52,53,"pl-pds"],[54,55,"pl-pds"],[63,66,"pl-s"],[63,64,"pl-pds"],[65,66,"pl-pds"]],[[19,22,"pl-s"],[19,20,"pl-pds"],[21,22,"pl-pds"],[31,34,"pl-s"],[31,32,"pl-pds"],[33,34,"pl-pds"],[37,38,"pl-c1"]],[],[],[],[[2,6,"pl-k"],[22,26,"pl-c1"],[27,35,"pl-s"],[27,28,"pl-pds"],[34,35,"pl-pds"],[45,48,"pl-c1"],[59,61,"pl-c1"],[62,70,"pl-s"],[62,63,"pl-pds"],[69,70,"pl-pds"],[74,76,"pl-s"],[74,75,"pl-pds"],[75,76,"pl-pds"]],[],[[2,6,"pl-k"],[15,35,"pl-s"],[15,16,"pl-pds"],[32,34,"pl-cce"],[34,35,"pl-pds"],[49,63,"pl-s"],[49,50,"pl-pds"],[50,52,"pl-cce"],[60,62,"pl-cce"],[62,63,"pl-pds"]],[[20,22,"pl-c1"],[23,30,"pl-s"],[23,24,"pl-pds"],[29,30,"pl-pds"],[34,48,"pl-s"],[34,35,"pl-pds"],[35,37,"pl-cce"],[45,47,"pl-cce"],[47,48,"pl-pds"],[56,58,"pl-c1"],[59,66,"pl-s"],[59,60,"pl-pds"],[65,66,"pl-pds"]],[[15,27,"pl-s"],[15,16,"pl-pds"],[16,18,"pl-cce"],[24,26,"pl-cce"],[26,27,"pl-pds"],[34,38,"pl-smi"],[41,57,"pl-s"],[41,42,"pl-pds"],[42,44,"pl-cce"],[56,57,"pl-pds"]],[[20,25,"pl-c1"],[30,45,"pl-s"],[30,31,"pl-pds"],[42,44,"pl-cce"],[44,45,"pl-pds"]],[[30,38,"pl-s"],[30,31,"pl-pds"],[37,38,"pl-pds"],[47,54,"pl-s"],[47,48,"pl-pds"],[53,54,"pl-pds"],[62,75,"pl-s"],[62,63,"pl-pds"],[72,74,"pl-cce"],[74,75,"pl-pds"]],[[43,60,"pl-s"],[43,44,"pl-pds"],[44,46,"pl-cce"],[57,59,"pl-cce"],[59,60,"pl-pds"]],[[26,30,"pl-s"],[26,27,"pl-pds"],[27,29,"pl-cce"],[29,30,"pl-pds"]],[[23,28,"pl-c1"],[33,35,"pl-s"],[33,34,"pl-pds"],[34,35,"pl-pds"],[38,51,"pl-s"],[38,39,"pl-pds"],[48,50,"pl-cce"],[50,51,"pl-pds"],[63,67,"pl-s"],[63,64,"pl-pds"],[64,66,"pl-cce"],[66,67,"pl-pds"]],[],[[2,6,"pl-k"],[24,45,"pl-s"],[24,25,"pl-pds"],[44,45,"pl-pds"],[48,63,"pl-s"],[48,49,"pl-pds"],[62,63,"pl-pds"]],[[2,8,"pl-k"],[9,23,"pl-c1"]],[],[],[[0,6,"pl-k"],[7,11,"pl-k"],[12,39,"pl-smi"],[50,58,"pl-c1"]],[[2,25,"pl-c1"],[32,36,"pl-c1"]],[[2,6,"pl-k"],[12,30,"pl-c1"],[39,62,"pl-c1"],[69,74,"pl-c1"]],[],[[2,6,"pl-k"],[11,12,"pl-c1"]],[[2,8,"pl-k"],[10,18,"pl-c1"],[29,30,"pl-c1"]],[[9,22,"pl-c1"],[28,29,"pl-c1"]],[],[],[[1,6,"pl-k"]],[[0,65,"pl-c"],[0,2,"pl-c"]],[[0,102,"pl-c"],[0,2,"pl-c"]],[[0,6,"pl-k"],[7,11,"pl-k"],[12,40,"pl-smi"]],[[2,6,"pl-k"],[16,36,"pl-c1"],[56,60,"pl-c1"],[62,69,"pl-s"],[62,64,"pl-pds"],[68,69,"pl-pds"]],[[2,4,"pl-k"],[17,23,"pl-k"],[24,29,"pl-c1"]],[],[[2,6,"pl-k"],[16,21,"pl-c1"]],[[28,32,"pl-c1"]],[[2,7,"pl-k"],[21,48,"pl-c1"]],[[9,16,"pl-c1"]],[[4,8,"pl-k"]],[[8,19,"pl-k"],[20,25,"pl-k"],[26,34,"pl-k"],[35,39,"pl-k"],[53,66,"pl-smi"]],[],[[4,8,"pl-k"],[16,24,"pl-c1"],[25,29,"pl-c1"],[56,69,"pl-smi"]],[[4,6,"pl-k"]],[[6,25,"pl-c1"]],[[6,15,"pl-c1"]],[[15,19,"pl-c1"]],[],[],[],[[2,28,"pl-c1"]],[[2,16,"pl-c1"],[25,26,"pl-c1"]],[],[[2,8,"pl-k"]],[],[[1,5,"pl-k"]],[[1,3,"pl-k"]],[[0,9,"pl-k"],[10,18,"pl-k"]],[[0,5,"pl-k"]],[[20,28,"pl-k"],[59,63,"pl-c1"],[68,77,"pl-c1"]],[],[[0,6,"pl-k"],[7,11,"pl-k"],[12,33,"pl-smi"],[34,43,"pl-c1"]],[[2,4,"pl-k"],[13,22,"pl-c1"]],[],[],[[0,6,"pl-k"],[7,11,"pl-k"],[12,40,"pl-smi"],[53,63,"pl-c1"]],[[2,13,"pl-c1"],[24,33,"pl-c1"],[35,49,"pl-c1"],[51,64,"pl-c1"]],[[2,11,"pl-c1"],[24,44,"pl-c1"],[46,63,"pl-c1"]],[[24,38,"pl-c1"]],[],[[14,29,"pl-c1"],[31,36,"pl-c1"]],[[6,24,"pl-c1"],[25,32,"pl-c1"],[34,50,"pl-k"],[51,56,"pl-k"],[57,61,"pl-k"]],[[25,31,"pl-k"],[40,46,"pl-k"],[52,53,"pl-c1"]],[[26,55,"pl-c1"]],[[26,57,"pl-c1"]],[],[],[[2,4,"pl-k"],[16,22,"pl-k"],[23,28,"pl-c1"]],[],[[2,11,"pl-c1"],[29,36,"pl-c1"]],[[2,4,"pl-k"],[6,25,"pl-c1"],[32,35,"pl-c1"]],[[6,22,"pl-c1"],[28,39,"pl-c1"]],[[4,10,"pl-k"],[11,16,"pl-c1"]],[],[],[[8,13,"pl-c1"],[14,30,"pl-k"],[31,41,"pl-c1"]],[[2,8,"pl-k"],[9,13,"pl-c1"]],[],[],[[0,6,"pl-k"],[7,11,"pl-k"],[12,45,"pl-smi"],[58,68,"pl-c1"]],[[2,12,"pl-c1"],[35,42,"pl-c1"]],[[2,4,"pl-k"],[6,36,"pl-c1"]],[[4,10,"pl-k"],[11,16,"pl-c1"]],[],[],[[8,13,"pl-c1"]],[[2,8,"pl-k"],[9,13,"pl-c1"]],[],[],[[0,6,"pl-k"],[7,11,"pl-k"],[12,35,"pl-smi"],[36,46,"pl-c1"]],[[2,6,"pl-k"],[16,21,"pl-c1"]],[[2,5,"pl-k"],[7,11,"pl-k"],[16,17,"pl-c1"],[23,38,"pl-c1"]],[[4,9,"pl-k"],[10,14,"pl-k"],[22,38,"pl-k"],[39,44,"pl-k"]],[[8,30,"pl-c1"]],[],[[4,6,"pl-k"],[8,31,"pl-c1"],[37,48,"pl-c1"],[58,66,"pl-k"]],[],[[4,13,"pl-c1"],[26,33,"pl-c1"]],[[4,6,"pl-k"],[8,21,"pl-c1"],[28,46,"pl-c1"],[48,49,"pl-c1"],[51,58,"pl-c1"]],[],[[6,14,"pl-k"]],[],[],[[16,25,"pl-c1"],[27,40,"pl-c1"]],[],[[4,8,"pl-k"],[24,35,"pl-k"],[36,41,"pl-k"],[42,50,"pl-k"],[51,55,"pl-k"]],[[8,24,"pl-c1"],[39,42,"pl-c1"]],[],[[4,8,"pl-k"]],[[8,16,"pl-c1"],[17,21,"pl-c1"],[38,53,"pl-c1"],[68,71,"pl-c1"]],[],[[4,6,"pl-k"]],[[6,25,"pl-c1"]],[[6,15,"pl-c1"]],[[15,19,"pl-c1"]],[],[],[],[[2,8,"pl-k"]],[],[],[[0,6,"pl-k"],[7,11,"pl-k"],[12,38,"pl-smi"]],[[2,6,"pl-k"],[16,21,"pl-c1"]],[[14,24,"pl-c1"],[26,31,"pl-c1"],[32,39,"pl-c1"]],[[2,4,"pl-k"],[6,34,"pl-c1"]],[[13,36,"pl-c1"],[43,46,"pl-c1"]],[],[],[[2,4,"pl-k"],[6,39,"pl-c1"]],[[13,36,"pl-c1"],[43,46,"pl-c1"]],[],[],[[2,8,"pl-k"]],[],[[1,6,"pl-k"],[7,23,"pl-c"],[7,9,"pl-c"]],[[1,6,"pl-k"],[7,16,"pl-c"],[7,9,"pl-c"]],[[1,6,"pl-k"],[7,36,"pl-c"],[7,9,"pl-c"]],[],[[1,6,"pl-k"]],[[0,5,"pl-k"],[6,12,"pl-en"]],[[0,7,"pl-k"]],[[2,8,"pl-en"]],[],[[4,6,"pl-k"],[8,18,"pl-c1"],[19,25,"pl-c1"],[40,41,"pl-c1"],[55,59,"pl-c1"]],[],[],[[2,9,"pl-en"]],[[4,6,"pl-k"],[19,29,"pl-c1"]],[],[],[[2,6,"pl-k"],[19,24,"pl-c1"]],[],[],[[0,6,"pl-k"]],[[1,6,"pl-k"]],[],[[0,6,"pl-k"],[7,11,"pl-k"],[12,34,"pl-smi"],[35,40,"pl-k"]],[],[[35,39,"pl-k"]],[[2,6,"pl-k"],[29,49,"pl-s"],[29,30,"pl-pds"],[48,49,"pl-pds"],[52,70,"pl-s"],[52,53,"pl-pds"],[69,70,"pl-pds"]],[[2,4,"pl-k"],[10,20,"pl-c1"]],[[4,16,"pl-k"],[17,21,"pl-k"]],[[8,18,"pl-c1"],[19,64,"pl-s"],[19,23,"pl-pds"],[61,64,"pl-pds"]],[[4,8,"pl-k"],[17,33,"pl-c1"]],[[4,8,"pl-k"],[17,21,"pl-c1"],[22,25,"pl-s"],[22,23,"pl-pds"],[24,25,"pl-pds"]],[[4,6,"pl-k"]],[[6,10,"pl-k"],[20,26,"pl-c1"],[27,28,"pl-c1"]],[[6,8,"pl-k"],[18,25,"pl-s"],[18,19,"pl-pds"],[24,25,"pl-pds"]],[[8,14,"pl-k"],[15,20,"pl-c1"]],[[8,12,"pl-k"],[13,15,"pl-k"],[25,33,"pl-s"],[25,26,"pl-pds"],[32,33,"pl-pds"]],[[14,20,"pl-c1"],[27,28,"pl-c1"]],[[8,12,"pl-k"],[19,39,"pl-c1"],[42,47,"pl-c1"],[53,56,"pl-c1"]],[[8,11,"pl-k"],[13,17,"pl-k"],[32,52,"pl-c1"]],[[10,15,"pl-k"],[16,20,"pl-k"]],[[10,14,"pl-k"],[23,29,"pl-c1"],[30,41,"pl-k"],[42,48,"pl-c1"],[52,60,"pl-c1"],[61,62,"pl-c1"]],[[30,41,"pl-k"],[42,48,"pl-c1"],[52,58,"pl-c1"],[59,60,"pl-c1"]],[[10,14,"pl-k"],[23,29,"pl-c1"],[30,31,"pl-c1"],[35,36,"pl-c1"]],[[29,35,"pl-c1"],[36,47,"pl-k"],[48,54,"pl-c1"],[58,66,"pl-c1"],[67,68,"pl-c1"]],[[36,47,"pl-k"],[48,54,"pl-c1"],[58,64,"pl-c1"],[65,66,"pl-c1"]],[[29,35,"pl-c1"],[36,47,"pl-k"],[48,54,"pl-c1"],[58,66,"pl-c1"],[67,68,"pl-c1"]],[[36,47,"pl-k"],[48,54,"pl-c1"],[58,64,"pl-c1"],[65,66,"pl-c1"]],[],[],[[8,14,"pl-k"],[15,19,"pl-c1"]],[],[],[],[[2,8,"pl-k"],[9,14,"pl-c1"]],[],[],[[0,5,"pl-k"],[6,28,"pl-en"]],[[0,7,"pl-k"]],[[2,10,"pl-k"],[11,33,"pl-en"]],[],[],[],[[2,6,"pl-k"],[7,15,"pl-en"],[18,24,"pl-c1"],[33,39,"pl-c1"]],[[4,10,"pl-k"],[11,28,"pl-c1"]],[],[],[[0,8,"pl-k"]],[],[],[],[[2,21,"pl-c"],[2,4,"pl-c"]],[],[[0,6,"pl-k"],[19,28,"pl-smi"],[29,34,"pl-k"]],[],[[2,11,"pl-c1"]],[[2,4,"pl-k"],[12,17,"pl-c1"],[23,29,"pl-k"],[30,41,"pl-c1"]],[[2,8,"pl-k"],[15,16,"pl-c1"]],[],[],[[0,6,"pl-k"],[7,11,"pl-k"],[12,21,"pl-smi"],[22,27,"pl-k"]],[],[[2,8,"pl-k"],[9,17,"pl-en"]],[[2,8,"pl-k"],[9,17,"pl-en"]],[],[[2,8,"pl-c1"],[17,18,"pl-c1"],[20,26,"pl-k"],[27,33,"pl-k"],[34,42,"pl-en"]],[[8,17,"pl-smi"]],[[8,19,"pl-smi"]],[[8,19,"pl-smi"],[22,23,"pl-c1"]],[],[[2,4,"pl-k"],[6,17,"pl-c1"],[27,32,"pl-c1"],[36,43,"pl-c1"]],[[1,3,"pl-k"]],[[4,12,"pl-c1"]],[[1,6,"pl-k"]],[[4,10,"pl-k"]],[],[[2,6,"pl-k"],[12,30,"pl-c1"],[37,49,"pl-c1"]],[],[[2,5,"pl-k"],[7,11,"pl-k"],[38,45,"pl-smi"]],[[4,9,"pl-k"],[10,14,"pl-k"]],[[9,25,"pl-k"],[26,32,"pl-k"],[33,49,"pl-en"],[57,64,"pl-smi"]],[],[[4,8,"pl-k"],[18,19,"pl-c1"]],[[4,6,"pl-k"],[8,31,"pl-c1"],[38,44,"pl-k"],[45,51,"pl-k"],[52,68,"pl-en"]],[],[[12,21,"pl-c1"]],[],[],[],[],[[0,6,"pl-k"],[19,38,"pl-smi"],[39,44,"pl-k"]],[[39,44,"pl-k"]],[],[[2,14,"pl-k"],[15,20,"pl-k"],[32,34,"pl-smi"],[35,47,"pl-s"],[35,36,"pl-pds"],[41,43,"pl-cce"],[46,47,"pl-pds"]],[[2,6,"pl-k"],[14,30,"pl-c1"],[43,46,"pl-s"],[43,44,"pl-pds"],[45,46,"pl-pds"],[49,52,"pl-s"],[49,50,"pl-pds"],[51,52,"pl-pds"]],[[28,55,"pl-c1"]],[[2,8,"pl-k"]],[],[],[[0,19,"pl-c"],[0,2,"pl-c"]],[[0,6,"pl-k"]],[[0,17,"pl-c1"],[18,23,"pl-k"]],[[22,30,"pl-s"],[22,23,"pl-pds"],[29,30,"pl-pds"]],[[2,6,"pl-k"],[11,12,"pl-c1"]],[[2,5,"pl-k"],[7,12,"pl-k"],[13,17,"pl-k"]],[[4,6,"pl-k"],[13,14,"pl-c1"],[27,31,"pl-s"],[27,28,"pl-pds"],[30,31,"pl-pds"]],[[4,6,"pl-k"],[10,15,"pl-smi"],[20,21,"pl-c1"],[34,48,"pl-c1"],[51,56,"pl-smi"]],[[13,16,"pl-s"],[13,14,"pl-pds"],[15,16,"pl-pds"]],[[4,6,"pl-k"],[10,16,"pl-smi"],[21,22,"pl-c1"],[35,49,"pl-c1"],[52,58,"pl-smi"]],[],[],[[2,8,"pl-k"],[9,23,"pl-c1"],[24,31,"pl-s"],[24,25,"pl-pds"],[30,31,"pl-pds"],[33,42,"pl-c1"]],[],[],[[0,6,"pl-k"]],[[0,32,"pl-c1"],[33,38,"pl-k"]],[[33,38,"pl-k"],[62,66,"pl-k"]],[[2,6,"pl-k"],[15,23,"pl-s"],[15,16,"pl-pds"],[22,23,"pl-pds"],[26,47,"pl-c1"],[59,62,"pl-s"],[59,60,"pl-pds"],[61,62,"pl-pds"]],[[2,6,"pl-k"],[24,45,"pl-s"],[24,25,"pl-pds"],[44,45,"pl-pds"],[48,63,"pl-s"],[48,49,"pl-pds"],[62,63,"pl-pds"]],[[2,8,"pl-k"],[9,23,"pl-c1"],[29,38,"pl-c1"]],[],[],[[0,6,"pl-k"]],[[0,39,"pl-c1"],[40,45,"pl-k"]],[[40,44,"pl-k"],[56,61,"pl-c1"]],[[2,6,"pl-k"],[15,24,"pl-s"],[15,16,"pl-pds"],[23,24,"pl-pds"]],[[2,6,"pl-k"],[24,45,"pl-s"],[24,25,"pl-pds"],[44,45,"pl-pds"],[48,63,"pl-s"],[48,49,"pl-pds"],[62,63,"pl-pds"]],[[2,8,"pl-k"],[9,23,"pl-c1"],[29,38,"pl-c1"]],[],[],[[0,25,"pl-c"],[0,2,"pl-c"]],[[0,6,"pl-k"],[7,11,"pl-k"],[12,31,"pl-smi"],[32,37,"pl-k"],[56,61,"pl-k"]],[[2,8,"pl-k"],[9,27,"pl-c1"]],[],[],[[0,6,"pl-k"],[19,44,"pl-smi"],[45,50,"pl-k"]],[[45,50,"pl-k"],[51,55,"pl-k"],[62,68,"pl-c1"],[73,78,"pl-k"]],[[2,8,"pl-k"],[9,33,"pl-c1"]],[],[],[[0,6,"pl-k"],[7,13,"pl-c1"],[14,45,"pl-smi"],[46,51,"pl-k"],[70,75,"pl-k"]],[[2,6,"pl-k"],[19,30,"pl-c1"]],[[2,8,"pl-k"],[9,20,"pl-k"],[21,27,"pl-c1"],[29,42,"pl-c1"],[45,50,"pl-smi"],[54,60,"pl-smi"]],[],[],[[0,6,"pl-k"],[7,11,"pl-k"],[12,31,"pl-smi"],[32,37,"pl-k"]],[[32,37,"pl-k"]],[[2,4,"pl-k"],[6,35,"pl-c1"]],[[6,36,"pl-c1"]],[[12,19,"pl-c1"]],[],[],[],[[0,6,"pl-k"],[7,11,"pl-k"],[12,30,"pl-smi"],[31,36,"pl-k"],[55,60,"pl-k"]],[[2,8,"pl-k"],[16,20,"pl-c1"],[36,39,"pl-c1"]],[],[],[[0,6,"pl-k"],[19,43,"pl-smi"],[44,49,"pl-k"]],[[44,50,"pl-c1"],[55,60,"pl-k"]],[[2,6,"pl-k"],[20,31,"pl-c1"]],[[2,6,"pl-k"],[16,21,"pl-smi"]],[[2,14,"pl-c1"],[19,30,"pl-k"],[31,38,"pl-c1"]],[[2,4,"pl-k"],[16,22,"pl-smi"],[26,32,"pl-k"],[37,43,"pl-smi"]],[[2,8,"pl-k"],[9,20,"pl-c1"]],[],[],[[0,6,"pl-k"],[7,13,"pl-c1"],[14,44,"pl-smi"],[45,50,"pl-k"],[69,74,"pl-k"]],[[2,6,"pl-k"],[18,29,"pl-c1"]],[[2,8,"pl-k"],[9,20,"pl-k"],[21,27,"pl-c1"],[29,42,"pl-c1"],[45,50,"pl-smi"],[54,60,"pl-smi"]],[],[],[[0,6,"pl-k"],[7,11,"pl-k"],[12,43,"pl-smi"],[46,51,"pl-k"]],[[2,7,"pl-k"],[8,12,"pl-k"],[29,45,"pl-c1"],[46,60,"pl-s"],[46,47,"pl-pds"],[59,60,"pl-pds"]],[[2,8,"pl-k"],[23,28,"pl-c1"],[29,50,"pl-s"],[29,30,"pl-pds"],[49,50,"pl-pds"],[52,53,"pl-c1"]],[],[],[[0,6,"pl-k"],[7,11,"pl-k"],[12,29,"pl-smi"],[30,35,"pl-k"],[54,59,"pl-k"]],[[2,8,"pl-k"],[15,19,"pl-c1"],[34,37,"pl-c1"]],[],[],[[0,6,"pl-k"],[25,48,"pl-smi"],[49,54,"pl-k"],[73,78,"pl-k"]],[[2,6,"pl-k"],[18,22,"pl-c1"]],[[2,4,"pl-k"],[18,21,"pl-c1"],[27,33,"pl-k"],[38,44,"pl-smi"]],[[2,8,"pl-k"],[9,26,"pl-c1"]],[],[],[[0,6,"pl-k"]],[[0,24,"pl-c1"],[25,30,"pl-k"],[49,54,"pl-k"]],[],[[2,6,"pl-k"],[19,30,"pl-c1"]],[[2,5,"pl-k"],[7,11,"pl-k"],[21,26,"pl-smi"],[38,44,"pl-smi"]],[[11,20,"pl-c1"],[25,31,"pl-smi"]],[],[[2,8,"pl-k"]],[],[],[[0,26,"pl-c"],[0,2,"pl-c"]],[[0,6,"pl-k"],[7,11,"pl-k"],[12,32,"pl-smi"],[33,38,"pl-k"],[57,62,"pl-k"]],[[2,8,"pl-k"],[17,21,"pl-c1"],[38,41,"pl-c1"]],[],[],[[0,6,"pl-k"],[19,45,"pl-smi"],[46,51,"pl-k"]],[[46,51,"pl-k"],[52,56,"pl-k"]],[[46,52,"pl-c1"],[57,62,"pl-k"]],[[2,8,"pl-k"],[9,33,"pl-c1"]],[],[],[[0,6,"pl-k"],[7,13,"pl-c1"],[14,46,"pl-smi"],[47,52,"pl-k"],[71,76,"pl-k"]],[[2,6,"pl-k"],[19,30,"pl-c1"]],[[2,8,"pl-k"],[9,20,"pl-k"],[21,27,"pl-c1"],[29,42,"pl-c1"],[45,50,"pl-smi"],[54,60,"pl-smi"]],[],[],[[0,6,"pl-k"],[7,11,"pl-k"],[12,32,"pl-smi"],[33,38,"pl-k"]],[[33,38,"pl-k"]],[[2,4,"pl-k"],[6,35,"pl-c1"]],[[6,36,"pl-c1"]],[[12,19,"pl-c1"]],[],[],[],[[0,6,"pl-k"],[7,11,"pl-k"],[12,34,"pl-smi"],[35,40,"pl-k"],[59,62,"pl-k"]],[[2,4,"pl-k"],[6,36,"pl-c1"]],[[4,14,"pl-c1"],[15,25,"pl-s"],[15,16,"pl-pds"],[24,25,"pl-pds"]],[[4,6,"pl-k"],[8,11,"pl-c1"],[30,33,"pl-c1"]],[[6,10,"pl-c1"],[12,18,"pl-smi"]],[[6,10,"pl-k"]],[[6,10,"pl-c1"],[12,18,"pl-smi"]],[],[],[],[],[[0,6,"pl-k"],[7,11,"pl-k"],[12,33,"pl-smi"],[34,39,"pl-k"],[40,44,"pl-k"],[49,55,"pl-c1"]],[[34,39,"pl-k"]],[[7,13,"pl-c1"]],[],[[2,6,"pl-k"],[21,32,"pl-c1"],[33,47,"pl-s"],[33,34,"pl-pds"],[46,47,"pl-pds"]],[[10,15,"pl-c1"],[20,25,"pl-smi"],[31,37,"pl-smi"]],[[2,12,"pl-c1"],[13,27,"pl-s"],[13,14,"pl-pds"],[26,27,"pl-pds"]],[],[],[[0,6,"pl-k"],[7,11,"pl-k"],[12,33,"pl-smi"],[34,39,"pl-k"]],[[34,39,"pl-k"]],[[2,13,"pl-c1"],[16,20,"pl-c1"],[26,30,"pl-c1"]],[],[],[[0,6,"pl-k"],[7,11,"pl-k"],[12,33,"pl-smi"]],[[34,39,"pl-k"]],[[9,18,"pl-c1"]],[],[[2,6,"pl-k"],[21,32,"pl-c1"],[33,47,"pl-s"],[33,34,"pl-pds"],[46,47,"pl-pds"]],[[10,15,"pl-c1"],[20,25,"pl-smi"],[31,37,"pl-smi"]],[[2,12,"pl-c1"],[13,27,"pl-s"],[13,14,"pl-pds"],[26,27,"pl-pds"]],[],[],[[0,6,"pl-k"],[7,11,"pl-k"],[12,42,"pl-smi"]],[[4,10,"pl-c1"],[22,27,"pl-k"]],[],[[2,12,"pl-c1"],[13,27,"pl-s"],[13,14,"pl-pds"],[26,27,"pl-pds"]],[],[[2,4,"pl-k"],[18,19,"pl-c1"],[43,52,"pl-c1"]],[[40,49,"pl-c1"]],[[33,38,"pl-c1"]],[],[],[[0,6,"pl-k"],[7,11,"pl-k"],[12,42,"pl-smi"]],[[4,9,"pl-k"]],[],[[2,12,"pl-c1"],[13,27,"pl-s"],[13,14,"pl-pds"],[26,27,"pl-pds"]],[[20,21,"pl-c1"]],[[22,52,"pl-c1"],[53,62,"pl-c1"]],[[40,49,"pl-c1"]],[[33,38,"pl-c1"]],[],[],[[0,6,"pl-k"],[7,11,"pl-k"],[12,50,"pl-smi"]],[[4,9,"pl-k"]],[],[[2,12,"pl-c1"],[13,27,"pl-s"],[13,14,"pl-pds"],[26,27,"pl-pds"]],[[20,21,"pl-c1"]],[[22,52,"pl-c1"],[53,62,"pl-c1"]],[[40,49,"pl-c1"]],[[33,37,"pl-c1"]],[],[],[[0,6,"pl-k"],[7,11,"pl-k"],[12,38,"pl-smi"],[39,44,"pl-k"]],[[39,44,"pl-k"]],[],[],[],[],[[0,6,"pl-k"],[7,11,"pl-k"],[12,38,"pl-smi"],[39,44,"pl-k"]],[],[],[],[[0,24,"pl-c"],[0,2,"pl-c"]],[[0,6,"pl-k"],[7,11,"pl-k"],[12,38,"pl-smi"],[39,44,"pl-k"],[63,68,"pl-k"]],[[2,8,"pl-k"],[26,30,"pl-c1"],[56,59,"pl-c1"]],[],[],[[0,6,"pl-k"],[19,51,"pl-smi"],[52,57,"pl-k"]],[[52,57,"pl-k"],[58,62,"pl-k"]],[[52,58,"pl-c1"],[63,68,"pl-k"]],[[2,8,"pl-k"],[9,33,"pl-c1"]],[],[],[[0,6,"pl-k"],[7,13,"pl-c1"]],[[0,38,"pl-c1"],[39,44,"pl-k"],[63,68,"pl-k"]],[[2,6,"pl-k"],[28,39,"pl-c1"]],[[2,8,"pl-k"],[9,20,"pl-k"],[21,27,"pl-c1"],[29,42,"pl-c1"],[45,50,"pl-smi"],[54,60,"pl-smi"]],[],[],[[0,24,"pl-c"],[0,2,"pl-c"]],[[0,6,"pl-k"],[7,14,"pl-c1"],[15,28,"pl-smi"],[29,34,"pl-k"],[35,39,"pl-k"]],[[2,8,"pl-k"],[9,14,"pl-c1"],[20,26,"pl-c1"]],[],[],[[0,6,"pl-k"],[7,14,"pl-c1"],[15,28,"pl-smi"],[29,34,"pl-k"]],[[2,8,"pl-k"],[9,14,"pl-c1"],[17,21,"pl-c1"],[27,31,"pl-c1"]],[],[],[[0,9,"pl-k"],[10,16,"pl-en"]],[],[[0,6,"pl-k"],[7,11,"pl-k"],[12,31,"pl-en"],[32,38,"pl-c1"],[57,63,"pl-c1"]],[[32,38,"pl-c1"],[52,58,"pl-c1"]],[[32,38,"pl-c1"]],[[32,38,"pl-c1"]],[[2,6,"pl-k"],[37,41,"pl-c1"],[61,65,"pl-c1"]],[],[[2,6,"pl-k"]],[],[],[[2,4,"pl-k"],[28,29,"pl-c1"],[55,56,"pl-c1"]],[],[[45,49,"pl-c1"]],[[47,51,"pl-c1"],[55,59,"pl-c1"]],[],[],[[0,31,"pl-c"],[0,2,"pl-c"]],[[0,6,"pl-k"],[7,33,"pl-en"]],[[4,12,"pl-c1"],[19,25,"pl-c1"],[44,50,"pl-c1"]],[[4,10,"pl-c1"],[30,36,"pl-c1"]],[[4,10,"pl-c1"]],[],[],[],[],[],[],[[34,35,"pl-c1"]],[],[[0,6,"pl-k"],[7,34,"pl-en"],[39,46,"pl-k"]],[],[[0,6,"pl-k"],[7,11,"pl-k"],[12,37,"pl-en"],[40,45,"pl-k"]],[[2,8,"pl-k"]],[],[],[[0,6,"pl-k"],[7,11,"pl-k"],[12,39,"pl-en"],[42,47,"pl-k"]],[[2,4,"pl-k"],[27,28,"pl-c1"]],[[4,10,"pl-k"],[11,22,"pl-c1"],[71,72,"pl-c1"]],[],[],[[2,8,"pl-c1"]],[[2,8,"pl-c1"]],[[2,21,"pl-c1"],[41,49,"pl-c1"]],[],[],[[2,8,"pl-k"],[9,20,"pl-c1"],[67,68,"pl-c1"]],[],[],[[0,6,"pl-k"],[7,11,"pl-k"],[12,39,"pl-en"],[42,47,"pl-k"]],[[2,8,"pl-k"],[9,21,"pl-c1"],[72,73,"pl-c1"]],[[9,24,"pl-c1"]],[],[],[[0,6,"pl-k"],[7,14,"pl-c1"],[15,33,"pl-en"],[34,38,"pl-k"],[45,51,"pl-c1"]],[[1,6,"pl-k"]],[],[[23,34,"pl-k"],[35,41,"pl-c1"],[64,67,"pl-k"]],[[1,5,"pl-k"]],[],[[20,31,"pl-k"],[32,38,"pl-c1"],[61,68,"pl-c1"]],[[1,6,"pl-k"]],[],[[2,4,"pl-k"]],[[4,8,"pl-k"]],[[4,6,"pl-k"]],[[6,12,"pl-c1"],[29,33,"pl-c1"]],[],[[6,12,"pl-k"],[13,24,"pl-k"],[25,32,"pl-c1"]],[[6,10,"pl-k"]],[[6,12,"pl-c1"],[29,33,"pl-c1"]],[],[[6,12,"pl-k"],[13,24,"pl-k"],[25,32,"pl-c1"]],[],[],[],[[2,4,"pl-k"],[7,20,"pl-c1"],[26,32,"pl-k"],[34,35,"pl-c1"]],[],[[19,20,"pl-c1"]],[[28,29,"pl-c1"]],[],[[2,4,"pl-k"]],[[4,8,"pl-k"],[13,24,"pl-c1"],[43,47,"pl-c1"]],[],[[4,6,"pl-k"],[13,14,"pl-c1"]],[[6,12,"pl-k"]],[[6,10,"pl-k"],[11,13,"pl-k"],[20,31,"pl-k"],[32,39,"pl-c1"]],[[6,12,"pl-c1"],[29,33,"pl-c1"],[37,48,"pl-k"],[49,55,"pl-c1"]],[[6,12,"pl-k"]],[[6,10,"pl-k"]],[[6,12,"pl-c1"],[29,33,"pl-c1"]],[],[[32,43,"pl-k"],[44,50,"pl-c1"]],[[6,12,"pl-k"],[13,24,"pl-k"],[25,32,"pl-c1"]],[],[[4,8,"pl-k"]],[[4,10,"pl-k"],[11,22,"pl-c1"]],[],[],[],[[0,6,"pl-k"],[7,14,"pl-c1"],[15,34,"pl-en"],[35,40,"pl-k"],[41,45,"pl-k"],[52,58,"pl-c1"]],[[2,4,"pl-k"],[7,20,"pl-c1"],[26,32,"pl-k"],[34,35,"pl-c1"]],[],[[1,3,"pl-k"]],[],[[23,34,"pl-k"],[35,41,"pl-c1"],[64,67,"pl-k"]],[[1,6,"pl-k"]],[],[[2,8,"pl-k"],[9,20,"pl-c1"]],[],[],[[0,6,"pl-k"],[7,11,"pl-k"],[12,48,"pl-en"]],[[49,52,"pl-k"],[60,65,"pl-k"]],[[2,8,"pl-k"],[9,39,"pl-c1"]],[],[],[[0,6,"pl-k"],[7,11,"pl-k"],[12,47,"pl-en"]],[[48,51,"pl-k"],[59,64,"pl-k"]],[[2,8,"pl-k"],[9,38,"pl-c1"]],[],[],[[0,6,"pl-k"],[7,15,"pl-c1"],[16,36,"pl-en"],[39,44,"pl-k"],[47,53,"pl-k"]],[],[[0,6,"pl-k"],[7,13,"pl-c1"],[14,36,"pl-en"],[39,44,"pl-k"]],[[2,8,"pl-k"]],[[13,43,"pl-c1"]],[[7,12,"pl-c1"]],[],[],[[0,31,"pl-c"],[0,2,"pl-c"]],[[0,6,"pl-k"],[7,11,"pl-k"],[12,37,"pl-en"],[40,45,"pl-k"],[48,54,"pl-k"],[55,59,"pl-c1"]],[],[[0,6,"pl-k"],[7,11,"pl-k"],[12,39,"pl-en"],[42,47,"pl-k"],[50,56,"pl-k"],[57,61,"pl-c1"]],[],[[0,6,"pl-k"],[7,11,"pl-k"],[12,39,"pl-en"],[42,47,"pl-k"],[50,56,"pl-k"],[57,61,"pl-c1"]],[],[[0,6,"pl-k"],[7,14,"pl-c1"],[15,33,"pl-en"],[34,38,"pl-k"],[45,51,"pl-c1"]],[[1,3,"pl-k"]],[[2,6,"pl-k"],[25,32,"pl-c1"]],[[1,5,"pl-k"]],[[2,6,"pl-k"],[25,29,"pl-c1"]],[[1,6,"pl-k"]],[[14,25,"pl-k"],[26,32,"pl-c1"]],[[2,8,"pl-k"],[9,20,"pl-k"],[21,28,"pl-c1"]],[],[],[[0,6,"pl-k"],[7,14,"pl-c1"],[15,34,"pl-en"],[35,40,"pl-k"],[41,45,"pl-k"],[52,58,"pl-c1"]],[[9,15,"pl-c1"]],[[2,8,"pl-k"],[9,20,"pl-k"],[21,28,"pl-c1"]],[],[],[[0,6,"pl-k"],[7,11,"pl-k"],[12,48,"pl-en"],[63,69,"pl-c"],[63,65,"pl-c"],[67,69,"pl-c"]],[[49,52,"pl-k"],[55,63,"pl-c"],[55,57,"pl-c"],[61,63,"pl-c"],[65,70,"pl-k"]],[],[[0,6,"pl-k"],[7,11,"pl-k"],[12,47,"pl-en"],[62,68,"pl-c"],[62,64,"pl-c"],[66,68,"pl-c"]],[[48,51,"pl-k"],[54,62,"pl-c"],[54,56,"pl-c"],[60,62,"pl-c"],[64,69,"pl-k"]],[],[[0,6,"pl-k"],[7,15,"pl-c1"],[16,36,"pl-en"],[39,44,"pl-k"],[47,53,"pl-k"],[54,55,"pl-c1"]],[],[[0,6,"pl-k"],[7,13,"pl-c1"],[14,36,"pl-en"],[39,44,"pl-k"],[47,53,"pl-k"],[54,55,"pl-c1"]],[],[[0,6,"pl-k"],[7,12,"pl-k"],[26,50,"pl-en"],[53,58,"pl-k"],[61,67,"pl-k"]],[],[[0,6,"pl-k"],[7,43,"pl-en"],[44,49,"pl-k"]],[[2,11,"pl-k"],[12,17,"pl-k"],[18,22,"pl-k"],[34,38,"pl-s"],[34,35,"pl-pds"],[37,38,"pl-pds"]],[],[[2,64,"pl-c"],[2,4,"pl-c"]],[[7,13,"pl-c1"],[31,32,"pl-c1"]],[],[[1,7,"pl-k"]],[[2,68,"pl-c"],[2,4,"pl-c"]],[[2,17,"pl-c"],[2,4,"pl-c"]],[[2,57,"pl-c"],[2,4,"pl-c"]],[[2,26,"pl-c"],[2,4,"pl-c"]],[],[[1,6,"pl-k"]],[],[[2,7,"pl-k"],[9,13,"pl-c1"]],[[4,9,"pl-k"],[10,14,"pl-k"],[36,40,"pl-c1"]],[[34,35,"pl-c1"],[72,73,"pl-c1"]],[[4,6,"pl-k"],[43,48,"pl-k"]],[],[[22,31,"pl-c1"]],[[16,22,"pl-c1"],[69,70,"pl-c1"]],[],[[4,9,"pl-k"],[10,14,"pl-k"],[47,54,"pl-c1"]],[],[[4,8,"pl-k"],[27,31,"pl-c1"]],[[4,6,"pl-k"],[58,64,"pl-c1"]],[],[[4,8,"pl-k"]],[[16,22,"pl-c1"]],[],[[1,7,"pl-k"]],[[4,6,"pl-k"],[23,27,"pl-c1"],[58,62,"pl-c1"]],[[24,54,"pl-s"],[24,25,"pl-pds"],[53,54,"pl-pds"]],[[24,61,"pl-s"],[24,25,"pl-pds"],[60,61,"pl-pds"],[74,78,"pl-s"],[74,75,"pl-pds"],[77,78,"pl-pds"]],[[6,11,"pl-k"],[12,33,"pl-smi"]],[],[[1,6,"pl-k"]],[],[[17,26,"pl-c1"],[27,36,"pl-c1"]],[],[[31,32,"pl-c1"]],[],[],[[2,4,"pl-k"],[31,37,"pl-c1"]],[[22,31,"pl-c1"],[40,46,"pl-c1"]],[],[],[],[[0,6,"pl-k"],[7,11,"pl-k"],[12,36,"pl-en"],[55,60,"pl-k"]],[[10,17,"pl-smi"],[20,31,"pl-c1"]],[[10,21,"pl-smi"],[22,27,"pl-c1"]],[[10,21,"pl-smi"],[22,29,"pl-c1"],[43,47,"pl-c1"]],[],[[2,74,"pl-c"],[2,4,"pl-c"]],[[7,13,"pl-c1"],[29,30,"pl-c1"]],[[2,5,"pl-k"],[7,13,"pl-c1"],[18,19,"pl-c1"],[43,47,"pl-c1"]],[[4,9,"pl-k"],[10,14,"pl-k"]],[],[[4,6,"pl-k"],[32,38,"pl-c1"],[51,55,"pl-smi"],[56,62,"pl-c1"]],[[6,12,"pl-k"],[13,18,"pl-c1"]],[],[],[[4,72,"pl-c"],[4,6,"pl-c"]],[[4,17,"pl-c"],[4,6,"pl-c"]],[[4,6,"pl-k"],[8,20,"pl-c1"],[29,33,"pl-smi"],[34,39,"pl-c1"],[67,72,"pl-c1"]],[[30,36,"pl-c1"],[43,44,"pl-c1"]],[[6,12,"pl-k"],[13,18,"pl-c1"]],[],[],[[29,35,"pl-c1"]],[],[[4,70,"pl-c"],[4,6,"pl-c"]],[[4,42,"pl-c"],[4,6,"pl-c"]],[[4,76,"pl-c"],[4,6,"pl-c"]],[[4,6,"pl-k"],[26,30,"pl-c1"],[36,44,"pl-k"]],[],[[4,8,"pl-k"],[27,31,"pl-smi"],[32,36,"pl-c1"]],[[4,6,"pl-k"],[58,62,"pl-smi"],[63,69,"pl-c1"]],[],[[4,9,"pl-k"],[10,14,"pl-k"]],[],[[12,23,"pl-smi"],[24,31,"pl-c1"]],[[28,32,"pl-smi"],[33,39,"pl-c1"]],[],[[4,43,"pl-c"],[4,6,"pl-c"]],[[29,30,"pl-c1"]],[],[[2,57,"pl-c"],[2,4,"pl-c"]],[[2,8,"pl-k"],[33,37,"pl-smi"],[38,44,"pl-c1"]],[],[],[[0,6,"pl-k"],[7,11,"pl-k"],[12,31,"pl-en"],[50,55,"pl-k"]],[[10,21,"pl-smi"],[22,27,"pl-c1"]],[[2,8,"pl-k"],[9,25,"pl-c1"],[34,38,"pl-smi"],[48,55,"pl-smi"]],[],[],[[2,21,"pl-c"],[2,4,"pl-c"]],[],[[0,29,"pl-c"],[0,2,"pl-c"]],[[0,6,"pl-k"],[7,21,"pl-smi"]],[[6,20,"pl-c1"]],[[15,21,"pl-k"],[22,25,"pl-k"],[26,36,"pl-c1"]],[[1,7,"pl-k"]],[[2,8,"pl-c1"]],[[1,6,"pl-k"]],[],[],[[0,6,"pl-k"],[7,22,"pl-en"],[27,34,"pl-k"]],[],[[0,6,"pl-k"]],[[0,20,"pl-c1"],[21,26,"pl-k"]],[[2,4,"pl-k"],[14,18,"pl-c1"],[19,23,"pl-s"],[19,20,"pl-pds"],[22,23,"pl-pds"]],[[4,10,"pl-k"]],[[4,8,"pl-k"]],[[4,10,"pl-k"]],[],[],[],[[0,6,"pl-k"],[15,26,"pl-c1"],[27,32,"pl-k"]],[[16,28,"pl-c1"],[29,41,"pl-c1"],[52,61,"pl-c1"]],[[2,8,"pl-k"],[10,14,"pl-c1"]],[],[],[[0,6,"pl-k"],[15,27,"pl-c1"],[28,33,"pl-k"]],[[17,29,"pl-c1"],[30,42,"pl-c1"],[53,62,"pl-c1"]],[[2,8,"pl-k"],[10,14,"pl-c1"]],[],[],[[0,6,"pl-k"],[15,27,"pl-c1"],[28,33,"pl-k"]],[],[[36,48,"pl-c1"],[49,61,"pl-c1"]],[[49,58,"pl-c1"]],[[2,8,"pl-k"],[10,14,"pl-c1"]],[],[],[[0,6,"pl-k"],[15,26,"pl-c1"],[27,32,"pl-k"]],[[16,28,"pl-c1"],[29,41,"pl-c1"],[52,61,"pl-c1"]],[[2,8,"pl-k"],[10,14,"pl-c1"]],[],[],[[0,6,"pl-k"],[15,26,"pl-c1"],[27,32,"pl-k"]],[],[[35,47,"pl-c1"],[48,60,"pl-c1"]],[[48,57,"pl-c1"]],[[2,8,"pl-k"],[10,14,"pl-c1"]],[],[],[[0,6,"pl-k"],[15,28,"pl-c1"],[29,34,"pl-k"]],[[18,30,"pl-c1"],[31,43,"pl-c1"],[54,63,"pl-c1"]],[[2,8,"pl-k"],[10,14,"pl-c1"]],[],[],[[0,6,"pl-k"],[15,28,"pl-c1"],[29,34,"pl-k"]],[],[[37,49,"pl-c1"],[50,62,"pl-c1"]],[[50,59,"pl-c1"]],[[2,8,"pl-k"],[10,14,"pl-c1"]],[],[],[[0,6,"pl-k"],[15,29,"pl-c1"],[30,35,"pl-k"]],[[19,31,"pl-c1"],[32,44,"pl-c1"],[55,64,"pl-c1"]],[[2,8,"pl-k"],[10,14,"pl-c1"]],[],[],[[0,6,"pl-k"],[15,29,"pl-c1"],[30,35,"pl-k"]],[],[[38,50,"pl-c1"],[51,63,"pl-c1"]],[[51,60,"pl-c1"]],[[2,8,"pl-k"],[10,14,"pl-c1"]],[],[],[[0,6,"pl-k"],[15,30,"pl-c1"],[31,36,"pl-k"]],[[20,32,"pl-c1"],[33,45,"pl-c1"],[56,65,"pl-c1"]],[[2,8,"pl-k"],[10,14,"pl-c1"]],[],[],[[0,6,"pl-k"],[7,11,"pl-k"],[12,32,"pl-smi"],[33,38,"pl-k"]],[[33,38,"pl-k"]],[[2,8,"pl-k"],[9,24,"pl-c1"]],[],[],[[0,6,"pl-k"],[7,11,"pl-k"],[12,35,"pl-smi"],[36,41,"pl-k"]],[[36,41,"pl-k"]],[[19,23,"pl-smi"]],[[2,4,"pl-k"],[11,17,"pl-c1"]],[[35,40,"pl-c1"],[59,62,"pl-s"],[59,60,"pl-pds"],[61,62,"pl-pds"]],[[4,6,"pl-k"],[13,18,"pl-c1"],[28,29,"pl-c1"],[34,37,"pl-s"],[34,35,"pl-pds"],[36,37,"pl-pds"]],[[17,26,"pl-c1"],[38,47,"pl-c1"]],[[6,12,"pl-k"],[13,17,"pl-c1"]],[],[],[[2,8,"pl-k"],[9,14,"pl-c1"]],[],[],[[0,6,"pl-k"],[7,11,"pl-k"],[12,38,"pl-smi"],[39,44,"pl-k"]],[[2,5,"pl-k"],[7,11,"pl-k"],[28,33,"pl-c1"],[54,57,"pl-c1"]],[[4,6,"pl-k"],[12,23,"pl-smi"]],[[17,22,"pl-c1"]],[[6,12,"pl-k"],[13,17,"pl-c1"]],[],[],[[2,8,"pl-k"],[9,14,"pl-c1"]],[],[],[[0,6,"pl-k"]],[[0,47,"pl-c1"],[48,53,"pl-k"]],[[48,53,"pl-k"]],[],[[2,8,"pl-k"],[10,14,"pl-c1"]],[],[],[[0,6,"pl-k"],[15,48,"pl-c1"],[49,54,"pl-k"]],[],[[2,8,"pl-k"],[10,14,"pl-c1"]],[],[],[[0,6,"pl-k"],[15,47,"pl-c1"]],[[26,35,"pl-c1"]],[[2,8,"pl-k"],[10,14,"pl-c1"]],[],[],[[0,6,"pl-k"],[15,45,"pl-c1"]],[],[[19,28,"pl-c1"]],[[2,8,"pl-k"],[10,14,"pl-c1"]],[],[],[[0,6,"pl-k"],[15,45,"pl-c1"]],[],[[29,34,"pl-k"]],[[4,11,"pl-c1"]],[[4,10,"pl-k"]],[],[[2,8,"pl-k"],[10,14,"pl-c1"]],[],[],[[0,6,"pl-k"],[15,44,"pl-c1"]],[[23,32,"pl-c1"]],[[2,8,"pl-k"],[10,14,"pl-c1"]],[],[],[[0,6,"pl-k"],[15,46,"pl-c1"]],[[25,34,"pl-c1"]],[[2,8,"pl-k"],[10,14,"pl-c1"]],[],[],[[0,6,"pl-k"],[15,47,"pl-c1"]],[[26,35,"pl-c1"]],[[2,8,"pl-k"],[10,14,"pl-c1"]],[],[],[[0,6,"pl-k"],[15,33,"pl-c1"]],[[12,21,"pl-c1"]],[[2,8,"pl-k"],[10,14,"pl-c1"]],[],[],[[0,6,"pl-k"]],[[0,39,"pl-c1"]],[[33,42,"pl-c1"]],[[2,8,"pl-k"],[10,14,"pl-c1"]],[],[],[[0,6,"pl-k"],[15,41,"pl-c1"],[42,45,"pl-k"]],[],[[2,8,"pl-k"],[10,14,"pl-c1"]],[],[],[[0,6,"pl-k"],[15,38,"pl-c1"],[39,43,"pl-k"]],[],[[2,8,"pl-k"],[10,14,"pl-c1"]],[],[],[[0,6,"pl-k"],[15,38,"pl-c1"],[39,43,"pl-k"]],[],[[2,8,"pl-k"],[10,14,"pl-c1"]],[],[],[[0,6,"pl-k"],[15,41,"pl-c1"]],[[20,29,"pl-c1"]],[[2,8,"pl-k"],[10,14,"pl-c1"]],[],[],[[0,6,"pl-k"],[15,42,"pl-c1"]],[[21,30,"pl-c1"]],[[2,8,"pl-k"],[10,14,"pl-c1"]],[],[],[[0,6,"pl-k"],[15,40,"pl-c1"]],[[18,25,"pl-c1"],[48,53,"pl-k"]],[],[[2,8,"pl-k"],[10,14,"pl-c1"]],[],[],[[0,6,"pl-k"],[15,47,"pl-c1"],[48,54,"pl-c1"]],[],[[2,8,"pl-k"],[10,14,"pl-c1"]],[],[],[[0,6,"pl-k"],[15,45,"pl-c1"],[46,52,"pl-c1"]],[],[[2,8,"pl-k"],[10,14,"pl-c1"]],[],[],[[0,6,"pl-k"],[15,39,"pl-c1"],[40,46,"pl-c1"],[52,58,"pl-c1"]],[],[],[[2,8,"pl-k"],[10,14,"pl-c1"]],[],[],[[0,6,"pl-k"],[15,40,"pl-c1"],[41,47,"pl-c1"],[53,59,"pl-c1"]],[],[],[[2,8,"pl-k"],[10,14,"pl-c1"]],[],[],[[0,6,"pl-k"],[15,40,"pl-c1"],[41,47,"pl-c1"],[53,59,"pl-c1"]],[],[],[[2,8,"pl-k"],[10,14,"pl-c1"]],[],[],[[0,6,"pl-k"],[15,45,"pl-c1"],[46,52,"pl-c1"]],[],[[2,8,"pl-k"],[10,14,"pl-c1"]],[],[],[[0,6,"pl-k"],[7,11,"pl-k"],[12,32,"pl-smi"],[33,38,"pl-k"],[58,61,"pl-k"]],[[33,36,"pl-k"]],[[2,6,"pl-k"],[13,26,"pl-c1"]],[[2,4,"pl-k"],[14,15,"pl-c1"],[39,43,"pl-c1"]],[[2,8,"pl-k"],[16,17,"pl-c1"]],[],[[0,6,"pl-k"],[7,10,"pl-k"],[11,35,"pl-smi"],[36,41,"pl-k"],[61,64,"pl-k"]],[[2,6,"pl-k"],[13,26,"pl-c1"],[33,34,"pl-c1"]],[[2,4,"pl-k"],[14,15,"pl-c1"],[39,43,"pl-c1"]],[[2,8,"pl-k"]],[],[],[[0,6,"pl-k"],[7,11,"pl-k"],[12,37,"pl-smi"],[42,48,"pl-k"],[49,64,"pl-c1"]],[],[[0,6,"pl-k"],[7,11,"pl-k"],[12,26,"pl-smi"],[27,32,"pl-k"],[52,55,"pl-k"]],[[27,30,"pl-k"]],[[2,8,"pl-k"],[9,21,"pl-c1"],[51,66,"pl-c1"]],[],[],[[0,6,"pl-k"],[7,11,"pl-k"],[12,30,"pl-smi"],[33,38,"pl-k"],[41,47,"pl-k"]],[],[[0,6,"pl-k"],[7,11,"pl-k"],[12,36,"pl-smi"],[39,44,"pl-k"]],[[2,7,"pl-k"]],[[4,31,"pl-c1"],[58,59,"pl-c1"]],[],[],[],[[0,6,"pl-k"],[7,11,"pl-k"],[12,24,"pl-smi"]],[[2,4,"pl-k"]],[[4,10,"pl-c1"]],[[16,24,"pl-c1"],[26,30,"pl-c1"],[41,49,"pl-c1"]],[[4,27,"pl-c1"]],[[4,24,"pl-c1"]],[],[[22,27,"pl-c1"]],[],[],[[0,6,"pl-k"],[7,11,"pl-k"],[12,32,"pl-smi"],[57,61,"pl-c1"]],[],[[0,6,"pl-k"],[7,11,"pl-k"],[12,38,"pl-smi"],[39,44,"pl-k"],[45,49,"pl-k"],[68,73,"pl-k"]],[[2,6,"pl-k"],[13,19,"pl-c1"]],[[2,4,"pl-k"],[12,13,"pl-c1"],[25,26,"pl-c1"],[31,35,"pl-s"],[31,32,"pl-pds"],[32,34,"pl-cce"],[34,35,"pl-pds"],[47,48,"pl-c1"],[53,57,"pl-s"],[53,54,"pl-pds"],[54,56,"pl-cce"],[56,57,"pl-pds"],[61,67,"pl-k"],[68,73,"pl-c1"]],[[9,10,"pl-c1"]],[],[],[[4,10,"pl-c1"],[19,20,"pl-c1"]],[],[[4,17,"pl-c1"],[30,33,"pl-s"],[30,31,"pl-pds"],[32,33,"pl-pds"],[39,44,"pl-k"],[45,49,"pl-k"],[54,59,"pl-k"],[60,64,"pl-k"]],[[6,12,"pl-k"]],[[6,10,"pl-k"],[11,12,"pl-c1"],[18,24,"pl-smi"],[27,38,"pl-c1"],[46,51,"pl-k"]],[[6,10,"pl-k"],[11,12,"pl-c1"],[18,24,"pl-smi"],[27,38,"pl-c1"],[46,51,"pl-k"]],[[6,10,"pl-k"],[11,12,"pl-c1"],[18,25,"pl-smi"],[28,39,"pl-c1"],[47,52,"pl-k"]],[[6,13,"pl-k"],[15,20,"pl-k"]],[],[],[],[],[[4,6,"pl-k"],[17,18,"pl-c1"],[22,28,"pl-k"],[29,34,"pl-c1"]],[],[],[[2,14,"pl-k"],[15,20,"pl-k"]],[[6,11,"pl-s"],[6,7,"pl-pds"],[10,11,"pl-pds"],[17,23,"pl-s"],[17,18,"pl-pds"],[22,23,"pl-pds"],[28,34,"pl-s"],[28,29,"pl-pds"],[33,34,"pl-pds"],[37,42,"pl-s"],[37,38,"pl-pds"],[41,42,"pl-pds"],[46,54,"pl-s"],[46,47,"pl-pds"],[53,54,"pl-pds"]],[[6,15,"pl-s"],[6,7,"pl-pds"],[14,15,"pl-pds"],[17,26,"pl-s"],[17,18,"pl-pds"],[25,26,"pl-pds"],[28,35,"pl-s"],[28,29,"pl-pds"],[34,35,"pl-pds"],[37,44,"pl-s"],[37,38,"pl-pds"],[43,44,"pl-pds"],[46,51,"pl-s"],[46,47,"pl-pds"],[50,51,"pl-pds"]],[],[[2,4,"pl-k"],[14,18,"pl-c1"],[23,29,"pl-smi"],[42,45,"pl-c1"],[51,57,"pl-k"],[58,63,"pl-c1"]],[],[[2,4,"pl-k"],[10,17,"pl-smi"],[21,31,"pl-s"],[21,22,"pl-pds"],[30,31,"pl-pds"],[39,46,"pl-smi"],[50,60,"pl-s"],[50,51,"pl-pds"],[59,60,"pl-pds"],[64,70,"pl-k"],[71,76,"pl-c1"]],[],[],[[4,24,"pl-c"],[4,6,"pl-c"]],[[4,7,"pl-k"],[9,15,"pl-c1"],[20,21,"pl-c1"],[31,37,"pl-smi"],[38,42,"pl-c1"]],[[6,8,"pl-k"],[14,20,"pl-smi"],[27,30,"pl-s"],[27,28,"pl-pds"],[29,30,"pl-pds"]],[[12,18,"pl-smi"],[19,24,"pl-c1"]],[[8,13,"pl-k"]],[],[],[],[[4,18,"pl-c1"],[23,29,"pl-smi"],[31,34,"pl-s"],[31,32,"pl-pds"],[33,34,"pl-pds"]],[[23,28,"pl-k"],[29,33,"pl-k"],[50,56,"pl-c1"]],[[23,28,"pl-k"],[29,33,"pl-k"],[50,56,"pl-c1"]],[[25,29,"pl-smi"],[32,50,"pl-c1"]],[[25,36,"pl-c1"],[58,63,"pl-c1"]],[[21,45,"pl-c1"],[70,76,"pl-smi"]],[],[],[],[[2,8,"pl-k"],[9,13,"pl-c1"]],[],[],[[0,6,"pl-k"],[7,11,"pl-k"],[12,34,"pl-smi"],[49,53,"pl-k"]],[],[[2,69,"pl-c"],[2,4,"pl-c"]],[[2,38,"pl-c"],[2,4,"pl-c"]],[[6,12,"pl-smi"],[13,18,"pl-c1"]],[[2,8,"pl-k"],[9,28,"pl-c1"],[63,68,"pl-c1"]],[],[],[[0,6,"pl-k"],[7,11,"pl-k"],[12,47,"pl-smi"]],[[48,52,"pl-k"]],[[48,53,"pl-k"]],[],[[2,8,"pl-k"],[9,28,"pl-c1"],[63,67,"pl-c1"]],[],[],[[0,6,"pl-k"],[7,11,"pl-k"],[12,39,"pl-smi"],[54,58,"pl-k"]],[[40,45,"pl-k"]],[[40,44,"pl-k"]],[[2,8,"pl-c1"],[13,19,"pl-smi"],[24,25,"pl-c1"]],[],[[2,4,"pl-k"],[6,9,"pl-c1"],[17,23,"pl-smi"]],[[6,20,"pl-c1"]],[[24,28,"pl-c1"]],[],[],[],[],[[2,4,"pl-k"],[27,39,"pl-c1"]],[],[[2,31,"pl-c"],[2,4,"pl-c"]],[[2,4,"pl-k"],[30,46,"pl-c1"],[47,59,"pl-s"],[47,48,"pl-pds"],[58,59,"pl-pds"],[64,71,"pl-s"],[64,65,"pl-pds"],[70,71,"pl-pds"]],[[8,18,"pl-c1"],[19,31,"pl-s"],[19,20,"pl-pds"],[30,31,"pl-pds"],[33,40,"pl-s"],[33,34,"pl-pds"],[39,40,"pl-pds"]],[[4,8,"pl-k"]],[[20,30,"pl-s"],[20,21,"pl-pds"],[29,30,"pl-pds"]],[[9,23,"pl-c1"]],[[9,17,"pl-s"],[9,10,"pl-pds"],[16,17,"pl-pds"]],[[9,23,"pl-c1"]],[[8,18,"pl-c1"],[19,31,"pl-s"],[19,20,"pl-pds"],[30,31,"pl-pds"]],[],[],[[2,4,"pl-k"],[12,16,"pl-smi"],[17,22,"pl-c1"],[32,47,"pl-smi"],[50,51,"pl-c1"],[59,76,"pl-smi"]],[[11,21,"pl-c1"],[22,36,"pl-s"],[22,23,"pl-pds"],[35,36,"pl-pds"]],[[8,18,"pl-c1"],[19,33,"pl-s"],[19,20,"pl-pds"],[32,33,"pl-pds"],[35,47,"pl-s"],[35,36,"pl-pds"],[46,47,"pl-pds"]],[],[],[[2,4,"pl-k"],[10,14,"pl-smi"],[15,20,"pl-c1"],[31,46,"pl-smi"],[55,72,"pl-smi"]],[[11,21,"pl-c1"],[22,38,"pl-s"],[22,23,"pl-pds"],[37,38,"pl-pds"]],[[8,18,"pl-c1"],[19,35,"pl-s"],[19,20,"pl-pds"],[34,35,"pl-pds"],[37,40,"pl-s"],[37,38,"pl-pds"],[39,40,"pl-pds"]],[],[],[[2,4,"pl-k"],[10,16,"pl-smi"],[20,26,"pl-s"],[20,21,"pl-pds"],[25,26,"pl-pds"],[35,45,"pl-c1"],[46,61,"pl-s"],[46,47,"pl-pds"],[60,61,"pl-pds"]],[[8,18,"pl-c1"],[19,34,"pl-s"],[19,20,"pl-pds"],[33,34,"pl-pds"],[36,43,"pl-s"],[36,37,"pl-pds"],[42,43,"pl-pds"]],[],[],[[2,4,"pl-k"],[31,52,"pl-c1"]],[],[[2,30,"pl-c"],[2,4,"pl-c"]],[],[],[[4,6,"pl-k"],[9,36,"pl-c1"],[48,54,"pl-smi"],[59,65,"pl-k"],[66,71,"pl-c1"]],[[4,6,"pl-k"],[9,23,"pl-c1"],[35,42,"pl-smi"],[47,53,"pl-k"],[54,59,"pl-c1"]],[],[[4,19,"pl-c"],[4,6,"pl-c"]],[[4,8,"pl-k"],[23,33,"pl-c1"]],[[4,22,"pl-c1"],[34,38,"pl-c1"],[47,51,"pl-c1"]],[],[],[[2,9,"pl-c"],[2,4,"pl-c"]],[[2,6,"pl-k"],[13,17,"pl-c1"]],[[2,4,"pl-k"],[10,16,"pl-smi"],[20,26,"pl-s"],[20,21,"pl-pds"],[25,26,"pl-pds"]],[[4,6,"pl-k"],[13,17,"pl-smi"],[18,23,"pl-c1"]],[[6,8,"pl-k"],[11,29,"pl-c1"],[40,44,"pl-smi"],[45,49,"pl-c1"],[57,61,"pl-smi"],[62,66,"pl-c1"]],[[14,19,"pl-c1"]],[],[[6,10,"pl-k"],[11,13,"pl-k"],[19,36,"pl-smi"]],[[6,8,"pl-k"],[10,37,"pl-c1"]],[[12,37,"pl-smi"],[40,44,"pl-c1"]],[[8,12,"pl-k"]],[[14,19,"pl-c1"]],[],[],[],[],[[2,8,"pl-c"],[2,4,"pl-c"]],[[2,4,"pl-k"],[17,24,"pl-c1"]],[],[[2,8,"pl-k"]],[],[],[[0,6,"pl-k"],[7,11,"pl-k"]],[[0,35,"pl-c1"],[50,55,"pl-k"]],[[51,56,"pl-k"]],[[36,41,"pl-k"]],[[2,6,"pl-k"],[27,31,"pl-c1"]],[[4,10,"pl-k"],[11,15,"pl-c1"],[17,26,"pl-smi"]],[],[],[[2,4,"pl-k"],[10,25,"pl-smi"],[28,29,"pl-c1"]],[[4,6,"pl-k"],[12,18,"pl-smi"],[19,24,"pl-c1"]],[[6,12,"pl-k"],[13,34,"pl-c1"],[45,62,"pl-smi"],[64,65,"pl-c1"]],[[39,54,"pl-smi"]],[[6,10,"pl-k"],[11,13,"pl-k"],[19,25,"pl-smi"],[26,30,"pl-c1"],[36,37,"pl-c1"]],[[6,10,"pl-k"],[31,66,"pl-c1"]],[[14,20,"pl-smi"],[21,22,"pl-c1"],[29,44,"pl-smi"]],[],[[6,12,"pl-k"],[13,34,"pl-c1"],[45,62,"pl-smi"]],[[53,58,"pl-smi"]],[[53,59,"pl-smi"]],[[6,10,"pl-k"]],[[6,12,"pl-k"],[13,48,"pl-c1"]],[[54,69,"pl-smi"]],[],[],[[4,8,"pl-k"]],[[4,6,"pl-k"],[12,40,"pl-smi"]],[[6,10,"pl-k"],[18,39,"pl-c1"]],[],[],[[6,8,"pl-k"]],[[1,6,"pl-k"]],[],[[1,6,"pl-k"]],[[8,12,"pl-k"],[13,15,"pl-k"]],[[1,6,"pl-k"]],[],[[1,6,"pl-k"]],[[8,12,"pl-k"],[13,15,"pl-k"]],[[1,6,"pl-k"]],[],[[1,6,"pl-k"]],[[8,12,"pl-k"]],[],[],[[6,12,"pl-c1"],[27,34,"pl-c1"]],[],[[6,12,"pl-k"],[13,42,"pl-c1"],[53,70,"pl-smi"]],[],[[6,10,"pl-k"]],[[6,12,"pl-k"],[13,49,"pl-c1"],[60,77,"pl-smi"]],[],[],[],[],[],[[0,6,"pl-k"],[7,11,"pl-k"],[12,32,"pl-smi"]],[],[[2,6,"pl-k"],[20,21,"pl-c1"]],[[2,4,"pl-k"],[6,23,"pl-c1"]],[],[[10,20,"pl-c"],[10,12,"pl-c"]],[[14,19,"pl-k"],[20,24,"pl-k"],[31,37,"pl-c1"]],[[12,14,"pl-k"],[20,24,"pl-smi"],[25,29,"pl-c1"],[42,46,"pl-smi"],[47,55,"pl-c1"],[61,67,"pl-k"],[68,73,"pl-c1"]],[[16,20,"pl-smi"],[21,27,"pl-c1"]],[[12,18,"pl-k"],[19,23,"pl-c1"]],[],[[10,22,"pl-c"],[10,12,"pl-c"]],[[14,19,"pl-k"]],[[12,14,"pl-k"]],[[14,20,"pl-k"],[21,26,"pl-c1"]],[],[[22,27,"pl-smi"],[28,35,"pl-c1"],[41,45,"pl-smi"]],[[12,18,"pl-k"],[19,23,"pl-c1"]],[],[[14,19,"pl-k"],[20,24,"pl-k"],[31,37,"pl-c1"]],[[12,16,"pl-k"],[33,39,"pl-smi"],[40,47,"pl-smi"]],[[12,14,"pl-k"],[24,28,"pl-c1"],[45,53,"pl-c1"],[59,65,"pl-k"],[66,71,"pl-c1"]],[[20,26,"pl-c1"]],[[12,18,"pl-k"],[19,23,"pl-c1"]],[],[[4,9,"pl-k"],[10,14,"pl-k"],[35,51,"pl-c1"],[52,66,"pl-s"],[52,53,"pl-pds"],[65,66,"pl-pds"]],[[4,6,"pl-k"],[22,26,"pl-c1"],[27,62,"pl-s"],[27,28,"pl-pds"],[61,62,"pl-pds"]],[[6,8,"pl-k"],[14,18,"pl-smi"],[19,23,"pl-c1"]],[[12,18,"pl-smi"],[54,77,"pl-c"],[54,56,"pl-c"]],[[8,14,"pl-k"],[15,20,"pl-c1"]],[],[[6,30,"pl-c1"],[35,39,"pl-smi"],[45,51,"pl-smi"]],[],[[4,10,"pl-k"],[11,15,"pl-c1"]],[],[[2,8,"pl-k"],[9,14,"pl-c1"]],[],[],[[0,6,"pl-k"],[7,11,"pl-k"],[12,54,"pl-smi"]],[],[],[],[[2,8,"pl-k"],[9,26,"pl-c1"],[43,52,"pl-c1"]],[[27,36,"pl-c1"]],[[27,36,"pl-c1"]],[],[],[[0,6,"pl-k"],[7,11,"pl-k"]],[[0,25,"pl-c1"]],[],[],[[62,67,"pl-k"]],[],[],[],[[2,4,"pl-k"],[10,32,"pl-c1"]],[[4,9,"pl-k"],[10,14,"pl-k"],[35,51,"pl-c1"],[52,66,"pl-s"],[52,53,"pl-pds"],[65,66,"pl-pds"]],[],[[4,6,"pl-k"],[9,41,"pl-c1"]],[[10,16,"pl-smi"]],[[6,12,"pl-k"],[13,18,"pl-c1"]],[],[],[[31,43,"pl-c1"],[44,53,"pl-c1"]],[[14,19,"pl-k"],[20,24,"pl-k"],[31,37,"pl-c1"],[41,49,"pl-c1"],[50,57,"pl-c"],[50,52,"pl-c"],[55,57,"pl-c"],[59,67,"pl-c1"],[68,75,"pl-c"],[68,70,"pl-c"],[73,75,"pl-c"]],[[6,18,"pl-c"],[6,8,"pl-c"]],[[0,21,"pl-c"]],[[0,23,"pl-c"]],[[0,56,"pl-c"]],[[0,52,"pl-c"]],[[0,72,"pl-c"]],[[0,35,"pl-c"]],[[0,25,"pl-c"]],[[0,7,"pl-c"]],[[0,18,"pl-c"]],[[0,8,"pl-c"],[6,8,"pl-c"]],[[6,12,"pl-k"],[40,45,"pl-c1"]],[],[],[[4,8,"pl-k"]],[[21,26,"pl-k"],[27,31,"pl-k"],[38,44,"pl-c1"],[48,56,"pl-c1"],[57,64,"pl-c"],[57,59,"pl-c"],[62,64,"pl-c"]],[[21,29,"pl-c1"],[30,37,"pl-c"],[30,32,"pl-c"],[35,37,"pl-c"],[41,47,"pl-k"],[48,56,"pl-c1"]],[],[],[[2,4,"pl-k"],[10,16,"pl-smi"],[20,28,"pl-s"],[20,21,"pl-pds"],[27,28,"pl-pds"],[37,47,"pl-c1"],[48,64,"pl-s"],[48,49,"pl-pds"],[63,64,"pl-pds"]],[[4,10,"pl-k"],[11,15,"pl-c1"]],[],[],[[2,4,"pl-k"],[7,27,"pl-c1"],[64,70,"pl-smi"],[72,79,"pl-c1"]],[[33,37,"pl-c1"]],[[4,10,"pl-k"],[11,16,"pl-c1"]],[],[],[[2,4,"pl-k"],[10,32,"pl-c1"]],[[4,6,"pl-k"],[36,44,"pl-c1"]],[[10,16,"pl-smi"]],[[6,12,"pl-k"],[13,18,"pl-c1"]],[],[],[],[[2,8,"pl-k"],[9,13,"pl-c1"]],[],[],[[0,6,"pl-k"],[7,11,"pl-k"],[12,39,"pl-smi"],[40,45,"pl-k"]],[[2,5,"pl-k"],[7,12,"pl-k"],[13,17,"pl-k"]],[[4,19,"pl-c"],[4,6,"pl-c"]],[[4,6,"pl-k"],[13,17,"pl-smi"],[18,25,"pl-c1"],[26,27,"pl-c1"],[35,46,"pl-smi"],[47,51,"pl-c1"],[61,72,"pl-smi"]],[[29,32,"pl-s"],[29,30,"pl-pds"],[31,32,"pl-pds"],[39,43,"pl-smi"],[44,50,"pl-c1"],[57,68,"pl-smi"],[69,73,"pl-c1"]],[[6,8,"pl-k"],[10,31,"pl-c1"]],[[8,12,"pl-k"],[26,34,"pl-smi"]],[[8,10,"pl-k"],[17,21,"pl-c1"],[27,30,"pl-s"],[27,28,"pl-pds"],[29,30,"pl-pds"],[42,54,"pl-s"],[42,43,"pl-pds"],[53,54,"pl-pds"]],[],[[25,29,"pl-smi"]],[],[[8,10,"pl-k"],[17,23,"pl-c1"]],[[14,26,"pl-c1"],[38,41,"pl-s"],[38,39,"pl-pds"],[40,41,"pl-pds"]],[[10,16,"pl-k"],[17,21,"pl-c1"]],[],[],[[8,10,"pl-k"],[17,24,"pl-c1"]],[[10,13,"pl-k"],[15,20,"pl-k"],[21,25,"pl-k"],[38,45,"pl-smi"]],[[16,26,"pl-c1"],[30,35,"pl-smi"],[40,46,"pl-smi"]],[],[],[[10,14,"pl-k"],[56,61,"pl-c1"]],[[10,12,"pl-k"],[19,26,"pl-c1"],[32,38,"pl-k"],[39,44,"pl-c1"]],[],[[14,34,"pl-c1"]],[[18,22,"pl-c1"]],[[14,39,"pl-c1"]],[],[[19,25,"pl-c1"],[34,40,"pl-c1"],[68,72,"pl-k"]],[[21,26,"pl-c1"],[31,35,"pl-c1"]],[[16,22,"pl-k"],[23,27,"pl-c1"]],[],[],[[10,12,"pl-k"],[18,24,"pl-smi"],[28,34,"pl-s"],[28,29,"pl-pds"],[33,34,"pl-pds"]],[[12,33,"pl-c1"]],[],[],[[10,16,"pl-k"],[17,21,"pl-c1"]],[],[],[],[],[[2,8,"pl-k"],[9,14,"pl-c1"]],[],[],[[0,6,"pl-k"],[7,15,"pl-c1"]],[[0,28,"pl-c1"],[29,34,"pl-k"],[54,57,"pl-k"]],[[29,32,"pl-k"]],[[59,64,"pl-k"]],[[2,8,"pl-k"],[9,30,"pl-c1"]],[[12,23,"pl-c1"]],[[20,29,"pl-c1"]],[[9,17,"pl-c1"],[24,30,"pl-k"],[31,39,"pl-en"],[45,49,"pl-k"],[52,60,"pl-c"],[52,54,"pl-c"],[58,60,"pl-c"],[65,69,"pl-k"]],[[8,10,"pl-k"],[14,18,"pl-c1"],[28,35,"pl-smi"],[37,48,"pl-k"],[49,58,"pl-c1"],[63,73,"pl-smi"]],[[10,16,"pl-k"],[17,22,"pl-c1"]],[],[[8,10,"pl-k"],[14,20,"pl-c1"],[57,63,"pl-k"],[64,69,"pl-c1"]],[[8,14,"pl-k"],[15,19,"pl-c1"]],[],[],[],[[0,6,"pl-k"],[7,10,"pl-k"],[11,32,"pl-smi"],[33,38,"pl-k"],[58,61,"pl-k"]],[[33,36,"pl-k"]],[[2,4,"pl-k"],[27,33,"pl-k"],[35,36,"pl-c1"]],[],[[2,4,"pl-k"],[7,15,"pl-c1"],[21,27,"pl-k"],[29,30,"pl-c1"]],[],[[14,34,"pl-c1"]],[[2,4,"pl-k"],[37,43,"pl-k"],[45,46,"pl-c1"]],[],[[2,4,"pl-k"],[14,15,"pl-c1"]],[[4,10,"pl-k"],[11,27,"pl-en"]],[[4,13,"pl-c1"],[25,31,"pl-k"]],[[4,6,"pl-k"],[8,19,"pl-c1"],[31,47,"pl-k"],[48,54,"pl-k"],[55,63,"pl-en"]],[[35,36,"pl-c1"]],[[6,12,"pl-k"],[14,15,"pl-c1"]],[],[[4,6,"pl-k"],[13,22,"pl-smi"]],[[6,12,"pl-k"],[13,18,"pl-c1"],[19,35,"pl-k"],[36,42,"pl-k"],[43,54,"pl-en"],[66,74,"pl-smi"]],[[6,10,"pl-k"],[11,13,"pl-k"],[20,29,"pl-smi"]],[[6,12,"pl-k"],[13,18,"pl-c1"],[19,35,"pl-k"],[36,42,"pl-k"],[43,55,"pl-en"],[67,76,"pl-smi"]],[[6,10,"pl-k"]],[[6,12,"pl-k"],[14,15,"pl-c1"]],[],[[4,8,"pl-k"]],[[4,10,"pl-k"]],[],[],[],[[0,6,"pl-k"],[7,11,"pl-k"],[12,35,"pl-smi"]],[[2,4,"pl-k"],[27,33,"pl-k"],[34,39,"pl-c1"]],[],[[2,6,"pl-k"],[13,17,"pl-c1"]],[[16,20,"pl-c1"]],[[2,6,"pl-k"],[12,30,"pl-c1"],[53,58,"pl-c1"]],[],[],[[31,41,"pl-c1"],[42,56,"pl-c1"]],[],[[4,9,"pl-k"]],[[1,7,"pl-k"]],[[6,8,"pl-k"],[31,32,"pl-c1"],[58,59,"pl-c1"]],[],[[8,12,"pl-k"],[19,38,"pl-c1"]],[],[[8,10,"pl-k"],[19,20,"pl-c1"],[24,34,"pl-c"],[24,26,"pl-c"]],[[22,29,"pl-c1"]],[[10,18,"pl-k"]],[],[[1,7,"pl-k"]],[],[[1,6,"pl-k"]],[],[[1,3,"pl-k"]],[[6,73,"pl-c"],[6,8,"pl-c"]],[[6,19,"pl-c"],[6,8,"pl-c"]],[[6,14,"pl-c1"],[22,31,"pl-c1"],[43,50,"pl-c1"],[52,59,"pl-c1"],[61,68,"pl-c1"],[70,71,"pl-c1"]],[[1,5,"pl-k"]],[[6,14,"pl-c1"],[22,29,"pl-c1"],[41,48,"pl-c1"],[50,57,"pl-c1"]],[[1,5,"pl-k"]],[[6,14,"pl-c1"],[22,28,"pl-c1"],[40,47,"pl-c1"],[49,56,"pl-c1"]],[[1,6,"pl-k"]],[],[[6,8,"pl-k"]],[[8,10,"pl-k"]],[[10,77,"pl-c"],[10,12,"pl-c"]],[[10,63,"pl-c"],[10,12,"pl-c"]],[[10,37,"pl-c1"],[64,65,"pl-c1"]],[[10,18,"pl-k"]],[[10,14,"pl-k"],[15,17,"pl-k"]],[[10,18,"pl-k"]],[],[[8,10,"pl-k"]],[[10,30,"pl-c1"]],[[16,21,"pl-c1"]],[[10,14,"pl-k"]],[[12,52,"pl-c"],[12,14,"pl-c"]],[],[[8,13,"pl-k"]],[],[],[[6,33,"pl-c1"]],[],[[6,33,"pl-c1"]],[],[],[[6,8,"pl-k"],[23,30,"pl-c1"]],[[15,19,"pl-c1"],[31,55,"pl-c1"]],[[8,31,"pl-c1"]],[[8,28,"pl-c1"]],[],[],[],[[16,24,"pl-c1"]],[],[],[],[[2,8,"pl-k"]],[],[],[[0,6,"pl-k"],[7,11,"pl-k"],[12,27,"pl-smi"]],[[2,4,"pl-k"]],[[6,26,"pl-c1"]],[[4,10,"pl-k"],[11,15,"pl-c1"]],[],[],[[2,17,"pl-c"],[2,4,"pl-c"]],[[2,4,"pl-k"],[11,17,"pl-smi"],[21,26,"pl-s"],[21,22,"pl-pds"],[25,26,"pl-pds"],[34,40,"pl-smi"],[44,50,"pl-s"],[44,45,"pl-pds"],[49,50,"pl-pds"]],[[6,25,"pl-c1"]],[[4,10,"pl-k"],[11,15,"pl-c1"]],[],[],[[2,4,"pl-k"],[6,28,"pl-c1"]],[[4,29,"pl-c"],[4,6,"pl-c"]],[],[[20,26,"pl-smi"]],[],[[12,18,"pl-k"],[19,53,"pl-c1"]],[[32,41,"pl-c1"],[53,60,"pl-c1"],[62,69,"pl-c1"]],[],[],[[12,18,"pl-k"],[19,53,"pl-c1"],[70,77,"pl-c1"]],[[54,63,"pl-c1"]],[[54,63,"pl-c1"]],[],[],[[6,8,"pl-k"],[14,20,"pl-smi"],[24,30,"pl-s"],[24,25,"pl-pds"],[29,30,"pl-pds"]],[[8,10,"pl-k"],[12,47,"pl-c1"]],[[26,35,"pl-c1"]],[],[[10,16,"pl-k"],[17,21,"pl-c1"]],[],[[8,12,"pl-k"],[13,15,"pl-k"],[21,27,"pl-smi"],[31,36,"pl-s"],[31,32,"pl-pds"],[35,36,"pl-pds"]],[[8,10,"pl-k"],[12,47,"pl-c1"]],[[26,35,"pl-c1"]],[],[[10,16,"pl-k"],[17,21,"pl-c1"]],[],[[8,12,"pl-k"],[13,15,"pl-k"],[21,27,"pl-smi"],[31,38,"pl-s"],[31,32,"pl-pds"],[37,38,"pl-pds"]],[[8,10,"pl-k"],[12,47,"pl-c1"]],[[26,35,"pl-c1"]],[],[[10,16,"pl-k"],[17,21,"pl-c1"]],[],[[8,12,"pl-k"],[13,15,"pl-k"],[21,27,"pl-smi"],[31,39,"pl-s"],[31,32,"pl-pds"],[38,39,"pl-pds"]],[[8,10,"pl-k"],[12,47,"pl-c1"]],[[26,35,"pl-c1"]],[],[[10,16,"pl-k"],[17,21,"pl-c1"]],[],[],[],[],[[4,35,"pl-c"],[4,6,"pl-c"]],[[4,6,"pl-k"],[9,21,"pl-c1"],[41,47,"pl-k"],[48,53,"pl-c1"]],[],[],[[2,20,"pl-c"],[2,4,"pl-c"]],[[2,4,"pl-k"],[10,16,"pl-smi"],[20,25,"pl-s"],[20,21,"pl-pds"],[24,25,"pl-pds"],[33,39,"pl-smi"],[43,49,"pl-s"],[43,44,"pl-pds"],[48,49,"pl-pds"]],[[4,10,"pl-k"],[11,27,"pl-c1"]],[[4,8,"pl-k"],[9,11,"pl-k"],[17,23,"pl-smi"],[27,33,"pl-s"],[27,28,"pl-pds"],[32,33,"pl-pds"]],[[4,10,"pl-k"],[11,27,"pl-c1"]],[[4,8,"pl-k"],[9,11,"pl-k"],[17,23,"pl-smi"],[27,32,"pl-s"],[27,28,"pl-pds"],[31,32,"pl-pds"]],[[4,10,"pl-k"],[11,27,"pl-c1"]],[[4,8,"pl-k"],[9,11,"pl-k"],[17,23,"pl-smi"],[27,35,"pl-s"],[27,28,"pl-pds"],[34,35,"pl-pds"]],[[4,10,"pl-k"],[11,27,"pl-c1"]],[[4,8,"pl-k"],[9,11,"pl-k"],[17,23,"pl-smi"],[27,36,"pl-s"],[27,28,"pl-pds"],[35,36,"pl-pds"]],[[4,10,"pl-k"],[11,27,"pl-c1"]],[[4,8,"pl-k"],[9,11,"pl-k"],[17,23,"pl-smi"],[27,34,"pl-s"],[27,28,"pl-pds"],[33,34,"pl-pds"]],[[4,10,"pl-k"],[11,27,"pl-c1"]],[],[],[[6,12,"pl-smi"]],[[2,8,"pl-k"],[9,14,"pl-c1"]],[],[],[[0,6,"pl-k"],[7,11,"pl-k"],[12,36,"pl-smi"]],[[37,42,"pl-k"],[63,68,"pl-k"]],[[2,5,"pl-k"],[7,12,"pl-k"],[13,17,"pl-k"]],[[4,9,"pl-k"],[10,14,"pl-k"],[28,33,"pl-smi"]],[[4,9,"pl-k"],[10,14,"pl-k"],[28,34,"pl-smi"]],[],[[4,6,"pl-k"],[17,22,"pl-c1"]],[[6,13,"pl-c1"]],[[6,12,"pl-k"],[13,17,"pl-c1"]],[],[],[[2,8,"pl-k"],[9,14,"pl-c1"]],[],[],[[0,6,"pl-k"],[7,11,"pl-k"],[12,32,"pl-smi"],[33,38,"pl-k"]],[],[[56,61,"pl-k"]],[[2,4,"pl-k"],[10,16,"pl-smi"],[17,21,"pl-c1"],[26,27,"pl-c1"],[35,41,"pl-smi"]],[[4,8,"pl-k"],[18,25,"pl-smi"],[26,30,"pl-c1"],[31,45,"pl-s"],[31,32,"pl-pds"],[44,45,"pl-pds"]],[[4,6,"pl-k"],[18,25,"pl-smi"],[26,29,"pl-c1"]],[[25,31,"pl-smi"]],[[10,17,"pl-smi"],[18,23,"pl-c1"]],[],[],[[15,51,"pl-c1"]],[],[[8,18,"pl-c1"],[19,33,"pl-s"],[19,20,"pl-pds"],[32,33,"pl-pds"]],[[19,52,"pl-s"],[19,20,"pl-pds"],[51,52,"pl-pds"]],[],[],[[2,6,"pl-k"],[14,35,"pl-c1"]],[],[[2,4,"pl-k"],[10,14,"pl-smi"],[15,20,"pl-c1"]],[[4,6,"pl-k"],[12,27,"pl-smi"],[30,31,"pl-c1"]],[[6,12,"pl-c1"],[22,23,"pl-c1"]],[[6,8,"pl-k"],[14,20,"pl-smi"],[21,26,"pl-c1"],[36,42,"pl-smi"]],[[21,36,"pl-smi"]],[[8,12,"pl-k"],[13,15,"pl-k"],[21,27,"pl-smi"],[28,32,"pl-c1"],[38,39,"pl-c1"]],[[8,12,"pl-k"],[33,68,"pl-c1"]],[[16,22,"pl-smi"],[23,24,"pl-c1"],[31,46,"pl-smi"]],[],[[35,41,"pl-smi"]],[],[[8,12,"pl-k"],[29,68,"pl-c1"]],[[35,50,"pl-smi"]],[[12,22,"pl-c1"],[23,38,"pl-s"],[23,24,"pl-pds"],[37,38,"pl-pds"]],[[8,12,"pl-k"]],[[17,57,"pl-c1"]],[[45,60,"pl-smi"]],[],[[10,20,"pl-c1"],[21,37,"pl-s"],[21,22,"pl-pds"],[36,37,"pl-pds"],[39,53,"pl-c1"]],[[6,10,"pl-k"]],[[6,8,"pl-k"],[14,31,"pl-smi"]],[[8,10,"pl-k"],[16,44,"pl-smi"]],[[14,24,"pl-c1"],[25,44,"pl-s"],[25,26,"pl-pds"],[43,44,"pl-pds"],[46,55,"pl-s"],[46,47,"pl-pds"],[54,55,"pl-pds"]],[[10,12,"pl-k"]],[[16,26,"pl-c1"],[27,45,"pl-s"],[27,28,"pl-pds"],[44,45,"pl-pds"],[47,53,"pl-s"],[47,48,"pl-pds"],[52,53,"pl-pds"]],[[12,16,"pl-k"],[17,19,"pl-k"]],[[16,26,"pl-c1"],[27,45,"pl-s"],[27,28,"pl-pds"],[44,45,"pl-pds"],[47,51,"pl-s"],[47,48,"pl-pds"],[50,51,"pl-pds"]],[[12,16,"pl-k"],[17,19,"pl-k"]],[[16,26,"pl-c1"],[27,45,"pl-s"],[27,28,"pl-pds"],[44,45,"pl-pds"],[47,53,"pl-s"],[47,48,"pl-pds"],[52,53,"pl-pds"]],[],[],[],[],[[4,8,"pl-k"]],[[4,6,"pl-k"],[12,18,"pl-smi"],[19,24,"pl-c1"],[34,40,"pl-smi"]],[],[[6,10,"pl-k"],[11,13,"pl-k"],[19,25,"pl-smi"],[26,30,"pl-c1"],[36,37,"pl-c1"]],[[6,10,"pl-k"]],[[10,45,"pl-c1"],[50,56,"pl-smi"],[57,58,"pl-c1"],[65,69,"pl-smi"],[70,74,"pl-c1"]],[[6,10,"pl-k"],[38,43,"pl-smi"]],[[6,10,"pl-k"],[38,44,"pl-smi"]],[],[[6,10,"pl-k"],[27,66,"pl-c1"]],[[33,37,"pl-smi"],[38,42,"pl-c1"]],[[10,20,"pl-c1"],[21,36,"pl-s"],[21,22,"pl-pds"],[35,36,"pl-pds"]],[],[[6,12,"pl-c1"],[36,40,"pl-smi"],[41,45,"pl-c1"]],[[10,14,"pl-smi"],[21,25,"pl-smi"],[26,32,"pl-c1"]],[[6,10,"pl-k"]],[],[[6,40,"pl-c1"]],[[45,49,"pl-smi"],[50,54,"pl-c1"]],[[10,14,"pl-smi"],[15,19,"pl-c1"]],[],[],[[4,6,"pl-k"]],[],[],[],[[6,8,"pl-k"]],[[1,6,"pl-k"]],[],[[27,33,"pl-s"],[27,28,"pl-pds"],[32,33,"pl-pds"]],[[1,6,"pl-k"]],[[8,12,"pl-k"],[13,15,"pl-k"]],[[1,6,"pl-k"]],[],[[27,31,"pl-s"],[27,28,"pl-pds"],[30,31,"pl-pds"]],[[1,6,"pl-k"]],[[8,12,"pl-k"],[13,15,"pl-k"]],[[1,6,"pl-k"]],[],[[27,33,"pl-s"],[27,28,"pl-pds"],[32,33,"pl-pds"]],[[1,6,"pl-k"]],[],[],[[6,8,"pl-k"]],[],[[8,10,"pl-k"],[24,32,"pl-c1"],[37,41,"pl-smi"],[42,46,"pl-c1"],[54,58,"pl-smi"],[59,63,"pl-c1"],[67,71,"pl-c1"]],[[37,42,"pl-k"],[43,47,"pl-k"],[55,61,"pl-c1"]],[[46,52,"pl-c1"]],[[35,41,"pl-k"],[42,46,"pl-c1"]],[],[[14,18,"pl-smi"],[19,23,"pl-c1"]],[[14,24,"pl-c1"],[25,43,"pl-s"],[25,26,"pl-pds"],[42,43,"pl-pds"]],[],[],[],[],[[4,8,"pl-k"],[18,32,"pl-c1"],[37,41,"pl-smi"],[42,46,"pl-c1"]],[[8,18,"pl-c1"],[19,35,"pl-s"],[19,20,"pl-pds"],[34,35,"pl-pds"]],[],[],[],[[0,6,"pl-k"],[7,11,"pl-k"],[12,55,"pl-smi"]],[],[[4,9,"pl-k"],[46,51,"pl-k"]],[[2,5,"pl-k"],[7,12,"pl-k"],[13,17,"pl-k"]],[[4,9,"pl-k"],[10,14,"pl-k"],[28,33,"pl-smi"]],[[4,9,"pl-k"],[10,14,"pl-k"],[28,34,"pl-smi"]],[],[[4,6,"pl-k"],[17,22,"pl-c1"]],[[6,13,"pl-c1"]],[[6,12,"pl-k"],[13,17,"pl-c1"]],[],[],[[2,8,"pl-k"],[9,14,"pl-c1"]],[],[],[[0,6,"pl-k"],[7,11,"pl-k"]],[[0,23,"pl-c1"],[38,43,"pl-k"]],[[24,27,"pl-k"],[41,46,"pl-k"]],[[24,27,"pl-k"],[40,44,"pl-k"]],[[24,28,"pl-k"]],[[24,29,"pl-k"],[44,48,"pl-c1"]],[[13,17,"pl-k"],[19,23,"pl-c1"]],[],[[29,40,"pl-smi"],[51,55,"pl-c1"],[63,67,"pl-c1"]],[],[[2,41,"pl-c"],[2,4,"pl-c"]],[[2,4,"pl-k"],[19,26,"pl-c1"],[32,38,"pl-k"],[39,44,"pl-c1"]],[],[],[],[],[[6,13,"pl-smi"],[16,26,"pl-s"],[16,17,"pl-pds"],[25,26,"pl-pds"]],[[6,13,"pl-smi"]],[],[[2,29,"pl-c"],[2,4,"pl-c"]],[[2,4,"pl-k"],[7,25,"pl-c1"],[38,41,"pl-c1"]],[[7,27,"pl-c1"],[38,45,"pl-smi"]],[[8,14,"pl-smi"]],[[4,10,"pl-k"],[11,25,"pl-c1"]],[],[],[[2,54,"pl-c"],[2,4,"pl-c"]],[[2,4,"pl-k"],[10,16,"pl-smi"],[17,21,"pl-c1"]],[],[[4,24,"pl-c1"]],[[8,14,"pl-smi"]],[[4,10,"pl-k"],[11,25,"pl-c1"]],[],[],[[2,4,"pl-k"],[10,26,"pl-c1"],[27,39,"pl-s"],[27,28,"pl-pds"],[38,39,"pl-pds"],[44,51,"pl-s"],[44,45,"pl-pds"],[50,51,"pl-pds"]],[[24,28,"pl-c1"]],[],[],[[2,4,"pl-k"],[10,17,"pl-smi"],[21,31,"pl-s"],[21,22,"pl-pds"],[30,31,"pl-pds"]],[[10,26,"pl-c1"],[27,39,"pl-s"],[27,28,"pl-pds"],[38,39,"pl-pds"],[44,56,"pl-s"],[44,45,"pl-pds"],[55,56,"pl-pds"]],[[24,28,"pl-c1"]],[],[],[[6,17,"pl-smi"]],[[6,17,"pl-smi"]],[[6,16,"pl-c1"],[17,30,"pl-s"],[17,18,"pl-pds"],[29,30,"pl-pds"],[36,47,"pl-smi"]],[[6,16,"pl-c1"],[17,30,"pl-s"],[17,18,"pl-pds"],[29,30,"pl-pds"],[32,46,"pl-c1"],[51,62,"pl-smi"]],[],[[6,16,"pl-smi"]],[[6,16,"pl-smi"]],[[6,16,"pl-c1"],[17,29,"pl-s"],[17,18,"pl-pds"],[28,29,"pl-pds"],[35,45,"pl-smi"]],[[6,16,"pl-c1"],[17,29,"pl-s"],[17,18,"pl-pds"],[28,29,"pl-pds"],[31,45,"pl-c1"],[50,60,"pl-smi"]],[],[[2,4,"pl-k"],[10,20,"pl-c1"],[21,28,"pl-s"],[21,22,"pl-pds"],[27,28,"pl-pds"]],[[4,9,"pl-k"],[10,14,"pl-k"],[41,57,"pl-c1"],[58,65,"pl-s"],[58,59,"pl-pds"],[64,65,"pl-pds"]],[[4,6,"pl-k"],[9,35,"pl-c1"],[60,66,"pl-smi"]],[[10,16,"pl-smi"]],[[6,12,"pl-k"],[13,27,"pl-c1"]],[],[],[],[[2,4,"pl-k"],[23,36,"pl-c1"]],[],[[2,4,"pl-k"],[10,26,"pl-c1"],[27,35,"pl-s"],[27,28,"pl-pds"],[34,35,"pl-pds"],[40,54,"pl-s"],[40,41,"pl-pds"],[53,54,"pl-pds"]],[[4,7,"pl-k"]],[[4,6,"pl-k"]],[[15,43,"pl-c1"]],[],[[4,10,"pl-k"]],[[4,8,"pl-k"]],[[4,8,"pl-k"]],[[6,33,"pl-c1"]],[[11,16,"pl-c1"],[17,23,"pl-s"],[17,18,"pl-pds"],[18,22,"pl-cce"],[22,23,"pl-pds"]],[[6,11,"pl-k"]],[[4,11,"pl-k"]],[[26,30,"pl-c1"]],[[6,12,"pl-k"],[13,27,"pl-c1"],[34,38,"pl-c1"]],[],[],[],[[2,40,"pl-c"],[2,4,"pl-c"]],[[2,6,"pl-k"],[19,25,"pl-c1"]],[[6,26,"pl-smi"]],[[4,10,"pl-k"],[12,35,"pl-c1"]],[],[],[[2,12,"pl-c"],[2,4,"pl-c"]],[[2,6,"pl-k"],[16,21,"pl-c1"]],[[1,6,"pl-k"]],[[11,18,"pl-c1"]],[[1,5,"pl-k"]],[[2,5,"pl-k"]],[[13,20,"pl-c1"]],[[4,9,"pl-k"],[16,25,"pl-c1"]],[[4,6,"pl-k"]],[[6,10,"pl-k"],[16,38,"pl-c1"]],[[6,24,"pl-c1"]],[[15,19,"pl-c1"]],[[6,10,"pl-k"]],[[10,16,"pl-smi"]],[],[[6,10,"pl-k"],[17,21,"pl-c1"]],[[6,9,"pl-k"],[11,17,"pl-c1"],[22,23,"pl-c1"]],[[8,14,"pl-k"]],[[8,12,"pl-k"],[13,17,"pl-s"],[13,14,"pl-pds"],[14,16,"pl-cce"],[16,17,"pl-pds"],[26,31,"pl-s"],[26,27,"pl-pds"],[27,29,"pl-cce"],[30,31,"pl-pds"],[33,38,"pl-k"]],[[8,12,"pl-k"],[13,17,"pl-s"],[13,14,"pl-pds"],[14,16,"pl-cce"],[16,17,"pl-pds"],[26,31,"pl-s"],[26,27,"pl-pds"],[27,29,"pl-cce"],[30,31,"pl-pds"],[33,38,"pl-k"]],[[8,15,"pl-k"],[30,35,"pl-k"]],[],[],[[10,20,"pl-c1"],[21,37,"pl-s"],[21,22,"pl-pds"],[36,37,"pl-pds"]],[],[[4,9,"pl-k"]],[[4,6,"pl-k"]],[[6,10,"pl-k"],[16,38,"pl-c1"]],[[6,24,"pl-c1"]],[[15,19,"pl-c1"]],[[6,10,"pl-k"]],[[10,16,"pl-smi"]],[[10,20,"pl-c1"],[21,37,"pl-s"],[21,22,"pl-pds"],[36,37,"pl-pds"],[39,48,"pl-s"],[39,40,"pl-pds"],[47,48,"pl-pds"]],[],[],[[1,6,"pl-k"]],[[2,4,"pl-k"]],[[4,6,"pl-k"],[12,18,"pl-smi"],[23,24,"pl-c1"]],[[10,16,"pl-smi"],[23,29,"pl-smi"],[30,35,"pl-c1"]],[],[],[],[[4,53,"pl-c"],[4,6,"pl-c"]],[[4,6,"pl-k"],[13,31,"pl-smi"],[32,37,"pl-c1"]],[[6,11,"pl-k"],[12,16,"pl-k"],[29,47,"pl-smi"]],[[6,10,"pl-k"],[52,57,"pl-c1"]],[[6,8,"pl-k"],[15,22,"pl-c1"]],[[12,16,"pl-smi"],[17,22,"pl-c1"]],[[12,27,"pl-smi"],[30,31,"pl-c1"]],[[12,29,"pl-smi"],[32,39,"pl-c1"]],[[12,18,"pl-smi"]],[[8,14,"pl-k"],[15,29,"pl-c1"]],[],[],[[6,10,"pl-k"],[30,56,"pl-smi"]],[[6,8,"pl-k"],[23,28,"pl-c1"]],[[23,48,"pl-c1"]],[],[],[],[[10,30,"pl-c1"]],[[14,18,"pl-c1"]],[[15,21,"pl-c1"],[30,36,"pl-c1"],[64,68,"pl-k"]],[[17,22,"pl-c1"],[27,31,"pl-c1"]],[[12,18,"pl-k"],[19,23,"pl-c1"]],[],[],[],[[4,6,"pl-k"],[8,27,"pl-c1"]],[[10,14,"pl-smi"],[15,20,"pl-c1"]],[[10,25,"pl-smi"],[28,29,"pl-c1"]],[[10,27,"pl-smi"],[30,37,"pl-c1"]],[[10,16,"pl-smi"]],[[6,12,"pl-k"],[13,27,"pl-c1"]],[],[],[[4,10,"pl-k"],[11,38,"pl-c1"]],[[4,8,"pl-k"]],[[4,6,"pl-k"],[12,18,"pl-smi"],[23,24,"pl-c1"],[32,38,"pl-smi"]],[],[[4,10,"pl-k"],[11,25,"pl-c1"]],[],[],[],[[0,6,"pl-k"],[7,11,"pl-k"],[12,28,"pl-smi"],[31,36,"pl-k"],[39,45,"pl-k"],[46,50,"pl-c1"]],[],[[0,6,"pl-k"],[7,11,"pl-k"],[12,44,"pl-smi"],[45,53,"pl-c1"]],[],[[2,5,"pl-k"],[20,21,"pl-c1"]],[[2,32,"pl-c1"]],[],[],[[2,5,"pl-k"],[19,20,"pl-c1"]],[[2,31,"pl-c1"]],[],[[2,6,"pl-k"],[13,42,"pl-c1"]],[],[],[],[[24,28,"pl-k"],[47,51,"pl-k"]],[[8,14,"pl-k"],[15,30,"pl-c1"]],[],[[31,38,"pl-c1"]],[],[],[[2,25,"pl-c1"]],[[2,22,"pl-c1"]],[[2,8,"pl-k"]],[],[],[[0,29,"pl-c"],[0,2,"pl-c"]],[[0,6,"pl-k"],[7,29,"pl-smi"],[30,35,"pl-k"]],[[6,16,"pl-c1"],[23,25,"pl-c1"],[27,38,"pl-c1"],[42,53,"pl-c1"]],[],[[0,6,"pl-k"],[7,29,"pl-smi"],[30,35,"pl-k"],[55,58,"pl-k"]],[[6,16,"pl-c1"],[29,40,"pl-c1"],[44,55,"pl-c1"]],[],[[0,6,"pl-k"],[7,29,"pl-smi"],[30,35,"pl-k"],[55,58,"pl-k"]],[[30,35,"pl-k"]],[[30,35,"pl-k"]],[[6,11,"pl-c1"],[12,57,"pl-c1"],[66,71,"pl-c1"]],[[6,20,"pl-c1"],[21,39,"pl-c1"],[49,52,"pl-s"],[49,50,"pl-pds"],[51,52,"pl-pds"],[55,69,"pl-c1"]],[[6,23,"pl-c1"],[43,59,"pl-c1"]],[],[[0,6,"pl-k"],[7,30,"pl-en"]],[[2,55,"pl-c"],[2,4,"pl-c"]],[[2,8,"pl-c1"],[23,25,"pl-c1"]],[[2,7,"pl-k"],[25,26,"pl-c1"]],[],[[34,39,"pl-c1"]],[[6,8,"pl-k"],[40,41,"pl-c1"],[45,50,"pl-k"]],[],[[4,31,"pl-c1"],[58,59,"pl-c1"]],[],[],[[30,35,"pl-c1"]],[[2,17,"pl-c1"]],[[2,14,"pl-c1"]],[],[],[[0,6,"pl-k"],[7,11,"pl-k"],[12,32,"pl-smi"],[35,40,"pl-k"],[43,49,"pl-k"],[50,54,"pl-c1"]],[],[[0,6,"pl-k"],[7,11,"pl-k"],[12,37,"pl-smi"],[38,43,"pl-k"]],[[26,43,"pl-smi"]],[[25,41,"pl-smi"]],[[32,55,"pl-smi"]],[[26,43,"pl-smi"]],[[27,45,"pl-smi"]],[[27,45,"pl-smi"]],[[28,47,"pl-smi"]],[[26,43,"pl-smi"]],[[29,49,"pl-smi"]],[[29,49,"pl-smi"]],[[33,57,"pl-smi"]],[[1,6,"pl-k"]],[[30,51,"pl-smi"]],[[30,51,"pl-smi"]],[[1,6,"pl-k"]],[[20,31,"pl-smi"]],[[25,41,"pl-smi"]],[[20,31,"pl-smi"]],[[24,39,"pl-smi"]],[[21,33,"pl-smi"]],[[21,33,"pl-smi"]],[[24,39,"pl-smi"]],[[18,27,"pl-smi"]],[[20,31,"pl-smi"]],[[19,29,"pl-smi"]],[[20,31,"pl-smi"]],[[20,31,"pl-smi"]],[[35,61,"pl-smi"]],[[35,61,"pl-smi"]],[[39,69,"pl-smi"]],[[1,6,"pl-k"]],[[36,63,"pl-smi"]],[[36,63,"pl-smi"]],[[1,6,"pl-k"]],[[1,6,"pl-k"]],[[27,45,"pl-smi"]],[[26,43,"pl-smi"]],[[23,37,"pl-smi"]],[[1,6,"pl-k"]],[[1,6,"pl-k"]],[[41,73,"pl-smi"]],[[38,67,"pl-smi"]],[[37,65,"pl-smi"]],[[1,6,"pl-k"]],[[16,23,"pl-smi"]],[],[],[[0,6,"pl-k"],[7,15,"pl-c1"],[16,48,"pl-smi"],[63,68,"pl-k"]],[[2,4,"pl-k"],[19,24,"pl-c1"],[46,47,"pl-c1"]],[[4,10,"pl-k"],[11,39,"pl-c1"]],[[21,32,"pl-c1"]],[],[],[],[],[],[[2,43,"pl-c"],[2,4,"pl-c"]],[],[[2,6,"pl-k"],[22,26,"pl-c1"]],[[2,4,"pl-k"],[22,25,"pl-c1"],[40,46,"pl-smi"]],[],[[2,8,"pl-k"],[9,37,"pl-c1"]],[],[],[],[],[],[],[[0,6,"pl-k"],[7,11,"pl-k"],[12,49,"pl-smi"]],[],[[2,6,"pl-k"],[14,34,"pl-c1"]],[[2,4,"pl-k"],[32,38,"pl-k"],[39,44,"pl-c1"]],[[9,13,"pl-smi"]],[[2,8,"pl-k"],[9,13,"pl-c1"]],[],[],[[0,6,"pl-k"],[7,11,"pl-k"],[12,36,"pl-smi"],[46,56,"pl-c"],[46,48,"pl-c"],[54,56,"pl-c"]],[[37,41,"pl-k"],[42,65,"pl-c"],[42,44,"pl-c"],[63,65,"pl-c"]],[[2,78,"pl-c"],[2,4,"pl-c"]],[[2,78,"pl-c"],[2,4,"pl-c"]],[[2,8,"pl-c1"],[39,40,"pl-c1"]],[[45,69,"pl-c1"]],[],[],[[0,6,"pl-k"],[7,11,"pl-k"],[12,39,"pl-smi"],[56,61,"pl-k"]],[[2,4,"pl-k"],[13,17,"pl-smi"],[39,45,"pl-k"]],[[2,25,"pl-c1"],[33,37,"pl-smi"]],[],[],[[0,6,"pl-k"],[7,11,"pl-k"],[12,36,"pl-smi"]],[[2,71,"pl-c"],[2,4,"pl-c"]],[[2,71,"pl-c"],[2,4,"pl-c"]],[[2,71,"pl-c"],[2,4,"pl-c"]],[[2,69,"pl-c"],[2,4,"pl-c"]],[[2,71,"pl-c"],[2,4,"pl-c"]],[[2,32,"pl-c"],[2,4,"pl-c"]],[[2,8,"pl-c1"],[39,40,"pl-c1"]],[[45,69,"pl-c1"]],[],[[2,63,"pl-c"],[2,4,"pl-c"]],[[1,6,"pl-k"]],[[2,8,"pl-c1"],[16,19,"pl-smi"],[23,30,"pl-c1"]],[[1,6,"pl-k"]],[[2,4,"pl-k"],[13,17,"pl-smi"],[39,45,"pl-k"]],[[2,22,"pl-c1"],[30,34,"pl-smi"]],[[9,13,"pl-smi"]],[],[],[[0,6,"pl-k"],[7,11,"pl-k"],[12,42,"pl-smi"],[57,62,"pl-k"]],[[58,63,"pl-k"]],[[13,17,"pl-k"],[19,23,"pl-c1"]],[],[[29,40,"pl-smi"],[51,55,"pl-c1"],[63,67,"pl-c1"]],[],[[2,4,"pl-k"],[19,26,"pl-c1"],[32,38,"pl-k"],[39,44,"pl-c1"]],[],[[1,6,"pl-k"]],[[2,14,"pl-k"],[15,20,"pl-k"],[32,34,"pl-smi"],[35,77,"pl-s"],[35,36,"pl-pds"],[43,45,"pl-cce"],[53,55,"pl-cce"],[71,73,"pl-cce"],[74,76,"pl-cce"],[76,77,"pl-pds"]],[[1,5,"pl-k"]],[[2,14,"pl-k"],[15,20,"pl-k"],[32,34,"pl-smi"],[35,76,"pl-s"],[35,36,"pl-pds"],[43,45,"pl-cce"],[53,55,"pl-cce"],[71,75,"pl-cce"],[75,76,"pl-pds"]],[[1,6,"pl-k"]],[],[],[[2,4,"pl-k"],[7,23,"pl-c1"],[36,39,"pl-c1"]],[[4,10,"pl-k"],[15,21,"pl-smi"],[25,34,"pl-s"],[25,26,"pl-pds"],[33,34,"pl-pds"]],[],[[6,13,"pl-smi"],[16,27,"pl-c1"],[30,31,"pl-c1"]],[[6,12,"pl-smi"],[15,24,"pl-c1"],[25,36,"pl-c1"],[39,40,"pl-c1"]],[[6,12,"pl-smi"],[15,26,"pl-c1"],[29,30,"pl-c1"]],[],[[2,26,"pl-c"],[2,4,"pl-c"]],[[2,7,"pl-k"],[13,19,"pl-smi"]],[[4,6,"pl-k"],[21,28,"pl-c1"],[34,40,"pl-k"],[41,46,"pl-c1"],[50,57,"pl-c"],[50,52,"pl-c"]],[[4,6,"pl-k"],[21,28,"pl-c1"],[34,40,"pl-k"],[41,46,"pl-c1"],[50,71,"pl-c"],[50,52,"pl-c"]],[],[[4,6,"pl-k"],[9,25,"pl-c1"],[38,41,"pl-c1"],[55,61,"pl-k"],[62,67,"pl-c1"]],[[8,15,"pl-smi"],[18,29,"pl-c1"],[32,33,"pl-c1"]],[[8,14,"pl-smi"],[17,26,"pl-c1"],[27,38,"pl-c1"],[41,42,"pl-c1"]],[[8,14,"pl-smi"],[17,28,"pl-c1"],[31,32,"pl-c1"]],[],[],[[2,8,"pl-k"],[9,13,"pl-c1"]],[],[],[[0,6,"pl-k"],[7,11,"pl-k"],[12,28,"pl-smi"]],[[40,59,"pl-c1"]],[[2,6,"pl-k"],[13,18,"pl-c1"]],[[2,4,"pl-k"]],[[4,10,"pl-c1"]],[[10,15,"pl-c1"]],[],[[2,8,"pl-k"]],[],[],[[0,6,"pl-k"],[7,11,"pl-k"],[12,29,"pl-smi"]],[],[[32,37,"pl-c1"]],[],[[4,80,"pl-c"],[4,6,"pl-c"]],[[4,77,"pl-c"],[4,6,"pl-c"]],[[52,57,"pl-c1"]],[],[[4,8,"pl-k"],[20,25,"pl-c1"]],[[4,6,"pl-k"],[16,23,"pl-c1"]],[[17,40,"pl-c1"],[49,53,"pl-smi"]],[],[[1,6,"pl-k"]],[[6,8,"pl-k"],[22,28,"pl-c1"]],[[8,10,"pl-k"],[12,47,"pl-c1"],[56,59,"pl-smi"],[69,73,"pl-smi"]],[[21,26,"pl-c1"]],[],[],[[1,6,"pl-k"]],[],[[6,8,"pl-k"]],[[8,79,"pl-c"],[8,10,"pl-c"]],[[8,76,"pl-c"],[8,10,"pl-c"]],[[8,78,"pl-c"],[8,10,"pl-c"]],[[8,66,"pl-c"],[8,10,"pl-c"]],[[8,13,"pl-k"],[14,18,"pl-k"],[41,46,"pl-c1"]],[[8,20,"pl-c1"]],[[8,23,"pl-c1"]],[[8,20,"pl-c1"]],[],[],[],[[4,6,"pl-k"]],[[6,8,"pl-k"],[11,36,"pl-c1"],[56,62,"pl-k"],[63,68,"pl-c1"]],[],[[1,6,"pl-k"]],[[6,26,"pl-c"],[6,8,"pl-c"]],[[6,8,"pl-k"],[10,16,"pl-c1"]],[[8,12,"pl-k"],[21,32,"pl-k"],[47,51,"pl-c1"]],[[8,10,"pl-k"],[25,30,"pl-c1"],[52,53,"pl-c1"]],[[10,14,"pl-k"],[25,30,"pl-c1"]],[[10,12,"pl-k"],[20,38,"pl-c1"],[52,63,"pl-smi"]],[],[[12,18,"pl-k"]],[],[],[],[[8,10,"pl-k"],[18,32,"pl-c1"],[52,58,"pl-k"],[59,64,"pl-c1"]],[],[[1,6,"pl-k"]],[],[],[[4,77,"pl-c"],[4,6,"pl-c"]],[[4,72,"pl-c"],[4,6,"pl-c"]],[[4,27,"pl-c"],[4,6,"pl-c"]],[[4,6,"pl-k"],[37,38,"pl-c1"]],[[6,12,"pl-c1"],[49,73,"pl-c1"]],[],[[34,35,"pl-c1"]],[[39,63,"pl-c1"]],[],[],[[2,5,"pl-k"],[7,12,"pl-k"],[13,17,"pl-k"]],[[4,6,"pl-k"],[12,19,"pl-smi"],[20,24,"pl-c1"],[32,37,"pl-smi"],[46,53,"pl-smi"],[54,57,"pl-c1"]],[[10,17,"pl-smi"],[18,24,"pl-c1"]],[],[],[],[[2,6,"pl-k"],[13,18,"pl-c1"]],[[2,6,"pl-k"]],[],[[2,6,"pl-k"],[12,30,"pl-c1"]],[[4,78,"pl-c"],[4,6,"pl-c"]],[[32,37,"pl-c1"]],[[34,35,"pl-c1"]],[[4,6,"pl-k"],[38,39,"pl-c1"]],[[6,12,"pl-c1"],[43,44,"pl-c1"]],[[41,56,"pl-c1"]],[],[],[[4,6,"pl-k"]],[],[[6,18,"pl-c1"],[28,32,"pl-c1"]],[[6,21,"pl-c1"]],[[6,18,"pl-c1"]],[],[],[],[[8,22,"pl-c1"],[36,47,"pl-smi"]],[[4,10,"pl-k"],[11,25,"pl-c1"]],[],[],[[2,4,"pl-k"]],[[4,6,"pl-k"]],[],[],[[2,8,"pl-k"]],[],[],[[0,6,"pl-k"],[14,30,"pl-smi"],[31,36,"pl-k"]],[[2,6,"pl-k"]],[[2,8,"pl-k"],[9,14,"pl-c1"],[15,24,"pl-c1"]],[],[],[[0,6,"pl-k"],[14,31,"pl-smi"]],[[2,6,"pl-k"]],[[2,6,"pl-k"]],[[2,6,"pl-k"],[13,17,"pl-c1"]],[[2,8,"pl-k"],[22,31,"pl-c1"],[39,46,"pl-c1"],[55,64,"pl-c1"],[69,76,"pl-smi"]],[],[],[[0,6,"pl-k"],[7,11,"pl-k"],[12,38,"pl-smi"]],[[54,58,"pl-k"]],[],[[2,4,"pl-k"],[10,14,"pl-smi"],[15,20,"pl-c1"]],[],[[4,10,"pl-k"],[11,16,"pl-c1"]],[],[],[[2,6,"pl-k"]],[],[[2,6,"pl-k"]],[],[[2,4,"pl-k"],[7,13,"pl-c1"],[32,37,"pl-c1"],[59,60,"pl-c1"]],[[4,8,"pl-k"]],[[9,13,"pl-smi"],[16,25,"pl-s"],[16,17,"pl-pds"],[24,25,"pl-pds"],[49,53,"pl-smi"]],[[10,25,"pl-c1"]],[],[[8,12,"pl-smi"],[24,28,"pl-smi"]],[[4,8,"pl-k"]],[[10,25,"pl-c1"]],[],[],[[2,4,"pl-k"],[14,20,"pl-k"],[21,26,"pl-c1"]],[],[[2,4,"pl-k"],[10,26,"pl-c1"],[27,39,"pl-s"],[27,28,"pl-pds"],[38,39,"pl-pds"],[44,51,"pl-s"],[44,45,"pl-pds"],[50,51,"pl-pds"]],[[11,18,"pl-smi"],[22,32,"pl-s"],[22,23,"pl-pds"],[31,32,"pl-pds"],[40,46,"pl-smi"],[50,74,"pl-s"],[50,51,"pl-pds"],[73,74,"pl-pds"]],[[4,77,"pl-c"],[4,6,"pl-c"]],[[4,27,"pl-c"],[4,6,"pl-c"]],[],[[4,74,"pl-c"],[4,6,"pl-c"]],[[4,74,"pl-c"],[4,6,"pl-c"]],[[4,74,"pl-c"],[4,6,"pl-c"]],[[4,78,"pl-c"],[4,6,"pl-c"]],[[32,37,"pl-c1"]],[[4,16,"pl-c1"],[26,30,"pl-c1"]],[[4,19,"pl-c1"]],[[4,16,"pl-c1"]],[],[],[[2,4,"pl-k"],[6,9,"pl-c1"],[16,22,"pl-smi"],[30,36,"pl-smi"],[39,42,"pl-c1"]],[],[[10,18,"pl-c1"]],[],[],[[1,6,"pl-k"]],[[2,4,"pl-k"],[11,17,"pl-smi"]],[[11,17,"pl-smi"]],[[10,30,"pl-smi"],[33,34,"pl-c1"]],[[4,8,"pl-k"],[24,30,"pl-smi"]],[[4,9,"pl-k"],[10,14,"pl-k"]],[],[[4,9,"pl-k"],[10,14,"pl-k"]],[],[],[[4,6,"pl-k"],[18,23,"pl-c1"],[39,44,"pl-c1"]],[],[[6,8,"pl-k"],[10,40,"pl-c1"]],[],[[16,36,"pl-smi"],[40,41,"pl-c1"]],[[16,23,"pl-smi"],[24,29,"pl-c1"],[41,62,"pl-s"],[41,42,"pl-pds"],[61,62,"pl-pds"]],[[41,56,"pl-s"],[41,42,"pl-pds"],[55,56,"pl-pds"]],[[16,23,"pl-smi"],[24,30,"pl-c1"],[31,72,"pl-c1"]],[[31,51,"pl-smi"],[53,74,"pl-c1"],[75,77,"pl-c1"]],[],[],[],[],[[14,18,"pl-c1"]],[[8,10,"pl-k"]],[],[],[],[[1,6,"pl-k"]],[],[[2,8,"pl-k"]],[],[],[[0,6,"pl-k"],[7,11,"pl-k"],[12,32,"pl-smi"]],[[2,4,"pl-k"],[10,25,"pl-smi"],[29,30,"pl-c1"]],[],[[4,10,"pl-k"],[11,16,"pl-c1"]],[],[],[[2,6,"pl-k"],[22,38,"pl-c1"],[39,49,"pl-s"],[39,40,"pl-pds"],[48,49,"pl-pds"]],[[2,4,"pl-k"],[15,20,"pl-c1"],[26,32,"pl-k"],[33,38,"pl-c1"]],[],[[2,14,"pl-k"],[15,20,"pl-k"],[32,34,"pl-smi"]],[[6,102,"pl-s"],[6,9,"pl-pds"],[100,102,"pl-pds"]],[],[],[[2,4,"pl-k"],[7,23,"pl-c1"],[44,50,"pl-k"],[51,56,"pl-c1"]],[],[[2,6,"pl-k"],[16,22,"pl-c1"],[27,34,"pl-s"],[27,28,"pl-pds"],[33,34,"pl-pds"],[37,43,"pl-s"],[37,38,"pl-pds"],[42,43,"pl-pds"]],[],[[2,6,"pl-k"],[23,24,"pl-c1"],[26,29,"pl-c1"]],[[2,6,"pl-k"],[21,22,"pl-c1"],[24,27,"pl-c1"]],[[2,4,"pl-k"],[16,21,"pl-c1"],[41,42,"pl-c1"],[44,47,"pl-c1"]],[[2,6,"pl-k"],[20,21,"pl-c1"],[23,26,"pl-c1"]],[[2,6,"pl-k"],[21,22,"pl-c1"],[24,27,"pl-c1"]],[[2,6,"pl-k"],[22,23,"pl-c1"],[25,28,"pl-c1"]],[],[[2,6,"pl-k"]],[[2,4,"pl-k"],[16,21,"pl-c1"]],[[16,25,"pl-c1"]],[[4,8,"pl-k"],[9,11,"pl-k"],[26,31,"pl-c1"]],[[31,38,"pl-s"],[31,32,"pl-pds"],[37,38,"pl-pds"],[41,44,"pl-c1"],[47,49,"pl-c1"]],[],[],[[2,4,"pl-k"],[18,23,"pl-c1"]],[[2,4,"pl-k"],[16,21,"pl-c1"]],[[2,4,"pl-k"],[16,21,"pl-c1"],[39,42,"pl-s"],[39,40,"pl-pds"],[41,42,"pl-pds"]],[],[[2,6,"pl-k"],[14,32,"pl-c1"],[44,48,"pl-c1"]],[],[[2,4,"pl-k"]],[[4,10,"pl-k"],[11,27,"pl-c1"],[29,33,"pl-c1"]],[[4,8,"pl-k"]],[[4,6,"pl-k"],[23,30,"pl-s"],[23,24,"pl-pds"],[29,30,"pl-pds"]],[[1,6,"pl-k"]],[[16,19,"pl-smi"]],[[10,23,"pl-c1"],[25,29,"pl-c1"]],[[6,8,"pl-k"],[32,49,"pl-c1"]],[[6,12,"pl-k"],[13,29,"pl-c1"]],[[1,5,"pl-k"]],[[6,12,"pl-k"],[13,18,"pl-c1"]],[[1,6,"pl-k"]],[[6,10,"pl-k"]],[[17,20,"pl-smi"]],[[10,23,"pl-c1"],[25,29,"pl-c1"]],[[6,12,"pl-k"],[13,29,"pl-c1"]],[],[],[],[],[[0,6,"pl-k"],[7,11,"pl-k"],[12,51,"pl-smi"]],[[52,57,"pl-k"]],[[66,71,"pl-k"]],[[2,6,"pl-k"],[33,39,"pl-k"],[40,45,"pl-c1"]],[],[[2,4,"pl-k"],[10,38,"pl-smi"]],[[4,27,"pl-c"],[4,6,"pl-c"]],[],[[1,6,"pl-k"]],[[4,6,"pl-k"]],[],[[6,10,"pl-k"]],[[1,6,"pl-k"]],[],[],[],[],[[4,10,"pl-k"],[11,40,"pl-c1"],[51,68,"pl-smi"]],[],[[4,8,"pl-k"]],[[4,10,"pl-k"],[11,32,"pl-c1"],[43,60,"pl-smi"],[62,63,"pl-c1"]],[[37,52,"pl-smi"]],[],[],[],[[0,6,"pl-k"],[7,11,"pl-k"],[12,37,"pl-smi"]],[[38,42,"pl-k"]],[[2,31,"pl-c"],[2,4,"pl-c"]],[[2,4,"pl-k"]],[[4,6,"pl-k"],[13,23,"pl-c1"],[24,36,"pl-s"],[24,25,"pl-pds"],[35,36,"pl-pds"]],[[10,20,"pl-c1"],[21,33,"pl-s"],[21,22,"pl-pds"],[32,33,"pl-pds"],[35,42,"pl-s"],[35,36,"pl-pds"],[41,42,"pl-pds"]],[],[],[],[[2,4,"pl-k"],[11,21,"pl-c1"],[22,28,"pl-s"],[22,23,"pl-pds"],[27,28,"pl-pds"]],[[4,6,"pl-k"],[8,14,"pl-c1"]],[[6,8,"pl-k"],[19,22,"pl-c1"]],[[12,22,"pl-c1"],[23,29,"pl-s"],[23,24,"pl-pds"],[28,29,"pl-pds"]],[[8,12,"pl-k"]],[[12,22,"pl-c1"],[23,29,"pl-s"],[23,24,"pl-pds"],[28,29,"pl-pds"]],[],[[6,10,"pl-k"]],[[6,8,"pl-k"],[19,21,"pl-c1"]],[[12,22,"pl-c1"],[23,29,"pl-s"],[23,24,"pl-pds"],[28,29,"pl-pds"]],[[8,12,"pl-k"]],[[12,22,"pl-c1"],[23,29,"pl-s"],[23,24,"pl-pds"],[28,29,"pl-pds"]],[],[],[],[],[[2,4,"pl-k"],[11,21,"pl-c1"],[22,30,"pl-s"],[22,23,"pl-pds"],[29,30,"pl-pds"],[39,49,"pl-c1"],[50,58,"pl-s"],[50,51,"pl-pds"],[57,58,"pl-pds"],[60,65,"pl-s"],[60,61,"pl-pds"],[64,65,"pl-pds"]],[],[[2,4,"pl-k"],[11,27,"pl-smi"]],[[4,6,"pl-k"],[13,23,"pl-c1"],[24,41,"pl-s"],[24,25,"pl-pds"],[40,41,"pl-pds"]],[],[[1,6,"pl-k"]],[[24,28,"pl-s"],[24,25,"pl-pds"],[27,28,"pl-pds"]],[[1,6,"pl-k"]],[[1,6,"pl-k"]],[[6,8,"pl-k"],[27,32,"pl-c1"],[57,61,"pl-s"],[57,58,"pl-pds"],[60,61,"pl-pds"]],[[25,40,"pl-s"],[25,26,"pl-pds"],[39,40,"pl-pds"]],[[1,6,"pl-k"]],[[1,6,"pl-k"]],[[6,8,"pl-k"],[27,32,"pl-c1"],[57,61,"pl-s"],[57,58,"pl-pds"],[60,61,"pl-pds"]],[[25,31,"pl-s"],[25,26,"pl-pds"],[30,31,"pl-pds"]],[[1,6,"pl-k"]],[[10,20,"pl-c1"],[21,38,"pl-s"],[21,22,"pl-pds"],[37,38,"pl-pds"]],[],[],[[1,7,"pl-k"]],[[4,6,"pl-k"],[13,23,"pl-c1"],[24,36,"pl-s"],[24,25,"pl-pds"],[35,36,"pl-pds"]],[[6,10,"pl-k"],[19,30,"pl-c1"],[31,45,"pl-s"],[31,32,"pl-pds"],[44,45,"pl-pds"]],[[10,20,"pl-c1"],[21,33,"pl-s"],[21,22,"pl-pds"],[32,33,"pl-pds"]],[],[[1,6,"pl-k"]],[],[],[[2,4,"pl-k"],[10,14,"pl-smi"],[15,20,"pl-c1"]],[[4,6,"pl-k"],[12,29,"pl-smi"]],[[6,8,"pl-k"],[15,43,"pl-smi"]],[[8,10,"pl-k"],[17,27,"pl-c1"],[28,44,"pl-s"],[28,29,"pl-pds"],[43,44,"pl-pds"]],[[10,14,"pl-k"],[24,38,"pl-c1"],[43,58,"pl-smi"]],[[14,24,"pl-c1"],[25,41,"pl-s"],[25,26,"pl-pds"],[40,41,"pl-pds"]],[],[],[[6,10,"pl-k"]],[[6,8,"pl-k"],[14,20,"pl-smi"],[24,30,"pl-s"],[24,25,"pl-pds"],[29,30,"pl-pds"],[38,44,"pl-smi"],[48,53,"pl-s"],[48,49,"pl-pds"],[52,53,"pl-pds"]],[[14,20,"pl-smi"],[24,31,"pl-s"],[24,25,"pl-pds"],[30,31,"pl-pds"]],[[12,22,"pl-c1"],[23,39,"pl-s"],[23,24,"pl-pds"],[38,39,"pl-pds"],[41,44,"pl-s"],[41,42,"pl-pds"],[43,44,"pl-pds"]],[],[],[[4,8,"pl-k"]],[[4,6,"pl-k"],[13,23,"pl-c1"],[24,38,"pl-s"],[24,25,"pl-pds"],[37,38,"pl-pds"]],[[10,20,"pl-c1"],[21,35,"pl-s"],[21,22,"pl-pds"],[34,35,"pl-pds"],[37,49,"pl-s"],[37,38,"pl-pds"],[48,49,"pl-pds"]],[],[],[[4,6,"pl-k"],[13,23,"pl-c1"],[24,40,"pl-s"],[24,25,"pl-pds"],[39,40,"pl-pds"]],[[6,10,"pl-k"],[20,34,"pl-c1"],[39,43,"pl-smi"],[44,48,"pl-c1"]],[[10,20,"pl-c1"],[21,37,"pl-s"],[21,22,"pl-pds"],[36,37,"pl-pds"]],[],[],[],[[2,4,"pl-k"],[28,33,"pl-c1"],[61,66,"pl-c1"]],[[4,6,"pl-k"],[13,23,"pl-c1"],[24,39,"pl-s"],[24,25,"pl-pds"],[38,39,"pl-pds"]],[[10,17,"pl-smi"],[18,24,"pl-c1"],[25,57,"pl-c1"]],[[54,59,"pl-c1"]],[],[],[],[[2,4,"pl-k"],[34,39,"pl-c1"]],[[34,39,"pl-c1"]],[[4,6,"pl-k"],[13,23,"pl-c1"],[24,45,"pl-s"],[24,25,"pl-pds"],[44,45,"pl-pds"]],[[10,17,"pl-smi"],[18,24,"pl-c1"],[25,57,"pl-c1"]],[[66,70,"pl-c1"]],[],[],[],[[2,4,"pl-k"],[32,37,"pl-c1"]],[[4,6,"pl-k"],[13,23,"pl-c1"],[24,39,"pl-s"],[24,25,"pl-pds"],[38,39,"pl-pds"]],[[10,17,"pl-smi"],[18,24,"pl-c1"],[25,64,"pl-c1"]],[[36,41,"pl-c1"]],[],[],[],[[2,4,"pl-k"],[38,43,"pl-c1"]],[[4,6,"pl-k"],[13,23,"pl-c1"],[24,45,"pl-s"],[24,25,"pl-pds"],[44,45,"pl-pds"]],[[10,17,"pl-smi"],[18,24,"pl-c1"],[25,64,"pl-c1"]],[[42,46,"pl-c1"]],[],[],[],[[2,29,"pl-c"],[2,4,"pl-c"]],[],[],[],[[4,9,"pl-k"],[10,14,"pl-k"]],[[12,18,"pl-smi"],[19,24,"pl-c1"],[33,37,"pl-smi"]],[[29,48,"pl-c1"],[53,57,"pl-smi"],[63,69,"pl-smi"]],[],[[4,9,"pl-k"],[10,14,"pl-k"]],[[22,40,"pl-c1"]],[],[[4,30,"pl-c1"],[42,48,"pl-smi"]],[],[[4,18,"pl-c1"],[30,37,"pl-smi"]],[],[[4,19,"pl-c"],[4,6,"pl-c"]],[[4,8,"pl-k"],[23,33,"pl-c1"]],[[4,6,"pl-k"],[9,27,"pl-c1"],[39,43,"pl-c1"],[52,56,"pl-c1"]],[],[[6,12,"pl-k"],[13,18,"pl-c1"]],[],[],[],[[2,9,"pl-c"],[2,4,"pl-c"]],[[2,4,"pl-k"],[10,14,"pl-smi"],[15,20,"pl-c1"]],[[4,10,"pl-k"],[11,38,"pl-c1"]],[],[],[[2,4,"pl-k"],[7,25,"pl-c1"],[36,40,"pl-smi"],[41,45,"pl-c1"],[53,57,"pl-smi"],[58,62,"pl-c1"]],[],[[4,10,"pl-k"],[11,16,"pl-c1"]],[],[],[[2,8,"pl-k"],[9,13,"pl-c1"]],[],[],[[0,6,"pl-k"],[33,71,"pl-c1"]],[[18,23,"pl-k"],[24,28,"pl-k"],[36,42,"pl-c1"]],[],[],[[4,9,"pl-k"]],[[2,4,"pl-k"],[20,25,"pl-c1"],[35,45,"pl-c1"],[46,60,"pl-s"],[46,47,"pl-pds"],[59,60,"pl-pds"]],[],[[1,6,"pl-k"]],[[2,4,"pl-k"],[23,33,"pl-c1"],[34,52,"pl-s"],[34,35,"pl-pds"],[51,52,"pl-pds"],[54,60,"pl-s"],[54,55,"pl-pds"],[59,60,"pl-pds"]],[[1,6,"pl-k"]],[],[[1,6,"pl-k"]],[[2,4,"pl-k"]],[[4,27,"pl-c"],[4,6,"pl-c"]],[],[],[[4,6,"pl-k"]],[[6,10,"pl-k"],[16,20,"pl-c1"]],[[6,12,"pl-c1"],[22,23,"pl-c1"]],[],[],[[16,21,"pl-smi"],[28,33,"pl-k"],[34,38,"pl-k"],[46,52,"pl-c1"],[66,70,"pl-k"]],[[8,10,"pl-k"]],[[10,14,"pl-k"]],[],[[10,14,"pl-k"],[32,40,"pl-c1"]],[],[[18,23,"pl-k"],[24,28,"pl-k"],[47,53,"pl-c1"]],[[20,24,"pl-smi"],[25,31,"pl-c1"]],[[16,22,"pl-k"],[23,27,"pl-c1"]],[],[],[[10,12,"pl-k"]],[],[[12,16,"pl-k"]],[[17,22,"pl-c1"]],[],[],[[8,14,"pl-k"]],[],[],[[6,11,"pl-k"]],[[8,10,"pl-k"],[13,29,"pl-c1"]],[],[[10,16,"pl-k"],[17,24,"pl-c1"]],[],[],[[6,10,"pl-k"]],[[6,8,"pl-k"],[22,30,"pl-c1"],[53,57,"pl-c1"]],[[35,40,"pl-k"],[41,45,"pl-k"],[53,59,"pl-c1"]],[[37,41,"pl-smi"],[42,48,"pl-c1"]],[[33,39,"pl-k"],[40,44,"pl-c1"]],[],[],[[8,14,"pl-k"],[15,22,"pl-c1"]],[],[],[[4,8,"pl-k"]],[[1,6,"pl-k"]],[],[[4,6,"pl-k"]],[[10,25,"pl-smi"]],[[10,27,"pl-smi"],[30,39,"pl-c1"]],[[10,38,"pl-smi"],[41,46,"pl-c1"]],[[6,10,"pl-k"],[11,13,"pl-k"]],[[10,25,"pl-smi"],[28,29,"pl-c1"]],[[10,27,"pl-smi"],[30,60,"pl-c1"]],[[10,19,"pl-c1"]],[[10,38,"pl-smi"],[41,45,"pl-c1"]],[[10,20,"pl-c1"],[21,40,"pl-s"],[21,22,"pl-pds"],[39,40,"pl-pds"],[42,51,"pl-s"],[42,43,"pl-pds"],[50,51,"pl-pds"]],[[6,10,"pl-k"]],[[10,14,"pl-smi"],[15,21,"pl-c1"]],[],[],[],[[2,6,"pl-k"]],[[2,8,"pl-k"],[9,13,"pl-c1"],[34,43,"pl-c1"],[51,58,"pl-c1"]],[],[],[[0,6,"pl-k"],[14,52,"pl-smi"]],[[4,9,"pl-k"],[31,36,"pl-k"],[56,61,"pl-k"]],[[4,9,"pl-k"],[10,14,"pl-k"],[22,28,"pl-c1"]],[],[[4,9,"pl-k"]],[],[[6,12,"pl-smi"]],[[6,13,"pl-smi"]],[[6,10,"pl-smi"]],[[6,14,"pl-smi"]],[[2,4,"pl-k"],[26,27,"pl-c1"]],[[8,19,"pl-smi"],[22,52,"pl-c1"]],[],[],[[2,6,"pl-k"]],[],[[2,6,"pl-k"],[13,39,"pl-c1"]],[[33,42,"pl-c1"]],[[6,15,"pl-c1"]],[],[[2,8,"pl-k"],[16,25,"pl-c1"],[39,48,"pl-c1"],[53,60,"pl-smi"]],[],[],[[0,6,"pl-k"]],[[0,30,"pl-c1"],[31,36,"pl-k"],[56,61,"pl-k"]],[[2,4,"pl-k"],[11,15,"pl-c1"],[16,19,"pl-s"],[16,17,"pl-pds"],[18,19,"pl-pds"],[45,51,"pl-k"],[52,55,"pl-s"],[52,53,"pl-pds"],[54,55,"pl-pds"],[65,68,"pl-s"],[65,66,"pl-pds"],[67,68,"pl-pds"]],[[2,8,"pl-k"]],[],[],[[0,6,"pl-k"],[7,11,"pl-k"],[12,39,"pl-smi"]],[[55,59,"pl-k"]],[],[[2,17,"pl-c"],[2,4,"pl-c"]],[[2,4,"pl-k"],[7,20,"pl-c1"],[60,66,"pl-k"],[67,72,"pl-c1"]],[],[[1,6,"pl-k"]],[[2,4,"pl-k"],[6,12,"pl-c1"]],[[4,8,"pl-k"],[41,46,"pl-c1"],[68,69,"pl-c1"]],[[4,6,"pl-k"]],[[6,8,"pl-k"],[10,45,"pl-c1"],[54,57,"pl-smi"],[67,71,"pl-smi"]],[],[[8,14,"pl-k"],[15,20,"pl-c1"]],[],[],[],[[1,6,"pl-k"]],[],[[2,33,"pl-c"],[2,4,"pl-c"]],[[2,4,"pl-k"],[7,25,"pl-c1"]],[[7,27,"pl-c1"],[38,45,"pl-smi"]],[],[[4,10,"pl-k"],[11,16,"pl-c1"]],[],[],[[2,9,"pl-c"],[2,4,"pl-c"]],[[2,4,"pl-k"],[11,17,"pl-smi"],[55,61,"pl-smi"],[65,71,"pl-s"],[65,66,"pl-pds"],[70,71,"pl-pds"]],[[10,16,"pl-smi"],[20,29,"pl-s"],[20,21,"pl-pds"],[28,29,"pl-pds"]],[[4,8,"pl-k"],[20,23,"pl-c1"],[30,36,"pl-smi"],[44,50,"pl-smi"],[53,56,"pl-c1"]],[[24,30,"pl-smi"]],[],[],[[4,6,"pl-k"],[12,28,"pl-smi"]],[[6,8,"pl-k"],[15,31,"pl-c1"]],[],[[8,14,"pl-k"],[15,20,"pl-c1"]],[],[],[],[[4,8,"pl-k"]],[[12,28,"pl-smi"]],[[14,25,"pl-k"]],[[22,27,"pl-k"],[28,32,"pl-k"],[39,45,"pl-c1"],[49,57,"pl-c1"],[63,71,"pl-c1"]],[[20,22,"pl-k"],[36,42,"pl-k"],[43,47,"pl-c1"]],[[20,24,"pl-k"],[35,51,"pl-c1"]],[[20,22,"pl-k"]],[[20,26,"pl-k"]],[],[[14,25,"pl-k"]],[[22,27,"pl-k"],[28,32,"pl-k"],[39,45,"pl-c1"],[49,57,"pl-c1"],[58,65,"pl-c"],[58,60,"pl-c"],[63,65,"pl-c"]],[[22,30,"pl-c1"],[31,38,"pl-c"],[31,33,"pl-c"],[36,38,"pl-c"]],[[20,26,"pl-c1"],[31,35,"pl-smi"],[36,40,"pl-c1"],[54,58,"pl-smi"],[59,67,"pl-c1"]],[[24,28,"pl-smi"],[29,35,"pl-c1"]],[[20,26,"pl-k"],[27,31,"pl-c1"]],[],[],[[4,8,"pl-k"],[24,32,"pl-c1"],[42,50,"pl-c1"]],[[6,8,"pl-k"],[15,23,"pl-smi"],[39,45,"pl-k"],[46,50,"pl-c1"]],[[6,10,"pl-k"],[21,29,"pl-c1"]],[[6,8,"pl-k"]],[[6,12,"pl-k"]],[],[],[[4,6,"pl-k"],[12,22,"pl-c1"],[23,39,"pl-s"],[23,24,"pl-pds"],[38,39,"pl-pds"]],[[6,8,"pl-k"],[15,31,"pl-smi"]],[[8,12,"pl-k"],[23,43,"pl-c1"],[44,60,"pl-s"],[44,45,"pl-pds"],[59,60,"pl-pds"]],[[8,10,"pl-k"],[22,26,"pl-smi"],[27,35,"pl-c1"]],[],[[10,16,"pl-k"],[17,22,"pl-c1"]],[],[[12,16,"pl-smi"],[17,24,"pl-c1"],[25,36,"pl-k"],[37,43,"pl-c1"]],[],[],[],[[4,6,"pl-k"],[12,18,"pl-smi"]],[[6,9,"pl-k"]],[[6,8,"pl-k"],[11,31,"pl-c1"],[64,70,"pl-c1"]],[[46,55,"pl-c1"]],[[32,41,"pl-c1"]],[[8,10,"pl-k"]],[[8,14,"pl-k"],[15,20,"pl-c1"]],[],[],[],[],[[2,8,"pl-c"],[2,4,"pl-c"]],[[2,4,"pl-k"],[17,24,"pl-c1"]],[],[[2,8,"pl-k"],[9,13,"pl-c1"]],[],[],[[0,6,"pl-k"],[36,78,"pl-smi"]],[[4,9,"pl-k"],[33,38,"pl-k"]],[[4,9,"pl-k"],[58,63,"pl-k"]],[[2,8,"pl-c1"],[20,21,"pl-c1"]],[[2,8,"pl-c1"],[21,22,"pl-c1"]],[[2,79,"pl-c"],[2,4,"pl-c"]],[[2,35,"pl-c"],[2,4,"pl-c"]],[[2,8,"pl-k"],[34,40,"pl-c1"]],[[50,57,"pl-k"],[61,65,"pl-k"]],[[4,6,"pl-k"],[26,31,"pl-c1"]],[[11,13,"pl-smi"],[17,53,"pl-c1"],[71,76,"pl-c1"]],[[6,12,"pl-k"],[13,17,"pl-c1"]],[[6,10,"pl-k"],[11,13,"pl-k"],[41,45,"pl-c1"]],[[6,8,"pl-k"]],[[8,13,"pl-k"],[14,18,"pl-k"],[28,75,"pl-c1"]],[],[[24,28,"pl-c1"]],[],[[13,15,"pl-smi"]],[],[],[],[[6,10,"pl-k"],[22,26,"pl-c1"]],[[15,20,"pl-smi"],[28,33,"pl-smi"]],[[15,19,"pl-smi"],[41,46,"pl-c1"]],[],[[6,8,"pl-k"],[36,44,"pl-c1"]],[[8,14,"pl-k"],[15,20,"pl-c1"]],[],[],[[6,8,"pl-k"]],[[13,15,"pl-smi"],[19,64,"pl-c1"]],[],[[20,21,"pl-c1"]],[],[[6,12,"pl-k"],[13,17,"pl-c1"]],[[6,10,"pl-k"]],[[11,13,"pl-smi"],[17,60,"pl-c1"]],[[11,15,"pl-c1"]],[[6,12,"pl-k"],[13,17,"pl-c1"]],[],[],[],[],[[0,6,"pl-k"],[7,11,"pl-k"],[12,38,"pl-smi"]],[[4,9,"pl-k"]],[],[[18,22,"pl-c1"]],[[2,8,"pl-k"],[9,38,"pl-c1"]],[[13,17,"pl-smi"]],[[58,67,"pl-c1"]],[],[],[[0,6,"pl-k"],[7,11,"pl-k"],[12,30,"pl-smi"],[33,38,"pl-k"],[41,47,"pl-k"],[48,53,"pl-c1"]],[],[[0,6,"pl-k"],[14,29,"pl-smi"],[30,35,"pl-k"]],[[2,8,"pl-k"],[9,12,"pl-c1"],[19,26,"pl-c1"],[30,38,"pl-c1"]],[],[],[[0,6,"pl-k"],[14,29,"pl-smi"],[30,35,"pl-k"]],[[2,8,"pl-k"],[9,12,"pl-c1"],[19,26,"pl-c1"],[30,39,"pl-c1"]],[],[],[[0,6,"pl-k"],[14,29,"pl-smi"],[30,35,"pl-k"],[55,60,"pl-k"]],[[2,8,"pl-k"],[9,12,"pl-c1"],[28,36,"pl-c1"]],[],[],[[0,6,"pl-k"],[14,29,"pl-smi"],[30,35,"pl-k"],[55,60,"pl-k"]],[],[],[[6,12,"pl-smi"],[15,20,"pl-s"],[15,16,"pl-pds"],[19,20,"pl-pds"]],[[6,10,"pl-smi"]],[[6,13,"pl-smi"]],[[6,14,"pl-smi"],[17,26,"pl-c1"]],[[2,4,"pl-k"],[26,27,"pl-c1"]],[[8,19,"pl-smi"],[22,52,"pl-c1"]],[],[],[[2,8,"pl-k"],[9,14,"pl-c1"],[15,24,"pl-c1"]],[],[],[[0,6,"pl-k"],[14,29,"pl-smi"],[30,35,"pl-k"]],[],[[2,8,"pl-k"],[9,12,"pl-c1"],[19,26,"pl-c1"],[30,37,"pl-c1"],[39,48,"pl-c1"],[68,75,"pl-c1"]],[],[],[[0,6,"pl-k"],[14,29,"pl-smi"],[30,35,"pl-k"]],[],[],[[2,8,"pl-k"],[9,12,"pl-c1"],[19,26,"pl-c1"],[30,37,"pl-c1"],[39,48,"pl-c1"]],[[13,22,"pl-c1"]],[],[],[[0,6,"pl-k"],[14,29,"pl-smi"],[30,35,"pl-k"],[55,60,"pl-k"]],[],[[2,8,"pl-k"],[9,12,"pl-c1"],[28,35,"pl-c1"],[37,46,"pl-c1"],[66,73,"pl-c1"]],[],[],[[0,6,"pl-k"],[14,29,"pl-smi"],[30,35,"pl-k"],[55,60,"pl-k"]],[],[],[[2,8,"pl-k"],[9,12,"pl-c1"],[28,35,"pl-c1"],[37,46,"pl-c1"]],[[13,22,"pl-c1"]],[],[],[[0,6,"pl-k"],[14,29,"pl-smi"],[30,35,"pl-k"]],[],[],[[2,8,"pl-k"],[9,12,"pl-c1"],[19,26,"pl-c1"],[30,39,"pl-c1"]],[[13,22,"pl-c1"],[42,49,"pl-c1"]],[],[],[[0,6,"pl-k"],[14,29,"pl-smi"],[30,35,"pl-k"],[55,60,"pl-k"]],[],[],[[2,8,"pl-k"],[9,12,"pl-c1"],[28,37,"pl-c1"]],[[13,22,"pl-c1"],[42,49,"pl-c1"]],[],[],[[0,6,"pl-k"],[14,29,"pl-smi"],[30,35,"pl-k"]],[],[],[],[[2,8,"pl-k"],[9,12,"pl-c1"],[19,26,"pl-c1"],[30,39,"pl-c1"]],[[13,22,"pl-c1"],[42,51,"pl-c1"]],[],[],[[0,6,"pl-k"],[14,29,"pl-smi"],[30,35,"pl-k"],[55,60,"pl-k"]],[],[],[],[],[[6,12,"pl-smi"],[15,20,"pl-s"],[15,16,"pl-pds"],[19,20,"pl-pds"]],[[6,10,"pl-smi"]],[[6,13,"pl-smi"]],[[6,22,"pl-smi"],[25,34,"pl-c1"]],[[6,22,"pl-smi"]],[[25,30,"pl-k"],[31,35,"pl-k"],[43,49,"pl-c1"]],[[25,33,"pl-c1"],[34,44,"pl-c"],[34,36,"pl-c"],[42,44,"pl-c"],[46,54,"pl-c1"],[55,71,"pl-c"],[55,57,"pl-c"],[69,71,"pl-c"]],[[8,14,"pl-k"],[15,31,"pl-c1"]],[],[[6,14,"pl-smi"],[17,26,"pl-c1"]],[[2,4,"pl-k"],[26,27,"pl-c1"]],[[8,19,"pl-smi"],[22,52,"pl-c1"]],[],[],[[2,8,"pl-k"],[9,14,"pl-c1"],[15,24,"pl-c1"]],[],[],[[0,6,"pl-k"],[14,29,"pl-smi"],[30,35,"pl-k"],[55,60,"pl-k"]],[[30,35,"pl-k"]],[[2,4,"pl-k"],[13,18,"pl-c1"],[24,30,"pl-k"],[31,34,"pl-c1"]],[],[[32,51,"pl-c1"]],[[2,8,"pl-k"],[9,12,"pl-c1"],[39,48,"pl-c1"]],[],[],[[0,6,"pl-k"],[14,29,"pl-smi"],[30,35,"pl-k"],[55,60,"pl-k"]],[[30,35,"pl-k"]],[],[],[[2,8,"pl-k"],[9,12,"pl-c1"],[36,43,"pl-c1"],[45,54,"pl-c1"]],[[13,22,"pl-c1"]],[],[],[[0,6,"pl-k"],[14,29,"pl-smi"],[30,35,"pl-k"],[55,60,"pl-k"]],[[30,35,"pl-k"]],[],[],[],[[2,4,"pl-k"],[13,18,"pl-c1"]],[[4,10,"pl-k"],[11,14,"pl-c1"],[30,39,"pl-c1"]],[[15,24,"pl-c1"],[44,53,"pl-c1"]],[],[],[[32,51,"pl-c1"]],[[2,8,"pl-k"],[9,12,"pl-c1"],[39,48,"pl-c1"]],[[13,22,"pl-c1"],[42,51,"pl-c1"]],[],[],[[0,6,"pl-k"],[14,30,"pl-smi"],[31,36,"pl-k"]],[[2,8,"pl-k"],[9,13,"pl-c1"],[20,27,"pl-c1"]],[],[],[[0,6,"pl-k"],[14,30,"pl-smi"],[31,36,"pl-k"]],[[31,36,"pl-k"]],[],[[6,12,"pl-smi"],[15,21,"pl-s"],[15,16,"pl-pds"],[20,21,"pl-pds"]],[[6,13,"pl-smi"]],[[6,10,"pl-smi"]],[[2,4,"pl-k"],[26,27,"pl-c1"]],[[8,19,"pl-smi"],[22,52,"pl-c1"]],[],[],[[2,8,"pl-k"],[9,14,"pl-c1"],[15,24,"pl-c1"]],[],[],[[0,6,"pl-k"],[14,30,"pl-smi"],[31,36,"pl-k"]],[[2,8,"pl-k"],[9,13,"pl-c1"],[20,31,"pl-c1"],[35,46,"pl-c1"]],[],[],[[0,6,"pl-k"],[14,30,"pl-smi"],[31,36,"pl-k"]],[[31,36,"pl-k"]],[[2,8,"pl-k"],[9,13,"pl-c1"],[29,36,"pl-c1"],[38,39,"pl-c1"],[41,52,"pl-c1"]],[],[],[[0,6,"pl-k"],[14,30,"pl-smi"],[31,36,"pl-k"],[56,61,"pl-k"],[62,66,"pl-k"]],[[31,37,"pl-c1"]],[[31,36,"pl-k"]],[[2,8,"pl-k"],[9,13,"pl-c1"],[20,27,"pl-c1"],[67,74,"pl-c1"]],[],[],[[0,6,"pl-k"],[14,30,"pl-smi"],[31,36,"pl-k"],[56,61,"pl-k"]],[[31,36,"pl-k"],[37,41,"pl-k"],[49,55,"pl-c1"]],[[31,36,"pl-k"]],[[2,8,"pl-k"],[9,35,"pl-c1"],[36,42,"pl-s"],[36,37,"pl-pds"],[41,42,"pl-pds"]],[[36,43,"pl-c1"],[45,52,"pl-c1"],[68,75,"pl-c1"]],[],[],[[0,6,"pl-k"],[14,30,"pl-smi"],[31,36,"pl-k"],[56,61,"pl-k"]],[[31,36,"pl-k"],[37,41,"pl-k"],[49,55,"pl-c1"]],[[31,36,"pl-k"]],[],[[2,8,"pl-k"],[9,35,"pl-c1"],[36,42,"pl-s"],[36,37,"pl-pds"],[41,42,"pl-pds"]],[[36,43,"pl-c1"],[45,52,"pl-c1"]],[],[],[[0,6,"pl-k"],[14,30,"pl-smi"],[31,36,"pl-k"],[56,61,"pl-k"]],[[31,36,"pl-k"]],[[2,8,"pl-k"],[9,13,"pl-c1"],[20,27,"pl-c1"]],[],[],[[0,6,"pl-k"],[14,30,"pl-smi"],[31,36,"pl-k"],[56,61,"pl-k"]],[[31,36,"pl-k"]],[],[[2,8,"pl-k"],[9,13,"pl-c1"],[20,27,"pl-c1"]],[],[],[[0,6,"pl-k"],[14,30,"pl-smi"],[31,36,"pl-k"],[56,61,"pl-k"]],[[31,36,"pl-k"]],[[31,36,"pl-k"]],[[2,8,"pl-k"],[9,35,"pl-c1"],[36,42,"pl-s"],[36,37,"pl-pds"],[41,42,"pl-pds"],[64,68,"pl-c1"]],[[41,45,"pl-c1"],[49,56,"pl-c1"],[58,65,"pl-c1"]],[[36,43,"pl-c1"]],[],[],[[0,6,"pl-k"],[14,30,"pl-smi"],[31,36,"pl-k"],[56,61,"pl-k"]],[[31,36,"pl-k"]],[[31,36,"pl-k"]],[],[[2,8,"pl-k"],[9,35,"pl-c1"],[36,42,"pl-s"],[36,37,"pl-pds"],[41,42,"pl-pds"],[64,68,"pl-c1"]],[[41,45,"pl-c1"],[49,56,"pl-c1"],[58,65,"pl-c1"]],[],[],[],[[0,6,"pl-k"],[14,30,"pl-smi"],[31,36,"pl-k"],[56,61,"pl-k"]],[[2,8,"pl-k"],[9,13,"pl-c1"],[20,27,"pl-c1"]],[],[],[[0,6,"pl-k"],[14,30,"pl-smi"],[31,36,"pl-k"],[56,62,"pl-c1"]],[],[[31,36,"pl-k"]],[[2,8,"pl-k"],[9,13,"pl-c1"],[20,27,"pl-c1"],[47,56,"pl-c1"]],[],[],[],[[0,6,"pl-k"],[14,30,"pl-smi"],[31,36,"pl-k"]],[],[[31,36,"pl-k"]],[[2,8,"pl-k"],[9,13,"pl-c1"],[20,27,"pl-c1"],[31,40,"pl-c1"]],[],[],[[0,6,"pl-k"],[14,30,"pl-smi"],[31,36,"pl-k"],[56,61,"pl-k"]],[[31,37,"pl-c1"]],[],[[31,36,"pl-k"]],[[2,8,"pl-k"],[9,35,"pl-c1"],[36,42,"pl-s"],[36,37,"pl-pds"],[41,42,"pl-pds"],[59,66,"pl-c1"]],[[52,61,"pl-c1"]],[[36,43,"pl-c1"],[59,66,"pl-c1"]],[],[],[[0,6,"pl-k"],[14,30,"pl-smi"],[31,36,"pl-k"],[56,61,"pl-k"]],[],[[31,36,"pl-k"]],[[2,8,"pl-k"],[9,35,"pl-c1"],[36,42,"pl-s"],[36,37,"pl-pds"],[41,42,"pl-pds"],[59,66,"pl-c1"],[68,69,"pl-c1"],[71,78,"pl-c1"]],[[36,45,"pl-c1"]],[[36,43,"pl-c1"]],[],[],[[0,6,"pl-k"],[14,30,"pl-smi"],[31,36,"pl-k"],[56,61,"pl-k"]],[[31,36,"pl-k"]],[[2,6,"pl-k"],[15,42,"pl-c1"]],[[2,8,"pl-k"],[9,13,"pl-c1"],[36,71,"pl-s"],[36,37,"pl-pds"],[70,71,"pl-pds"]],[],[],[[0,6,"pl-k"],[14,30,"pl-smi"],[31,36,"pl-k"],[56,61,"pl-k"]],[[31,36,"pl-k"]],[[2,6,"pl-k"],[15,42,"pl-c1"]],[[2,8,"pl-k"],[9,13,"pl-c1"],[36,71,"pl-s"],[36,37,"pl-pds"],[70,71,"pl-pds"]],[],[],[],[[0,6,"pl-k"],[14,30,"pl-smi"],[31,36,"pl-k"]],[[31,36,"pl-k"]],[[2,8,"pl-k"],[9,13,"pl-c1"],[20,27,"pl-c1"]],[],[],[[0,6,"pl-k"],[14,30,"pl-smi"],[31,36,"pl-k"],[56,61,"pl-k"]],[[31,36,"pl-k"]],[[2,7,"pl-k"],[8,12,"pl-k"],[25,61,"pl-c1"]],[[2,7,"pl-k"],[8,12,"pl-k"]],[[6,59,"pl-c1"]],[[2,7,"pl-k"],[8,12,"pl-k"],[21,57,"pl-c1"]],[[2,8,"pl-k"],[9,13,"pl-c1"]],[],[],[[0,6,"pl-k"],[14,30,"pl-smi"],[31,36,"pl-k"],[56,61,"pl-k"]],[[31,36,"pl-k"]],[[31,36,"pl-k"]],[[2,4,"pl-k"],[7,48,"pl-c1"]],[[4,10,"pl-k"],[18,25,"pl-c1"]],[],[],[[2,7,"pl-k"],[8,12,"pl-k"]],[[6,59,"pl-c1"]],[[2,7,"pl-k"],[8,12,"pl-k"],[21,57,"pl-c1"]],[[2,8,"pl-k"],[9,13,"pl-c1"]],[],[],[[0,6,"pl-k"]],[[0,16,"pl-c1"],[17,22,"pl-k"],[42,47,"pl-k"]],[[17,22,"pl-k"]],[[17,22,"pl-k"]],[[2,7,"pl-k"],[8,12,"pl-k"],[25,61,"pl-c1"]],[[2,7,"pl-k"],[8,12,"pl-k"]],[[6,59,"pl-c1"]],[[2,8,"pl-k"],[9,35,"pl-c1"]],[[6,12,"pl-s"],[6,7,"pl-pds"],[11,12,"pl-pds"],[29,36,"pl-c1"],[38,39,"pl-c1"],[41,48,"pl-c1"]],[[6,36,"pl-c1"]],[[20,27,"pl-c1"]],[],[],[[0,6,"pl-k"],[14,29,"pl-smi"],[30,35,"pl-k"]],[[2,8,"pl-k"],[9,12,"pl-c1"],[19,30,"pl-c1"],[34,45,"pl-c1"]],[],[],[[0,6,"pl-k"],[14,29,"pl-smi"],[30,35,"pl-k"],[55,60,"pl-k"],[61,65,"pl-k"]],[[30,36,"pl-c1"]],[[30,35,"pl-k"]],[[2,8,"pl-k"],[9,12,"pl-c1"],[19,26,"pl-c1"]],[],[],[[0,6,"pl-k"],[14,29,"pl-smi"],[30,35,"pl-k"],[55,60,"pl-k"]],[[30,35,"pl-k"],[36,40,"pl-k"],[48,54,"pl-c1"]],[[30,35,"pl-k"]],[[2,8,"pl-k"],[9,35,"pl-c1"],[36,41,"pl-s"],[36,37,"pl-pds"],[40,41,"pl-pds"]],[[36,43,"pl-c1"],[45,52,"pl-c1"],[68,75,"pl-c1"]],[],[],[[0,6,"pl-k"],[14,29,"pl-smi"],[30,35,"pl-k"],[55,60,"pl-k"]],[[30,35,"pl-k"],[36,40,"pl-k"],[48,54,"pl-c1"]],[[30,35,"pl-k"]],[],[[2,8,"pl-k"],[9,35,"pl-c1"],[36,41,"pl-s"],[36,37,"pl-pds"],[40,41,"pl-pds"]],[[36,43,"pl-c1"],[45,52,"pl-c1"]],[],[],[[0,6,"pl-k"],[14,29,"pl-smi"],[30,35,"pl-k"],[55,60,"pl-k"]],[[30,35,"pl-k"]],[[2,8,"pl-k"],[9,12,"pl-c1"],[19,26,"pl-c1"]],[],[],[[0,6,"pl-k"],[14,29,"pl-smi"],[30,35,"pl-k"],[55,60,"pl-k"]],[[30,35,"pl-k"]],[],[[2,8,"pl-k"],[9,12,"pl-c1"],[19,26,"pl-c1"]],[],[],[[0,6,"pl-k"],[14,29,"pl-smi"],[30,35,"pl-k"],[55,60,"pl-k"]],[[30,35,"pl-k"]],[[30,35,"pl-k"]],[[2,8,"pl-k"],[9,35,"pl-c1"],[36,41,"pl-s"],[36,37,"pl-pds"],[40,41,"pl-pds"],[63,67,"pl-c1"]],[[41,45,"pl-c1"],[49,56,"pl-c1"],[58,65,"pl-c1"]],[[36,43,"pl-c1"]],[],[],[[0,6,"pl-k"],[14,29,"pl-smi"],[30,35,"pl-k"],[55,60,"pl-k"]],[[30,35,"pl-k"]],[[30,35,"pl-k"]],[],[[2,8,"pl-k"],[9,35,"pl-c1"],[36,41,"pl-s"],[36,37,"pl-pds"],[40,41,"pl-pds"],[63,67,"pl-c1"]],[[41,45,"pl-c1"],[49,56,"pl-c1"],[58,65,"pl-c1"]],[],[],[],[[0,6,"pl-k"],[14,29,"pl-smi"],[30,35,"pl-k"],[55,61,"pl-c1"]],[],[[30,35,"pl-k"]],[[2,8,"pl-k"],[9,12,"pl-c1"],[19,26,"pl-c1"],[46,55,"pl-c1"]],[],[],[],[[0,6,"pl-k"],[14,29,"pl-smi"],[30,35,"pl-k"]],[],[[30,35,"pl-k"]],[[2,8,"pl-k"],[9,12,"pl-c1"],[19,26,"pl-c1"],[30,39,"pl-c1"]],[],[],[[0,6,"pl-k"],[14,29,"pl-smi"],[30,35,"pl-k"],[55,60,"pl-k"]],[[30,36,"pl-c1"]],[],[[30,35,"pl-k"]],[[2,8,"pl-k"],[9,35,"pl-c1"],[36,41,"pl-s"],[36,37,"pl-pds"],[40,41,"pl-pds"],[58,65,"pl-c1"]],[[52,61,"pl-c1"]],[[36,43,"pl-c1"],[59,66,"pl-c1"]],[],[],[[0,6,"pl-k"],[14,29,"pl-smi"],[30,35,"pl-k"],[55,60,"pl-k"]],[],[[30,35,"pl-k"]],[[2,8,"pl-k"],[9,35,"pl-c1"],[36,41,"pl-s"],[36,37,"pl-pds"],[40,41,"pl-pds"],[58,65,"pl-c1"],[67,68,"pl-c1"],[70,77,"pl-c1"]],[[36,45,"pl-c1"]],[[36,43,"pl-c1"]],[],[],[[0,6,"pl-k"],[14,29,"pl-smi"],[30,35,"pl-k"],[55,60,"pl-k"]],[[2,8,"pl-k"],[9,12,"pl-c1"],[19,26,"pl-c1"]],[],[],[[0,6,"pl-k"],[14,29,"pl-smi"],[30,35,"pl-k"],[55,60,"pl-k"]],[[30,35,"pl-k"]],[[2,6,"pl-k"],[15,42,"pl-c1"]],[[2,8,"pl-k"],[9,12,"pl-c1"],[35,70,"pl-s"],[35,36,"pl-pds"],[69,70,"pl-pds"]],[],[],[[0,6,"pl-k"],[14,29,"pl-smi"],[30,35,"pl-k"],[55,60,"pl-k"]],[[30,35,"pl-k"]],[[2,6,"pl-k"],[15,42,"pl-c1"]],[[2,8,"pl-k"],[9,12,"pl-c1"],[35,70,"pl-s"],[35,36,"pl-pds"],[69,70,"pl-pds"]],[],[],[],[[0,6,"pl-k"],[14,29,"pl-smi"],[30,35,"pl-k"]],[[30,35,"pl-k"]],[[2,8,"pl-k"],[9,12,"pl-c1"],[19,26,"pl-c1"]],[],[],[[0,6,"pl-k"],[14,29,"pl-smi"],[30,35,"pl-k"],[55,60,"pl-k"]],[[30,35,"pl-k"]],[[2,7,"pl-k"],[8,12,"pl-k"],[25,61,"pl-c1"]],[[2,7,"pl-k"],[8,12,"pl-k"]],[[6,59,"pl-c1"]],[[2,7,"pl-k"],[8,12,"pl-k"],[21,57,"pl-c1"]],[[2,8,"pl-k"],[9,12,"pl-c1"]],[],[],[[0,6,"pl-k"],[14,29,"pl-smi"],[30,35,"pl-k"],[55,60,"pl-k"]],[[30,35,"pl-k"]],[[30,35,"pl-k"]],[[2,4,"pl-k"],[7,48,"pl-c1"]],[[4,10,"pl-k"],[18,25,"pl-c1"]],[],[],[[2,7,"pl-k"],[8,12,"pl-k"]],[[6,59,"pl-c1"]],[[2,7,"pl-k"],[8,12,"pl-k"],[21,57,"pl-c1"]],[[2,8,"pl-k"],[9,12,"pl-c1"]],[],[],[[0,6,"pl-k"]],[[0,15,"pl-c1"],[16,21,"pl-k"],[41,46,"pl-k"]],[[16,21,"pl-k"]],[[16,21,"pl-k"]],[[2,7,"pl-k"],[8,12,"pl-k"],[25,61,"pl-c1"]],[[2,7,"pl-k"],[8,12,"pl-k"]],[[6,59,"pl-c1"]],[[2,8,"pl-k"],[9,35,"pl-c1"]],[[6,11,"pl-s"],[6,7,"pl-pds"],[10,11,"pl-pds"],[28,35,"pl-c1"],[37,38,"pl-c1"],[40,47,"pl-c1"]],[[6,36,"pl-c1"]],[[20,27,"pl-c1"]],[],[[0,6,"pl-k"],[14,31,"pl-smi"],[32,37,"pl-k"]],[[2,8,"pl-k"],[9,14,"pl-c1"],[21,32,"pl-c1"],[36,47,"pl-c1"]],[],[],[[0,6,"pl-k"],[14,31,"pl-smi"],[32,37,"pl-k"],[57,62,"pl-k"],[63,67,"pl-k"]],[[32,38,"pl-c1"]],[[32,37,"pl-k"]],[[2,8,"pl-k"],[9,14,"pl-c1"],[21,28,"pl-c1"]],[],[],[[0,6,"pl-k"],[14,31,"pl-smi"],[32,37,"pl-k"],[57,62,"pl-k"],[63,67,"pl-k"]],[[32,38,"pl-c1"]],[[32,37,"pl-k"]],[],[[2,8,"pl-k"],[9,14,"pl-c1"],[21,28,"pl-c1"]],[],[],[[0,6,"pl-k"],[14,31,"pl-smi"],[32,37,"pl-k"],[57,62,"pl-k"]],[[32,37,"pl-k"],[38,42,"pl-k"],[50,56,"pl-c1"]],[[32,37,"pl-k"]],[[2,8,"pl-k"],[9,14,"pl-c1"],[66,73,"pl-c1"]],[],[],[[0,6,"pl-k"],[14,31,"pl-smi"],[32,37,"pl-k"],[57,62,"pl-k"]],[[32,37,"pl-k"],[38,42,"pl-k"],[50,56,"pl-c1"]],[[32,37,"pl-k"]],[],[[2,8,"pl-k"],[9,35,"pl-c1"],[36,43,"pl-s"],[36,37,"pl-pds"],[42,43,"pl-pds"]],[[52,59,"pl-c1"],[61,68,"pl-c1"]],[],[],[],[[0,6,"pl-k"],[14,31,"pl-smi"],[32,37,"pl-k"]],[[32,37,"pl-k"]],[[32,37,"pl-k"]],[[2,8,"pl-k"],[9,14,"pl-c1"],[21,28,"pl-c1"]],[],[],[[0,6,"pl-k"],[14,31,"pl-smi"],[32,37,"pl-k"]],[[32,37,"pl-k"]],[[32,37,"pl-k"]],[],[[2,8,"pl-k"],[9,14,"pl-c1"],[21,28,"pl-c1"]],[],[],[[0,6,"pl-k"],[14,31,"pl-smi"],[32,37,"pl-k"],[57,62,"pl-k"]],[[32,37,"pl-k"]],[[32,37,"pl-k"]],[[2,8,"pl-k"],[9,14,"pl-c1"],[50,57,"pl-c1"]],[],[],[[0,6,"pl-k"],[14,31,"pl-smi"],[32,37,"pl-k"],[57,62,"pl-k"]],[[32,37,"pl-k"]],[[32,37,"pl-k"]],[],[[2,8,"pl-k"],[9,35,"pl-c1"],[36,43,"pl-s"],[36,37,"pl-pds"],[42,43,"pl-pds"],[65,69,"pl-c1"]],[[41,45,"pl-c1"],[49,56,"pl-c1"],[58,65,"pl-c1"]],[],[],[],[[0,6,"pl-k"],[14,31,"pl-smi"],[32,37,"pl-k"],[57,63,"pl-c1"]],[],[[32,37,"pl-k"]],[[2,8,"pl-k"],[9,14,"pl-c1"],[21,28,"pl-c1"],[48,57,"pl-c1"]],[],[],[],[[0,6,"pl-k"],[14,31,"pl-smi"],[32,37,"pl-k"]],[],[[32,37,"pl-k"]],[[2,8,"pl-k"],[9,14,"pl-c1"],[21,28,"pl-c1"],[32,41,"pl-c1"]],[],[],[[0,6,"pl-k"],[14,31,"pl-smi"],[32,37,"pl-k"],[57,62,"pl-k"]],[[32,38,"pl-c1"]],[],[[32,37,"pl-k"]],[[2,8,"pl-k"],[9,35,"pl-c1"],[36,43,"pl-s"],[36,37,"pl-pds"],[42,43,"pl-pds"],[60,67,"pl-c1"]],[[52,61,"pl-c1"]],[[36,43,"pl-c1"],[59,66,"pl-c1"]],[],[],[[0,6,"pl-k"],[14,31,"pl-smi"],[32,37,"pl-k"],[57,62,"pl-k"]],[],[[32,37,"pl-k"]],[[2,8,"pl-k"],[9,35,"pl-c1"],[36,43,"pl-s"],[36,37,"pl-pds"],[42,43,"pl-pds"],[60,67,"pl-c1"],[69,70,"pl-c1"],[72,79,"pl-c1"]],[[36,45,"pl-c1"]],[[36,43,"pl-c1"]],[],[],[[0,6,"pl-k"],[14,32,"pl-smi"],[33,38,"pl-k"]],[[2,8,"pl-k"],[9,15,"pl-c1"],[22,29,"pl-c1"],[33,44,"pl-c1"],[48,59,"pl-c1"]],[],[],[[0,6,"pl-k"],[14,32,"pl-smi"],[33,38,"pl-k"]],[[33,38,"pl-k"]],[[2,8,"pl-k"],[9,15,"pl-c1"],[31,42,"pl-c1"],[46,57,"pl-c1"]],[],[],[[0,6,"pl-k"],[14,32,"pl-smi"],[33,38,"pl-k"],[58,63,"pl-k"],[64,68,"pl-k"]],[[33,39,"pl-c1"]],[[33,38,"pl-k"]],[[2,8,"pl-k"],[9,15,"pl-c1"],[22,29,"pl-c1"]],[],[],[[0,6,"pl-k"],[14,32,"pl-smi"],[33,38,"pl-k"],[58,63,"pl-k"],[64,68,"pl-k"]],[[33,39,"pl-c1"]],[[33,38,"pl-k"]],[],[[2,8,"pl-k"],[9,15,"pl-c1"],[22,29,"pl-c1"]],[],[],[[0,6,"pl-k"],[14,32,"pl-smi"],[33,38,"pl-k"]],[[33,38,"pl-k"],[57,62,"pl-k"],[63,67,"pl-k"]],[[33,39,"pl-c1"]],[[33,38,"pl-k"]],[[2,8,"pl-k"],[9,15,"pl-c1"],[67,74,"pl-c1"]],[],[],[[0,6,"pl-k"],[14,32,"pl-smi"],[33,38,"pl-k"]],[[33,38,"pl-k"],[57,62,"pl-k"],[63,67,"pl-k"]],[[33,39,"pl-c1"]],[[33,38,"pl-k"]],[],[],[[6,12,"pl-smi"],[15,23,"pl-s"],[15,16,"pl-pds"],[22,23,"pl-pds"]],[[6,13,"pl-smi"]],[[6,10,"pl-smi"]],[[6,14,"pl-smi"]],[[2,4,"pl-k"],[26,27,"pl-c1"]],[[8,19,"pl-smi"],[22,52,"pl-c1"]],[],[],[[2,4,"pl-k"],[20,25,"pl-c1"],[35,45,"pl-c1"],[46,60,"pl-s"],[46,47,"pl-pds"],[59,60,"pl-pds"]],[[6,10,"pl-smi"],[11,17,"pl-c1"]],[],[[2,8,"pl-k"],[9,14,"pl-c1"],[15,24,"pl-c1"]],[],[],[[0,6,"pl-k"],[14,32,"pl-smi"],[33,38,"pl-k"]],[[33,38,"pl-k"]],[[33,38,"pl-k"]],[[2,8,"pl-k"],[9,15,"pl-c1"],[22,29,"pl-c1"],[38,42,"pl-c1"],[51,55,"pl-c1"]],[],[],[[0,6,"pl-k"],[14,32,"pl-smi"],[33,38,"pl-k"]],[[33,38,"pl-k"]],[[33,38,"pl-k"]],[],[[2,8,"pl-k"],[9,15,"pl-c1"],[22,29,"pl-c1"],[38,42,"pl-c1"],[51,55,"pl-c1"]],[],[],[],[[0,6,"pl-k"],[14,32,"pl-smi"],[33,38,"pl-k"]],[[33,38,"pl-k"]],[[33,38,"pl-k"]],[[33,38,"pl-k"]],[[2,8,"pl-k"],[9,15,"pl-c1"],[36,40,"pl-c1"],[49,53,"pl-c1"]],[],[],[[0,6,"pl-k"],[14,32,"pl-smi"],[33,38,"pl-k"]],[[33,38,"pl-k"]],[[33,38,"pl-k"]],[[33,38,"pl-k"]],[],[[2,8,"pl-k"],[9,15,"pl-c1"],[36,40,"pl-c1"],[49,53,"pl-c1"]],[],[],[],[[0,6,"pl-k"],[14,33,"pl-smi"],[34,39,"pl-k"]],[[2,8,"pl-k"],[9,16,"pl-c1"],[23,30,"pl-c1"]],[],[],[[0,6,"pl-k"],[14,33,"pl-smi"],[34,39,"pl-k"]],[[34,39,"pl-k"]],[],[[6,12,"pl-smi"],[15,24,"pl-s"],[15,16,"pl-pds"],[23,24,"pl-pds"]],[[6,13,"pl-smi"]],[[6,10,"pl-smi"]],[[2,4,"pl-k"],[26,27,"pl-c1"]],[[8,19,"pl-smi"],[22,52,"pl-c1"]],[],[],[[2,8,"pl-k"],[9,14,"pl-c1"],[15,24,"pl-c1"]],[],[],[[0,6,"pl-k"],[7,11,"pl-k"],[12,28,"pl-smi"]],[[30,35,"pl-c1"]],[],[[2,78,"pl-c"],[2,4,"pl-c"]],[[2,73,"pl-c"],[2,4,"pl-c"]],[[2,75,"pl-c"],[2,4,"pl-c"]],[[2,80,"pl-c"],[2,4,"pl-c"]],[[2,21,"pl-c"],[2,4,"pl-c"]],[[2,4,"pl-k"],[35,36,"pl-c1"]],[[4,19,"pl-c1"]],[],[[4,76,"pl-c"],[4,6,"pl-c"]],[[4,12,"pl-c"],[4,6,"pl-c"]],[[52,56,"pl-c1"]],[[4,10,"pl-k"]],[],[],[[2,78,"pl-c"],[2,4,"pl-c"]],[[2,14,"pl-c1"],[24,28,"pl-c1"]],[[2,17,"pl-c1"]],[[2,14,"pl-c1"]],[],[],[[0,6,"pl-k"],[19,35,"pl-smi"],[38,43,"pl-k"],[46,52,"pl-k"]],[],[[0,6,"pl-k"],[7,10,"pl-k"],[11,27,"pl-smi"],[30,35,"pl-k"],[38,44,"pl-k"]],[],[[0,6,"pl-k"],[7,13,"pl-c1"],[14,40,"pl-smi"],[43,48,"pl-k"]],[[30,35,"pl-c1"]],[[2,8,"pl-k"],[17,24,"pl-c1"]],[],[],[[0,6,"pl-k"],[7,15,"pl-c1"],[16,34,"pl-smi"],[37,42,"pl-k"],[45,51,"pl-k"],[60,64,"pl-smi"]],[],[[0,6,"pl-k"],[7,11,"pl-k"],[12,46,"pl-smi"],[47,53,"pl-c1"],[59,65,"pl-c1"]],[],[],[],[],[[0,6,"pl-k"],[7,11,"pl-k"],[12,40,"pl-smi"],[41,47,"pl-c1"],[53,59,"pl-c1"]],[],[],[],[],[[0,6,"pl-k"],[7,11,"pl-k"],[12,41,"pl-smi"],[42,48,"pl-c1"],[54,60,"pl-c1"]],[],[],[],[],[[0,6,"pl-k"],[7,11,"pl-k"],[12,39,"pl-smi"],[40,46,"pl-c1"]],[],[],[],[[0,6,"pl-k"],[7,11,"pl-k"],[12,38,"pl-smi"],[39,44,"pl-k"]],[[39,44,"pl-k"]],[],[],[],[],[[0,6,"pl-k"],[7,11,"pl-k"],[12,45,"pl-smi"],[46,51,"pl-k"]],[],[],[],[[1,6,"pl-k"]],[[0,6,"pl-k"],[7,11,"pl-k"],[12,39,"pl-smi"],[40,45,"pl-k"]],[[40,45,"pl-k"]],[],[],[],[[1,6,"pl-k"]],[],[[0,6,"pl-k"],[7,11,"pl-k"],[12,38,"pl-smi"],[39,43,"pl-k"]],[],[[0,6,"pl-k"],[7,11,"pl-k"],[12,43,"pl-smi"],[44,48,"pl-k"]],[],[[0,6,"pl-k"],[7,11,"pl-k"],[12,38,"pl-smi"],[39,43,"pl-k"]],[],[[0,6,"pl-k"],[7,11,"pl-k"]],[[0,33,"pl-c1"]],[[14,23,"pl-c1"]],[],[],[[0,6,"pl-k"],[7,11,"pl-k"],[12,43,"pl-smi"]],[[21,30,"pl-c1"]],[],[],[[0,6,"pl-k"],[7,11,"pl-k"],[12,41,"pl-smi"]],[[18,25,"pl-c1"],[48,53,"pl-k"]],[],[],[],[[0,6,"pl-k"],[7,11,"pl-k"],[12,42,"pl-smi"],[43,46,"pl-k"]],[],[],[],[[0,6,"pl-k"],[7,11,"pl-k"],[12,39,"pl-smi"],[40,44,"pl-k"]],[],[[0,6,"pl-k"],[7,11,"pl-k"],[12,39,"pl-smi"],[40,44,"pl-k"]],[],[[0,6,"pl-k"],[7,11,"pl-k"],[12,42,"pl-smi"]],[[20,29,"pl-c1"]],[],[],[[0,6,"pl-k"],[7,11,"pl-k"],[12,36,"pl-smi"],[37,41,"pl-k"]],[],[[0,6,"pl-k"],[7,11,"pl-k"],[12,38,"pl-smi"],[39,43,"pl-k"]],[],[[0,6,"pl-k"],[7,11,"pl-k"],[12,37,"pl-smi"],[38,43,"pl-k"]],[],[],[],[[0,6,"pl-k"],[7,11,"pl-k"],[12,33,"pl-smi"],[34,39,"pl-k"],[59,62,"pl-k"]],[],[],[],[],[[0,6,"pl-k"],[7,11,"pl-k"],[12,44,"pl-smi"],[45,50,"pl-k"]],[[45,50,"pl-k"]],[],[],[],[],[[0,6,"pl-k"],[7,11,"pl-k"],[12,51,"pl-smi"],[52,57,"pl-k"]],[],[],[],[[1,6,"pl-k"]],[[0,6,"pl-k"],[7,11,"pl-k"],[12,45,"pl-smi"],[46,51,"pl-k"]],[[46,51,"pl-k"]],[],[],[],[],[[0,6,"pl-k"],[7,11,"pl-k"],[12,40,"pl-smi"],[41,46,"pl-k"]],[[41,46,"pl-k"]],[],[],[],[],[[0,6,"pl-k"],[7,11,"pl-k"],[12,41,"pl-smi"]],[[2,4,"pl-k"]],[],[],[],[],[[0,6,"pl-k"],[19,51,"pl-c1"],[52,57,"pl-k"],[58,62,"pl-k"]],[[57,63,"pl-c1"],[70,75,"pl-k"]],[[2,6,"pl-k"],[13,28,"pl-c1"],[38,49,"pl-k"],[50,53,"pl-k"]],[[2,6,"pl-k"],[12,30,"pl-c1"],[37,49,"pl-c1"]],[[2,4,"pl-k"],[14,20,"pl-k"],[21,28,"pl-c1"]],[],[[2,6,"pl-k"],[13,35,"pl-c1"],[41,48,"pl-c1"],[50,57,"pl-c1"],[59,66,"pl-c1"]],[[2,4,"pl-k"],[14,20,"pl-k"],[21,28,"pl-c1"]],[],[[2,6,"pl-k"],[13,27,"pl-c1"]],[[2,4,"pl-k"]],[[4,7,"pl-k"],[9,13,"pl-k"],[18,19,"pl-c1"],[25,36,"pl-k"],[37,40,"pl-k"],[42,58,"pl-c1"]],[[6,10,"pl-k"],[18,36,"pl-c1"]],[[6,8,"pl-k"],[19,27,"pl-k"]],[],[[6,8,"pl-k"],[16,20,"pl-smi"],[24,43,"pl-c1"],[55,59,"pl-smi"]],[[6,8,"pl-k"],[16,19,"pl-smi"],[23,41,"pl-c1"],[53,56,"pl-smi"]],[],[],[],[[2,23,"pl-c1"]],[[2,8,"pl-k"]],[],[],[[0,6,"pl-k"],[7,11,"pl-k"],[12,62,"pl-smi"],[63,67,"pl-k"]],[],[],[],[[0,6,"pl-k"],[7,11,"pl-k"],[12,59,"pl-smi"],[60,64,"pl-k"]],[],[],[],[[0,6,"pl-k"],[7,11,"pl-k"],[12,55,"pl-smi"]],[[18,37,"pl-c1"]],[],[],[[1,6,"pl-k"]],[],[[0,6,"pl-k"],[7,11,"pl-k"],[12,34,"pl-smi"]],[[12,21,"pl-c1"]],[],[],[[0,2,"pl-c"],[0,2,"pl-c"]],[[0,21,"pl-c"]],[[0,3,"pl-c"],[1,3,"pl-c"]],[[1,6,"pl-k"]],[[0,9,"pl-k"],[10,16,"pl-en"]],[],[[0,9,"pl-k"],[10,18,"pl-k"],[22,30,"pl-k"]],[[0,6,"pl-k"],[12,19,"pl-en"],[20,28,"pl-c1"]],[],[[13,20,"pl-c1"]],[],[[32,37,"pl-c1"]],[[10,17,"pl-c1"]],[],[],[[2,4,"pl-k"]],[[4,19,"pl-c1"],[26,30,"pl-c1"]],[[4,8,"pl-k"],[15,29,"pl-c1"],[30,41,"pl-k"],[42,45,"pl-k"]],[[4,16,"pl-c1"],[22,23,"pl-c1"]],[[4,15,"pl-c1"]],[],[[4,6,"pl-k"],[9,14,"pl-c1"],[23,44,"pl-c1"],[53,54,"pl-c1"]],[[6,18,"pl-c1"]],[],[[36,41,"pl-c1"]],[[8,16,"pl-c1"]],[],[[6,21,"pl-c1"],[28,33,"pl-c1"]],[[6,12,"pl-k"],[13,20,"pl-c1"]],[],[[4,16,"pl-c1"],[22,23,"pl-c1"]],[[4,19,"pl-c1"],[26,31,"pl-c1"]],[],[],[[2,8,"pl-k"]],[],[],[[0,6,"pl-k"],[7,11,"pl-k"],[12,22,"pl-en"],[56,64,"pl-c1"]],[[23,27,"pl-k"]],[[2,74,"pl-c"],[2,4,"pl-c"]],[[2,49,"pl-c"],[2,4,"pl-c"]],[[2,75,"pl-c"],[2,4,"pl-c"]],[[2,18,"pl-c"],[2,4,"pl-c"]],[[2,4,"pl-k"]],[[5,9,"pl-k"]],[[4,76,"pl-c"],[4,6,"pl-c"]],[[4,78,"pl-c"],[4,6,"pl-c"]],[[4,6,"pl-k"],[8,20,"pl-c1"],[29,30,"pl-c1"]],[[6,66,"pl-c"],[6,8,"pl-c"]],[[6,18,"pl-c1"]],[],[],[],[[30,35,"pl-c1"]],[[2,10,"pl-c1"]],[],[],[[0,9,"pl-k"],[10,18,"pl-k"]],[[0,4,"pl-k"],[5,38,"pl-en"],[39,47,"pl-c1"]],[],[[39,45,"pl-c1"]],[[39,45,"pl-c1"]],[[2,6,"pl-k"],[13,14,"pl-c1"]],[[2,7,"pl-k"],[16,37,"pl-c1"],[47,48,"pl-c1"]],[[4,8,"pl-k"],[15,28,"pl-c1"]],[[4,10,"pl-k"]],[[4,8,"pl-k"]],[[6,8,"pl-k"],[10,21,"pl-c1"],[57,58,"pl-c1"],[62,70,"pl-k"]],[[6,11,"pl-k"]],[[4,8,"pl-k"]],[[6,8,"pl-k"],[10,22,"pl-c1"],[58,59,"pl-c1"],[63,71,"pl-k"]],[[6,11,"pl-k"]],[[4,11,"pl-k"],[13,18,"pl-k"]],[],[[4,10,"pl-k"],[11,16,"pl-c1"]],[],[[2,8,"pl-k"],[9,13,"pl-c1"]],[],[],[[0,9,"pl-k"],[10,18,"pl-k"]],[[0,6,"pl-k"],[7,11,"pl-k"],[12,37,"pl-en"]],[[4,9,"pl-k"],[22,30,"pl-c1"],[53,61,"pl-c1"]],[[4,10,"pl-c1"],[33,39,"pl-c1"]],[[4,10,"pl-c1"],[29,35,"pl-c1"],[55,61,"pl-c1"]],[[4,10,"pl-c1"]],[[2,8,"pl-k"],[9,35,"pl-c1"]],[],[[10,14,"pl-k"],[33,37,"pl-k"]],[[24,28,"pl-smi"]],[],[[8,14,"pl-k"],[15,23,"pl-c1"]],[],[],[],[[0,9,"pl-k"],[10,18,"pl-k"]],[[0,6,"pl-k"],[7,11,"pl-k"],[12,37,"pl-en"]],[[14,22,"pl-c1"],[29,35,"pl-c1"],[54,60,"pl-c1"]],[[4,10,"pl-c1"],[30,36,"pl-c1"]],[[4,10,"pl-c1"]],[],[[18,22,"pl-smi"]],[],[],[[2,8,"pl-k"],[9,17,"pl-c1"]],[],[],[[0,35,"pl-c"],[0,2,"pl-c"]],[[0,6,"pl-k"],[7,39,"pl-en"]],[[4,12,"pl-c1"],[29,35,"pl-c1"],[54,60,"pl-c1"]],[[4,10,"pl-c1"],[30,36,"pl-c1"]],[[4,10,"pl-c1"]],[],[],[],[],[],[],[[2,16,"pl-c1"]],[],[],[[0,6,"pl-k"],[7,40,"pl-en"],[45,52,"pl-k"]],[],[[0,6,"pl-k"],[7,11,"pl-k"],[12,40,"pl-en"],[43,48,"pl-k"]],[[2,8,"pl-k"],[9,20,"pl-c1"],[29,30,"pl-c1"]],[],[],[[0,6,"pl-k"],[7,11,"pl-k"],[12,42,"pl-en"],[45,50,"pl-k"]],[[2,4,"pl-k"],[27,28,"pl-c1"]],[[4,10,"pl-k"],[11,22,"pl-c1"],[71,72,"pl-c1"]],[],[],[[2,8,"pl-c1"]],[[2,8,"pl-c1"]],[[2,21,"pl-c1"],[41,49,"pl-c1"]],[],[],[[2,8,"pl-k"],[9,20,"pl-c1"],[67,68,"pl-c1"]],[],[],[[0,6,"pl-k"],[7,11,"pl-k"],[12,42,"pl-en"],[45,50,"pl-k"]],[[2,8,"pl-k"],[9,21,"pl-c1"],[72,73,"pl-c1"]],[[9,24,"pl-c1"],[36,63,"pl-c1"]],[],[],[[0,6,"pl-k"],[7,14,"pl-c1"],[15,36,"pl-en"],[37,41,"pl-k"],[48,54,"pl-c1"]],[[2,4,"pl-k"],[6,17,"pl-c1"],[26,27,"pl-c1"]],[[4,10,"pl-k"],[11,19,"pl-c1"],[31,42,"pl-k"],[43,46,"pl-k"]],[[4,8,"pl-k"],[9,11,"pl-k"],[13,26,"pl-c1"]],[[4,8,"pl-k"],[15,23,"pl-c1"],[35,46,"pl-k"],[47,50,"pl-k"]],[[4,6,"pl-k"],[14,15,"pl-c1"]],[[6,10,"pl-k"],[17,30,"pl-c1"]],[[6,10,"pl-k"],[15,19,"pl-c1"]],[[1,6,"pl-k"]],[[6,11,"pl-k"],[20,21,"pl-c1"]],[],[[27,42,"pl-c1"]],[[1,5,"pl-k"]],[[6,11,"pl-k"],[20,21,"pl-c1"]],[],[[8,10,"pl-k"],[12,23,"pl-c1"],[32,33,"pl-c1"]],[[10,16,"pl-k"],[17,25,"pl-c1"],[37,48,"pl-k"],[49,52,"pl-k"]],[[10,14,"pl-k"],[15,17,"pl-k"],[19,32,"pl-c1"]],[[10,37,"pl-c1"],[64,66,"pl-c1"]],[[16,24,"pl-c1"],[36,47,"pl-k"],[48,51,"pl-k"]],[[10,12,"pl-k"],[21,22,"pl-c1"],[26,32,"pl-k"]],[[16,29,"pl-c1"]],[[10,14,"pl-k"]],[[10,16,"pl-k"],[18,19,"pl-c1"]],[],[],[],[[4,10,"pl-k"]],[[4,8,"pl-k"]],[[4,10,"pl-k"],[12,13,"pl-c1"]],[],[],[],[[0,6,"pl-k"],[7,14,"pl-c1"],[15,37,"pl-smi"],[38,43,"pl-k"],[44,48,"pl-k"],[55,61,"pl-c1"]],[[2,4,"pl-k"],[6,19,"pl-c1"]],[[4,8,"pl-k"],[23,34,"pl-k"],[35,38,"pl-k"]],[[17,23,"pl-c1"],[52,55,"pl-k"]],[],[[4,8,"pl-k"],[15,24,"pl-c1"],[36,47,"pl-k"],[48,51,"pl-k"]],[[4,6,"pl-k"],[14,15,"pl-c1"]],[[6,10,"pl-k"],[17,30,"pl-c1"]],[[6,10,"pl-k"],[15,19,"pl-c1"]],[[1,6,"pl-k"]],[[6,11,"pl-k"],[20,21,"pl-c1"]],[],[[27,42,"pl-c1"]],[[1,5,"pl-k"]],[[6,11,"pl-k"],[20,21,"pl-c1"]],[],[[8,10,"pl-k"],[12,25,"pl-c1"]],[[10,37,"pl-c1"],[64,66,"pl-c1"]],[[16,25,"pl-c1"],[37,48,"pl-k"],[49,52,"pl-k"]],[[10,12,"pl-k"],[21,22,"pl-c1"],[26,32,"pl-k"]],[[16,29,"pl-c1"]],[[10,14,"pl-k"]],[[10,16,"pl-k"],[18,19,"pl-c1"]],[],[],[],[[4,10,"pl-k"]],[],[[2,8,"pl-k"],[10,11,"pl-c1"]],[],[],[[0,6,"pl-k"],[7,11,"pl-k"],[12,51,"pl-smi"]],[[52,55,"pl-k"],[63,68,"pl-k"]],[[2,32,"pl-c1"]],[],[],[[0,6,"pl-k"],[7,11,"pl-k"],[12,50,"pl-smi"]],[[51,54,"pl-k"],[62,67,"pl-k"]],[[2,31,"pl-c1"]],[],[],[[0,6,"pl-k"],[7,15,"pl-c1"],[16,39,"pl-smi"],[42,47,"pl-k"],[50,56,"pl-k"]],[],[[0,6,"pl-k"],[7,13,"pl-c1"],[14,39,"pl-smi"],[42,47,"pl-k"]],[[2,8,"pl-k"]],[[13,43,"pl-c1"]],[[7,12,"pl-c1"]],[],[],[[2,21,"pl-c"],[2,4,"pl-c"]],[],[[0,33,"pl-c"],[0,2,"pl-c"]],[[0,6,"pl-k"],[7,27,"pl-smi"],[28,33,"pl-k"],[34,38,"pl-k"],[51,56,"pl-k"],[57,61,"pl-k"]],[[28,33,"pl-k"],[34,38,"pl-k"]],[[28,33,"pl-k"],[34,38,"pl-k"]],[[28,33,"pl-k"],[34,38,"pl-k"]],[[9,20,"pl-c1"],[21,38,"pl-c1"]],[],[[2,4,"pl-k"]],[[4,23,"pl-c1"]],[],[],[],[[4,33,"pl-c1"]],[],[[4,6,"pl-k"],[32,39,"pl-c1"],[65,66,"pl-c1"],[71,75,"pl-s"],[71,72,"pl-pds"],[72,74,"pl-cce"],[74,75,"pl-pds"]],[[6,44,"pl-c1"]],[],[[10,26,"pl-k"],[27,31,"pl-k"],[35,45,"pl-k"],[46,50,"pl-k"]],[],[],[[4,6,"pl-k"],[8,42,"pl-c1"],[63,64,"pl-c1"]],[[8,35,"pl-c1"]],[[12,13,"pl-c1"]],[[8,33,"pl-c1"],[43,44,"pl-c1"]],[[6,18,"pl-c1"]],[[13,20,"pl-c1"]],[[6,10,"pl-k"],[11,13,"pl-k"]],[[6,35,"pl-c1"]],[],[],[[6,24,"pl-c1"]],[[67,74,"pl-c1"]],[],[],[],[],[[0,6,"pl-k"],[7,27,"pl-smi"]],[],[[9,20,"pl-c1"],[21,38,"pl-c1"]],[],[[2,4,"pl-k"]],[[4,23,"pl-c1"]],[],[],[],[[4,33,"pl-c1"]],[],[[4,6,"pl-k"],[8,31,"pl-c1"],[47,48,"pl-c1"]],[[8,30,"pl-c1"],[53,54,"pl-c1"]],[[6,18,"pl-c1"]],[[13,20,"pl-c1"]],[[6,10,"pl-k"],[11,13,"pl-k"]],[[6,28,"pl-c1"]],[],[[6,24,"pl-c1"]],[[67,74,"pl-c1"]],[],[],[],[],[[0,6,"pl-k"],[7,27,"pl-smi"]],[[4,9,"pl-k"],[24,28,"pl-c1"]],[[9,20,"pl-c1"],[21,31,"pl-c1"]],[[2,4,"pl-k"]],[[4,6,"pl-k"],[9,31,"pl-c1"]],[[6,18,"pl-c1"]],[[13,20,"pl-c1"]],[],[],[],[],[[0,6,"pl-k"],[7,28,"pl-en"]],[[2,4,"pl-k"],[14,26,"pl-c1"]],[],[],[[0,6,"pl-k"],[7,11,"pl-k"],[12,31,"pl-smi"],[34,39,"pl-k"],[42,48,"pl-k"]],[],[[0,6,"pl-k"],[16,38,"pl-c1"],[41,46,"pl-k"],[49,55,"pl-k"]],[],[[0,6,"pl-k"],[7,11,"pl-k"],[12,35,"pl-smi"]],[],[],[[30,35,"pl-c1"]],[],[[2,25,"pl-c1"]],[[2,24,"pl-c1"]],[],[[2,4,"pl-k"],[30,37,"pl-c1"]],[[4,26,"pl-c1"]],[],[],[],[[0,6,"pl-k"],[7,11,"pl-k"],[12,47,"pl-smi"],[48,56,"pl-c1"]],[[2,6,"pl-k"],[13,28,"pl-c1"]],[],[],[[8,14,"pl-k"],[15,56,"pl-c1"]],[],[],[[15,23,"pl-c"],[15,17,"pl-c"],[21,23,"pl-c"],[27,33,"pl-k"],[34,38,"pl-c1"]],[],[[2,6,"pl-k"],[13,18,"pl-c1"]],[[2,4,"pl-k"]],[],[[4,7,"pl-k"],[22,23,"pl-c1"]],[[4,34,"pl-c1"]],[],[],[[4,7,"pl-k"],[21,22,"pl-c1"]],[[4,33,"pl-c1"]],[],[[10,43,"pl-c1"]],[],[],[],[[26,30,"pl-k"],[49,53,"pl-k"]],[[10,16,"pl-k"],[17,32,"pl-c1"]],[],[],[[57,60,"pl-smi"]],[],[],[[4,77,"pl-c"],[4,6,"pl-c"]],[[4,44,"pl-c"],[4,6,"pl-c"]],[[4,9,"pl-k"],[10,14,"pl-k"]],[[4,22,"pl-c1"]],[],[],[[2,25,"pl-c1"]],[[2,22,"pl-c1"]],[[2,8,"pl-k"]],[],[],[[0,33,"pl-c"],[0,2,"pl-c"]],[[0,6,"pl-k"],[7,27,"pl-smi"],[28,33,"pl-k"]],[[6,15,"pl-c1"],[22,25,"pl-c1"],[27,38,"pl-c1"],[42,53,"pl-c1"]],[],[[0,6,"pl-k"],[7,27,"pl-smi"],[28,33,"pl-k"],[53,56,"pl-k"]],[[6,15,"pl-c1"],[28,39,"pl-c1"],[43,54,"pl-c1"]],[],[[0,6,"pl-k"],[7,27,"pl-smi"],[28,33,"pl-k"],[53,56,"pl-k"]],[[28,33,"pl-k"]],[[28,33,"pl-k"]],[[28,33,"pl-k"]],[[6,16,"pl-c1"]],[[9,20,"pl-c1"],[21,38,"pl-c1"]],[],[[2,31,"pl-c1"]],[],[[2,15,"pl-c1"],[23,24,"pl-c1"],[40,44,"pl-c1"],[49,52,"pl-s"],[49,50,"pl-pds"],[51,52,"pl-pds"]],[[20,25,"pl-k"],[26,30,"pl-k"],[35,40,"pl-k"],[41,45,"pl-k"]],[[35,47,"pl-c1"]],[],[],[[2,4,"pl-k"],[24,29,"pl-c1"],[52,57,"pl-c1"]],[[4,6,"pl-k"],[30,35,"pl-c1"]],[[6,44,"pl-c1"]],[[16,32,"pl-k"],[33,37,"pl-k"]],[[20,30,"pl-k"],[31,35,"pl-k"],[60,65,"pl-c1"]],[],[],[[4,6,"pl-k"],[8,36,"pl-c1"],[60,65,"pl-c1"]],[[58,59,"pl-c1"]],[[8,35,"pl-c1"],[58,63,"pl-c1"]],[[57,58,"pl-c1"]],[[6,18,"pl-c1"]],[[13,20,"pl-c1"]],[],[],[],[],[[0,6,"pl-k"],[7,27,"pl-smi"],[28,33,"pl-k"],[53,56,"pl-k"]],[],[[28,33,"pl-k"]],[[6,16,"pl-c1"]],[[9,20,"pl-c1"],[21,38,"pl-c1"]],[],[[2,15,"pl-c1"],[23,24,"pl-c1"],[40,44,"pl-c1"],[49,52,"pl-s"],[49,50,"pl-pds"],[51,52,"pl-pds"]],[[20,25,"pl-k"],[26,30,"pl-k"],[35,40,"pl-k"],[41,45,"pl-k"]],[[35,47,"pl-c1"]],[],[],[[2,4,"pl-k"],[21,28,"pl-c1"],[46,53,"pl-c1"]],[[4,6,"pl-k"],[30,35,"pl-c1"]],[[6,44,"pl-c1"]],[[16,32,"pl-k"],[33,37,"pl-k"]],[[20,30,"pl-k"],[31,35,"pl-k"],[60,65,"pl-c1"]],[],[],[[4,6,"pl-k"],[8,31,"pl-c1"],[54,55,"pl-c1"]],[[8,30,"pl-c1"],[52,53,"pl-c1"]],[[6,18,"pl-c1"]],[[13,20,"pl-c1"]],[],[],[],[],[[0,6,"pl-k"],[7,28,"pl-en"]],[[2,4,"pl-k"],[14,26,"pl-c1"]],[[2,70,"pl-c"],[2,4,"pl-c"]],[[2,70,"pl-c"],[2,4,"pl-c"]],[[2,68,"pl-c"],[2,4,"pl-c"]],[[2,19,"pl-c1"],[29,33,"pl-c1"]],[],[],[[0,6,"pl-k"],[7,11,"pl-k"],[12,31,"pl-smi"],[34,39,"pl-k"],[42,48,"pl-k"]],[],[[0,6,"pl-k"],[7,11,"pl-k"],[12,40,"pl-smi"]],[[2,4,"pl-k"]],[[4,6,"pl-k"]],[[6,8,"pl-k"],[10,32,"pl-c1"]],[[8,79,"pl-c"],[8,10,"pl-c"]],[[8,30,"pl-c1"]],[],[[6,10,"pl-k"]],[[6,21,"pl-c1"]],[],[],[],[],[[0,6,"pl-k"],[7,11,"pl-k"],[12,41,"pl-smi"],[42,47,"pl-k"],[48,52,"pl-k"]],[[47,53,"pl-c1"]],[[2,19,"pl-c1"],[20,52,"pl-c1"]],[],[],[[0,6,"pl-k"],[7,11,"pl-k"],[12,48,"pl-smi"],[51,56,"pl-k"]],[[2,8,"pl-k"]],[],[],[[0,6,"pl-k"],[16,38,"pl-c1"],[41,46,"pl-k"],[49,55,"pl-k"]],[],[[0,6,"pl-k"],[7,11,"pl-k"],[12,48,"pl-smi"]],[[2,8,"pl-k"],[9,17,"pl-c1"],[23,60,"pl-c1"]],[],[],[[0,80,"pl-c"],[0,2,"pl-c"]],[[0,6,"pl-k"],[7,11,"pl-k"],[12,41,"pl-smi"]],[],[],[[19,23,"pl-k"]],[[12,16,"pl-c1"]],[],[[2,4,"pl-k"],[7,36,"pl-c1"]],[[17,21,"pl-smi"]],[],[],[],[[17,23,"pl-smi"],[26,35,"pl-s"],[26,27,"pl-pds"],[34,35,"pl-pds"]],[[17,21,"pl-smi"]],[[12,14,"pl-k"],[36,37,"pl-c1"]],[[19,30,"pl-smi"],[33,63,"pl-c1"]],[],[[12,18,"pl-k"],[19,34,"pl-c1"],[58,63,"pl-c1"]],[],[[4,75,"pl-c"],[4,6,"pl-c"]],[[4,25,"pl-c"],[4,6,"pl-c"]],[[4,16,"pl-c1"],[25,29,"pl-c1"]],[[4,19,"pl-c1"]],[[4,16,"pl-c1"]],[[14,19,"pl-c1"]],[[4,10,"pl-k"],[11,16,"pl-c1"]],[],[],[[2,4,"pl-k"],[16,22,"pl-smi"]],[[4,6,"pl-k"],[37,42,"pl-c1"]],[[37,42,"pl-c1"]],[],[[6,8,"pl-k"],[10,40,"pl-c1"],[58,62,"pl-c1"]],[[20,28,"pl-c1"]],[[8,10,"pl-k"],[13,42,"pl-c1"]],[[23,27,"pl-smi"]],[],[],[],[[23,29,"pl-smi"],[32,41,"pl-s"],[32,33,"pl-pds"],[40,41,"pl-pds"]],[[23,27,"pl-smi"]],[[23,30,"pl-smi"],[31,37,"pl-c1"],[38,79,"pl-c1"]],[[34,35,"pl-c1"],[37,58,"pl-c1"],[59,61,"pl-c1"]],[],[[22,26,"pl-c1"]],[[18,20,"pl-k"],[42,43,"pl-c1"]],[[25,36,"pl-smi"],[39,69,"pl-c1"]],[],[[18,24,"pl-k"],[25,40,"pl-c1"],[64,69,"pl-c1"]],[],[[10,78,"pl-c"],[10,12,"pl-c"]],[[10,34,"pl-c"],[10,12,"pl-c"]],[[10,22,"pl-c1"],[31,35,"pl-c1"]],[[10,25,"pl-c1"]],[[10,22,"pl-c1"]],[[20,25,"pl-c1"]],[[10,16,"pl-k"],[17,22,"pl-c1"]],[],[],[],[],[],[[2,56,"pl-c"],[2,4,"pl-c"]],[[2,59,"pl-c"],[2,4,"pl-c"]],[[2,35,"pl-c"],[2,4,"pl-c"]],[[2,4,"pl-k"],[16,22,"pl-smi"]],[],[[10,19,"pl-c1"]],[[4,72,"pl-c"],[4,6,"pl-c"]],[[4,28,"pl-c"],[4,6,"pl-c"]],[[4,16,"pl-c1"],[25,29,"pl-c1"]],[[4,19,"pl-c1"]],[[4,16,"pl-c1"]],[[4,10,"pl-k"],[11,16,"pl-c1"]],[],[],[[2,8,"pl-k"],[9,13,"pl-c1"]],[],[],[[0,6,"pl-k"],[7,11,"pl-k"],[12,33,"pl-smi"]],[[2,6,"pl-k"],[13,17,"pl-c1"]],[],[[2,16,"pl-c1"]],[[32,37,"pl-c1"]],[[4,6,"pl-k"],[28,33,"pl-c1"]],[[6,8,"pl-k"],[11,40,"pl-c1"],[66,71,"pl-c1"]],[[41,48,"pl-c1"]],[[14,19,"pl-c1"]],[],[[6,10,"pl-k"],[11,13,"pl-k"],[34,39,"pl-c1"]],[[6,8,"pl-k"],[11,40,"pl-c1"],[47,54,"pl-c1"]],[[59,64,"pl-c1"]],[[14,19,"pl-c1"]],[],[[6,10,"pl-k"]],[[6,10,"pl-k"],[20,25,"pl-c1"]],[[1,6,"pl-k"]],[],[[10,46,"pl-c1"],[47,69,"pl-c1"]],[[1,5,"pl-k"]],[[1,3,"pl-k"]],[[15,49,"pl-c1"],[50,72,"pl-c1"]],[[1,6,"pl-k"],[7,23,"pl-c"],[7,9,"pl-c"]],[[1,6,"pl-k"],[7,16,"pl-c"],[7,9,"pl-c"]],[[6,8,"pl-k"],[21,53,"pl-c1"]],[],[],[],[[2,8,"pl-k"]],[],[],[[0,6,"pl-k"],[7,11,"pl-k"],[12,37,"pl-smi"]],[[2,6,"pl-k"],[13,28,"pl-c1"]],[[13,17,"pl-smi"]],[],[[8,10,"pl-k"]],[[10,12,"pl-k"],[15,25,"pl-c1"]],[],[[12,18,"pl-k"],[19,24,"pl-c1"]],[],[[10,24,"pl-c1"],[48,55,"pl-c1"]],[],[],[[8,10,"pl-k"],[13,54,"pl-c1"]],[[23,27,"pl-smi"]],[],[],[[10,16,"pl-k"],[17,22,"pl-c1"]],[],[],[[8,10,"pl-k"]],[[10,14,"pl-k"]],[],[[10,12,"pl-k"]],[[34,62,"pl-c1"]],[],[],[[10,12,"pl-k"]],[],[[12,18,"pl-k"],[19,24,"pl-c1"]],[],[],[[10,12,"pl-k"]],[[29,50,"pl-c1"]],[],[[12,14,"pl-k"]],[],[[14,20,"pl-k"],[21,26,"pl-c1"]],[],[],[[12,16,"pl-k"],[31,56,"pl-c1"]],[[12,16,"pl-k"],[22,40,"pl-c1"],[47,56,"pl-c1"]],[],[[12,14,"pl-k"],[31,38,"pl-c1"]],[],[[14,20,"pl-k"],[21,26,"pl-c1"]],[],[],[[12,14,"pl-k"]],[[14,16,"pl-k"],[19,30,"pl-c1"]],[],[[16,22,"pl-k"],[23,28,"pl-c1"]],[],[],[],[],[],[[8,14,"pl-k"],[15,19,"pl-c1"]],[],[],[[1,3,"pl-k"]],[[8,32,"pl-c1"],[45,50,"pl-c1"]],[[1,5,"pl-k"]],[[8,75,"pl-c"],[8,10,"pl-c"]],[[8,35,"pl-c"],[8,10,"pl-c"]],[[8,16,"pl-c1"]],[[17,28,"pl-k"],[29,33,"pl-k"],[37,47,"pl-k"],[48,52,"pl-k"],[62,67,"pl-c1"]],[[1,6,"pl-k"]],[[8,14,"pl-k"],[15,19,"pl-c1"]],[],[],[[2,4,"pl-k"]],[[11,14,"pl-smi"]],[[4,10,"pl-k"],[11,15,"pl-c1"]],[],[],[[2,17,"pl-c1"]],[[2,14,"pl-c1"]],[[2,8,"pl-k"],[9,14,"pl-c1"]],[],[],[[0,6,"pl-k"],[7,11,"pl-k"],[12,35,"pl-smi"],[52,56,"pl-k"]],[[2,19,"pl-c1"]],[],[],[[0,6,"pl-k"],[7,11,"pl-k"],[12,40,"pl-smi"]],[[41,45,"pl-k"]],[[2,4,"pl-k"],[13,17,"pl-smi"]],[[4,10,"pl-c1"],[18,21,"pl-smi"],[25,32,"pl-c1"]],[[4,10,"pl-k"]],[],[[2,4,"pl-k"],[13,16,"pl-smi"]],[[4,22,"pl-c1"],[42,45,"pl-smi"],[54,58,"pl-smi"]],[],[[11,14,"pl-smi"],[17,24,"pl-c1"]],[],[[2,8,"pl-c1"],[16,19,"pl-smi"],[23,30,"pl-c1"]],[],[],[[0,6,"pl-k"],[7,11,"pl-k"],[12,37,"pl-smi"]],[[4,9,"pl-k"]],[],[[18,22,"pl-c1"]],[[2,8,"pl-c1"],[16,19,"pl-smi"]],[[2,8,"pl-k"],[9,42,"pl-c1"]],[[13,16,"pl-smi"],[25,29,"pl-smi"]],[],[[6,15,"pl-c1"]],[],[],[[0,6,"pl-k"],[7,11,"pl-k"],[12,29,"pl-smi"],[32,37,"pl-k"],[40,46,"pl-k"],[47,51,"pl-c1"]],[],[[0,6,"pl-k"],[7,11,"pl-k"],[12,34,"pl-smi"],[54,59,"pl-k"]],[[2,53,"pl-c"],[2,4,"pl-c"]],[[0,0,"pl-c"]],[[0,72,"pl-c"]],[[0,72,"pl-c"]],[[0,73,"pl-c"]],[[0,74,"pl-c"]],[[0,73,"pl-c"]],[[0,0,"pl-c"]],[[0,64,"pl-c"]],[[0,72,"pl-c"]],[[0,74,"pl-c"]],[[0,73,"pl-c"]],[[0,68,"pl-c"]],[[0,73,"pl-c"]],[[0,63,"pl-c"]],[[0,0,"pl-c"]],[[0,71,"pl-c"]],[[0,73,"pl-c"]],[[0,65,"pl-c"]],[[0,0,"pl-c"]],[[0,4,"pl-c"],[2,4,"pl-c"]],[[2,8,"pl-k"],[9,42,"pl-c1"]],[[9,37,"pl-c1"]],[],[],[[0,6,"pl-k"],[7,11,"pl-k"]],[[0,44,"pl-c1"],[64,69,"pl-k"]],[[2,6,"pl-k"],[13,18,"pl-c1"]],[],[[2,6,"pl-k"]],[],[[2,8,"pl-k"],[9,17,"pl-en"]],[[2,8,"pl-k"],[9,16,"pl-en"]],[[2,8,"pl-c1"],[20,21,"pl-c1"]],[],[[1,7,"pl-k"]],[[2,4,"pl-k"],[6,15,"pl-c1"],[32,37,"pl-c1"]],[],[[15,21,"pl-k"],[22,28,"pl-k"],[29,37,"pl-en"]],[[4,8,"pl-k"],[9,11,"pl-k"],[13,22,"pl-c1"],[38,43,"pl-c1"]],[],[[15,21,"pl-k"],[22,28,"pl-k"],[29,36,"pl-en"]],[],[[1,6,"pl-k"]],[],[[2,6,"pl-k"],[19,30,"pl-k"],[31,36,"pl-k"],[37,43,"pl-k"],[44,65,"pl-en"]],[[6,22,"pl-c1"],[58,65,"pl-c1"],[67,74,"pl-c1"]],[],[[2,4,"pl-k"]],[[4,8,"pl-k"],[23,28,"pl-c1"]],[[4,8,"pl-k"],[22,27,"pl-c1"]],[],[[4,8,"pl-k"],[17,36,"pl-c1"]],[],[[4,7,"pl-k"],[9,17,"pl-c1"],[29,30,"pl-c1"]],[[6,10,"pl-k"],[17,38,"pl-c1"]],[[6,8,"pl-k"],[15,19,"pl-smi"]],[[8,12,"pl-k"]],[[12,28,"pl-k"],[29,34,"pl-k"],[35,39,"pl-k"],[43,64,"pl-c1"],[70,71,"pl-smi"],[72,75,"pl-smi"]],[[8,12,"pl-k"],[24,35,"pl-k"],[36,42,"pl-c1"],[44,62,"pl-c1"],[68,69,"pl-smi"],[70,73,"pl-smi"]],[],[[8,14,"pl-k"]],[[8,12,"pl-k"],[36,51,"pl-c1"],[69,74,"pl-k"]],[],[[8,12,"pl-k"]],[[10,12,"pl-k"],[15,21,"pl-c1"]],[[15,21,"pl-c1"]],[[25,29,"pl-c1"]],[],[[10,15,"pl-k"]],[],[],[],[],[[4,6,"pl-k"],[43,47,"pl-c1"]],[],[],[[2,20,"pl-c1"],[21,31,"pl-k"],[32,40,"pl-c1"]],[[6,22,"pl-k"],[23,28,"pl-k"],[29,37,"pl-smi"]],[[2,8,"pl-k"]],[],[],[[0,6,"pl-k"],[7,11,"pl-k"],[12,51,"pl-smi"],[71,76,"pl-k"]],[[2,7,"pl-k"],[8,12,"pl-k"],[28,49,"pl-c1"]],[],[[2,4,"pl-k"],[22,29,"pl-c1"]],[[4,8,"pl-k"]],[[4,8,"pl-k"],[20,45,"pl-c1"]],[[52,58,"pl-k"]],[],[[4,6,"pl-k"],[21,22,"pl-c1"]],[[6,12,"pl-k"],[13,28,"pl-c1"],[35,46,"pl-k"],[47,53,"pl-c1"]],[],[],[],[[2,8,"pl-k"],[9,14,"pl-c1"]],[],[],[[0,6,"pl-k"],[7,11,"pl-k"],[12,38,"pl-smi"],[39,44,"pl-k"],[45,49,"pl-k"]],[[39,45,"pl-c1"],[59,64,"pl-k"]],[[2,4,"pl-k"],[12,16,"pl-c1"],[57,63,"pl-k"],[64,68,"pl-c1"]],[],[[2,19,"pl-c"],[2,4,"pl-c"]],[[2,70,"pl-c"],[2,4,"pl-c"]],[],[[2,15,"pl-c1"],[25,26,"pl-c1"],[52,55,"pl-s"],[52,53,"pl-pds"],[54,55,"pl-pds"]],[[20,25,"pl-k"],[26,30,"pl-k"],[35,40,"pl-k"],[41,45,"pl-k"]],[[37,49,"pl-c1"]],[],[],[[2,4,"pl-k"],[23,27,"pl-c1"],[52,56,"pl-c1"],[62,68,"pl-k"],[69,74,"pl-c1"]],[],[[2,6,"pl-k"],[32,37,"pl-c1"]],[[2,5,"pl-k"],[7,12,"pl-k"],[13,17,"pl-k"]],[[4,8,"pl-k"]],[[4,6,"pl-k"],[23,26,"pl-s"],[23,24,"pl-pds"],[25,26,"pl-pds"]],[[6,10,"pl-k"],[30,34,"pl-c1"],[39,40,"pl-c1"],[48,52,"pl-c1"],[57,58,"pl-c1"],[63,66,"pl-s"],[63,64,"pl-pds"],[65,66,"pl-pds"]],[[31,38,"pl-c1"],[39,40,"pl-c1"],[44,48,"pl-c1"],[53,54,"pl-c1"]],[[6,8,"pl-k"],[28,34,"pl-k"],[35,40,"pl-c1"]],[],[],[],[],[[2,8,"pl-k"],[9,13,"pl-c1"]],[],[[1,6,"pl-k"]],[],[[0,34,"pl-c"],[0,2,"pl-c"]],[[0,6,"pl-k"],[7,21,"pl-smi"],[22,27,"pl-k"]],[[6,12,"pl-c1"],[31,42,"pl-c1"],[46,57,"pl-c1"]],[],[[0,6,"pl-k"],[7,21,"pl-smi"],[22,27,"pl-k"]],[[22,27,"pl-k"]],[[22,27,"pl-k"]],[[2,7,"pl-k"],[8,14,"pl-k"],[26,28,"pl-smi"]],[[6,73,"pl-s"],[6,9,"pl-pds"],[71,73,"pl-pds"]],[],[],[[2,4,"pl-k"],[6,22,"pl-c1"]],[[4,8,"pl-k"],[20,21,"pl-c1"],[23,26,"pl-c1"]],[],[[1,6,"pl-k"]],[[4,6,"pl-k"],[16,21,"pl-c1"],[38,44,"pl-s"],[38,39,"pl-pds"],[43,44,"pl-pds"],[58,65,"pl-s"],[58,59,"pl-pds"],[64,65,"pl-pds"]],[[1,5,"pl-k"]],[[4,6,"pl-k"],[16,21,"pl-c1"],[37,43,"pl-s"],[37,38,"pl-pds"],[42,43,"pl-pds"]],[],[[1,7,"pl-k"]],[[24,27,"pl-s"],[24,25,"pl-pds"],[26,27,"pl-pds"],[39,67,"pl-s"],[39,40,"pl-pds"],[66,67,"pl-pds"]],[[6,11,"pl-k"],[12,33,"pl-smi"]],[[1,6,"pl-k"]],[[6,12,"pl-k"]],[],[],[[4,8,"pl-k"],[28,35,"pl-s"],[28,29,"pl-pds"],[34,35,"pl-pds"]],[],[[4,8,"pl-k"],[18,19,"pl-c1"],[21,24,"pl-c1"]],[[4,6,"pl-k"],[13,18,"pl-c1"],[33,34,"pl-c1"],[36,39,"pl-c1"]],[],[[4,8,"pl-k"],[22,23,"pl-c1"],[25,28,"pl-c1"]],[[4,8,"pl-k"],[26,31,"pl-c1"],[36,45,"pl-c1"],[68,71,"pl-c1"],[74,76,"pl-c1"]],[],[[4,6,"pl-k"]],[[1,6,"pl-k"]],[],[],[],[[1,6,"pl-k"]],[[6,10,"pl-k"]],[],[],[],[[4,8,"pl-k"]],[[4,69,"pl-c"],[4,6,"pl-c"]],[[4,35,"pl-c"],[4,6,"pl-c"]],[[61,63,"pl-c1"]],[],[],[[2,21,"pl-c"],[2,4,"pl-c"]],[],[[0,6,"pl-k"],[7,21,"pl-smi"],[22,27,"pl-k"],[47,50,"pl-k"]],[[6,10,"pl-c1"]],[],[[0,6,"pl-k"],[7,21,"pl-smi"],[22,27,"pl-k"],[47,50,"pl-k"]],[[22,27,"pl-k"]],[[22,27,"pl-k"]],[[6,10,"pl-c1"]],[],[],[[0,6,"pl-k"],[7,22,"pl-en"],[27,34,"pl-k"]],[],[[0,6,"pl-k"],[7,11,"pl-k"],[12,28,"pl-smi"],[31,36,"pl-k"]],[[2,8,"pl-k"],[17,24,"pl-c1"],[34,42,"pl-c1"]],[],[],[[0,6,"pl-k"],[14,25,"pl-smi"],[26,31,"pl-k"],[53,59,"pl-k"],[66,69,"pl-c1"]],[[0,6,"pl-k"],[14,25,"pl-smi"],[26,31,"pl-k"],[51,56,"pl-k"]],[[2,8,"pl-k"],[15,18,"pl-c1"]],[],[[0,6,"pl-k"],[14,25,"pl-smi"],[26,31,"pl-k"]],[[2,8,"pl-k"],[15,18,"pl-c1"],[25,34,"pl-c1"]],[],[[0,6,"pl-k"],[14,25,"pl-smi"],[26,31,"pl-k"],[51,56,"pl-k"]],[],[[2,8,"pl-k"],[15,18,"pl-c1"],[34,43,"pl-c1"]],[],[[0,6,"pl-k"],[14,25,"pl-smi"],[26,31,"pl-k"]],[],[[2,8,"pl-k"],[15,18,"pl-c1"],[25,34,"pl-c1"]],[],[[0,6,"pl-k"],[14,25,"pl-smi"],[26,31,"pl-k"],[51,56,"pl-k"]],[],[[2,8,"pl-k"],[15,18,"pl-c1"],[34,43,"pl-c1"]],[],[[0,6,"pl-k"],[14,25,"pl-smi"],[26,31,"pl-k"]],[],[[2,8,"pl-k"],[15,18,"pl-c1"],[25,34,"pl-c1"],[54,63,"pl-c1"]],[],[[0,6,"pl-k"],[14,25,"pl-smi"],[26,31,"pl-k"],[51,56,"pl-k"]],[],[[2,8,"pl-k"],[15,18,"pl-c1"],[34,43,"pl-c1"]],[[19,28,"pl-c1"]],[],[[0,6,"pl-k"],[14,25,"pl-smi"],[26,31,"pl-k"]],[],[],[[2,8,"pl-k"],[15,18,"pl-c1"],[25,34,"pl-c1"]],[[19,28,"pl-c1"]],[],[[0,6,"pl-k"],[14,25,"pl-smi"],[26,31,"pl-k"],[51,56,"pl-k"]],[],[],[[2,8,"pl-k"],[15,18,"pl-c1"],[34,43,"pl-c1"]],[[19,28,"pl-c1"]],[],[[0,6,"pl-k"],[14,25,"pl-smi"],[26,31,"pl-k"]],[],[],[[2,8,"pl-k"],[15,18,"pl-c1"],[25,34,"pl-c1"]],[[19,28,"pl-c1"],[48,57,"pl-c1"]],[],[[0,6,"pl-k"],[14,25,"pl-smi"],[26,31,"pl-k"],[51,56,"pl-k"]],[],[],[[2,8,"pl-k"],[15,18,"pl-c1"],[34,43,"pl-c1"]],[[19,28,"pl-c1"],[48,57,"pl-c1"]],[],[[0,6,"pl-k"],[14,25,"pl-smi"],[26,31,"pl-k"],[51,56,"pl-k"]],[[26,31,"pl-k"]],[[2,8,"pl-k"],[15,18,"pl-c1"],[42,51,"pl-c1"]],[],[[0,6,"pl-k"],[14,25,"pl-smi"],[26,31,"pl-k"],[51,56,"pl-k"]],[[26,31,"pl-k"]],[],[[2,8,"pl-k"],[15,18,"pl-c1"],[42,51,"pl-c1"]],[[19,28,"pl-c1"]],[],[[0,6,"pl-k"],[14,25,"pl-smi"],[26,31,"pl-k"],[51,56,"pl-k"]],[[26,31,"pl-k"]],[],[],[[2,8,"pl-k"],[15,18,"pl-c1"],[42,51,"pl-c1"]],[[19,28,"pl-c1"],[48,57,"pl-c1"]],[],[],[[0,6,"pl-k"],[14,26,"pl-smi"],[27,32,"pl-k"],[54,60,"pl-k"],[67,71,"pl-c1"]],[[0,6,"pl-k"],[14,26,"pl-smi"],[27,32,"pl-k"],[52,57,"pl-k"]],[[2,8,"pl-k"],[15,19,"pl-c1"]],[],[],[[0,6,"pl-k"],[14,26,"pl-smi"],[27,32,"pl-k"],[54,60,"pl-k"],[67,71,"pl-c1"]],[[0,6,"pl-k"],[14,26,"pl-smi"],[27,32,"pl-k"],[52,57,"pl-k"]],[[2,8,"pl-k"],[15,19,"pl-c1"]],[],[[0,6,"pl-k"],[14,26,"pl-smi"],[27,32,"pl-k"],[52,57,"pl-k"],[58,62,"pl-k"]],[[27,33,"pl-c1"]],[[27,32,"pl-k"]],[[2,8,"pl-k"],[15,19,"pl-c1"]],[],[[0,6,"pl-k"],[14,26,"pl-smi"],[27,32,"pl-k"],[52,57,"pl-k"]],[[27,32,"pl-k"],[33,37,"pl-k"],[45,51,"pl-c1"]],[[27,32,"pl-k"]],[[2,8,"pl-k"],[15,19,"pl-c1"]],[],[[0,6,"pl-k"],[14,26,"pl-smi"],[27,32,"pl-k"],[52,57,"pl-k"]],[[27,32,"pl-k"],[33,37,"pl-k"],[45,51,"pl-c1"]],[[27,32,"pl-k"]],[[2,8,"pl-k"],[15,19,"pl-c1"]],[],[],[[0,6,"pl-k"],[14,26,"pl-smi"],[27,32,"pl-k"],[52,57,"pl-k"]],[[27,32,"pl-k"]],[[2,8,"pl-k"],[15,19,"pl-c1"]],[],[[0,6,"pl-k"],[14,26,"pl-smi"],[27,32,"pl-k"],[52,57,"pl-k"]],[[27,32,"pl-k"]],[[2,8,"pl-k"],[15,19,"pl-c1"]],[],[[0,6,"pl-k"],[14,26,"pl-smi"],[27,32,"pl-k"],[52,57,"pl-k"]],[[27,32,"pl-k"]],[[27,32,"pl-k"]],[[2,8,"pl-k"],[15,19,"pl-c1"]],[],[[0,6,"pl-k"],[14,26,"pl-smi"],[27,32,"pl-k"],[52,57,"pl-k"]],[[27,32,"pl-k"]],[[27,32,"pl-k"]],[[2,8,"pl-k"],[15,19,"pl-c1"]],[],[[0,6,"pl-k"],[14,26,"pl-smi"],[27,32,"pl-k"],[52,58,"pl-c1"]],[],[[27,32,"pl-k"]],[[2,8,"pl-k"],[15,19,"pl-c1"],[42,51,"pl-c1"]],[],[],[[0,6,"pl-k"],[14,26,"pl-smi"],[27,32,"pl-k"]],[],[[27,32,"pl-k"]],[[2,8,"pl-k"],[15,19,"pl-c1"],[26,35,"pl-c1"]],[],[[0,6,"pl-k"],[14,26,"pl-smi"],[27,32,"pl-k"],[52,57,"pl-k"]],[[27,33,"pl-c1"]],[],[[27,32,"pl-k"]],[[2,8,"pl-k"],[15,19,"pl-c1"],[51,60,"pl-c1"]],[],[],[[0,6,"pl-k"],[14,26,"pl-smi"],[27,32,"pl-k"],[52,57,"pl-k"]],[],[[27,32,"pl-k"]],[[2,8,"pl-k"],[15,19,"pl-c1"],[35,44,"pl-c1"]],[],[[0,6,"pl-k"],[14,26,"pl-smi"],[27,32,"pl-k"],[52,57,"pl-k"]],[[2,8,"pl-k"],[15,19,"pl-c1"]],[],[[0,6,"pl-k"],[14,26,"pl-smi"],[27,32,"pl-k"],[52,57,"pl-k"]],[[27,32,"pl-k"]],[[2,8,"pl-k"],[15,19,"pl-c1"]],[],[[0,6,"pl-k"],[14,26,"pl-smi"],[27,32,"pl-k"],[52,57,"pl-k"]],[[27,32,"pl-k"]],[[2,8,"pl-k"],[15,19,"pl-c1"]],[],[[0,6,"pl-k"],[14,26,"pl-smi"],[27,32,"pl-k"]],[[27,32,"pl-k"]],[[2,8,"pl-k"],[15,19,"pl-c1"]],[],[[0,6,"pl-k"],[14,26,"pl-smi"],[27,32,"pl-k"],[52,57,"pl-k"]],[[27,32,"pl-k"]],[[2,8,"pl-k"],[15,19,"pl-c1"]],[],[[0,6,"pl-k"],[14,26,"pl-smi"],[27,32,"pl-k"],[52,57,"pl-k"]],[[27,32,"pl-k"]],[[27,32,"pl-k"]],[[2,8,"pl-k"],[15,19,"pl-c1"]],[],[[0,6,"pl-k"]],[[0,12,"pl-c1"],[13,18,"pl-k"],[38,43,"pl-k"]],[[13,18,"pl-k"]],[[13,18,"pl-k"]],[[2,8,"pl-k"],[15,19,"pl-c1"]],[],[[0,6,"pl-k"],[14,25,"pl-smi"],[26,31,"pl-k"],[53,59,"pl-k"],[66,69,"pl-c1"]],[[0,6,"pl-k"],[14,25,"pl-smi"],[26,31,"pl-k"],[51,56,"pl-k"],[57,61,"pl-k"]],[[26,32,"pl-c1"]],[[26,31,"pl-k"]],[[2,8,"pl-k"],[15,18,"pl-c1"]],[],[[0,6,"pl-k"],[14,25,"pl-smi"],[26,31,"pl-k"],[51,56,"pl-k"]],[[26,31,"pl-k"],[32,36,"pl-k"],[44,50,"pl-c1"]],[[26,31,"pl-k"]],[[2,8,"pl-k"],[15,18,"pl-c1"]],[],[[0,6,"pl-k"],[14,25,"pl-smi"],[26,31,"pl-k"],[51,56,"pl-k"]],[[26,31,"pl-k"],[32,36,"pl-k"],[44,50,"pl-c1"]],[[26,31,"pl-k"]],[[2,8,"pl-k"],[15,18,"pl-c1"]],[],[[0,6,"pl-k"],[14,25,"pl-smi"],[26,31,"pl-k"],[51,56,"pl-k"]],[[26,31,"pl-k"]],[[2,8,"pl-k"],[15,18,"pl-c1"]],[],[[0,6,"pl-k"],[14,25,"pl-smi"],[26,31,"pl-k"],[51,56,"pl-k"]],[[26,31,"pl-k"]],[[2,8,"pl-k"],[15,18,"pl-c1"]],[],[[0,6,"pl-k"],[14,25,"pl-smi"],[26,31,"pl-k"],[51,56,"pl-k"]],[[26,31,"pl-k"]],[[26,31,"pl-k"]],[[2,8,"pl-k"],[15,18,"pl-c1"]],[],[[0,6,"pl-k"],[14,25,"pl-smi"],[26,31,"pl-k"],[51,56,"pl-k"]],[[26,31,"pl-k"]],[[26,31,"pl-k"]],[[2,8,"pl-k"],[15,18,"pl-c1"]],[],[[0,6,"pl-k"],[14,25,"pl-smi"],[26,31,"pl-k"],[51,57,"pl-c1"]],[],[[26,31,"pl-k"]],[[2,8,"pl-k"],[15,18,"pl-c1"],[41,50,"pl-c1"]],[],[],[[0,6,"pl-k"],[14,25,"pl-smi"],[26,31,"pl-k"]],[],[[26,31,"pl-k"]],[[2,8,"pl-k"],[15,18,"pl-c1"],[25,34,"pl-c1"]],[],[[0,6,"pl-k"],[14,25,"pl-smi"],[26,31,"pl-k"],[51,56,"pl-k"]],[[26,32,"pl-c1"]],[],[[26,31,"pl-k"]],[[2,8,"pl-k"],[15,18,"pl-c1"],[50,59,"pl-c1"]],[],[],[[0,6,"pl-k"],[14,25,"pl-smi"],[26,31,"pl-k"],[51,56,"pl-k"]],[],[[26,31,"pl-k"]],[[2,8,"pl-k"],[15,18,"pl-c1"],[34,43,"pl-c1"]],[],[[0,6,"pl-k"],[14,25,"pl-smi"],[26,31,"pl-k"],[51,56,"pl-k"]],[[2,8,"pl-k"],[15,18,"pl-c1"]],[],[[0,6,"pl-k"],[14,25,"pl-smi"],[26,31,"pl-k"],[51,56,"pl-k"]],[[26,31,"pl-k"]],[[2,8,"pl-k"],[15,18,"pl-c1"]],[],[[0,6,"pl-k"],[14,25,"pl-smi"],[26,31,"pl-k"],[51,56,"pl-k"]],[[26,31,"pl-k"]],[[2,8,"pl-k"],[15,18,"pl-c1"]],[],[[0,6,"pl-k"],[14,25,"pl-smi"],[26,31,"pl-k"]],[[26,31,"pl-k"]],[[2,8,"pl-k"],[15,18,"pl-c1"]],[],[[0,6,"pl-k"],[14,25,"pl-smi"],[26,31,"pl-k"],[51,56,"pl-k"]],[[26,31,"pl-k"]],[[2,8,"pl-k"],[15,18,"pl-c1"]],[],[[0,6,"pl-k"],[14,25,"pl-smi"],[26,31,"pl-k"],[51,56,"pl-k"]],[[26,31,"pl-k"]],[[26,31,"pl-k"]],[[2,8,"pl-k"],[15,18,"pl-c1"]],[],[[0,6,"pl-k"]],[[0,11,"pl-c1"],[12,17,"pl-k"],[37,42,"pl-k"]],[[12,17,"pl-k"]],[[12,17,"pl-k"]],[[2,8,"pl-k"],[15,18,"pl-c1"]],[],[[0,6,"pl-k"],[14,27,"pl-smi"],[28,33,"pl-k"]],[[2,8,"pl-k"],[15,20,"pl-c1"]],[],[[0,6,"pl-k"],[14,27,"pl-smi"],[28,33,"pl-k"],[53,58,"pl-k"],[59,63,"pl-k"]],[[28,34,"pl-c1"]],[[28,33,"pl-k"]],[[2,8,"pl-k"],[15,20,"pl-c1"]],[],[[0,6,"pl-k"],[14,27,"pl-smi"],[28,33,"pl-k"],[53,58,"pl-k"],[59,63,"pl-k"]],[[28,34,"pl-c1"]],[[28,33,"pl-k"]],[],[[2,8,"pl-k"],[15,20,"pl-c1"]],[],[[0,6,"pl-k"],[14,27,"pl-smi"],[28,33,"pl-k"],[53,58,"pl-k"]],[[28,33,"pl-k"],[34,38,"pl-k"],[46,52,"pl-c1"]],[[28,33,"pl-k"]],[[2,8,"pl-k"],[15,20,"pl-c1"]],[],[[0,6,"pl-k"],[14,27,"pl-smi"],[28,33,"pl-k"],[53,58,"pl-k"]],[[28,33,"pl-k"],[34,38,"pl-k"],[46,52,"pl-c1"]],[[28,33,"pl-k"]],[],[[2,8,"pl-k"],[15,20,"pl-c1"]],[],[],[[0,6,"pl-k"],[14,27,"pl-smi"],[28,33,"pl-k"],[53,58,"pl-k"]],[[28,33,"pl-k"]],[[2,8,"pl-k"],[15,20,"pl-c1"]],[],[[0,6,"pl-k"],[14,27,"pl-smi"],[28,33,"pl-k"],[53,58,"pl-k"]],[[28,33,"pl-k"]],[],[[2,8,"pl-k"],[15,20,"pl-c1"]],[],[[0,6,"pl-k"],[14,27,"pl-smi"],[28,33,"pl-k"],[53,58,"pl-k"]],[[28,33,"pl-k"]],[[28,33,"pl-k"]],[[2,8,"pl-k"],[15,20,"pl-c1"]],[],[[0,6,"pl-k"],[14,27,"pl-smi"],[28,33,"pl-k"],[53,58,"pl-k"]],[[28,33,"pl-k"]],[[28,33,"pl-k"]],[],[[2,8,"pl-k"],[15,20,"pl-c1"]],[],[[0,6,"pl-k"],[14,27,"pl-smi"],[28,33,"pl-k"],[53,59,"pl-c1"]],[],[[28,33,"pl-k"]],[[2,8,"pl-k"],[15,20,"pl-c1"],[43,52,"pl-c1"]],[],[],[[0,6,"pl-k"],[14,27,"pl-smi"],[28,33,"pl-k"]],[],[[28,33,"pl-k"]],[[2,8,"pl-k"],[15,20,"pl-c1"],[27,36,"pl-c1"]],[],[[0,6,"pl-k"],[14,27,"pl-smi"],[28,33,"pl-k"],[53,58,"pl-k"]],[[28,34,"pl-c1"]],[],[[28,33,"pl-k"]],[[2,8,"pl-k"],[15,20,"pl-c1"],[52,61,"pl-c1"]],[],[],[[0,6,"pl-k"],[14,27,"pl-smi"],[28,33,"pl-k"],[53,58,"pl-k"]],[],[[28,33,"pl-k"]],[[2,8,"pl-k"],[15,20,"pl-c1"],[36,45,"pl-c1"]],[],[[0,6,"pl-k"],[14,28,"pl-smi"],[29,34,"pl-k"]],[[2,8,"pl-k"],[15,21,"pl-c1"]],[],[[0,6,"pl-k"],[14,28,"pl-smi"],[29,34,"pl-k"],[54,59,"pl-k"]],[[2,8,"pl-k"],[15,21,"pl-c1"]],[],[[0,6,"pl-k"],[14,28,"pl-smi"],[29,34,"pl-k"],[54,59,"pl-k"],[60,64,"pl-k"]],[[29,35,"pl-c1"]],[[29,34,"pl-k"]],[[2,8,"pl-k"],[15,21,"pl-c1"]],[],[[0,6,"pl-k"],[14,28,"pl-smi"],[29,34,"pl-k"],[54,59,"pl-k"],[60,64,"pl-k"]],[[29,35,"pl-c1"]],[[29,34,"pl-k"]],[],[[2,8,"pl-k"],[15,21,"pl-c1"]],[],[[0,6,"pl-k"],[14,28,"pl-smi"],[29,34,"pl-k"],[54,59,"pl-k"]],[[29,34,"pl-k"],[35,39,"pl-k"],[47,53,"pl-c1"]],[[29,34,"pl-k"]],[[2,8,"pl-k"],[15,21,"pl-c1"]],[],[[0,6,"pl-k"],[14,28,"pl-smi"],[29,34,"pl-k"],[54,59,"pl-k"]],[[29,34,"pl-k"],[35,39,"pl-k"],[47,53,"pl-c1"]],[[29,34,"pl-k"]],[],[[2,8,"pl-k"],[15,21,"pl-c1"]],[],[],[[0,6,"pl-k"],[14,28,"pl-smi"],[29,34,"pl-k"],[54,59,"pl-k"]],[[29,34,"pl-k"]],[[2,8,"pl-k"],[15,21,"pl-c1"]],[],[[0,6,"pl-k"],[14,28,"pl-smi"],[29,34,"pl-k"],[54,59,"pl-k"]],[[29,34,"pl-k"]],[],[[2,8,"pl-k"],[15,21,"pl-c1"]],[],[[0,6,"pl-k"],[14,28,"pl-smi"],[29,34,"pl-k"],[54,59,"pl-k"]],[[29,34,"pl-k"]],[[29,34,"pl-k"]],[[2,8,"pl-k"],[15,21,"pl-c1"]],[],[[0,6,"pl-k"],[14,28,"pl-smi"],[29,34,"pl-k"],[54,59,"pl-k"]],[[29,34,"pl-k"]],[[29,34,"pl-k"]],[],[[2,8,"pl-k"],[15,21,"pl-c1"]],[],[[0,6,"pl-k"],[14,29,"pl-smi"],[30,35,"pl-k"]],[[2,8,"pl-k"],[15,22,"pl-c1"]],[],[[0,6,"pl-k"],[14,29,"pl-smi"],[30,35,"pl-k"],[55,60,"pl-k"]],[[2,8,"pl-k"],[15,22,"pl-c1"]],[],[],[[0,6,"pl-k"],[7,11,"pl-k"],[12,24,"pl-smi"]],[[2,8,"pl-k"],[15,19,"pl-c1"]],[],[],[[0,6,"pl-k"],[14,26,"pl-smi"],[27,32,"pl-k"],[49,55,"pl-k"],[62,66,"pl-c1"]],[],[[0,6,"pl-k"],[7,11,"pl-k"],[12,24,"pl-smi"],[35,39,"pl-c1"]],[],[[0,6,"pl-k"],[19,31,"pl-smi"],[34,39,"pl-k"],[42,48,"pl-k"],[55,59,"pl-c1"]],[],[[0,6,"pl-k"],[7,10,"pl-k"],[11,23,"pl-smi"],[26,31,"pl-k"],[34,40,"pl-k"],[47,51,"pl-c1"]],[],[[0,6,"pl-k"],[7,13,"pl-c1"],[14,36,"pl-smi"],[39,44,"pl-k"],[47,53,"pl-k"],[60,74,"pl-c1"]],[],[[0,6,"pl-k"],[7,15,"pl-c1"],[16,30,"pl-smi"],[33,38,"pl-k"],[41,47,"pl-k"],[54,60,"pl-c1"]],[],[[0,6,"pl-k"],[7,11,"pl-k"]],[[0,29,"pl-c1"]],[[8,29,"pl-c1"],[30,39,"pl-c1"]],[],[],[[0,6,"pl-k"],[7,11,"pl-k"],[12,39,"pl-smi"]],[[8,27,"pl-c1"],[28,37,"pl-c1"]],[],[],[[0,6,"pl-k"],[7,11,"pl-k"],[12,37,"pl-smi"]],[[18,25,"pl-c1"],[48,53,"pl-k"]],[[8,25,"pl-c1"]],[],[],[[0,6,"pl-k"],[7,11,"pl-k"],[12,38,"pl-smi"],[39,42,"pl-k"]],[[8,26,"pl-c1"]],[],[],[[0,6,"pl-k"],[7,11,"pl-k"],[12,35,"pl-smi"],[36,40,"pl-k"],[53,68,"pl-c1"]],[],[[0,6,"pl-k"],[7,11,"pl-k"],[12,38,"pl-smi"]],[[8,26,"pl-c1"],[27,36,"pl-c1"]],[],[],[[0,6,"pl-k"],[7,11,"pl-k"],[12,42,"pl-smi"],[43,49,"pl-c1"],[55,61,"pl-c1"]],[[8,30,"pl-c1"]],[],[],[[0,6,"pl-k"],[7,11,"pl-k"],[12,36,"pl-smi"],[37,43,"pl-c1"],[49,55,"pl-c1"]],[[8,24,"pl-c1"]],[],[],[[0,6,"pl-k"],[7,11,"pl-k"],[12,37,"pl-smi"],[38,44,"pl-c1"],[50,56,"pl-c1"]],[[8,25,"pl-c1"]],[],[],[[0,6,"pl-k"],[7,11,"pl-k"],[12,34,"pl-smi"],[35,40,"pl-k"]],[[35,40,"pl-k"]],[[8,22,"pl-c1"]],[],[[0,6,"pl-k"],[7,11,"pl-k"],[12,41,"pl-smi"],[42,47,"pl-k"]],[[8,29,"pl-c1"]],[],[[1,6,"pl-k"]],[[0,6,"pl-k"],[7,11,"pl-k"],[12,35,"pl-smi"],[36,41,"pl-k"]],[[36,41,"pl-k"]],[[8,23,"pl-c1"]],[],[[1,6,"pl-k"]],[],[[0,6,"pl-k"],[7,11,"pl-k"],[12,34,"pl-smi"],[35,39,"pl-k"],[52,66,"pl-c1"]],[[0,6,"pl-k"],[7,11,"pl-k"],[12,39,"pl-smi"],[40,44,"pl-k"]],[[8,27,"pl-c1"]],[],[],[[0,6,"pl-k"],[7,11,"pl-k"],[12,34,"pl-smi"],[35,39,"pl-k"],[52,66,"pl-c1"]],[],[[0,6,"pl-k"],[7,11,"pl-k"],[12,32,"pl-smi"],[33,37,"pl-k"],[50,62,"pl-c1"]],[],[[0,6,"pl-k"],[7,11,"pl-k"],[12,34,"pl-smi"],[35,39,"pl-k"],[52,66,"pl-c1"]],[],[[0,6,"pl-k"],[7,11,"pl-k"],[12,33,"pl-smi"],[34,39,"pl-k"]],[[8,21,"pl-c1"]],[],[],[[0,6,"pl-k"],[7,11,"pl-k"],[12,29,"pl-smi"],[30,35,"pl-k"],[55,58,"pl-k"]],[[8,17,"pl-c1"]],[],[[0,6,"pl-k"],[7,11,"pl-k"],[12,40,"pl-smi"],[41,46,"pl-k"]],[[41,46,"pl-k"]],[[8,28,"pl-c1"]],[],[[0,6,"pl-k"],[7,11,"pl-k"],[12,47,"pl-smi"],[48,53,"pl-k"]],[[8,35,"pl-c1"]],[],[[1,6,"pl-k"]],[[0,6,"pl-k"],[7,11,"pl-k"],[12,41,"pl-smi"],[42,47,"pl-k"]],[[42,47,"pl-k"]],[[8,29,"pl-c1"]],[],[[1,6,"pl-k"]],[],[[1,6,"pl-k"]],[[0,6,"pl-k"],[7,11,"pl-k"],[12,58,"pl-smi"],[59,63,"pl-k"]],[[8,46,"pl-c1"]],[],[],[[0,6,"pl-k"],[7,11,"pl-k"],[12,55,"pl-smi"],[56,60,"pl-k"]],[[8,43,"pl-c1"]],[],[],[[0,6,"pl-k"],[7,11,"pl-k"],[12,51,"pl-smi"]],[[18,37,"pl-c1"]],[[8,39,"pl-c1"]],[],[[1,6,"pl-k"]],[],[[0,6,"pl-k"],[7,11,"pl-k"],[12,30,"pl-smi"]],[[8,18,"pl-c1"],[19,28,"pl-c1"]],[],[],[[1,6,"pl-k"]],[[0,6,"pl-k"],[7,11,"pl-k"],[12,36,"pl-smi"],[37,42,"pl-k"]],[[37,42,"pl-k"]],[[8,24,"pl-c1"]],[],[],[[0,6,"pl-k"],[7,11,"pl-k"],[12,37,"pl-smi"]],[[2,4,"pl-k"]],[[4,15,"pl-k"],[36,53,"pl-c1"]],[[4,8,"pl-k"]],[[10,27,"pl-c1"]],[],[],[],[[0,6,"pl-k"],[7,11,"pl-k"],[12,38,"pl-smi"],[39,44,"pl-k"],[45,49,"pl-k"],[65,71,"pl-c1"]],[[2,19,"pl-c1"],[26,46,"pl-c1"]],[],[],[[0,6,"pl-k"],[7,11,"pl-k"],[12,45,"pl-smi"],[48,53,"pl-k"]],[[2,4,"pl-k"]],[[4,10,"pl-k"],[11,22,"pl-k"],[43,68,"pl-c1"]],[],[[2,8,"pl-k"],[10,11,"pl-c1"],[13,60,"pl-c"],[13,15,"pl-c"]],[],[],[[0,6,"pl-k"],[16,35,"pl-c1"],[38,43,"pl-k"]],[[2,4,"pl-k"],[17,23,"pl-k"],[24,35,"pl-k"],[56,67,"pl-c1"]],[[2,8,"pl-k"],[9,16,"pl-c1"]],[],[[1,6,"pl-k"]],[],[[0,79,"pl-c"],[0,2,"pl-c"]],[],[[2,22,"pl-c"],[2,4,"pl-c"]],[],[[1,6,"pl-k"],[7,30,"pl-c"],[7,9,"pl-c"]]],"colorizedLines":null,"csv":null,"csvError":null,"dependabotInfo":{"showConfigurationBanner":false,"configFilePath":null,"networkDependabotPath":"/yhirose/cpp-httplib/network/updates","dismissConfigurationNoticePath":"/settings/dismiss-notice/dependabot_configuration_notice","configurationNoticeDismissed":null},"displayName":"httplib.h","displayUrl":"https://github.com/yhirose/cpp-httplib/blob/master/httplib.h?raw=true","headerInfo":{"blobSize":"345 KB","deleteTooltip":"You must be signed in to make or propose changes","editTooltip":"You must be signed in to make or propose changes","ghDesktopPath":"https://desktop.github.com","isGitLfs":false,"onBranch":true,"shortPath":"e1eb470","siteNavLoginPath":"/login?return_to=https%3A%2F%2Fgithub.com%2Fyhirose%2Fcpp-httplib%2Fblob%2Fmaster%2Fhttplib.h","isCSV":false,"isRichtext":false,"toc":null,"lineInfo":{"truncatedLoc":"10524","truncatedSloc":"8865"},"mode":"file"},"image":false,"isCodeownersFile":null,"isPlain":false,"isValidLegacyIssueTemplate":false,"issueTemplate":null,"discussionTemplate":null,"language":"C++","languageID":43,"large":false,"planSupportInfo":{"repoIsFork":null,"repoOwnedByCurrentUser":null,"requestFullPath":"/yhirose/cpp-httplib/blob/master/httplib.h","showFreeOrgGatedFeatureMessage":null,"showPlanSupportBanner":null,"upgradeDataAttributes":null,"upgradePath":null},"publishBannersInfo":{"dismissActionNoticePath":"/settings/dismiss-notice/publish_action_from_dockerfile","releasePath":"/yhirose/cpp-httplib/releases/new?marketplace=true","showPublishActionBanner":false},"rawBlobUrl":"https://github.com/yhirose/cpp-httplib/raw/refs/heads/master/httplib.h","renderImageOrRaw":false,"richText":null,"renderedFileInfo":null,"shortPath":null,"symbolsEnabled":true,"tabSize":8,"topBannersInfo":{"overridingGlobalFundingFile":false,"globalPreferredFundingPath":null,"showInvalidCitationWarning":false,"citationHelpUrl":"https://docs.github.com/github/creating-cloning-and-archiving-repositories/creating-a-repository-on-github/about-citation-files","actionsOnboardingTip":null},"truncated":false,"viewable":true,"workflowRedirectUrl":null,"symbols":{"timed_out":true,"not_analyzed":false,"symbols":[{"name":"make_unique","kind":"function","ident_start":7583,"ident_end":7594,"extent_start":7507,"extent_end":7679,"fully_qualified_name":"make_unique","ident_utf16":{"start":{"line_number":347,"utf16_col":0},"end":{"line_number":347,"utf16_col":11}},"extent_utf16":{"start":{"line_number":346,"utf16_col":0},"end":{"line_number":349,"utf16_col":1}}},{"name":"make_unique","kind":"function","ident_start":7775,"ident_end":7786,"extent_start":7700,"extent_end":7896,"fully_qualified_name":"make_unique","ident_utf16":{"start":{"line_number":353,"utf16_col":0},"end":{"line_number":353,"utf16_col":11}},"extent_utf16":{"start":{"line_number":352,"utf16_col":0},"end":{"line_number":356,"utf16_col":1}}},{"name":"RT","kind":"type","ident_start":7851,"ident_end":7853,"extent_start":7806,"extent_end":7854,"fully_qualified_name":"RT","ident_utf16":{"start":{"line_number":354,"utf16_col":47},"end":{"line_number":354,"utf16_col":49}},"extent_utf16":{"start":{"line_number":354,"utf16_col":2},"end":{"line_number":354,"utf16_col":50}}},{"name":"to_lower","kind":"function","ident_start":7944,"ident_end":7952,"extent_start":7923,"extent_end":9436,"fully_qualified_name":"to_lower","ident_utf16":{"start":{"line_number":360,"utf16_col":21},"end":{"line_number":360,"utf16_col":29}},"extent_utf16":{"start":{"line_number":360,"utf16_col":0},"end":{"line_number":382,"utf16_col":1}}},{"name":"equal","kind":"function","ident_start":9450,"ident_end":9455,"extent_start":9438,"extent_end":9671,"fully_qualified_name":"equal","ident_utf16":{"start":{"line_number":384,"utf16_col":12},"end":{"line_number":384,"utf16_col":17}},"extent_utf16":{"start":{"line_number":384,"utf16_col":0},"end":{"line_number":389,"utf16_col":1}}},{"name":"equal_to","kind":"class","ident_start":9680,"ident_end":9688,"extent_start":9673,"extent_end":9790,"fully_qualified_name":"equal_to","ident_utf16":{"start":{"line_number":391,"utf16_col":7},"end":{"line_number":391,"utf16_col":15}},"extent_utf16":{"start":{"line_number":391,"utf16_col":0},"end":{"line_number":395,"utf16_col":1}}},{"name":"hash","kind":"class","ident_start":9800,"ident_end":9804,"extent_start":9793,"extent_end":10380,"fully_qualified_name":"hash","ident_utf16":{"start":{"line_number":397,"utf16_col":7},"end":{"line_number":397,"utf16_col":11}},"extent_utf16":{"start":{"line_number":397,"utf16_col":0},"end":{"line_number":411,"utf16_col":1}}},{"name":"hash_core","kind":"function","ident_start":9922,"ident_end":9931,"extent_start":9915,"extent_end":10378,"fully_qualified_name":"hash::hash_core","ident_utf16":{"start":{"line_number":402,"utf16_col":9},"end":{"line_number":402,"utf16_col":18}},"extent_utf16":{"start":{"line_number":402,"utf16_col":2},"end":{"line_number":410,"utf16_col":3}}},{"name":"scope_exit","kind":"class","ident_start":10507,"ident_end":10517,"extent_start":10500,"extent_end":11187,"fully_qualified_name":"scope_exit","ident_utf16":{"start":{"line_number":418,"utf16_col":7},"end":{"line_number":418,"utf16_col":17}},"extent_utf16":{"start":{"line_number":418,"utf16_col":0},"end":{"line_number":441,"utf16_col":1}}},{"name":"scope_exit","kind":"function","ident_start":10531,"ident_end":10541,"extent_start":10522,"extent_end":10641,"fully_qualified_name":"scope_exit::scope_exit","ident_utf16":{"start":{"line_number":419,"utf16_col":11},"end":{"line_number":419,"utf16_col":21}},"extent_utf16":{"start":{"line_number":419,"utf16_col":2},"end":{"line_number":420,"utf16_col":68}}},{"name":"scope_exit","kind":"function","ident_start":10645,"ident_end":10655,"extent_start":10645,"extent_end":10819,"fully_qualified_name":"scope_exit::scope_exit","ident_utf16":{"start":{"line_number":422,"utf16_col":2},"end":{"line_number":422,"utf16_col":12}},"extent_utf16":{"start":{"line_number":422,"utf16_col":2},"end":{"line_number":426,"utf16_col":3}}},{"name":"release","kind":"function","ident_start":10910,"ident_end":10917,"extent_start":10905,"extent_end":10961,"fully_qualified_name":"scope_exit::release","ident_utf16":{"start":{"line_number":432,"utf16_col":7},"end":{"line_number":432,"utf16_col":14}},"extent_utf16":{"start":{"line_number":432,"utf16_col":2},"end":{"line_number":432,"utf16_col":58}}},{"name":"scope_exit","kind":"function","ident_start":10974,"ident_end":10984,"extent_start":10974,"extent_end":11014,"fully_qualified_name":"scope_exit::scope_exit","ident_utf16":{"start":{"line_number":435,"utf16_col":2},"end":{"line_number":435,"utf16_col":12}},"extent_utf16":{"start":{"line_number":435,"utf16_col":2},"end":{"line_number":435,"utf16_col":42}}},{"name":"SSLVerifierResponse","kind":"type","ident_start":11218,"ident_end":11237,"extent_start":11213,"extent_end":11485,"fully_qualified_name":"SSLVerifierResponse","ident_utf16":{"start":{"line_number":445,"utf16_col":5},"end":{"line_number":445,"utf16_col":24}},"extent_utf16":{"start":{"line_number":445,"utf16_col":0},"end":{"line_number":452,"utf16_col":1}}},{"name":"StatusCode","kind":"type","ident_start":11493,"ident_end":11503,"extent_start":11488,"extent_end":13406,"fully_qualified_name":"StatusCode","ident_utf16":{"start":{"line_number":454,"utf16_col":5},"end":{"line_number":454,"utf16_col":15}},"extent_utf16":{"start":{"line_number":454,"utf16_col":0},"end":{"line_number":527,"utf16_col":1}}},{"name":"MultipartFormData","kind":"class","ident_start":13820,"ident_end":13837,"extent_start":13813,"extent_end":13936,"fully_qualified_name":"MultipartFormData","ident_utf16":{"start":{"line_number":541,"utf16_col":7},"end":{"line_number":541,"utf16_col":24}},"extent_utf16":{"start":{"line_number":541,"utf16_col":0},"end":{"line_number":546,"utf16_col":1}}},{"name":"DataSink","kind":"class","ident_start":14084,"ident_end":14092,"extent_start":14078,"extent_end":14894,"fully_qualified_name":"DataSink","ident_utf16":{"start":{"line_number":550,"utf16_col":6},"end":{"line_number":550,"utf16_col":14}},"extent_utf16":{"start":{"line_number":550,"utf16_col":0},"end":{"line_number":581,"utf16_col":1}}},{"name":"DataSink","kind":"function","ident_start":14105,"ident_end":14113,"extent_start":14105,"extent_end":14141,"fully_qualified_name":"DataSink::DataSink","ident_utf16":{"start":{"line_number":552,"utf16_col":2},"end":{"line_number":552,"utf16_col":10}},"extent_utf16":{"start":{"line_number":552,"utf16_col":2},"end":{"line_number":552,"utf16_col":38}}},{"name":"DataSink","kind":"function","ident_start":14145,"ident_end":14153,"extent_start":14145,"extent_end":14181,"fully_qualified_name":"DataSink::DataSink","ident_utf16":{"start":{"line_number":554,"utf16_col":2},"end":{"line_number":554,"utf16_col":10}},"extent_utf16":{"start":{"line_number":554,"utf16_col":2},"end":{"line_number":554,"utf16_col":38}}},{"name":"DataSink","kind":"function","ident_start":14234,"ident_end":14242,"extent_start":14234,"extent_end":14265,"fully_qualified_name":"DataSink::DataSink","ident_utf16":{"start":{"line_number":556,"utf16_col":2},"end":{"line_number":556,"utf16_col":10}},"extent_utf16":{"start":{"line_number":556,"utf16_col":2},"end":{"line_number":556,"utf16_col":33}}},{"name":"data_sink_streambuf","kind":"class","ident_start":14545,"ident_end":14564,"extent_start":14539,"extent_end":14863,"fully_qualified_name":"DataSink::data_sink_streambuf","ident_utf16":{"start":{"line_number":566,"utf16_col":8},"end":{"line_number":566,"utf16_col":27}},"extent_utf16":{"start":{"line_number":566,"utf16_col":2},"end":{"line_number":578,"utf16_col":3}}},{"name":"data_sink_streambuf","kind":"function","ident_start":14620,"ident_end":14639,"extent_start":14611,"extent_end":14672,"fully_qualified_name":"DataSink::data_sink_streambuf::data_sink_streambuf","ident_utf16":{"start":{"line_number":568,"utf16_col":13},"end":{"line_number":568,"utf16_col":32}},"extent_utf16":{"start":{"line_number":568,"utf16_col":4},"end":{"line_number":568,"utf16_col":65}}},{"name":"xsputn","kind":"function","ident_start":14707,"ident_end":14713,"extent_start":14691,"extent_end":14826,"fully_qualified_name":"DataSink::data_sink_streambuf::xsputn","ident_utf16":{"start":{"line_number":571,"utf16_col":20},"end":{"line_number":571,"utf16_col":26}},"extent_utf16":{"start":{"line_number":571,"utf16_col":4},"end":{"line_number":574,"utf16_col":5}}},{"name":"MultipartFormDataProvider","kind":"class","ident_start":15170,"ident_end":15195,"extent_start":15163,"extent_end":15312,"fully_qualified_name":"MultipartFormDataProvider","ident_utf16":{"start":{"line_number":591,"utf16_col":7},"end":{"line_number":591,"utf16_col":32}},"extent_utf16":{"start":{"line_number":591,"utf16_col":0},"end":{"line_number":596,"utf16_col":1}}},{"name":"ContentReader","kind":"class","ident_start":15739,"ident_end":15752,"extent_start":15733,"extent_end":16467,"fully_qualified_name":"ContentReader","ident_utf16":{"start":{"line_number":609,"utf16_col":6},"end":{"line_number":609,"utf16_col":19}},"extent_utf16":{"start":{"line_number":609,"utf16_col":0},"end":{"line_number":630,"utf16_col":1}}},{"name":"ContentReader","kind":"function","ident_start":15979,"ident_end":15992,"extent_start":15979,"extent_end":16135,"fully_qualified_name":"ContentReader::ContentReader","ident_utf16":{"start":{"line_number":615,"utf16_col":2},"end":{"line_number":615,"utf16_col":15}},"extent_utf16":{"start":{"line_number":615,"utf16_col":2},"end":{"line_number":617,"utf16_col":57}}},{"name":"Request","kind":"class","ident_start":16556,"ident_end":16563,"extent_start":16549,"extent_end":18423,"fully_qualified_name":"Request","ident_utf16":{"start":{"line_number":635,"utf16_col":7},"end":{"line_number":635,"utf16_col":14}},"extent_utf16":{"start":{"line_number":635,"utf16_col":0},"end":{"line_number":690,"utf16_col":1}}},{"name":"Response","kind":"class","ident_start":18433,"ident_end":18441,"extent_start":18426,"extent_end":20698,"fully_qualified_name":"Response","ident_utf16":{"start":{"line_number":692,"utf16_col":7},"end":{"line_number":692,"utf16_col":15}},"extent_utf16":{"start":{"line_number":692,"utf16_col":0},"end":{"line_number":748,"utf16_col":1}}},{"name":"Response","kind":"function","ident_start":20034,"ident_end":20042,"extent_start":20034,"extent_end":20055,"fully_qualified_name":"Response::Response","ident_utf16":{"start":{"line_number":729,"utf16_col":2},"end":{"line_number":729,"utf16_col":10}},"extent_utf16":{"start":{"line_number":729,"utf16_col":2},"end":{"line_number":729,"utf16_col":23}}},{"name":"Response","kind":"function","ident_start":20058,"ident_end":20066,"extent_start":20058,"extent_end":20095,"fully_qualified_name":"Response::Response","ident_utf16":{"start":{"line_number":730,"utf16_col":2},"end":{"line_number":730,"utf16_col":10}},"extent_utf16":{"start":{"line_number":730,"utf16_col":2},"end":{"line_number":730,"utf16_col":39}}},{"name":"Response","kind":"function","ident_start":20149,"ident_end":20157,"extent_start":20149,"extent_end":20181,"fully_qualified_name":"Response::Response","ident_utf16":{"start":{"line_number":732,"utf16_col":2},"end":{"line_number":732,"utf16_col":10}},"extent_utf16":{"start":{"line_number":732,"utf16_col":2},"end":{"line_number":732,"utf16_col":34}}},{"name":"Stream","kind":"class","ident_start":20707,"ident_end":20713,"extent_start":20701,"extent_end":21299,"fully_qualified_name":"Stream","ident_utf16":{"start":{"line_number":750,"utf16_col":6},"end":{"line_number":750,"utf16_col":12}},"extent_utf16":{"start":{"line_number":750,"utf16_col":0},"end":{"line_number":768,"utf16_col":1}}},{"name":"is_readable","kind":"method","ident_start":20771,"ident_end":20782,"extent_start":20758,"extent_end":20795,"fully_qualified_name":"Stream::is_readable","ident_utf16":{"start":{"line_number":754,"utf16_col":15},"end":{"line_number":754,"utf16_col":26}},"extent_utf16":{"start":{"line_number":754,"utf16_col":2},"end":{"line_number":754,"utf16_col":39}}},{"name":"wait_readable","kind":"method","ident_start":20811,"ident_end":20824,"extent_start":20798,"extent_end":20837,"fully_qualified_name":"Stream::wait_readable","ident_utf16":{"start":{"line_number":755,"utf16_col":15},"end":{"line_number":755,"utf16_col":28}},"extent_utf16":{"start":{"line_number":755,"utf16_col":2},"end":{"line_number":755,"utf16_col":41}}},{"name":"wait_writable","kind":"method","ident_start":20853,"ident_end":20866,"extent_start":20840,"extent_end":20879,"fully_qualified_name":"Stream::wait_writable","ident_utf16":{"start":{"line_number":756,"utf16_col":15},"end":{"line_number":756,"utf16_col":28}},"extent_utf16":{"start":{"line_number":756,"utf16_col":2},"end":{"line_number":756,"utf16_col":41}}},{"name":"read","kind":"method","ident_start":20899,"ident_end":20903,"extent_start":20883,"extent_end":20932,"fully_qualified_name":"Stream::read","ident_utf16":{"start":{"line_number":758,"utf16_col":18},"end":{"line_number":758,"utf16_col":22}},"extent_utf16":{"start":{"line_number":758,"utf16_col":2},"end":{"line_number":758,"utf16_col":51}}},{"name":"write","kind":"method","ident_start":20951,"ident_end":20956,"extent_start":20935,"extent_end":20991,"fully_qualified_name":"Stream::write","ident_utf16":{"start":{"line_number":759,"utf16_col":18},"end":{"line_number":759,"utf16_col":23}},"extent_utf16":{"start":{"line_number":759,"utf16_col":2},"end":{"line_number":759,"utf16_col":58}}},{"name":"get_remote_ip_and_port","kind":"method","ident_start":21007,"ident_end":21029,"extent_start":20994,"extent_end":21068,"fully_qualified_name":"Stream::get_remote_ip_and_port","ident_utf16":{"start":{"line_number":760,"utf16_col":15},"end":{"line_number":760,"utf16_col":37}},"extent_utf16":{"start":{"line_number":760,"utf16_col":2},"end":{"line_number":760,"utf16_col":76}}},{"name":"get_local_ip_and_port","kind":"method","ident_start":21084,"ident_end":21105,"extent_start":21071,"extent_end":21144,"fully_qualified_name":"Stream::get_local_ip_and_port","ident_utf16":{"start":{"line_number":761,"utf16_col":15},"end":{"line_number":761,"utf16_col":36}},"extent_utf16":{"start":{"line_number":761,"utf16_col":2},"end":{"line_number":761,"utf16_col":75}}},{"name":"socket","kind":"method","ident_start":21164,"ident_end":21170,"extent_start":21147,"extent_end":21183,"fully_qualified_name":"Stream::socket","ident_utf16":{"start":{"line_number":762,"utf16_col":19},"end":{"line_number":762,"utf16_col":25}},"extent_utf16":{"start":{"line_number":762,"utf16_col":2},"end":{"line_number":762,"utf16_col":38}}},{"name":"duration","kind":"method","ident_start":21202,"ident_end":21210,"extent_start":21187,"extent_end":21223,"fully_qualified_name":"Stream::duration","ident_utf16":{"start":{"line_number":764,"utf16_col":17},"end":{"line_number":764,"utf16_col":25}},"extent_utf16":{"start":{"line_number":764,"utf16_col":2},"end":{"line_number":764,"utf16_col":38}}},{"name":"write","kind":"method","ident_start":21235,"ident_end":21240,"extent_start":21227,"extent_end":21258,"fully_qualified_name":"Stream::write","ident_utf16":{"start":{"line_number":766,"utf16_col":10},"end":{"line_number":766,"utf16_col":15}},"extent_utf16":{"start":{"line_number":766,"utf16_col":2},"end":{"line_number":766,"utf16_col":33}}},{"name":"write","kind":"method","ident_start":21269,"ident_end":21274,"extent_start":21261,"extent_end":21297,"fully_qualified_name":"Stream::write","ident_utf16":{"start":{"line_number":767,"utf16_col":10},"end":{"line_number":767,"utf16_col":15}},"extent_utf16":{"start":{"line_number":767,"utf16_col":2},"end":{"line_number":767,"utf16_col":38}}},{"name":"TaskQueue","kind":"class","ident_start":21308,"ident_end":21317,"extent_start":21302,"extent_end":21503,"fully_qualified_name":"TaskQueue","ident_utf16":{"start":{"line_number":770,"utf16_col":6},"end":{"line_number":770,"utf16_col":15}},"extent_utf16":{"start":{"line_number":770,"utf16_col":0},"end":{"line_number":779,"utf16_col":1}}},{"name":"TaskQueue","kind":"function","ident_start":21330,"ident_end":21339,"extent_start":21330,"extent_end":21352,"fully_qualified_name":"TaskQueue::TaskQueue","ident_utf16":{"start":{"line_number":772,"utf16_col":2},"end":{"line_number":772,"utf16_col":11}},"extent_utf16":{"start":{"line_number":772,"utf16_col":2},"end":{"line_number":772,"utf16_col":24}}},{"name":"enqueue","kind":"method","ident_start":21403,"ident_end":21410,"extent_start":21390,"extent_end":21441,"fully_qualified_name":"TaskQueue::enqueue","ident_utf16":{"start":{"line_number":775,"utf16_col":15},"end":{"line_number":775,"utf16_col":22}},"extent_utf16":{"start":{"line_number":775,"utf16_col":2},"end":{"line_number":775,"utf16_col":53}}},{"name":"shutdown","kind":"method","ident_start":21457,"ident_end":21465,"extent_start":21444,"extent_end":21472,"fully_qualified_name":"TaskQueue::shutdown","ident_utf16":{"start":{"line_number":776,"utf16_col":15},"end":{"line_number":776,"utf16_col":23}},"extent_utf16":{"start":{"line_number":776,"utf16_col":2},"end":{"line_number":776,"utf16_col":30}}},{"name":"on_idle","kind":"function","ident_start":21489,"ident_end":21496,"extent_start":21476,"extent_end":21501,"fully_qualified_name":"TaskQueue::on_idle","ident_utf16":{"start":{"line_number":778,"utf16_col":15},"end":{"line_number":778,"utf16_col":22}},"extent_utf16":{"start":{"line_number":778,"utf16_col":2},"end":{"line_number":778,"utf16_col":27}}},{"name":"ThreadPool","kind":"class","ident_start":21512,"ident_end":21522,"extent_start":21506,"extent_end":23332,"fully_qualified_name":"ThreadPool","ident_utf16":{"start":{"line_number":781,"utf16_col":6},"end":{"line_number":781,"utf16_col":16}},"extent_utf16":{"start":{"line_number":781,"utf16_col":0},"end":{"line_number":863,"utf16_col":1}}},{"name":"ThreadPool","kind":"function","ident_start":21569,"ident_end":21579,"extent_start":21560,"extent_end":21740,"fully_qualified_name":"ThreadPool::ThreadPool","ident_utf16":{"start":{"line_number":783,"utf16_col":11},"end":{"line_number":783,"utf16_col":21}},"extent_utf16":{"start":{"line_number":783,"utf16_col":2},"end":{"line_number":789,"utf16_col":3}}},{"name":"ThreadPool","kind":"function","ident_start":21744,"ident_end":21754,"extent_start":21744,"extent_end":21784,"fully_qualified_name":"ThreadPool::ThreadPool","ident_utf16":{"start":{"line_number":791,"utf16_col":2},"end":{"line_number":791,"utf16_col":12}},"extent_utf16":{"start":{"line_number":791,"utf16_col":2},"end":{"line_number":791,"utf16_col":42}}},{"name":"enqueue","kind":"function","ident_start":21829,"ident_end":21836,"extent_start":21824,"extent_end":22126,"fully_qualified_name":"ThreadPool::enqueue","ident_utf16":{"start":{"line_number":794,"utf16_col":7},"end":{"line_number":794,"utf16_col":14}},"extent_utf16":{"start":{"line_number":794,"utf16_col":2},"end":{"line_number":805,"utf16_col":3}}},{"name":"shutdown","kind":"function","ident_start":22135,"ident_end":22143,"extent_start":22130,"extent_end":22373,"fully_qualified_name":"ThreadPool::shutdown","ident_utf16":{"start":{"line_number":807,"utf16_col":7},"end":{"line_number":807,"utf16_col":15}},"extent_utf16":{"start":{"line_number":807,"utf16_col":2},"end":{"line_number":820,"utf16_col":3}}},{"name":"worker","kind":"class","ident_start":22393,"ident_end":22399,"extent_start":22386,"extent_end":23116,"fully_qualified_name":"ThreadPool::worker","ident_utf16":{"start":{"line_number":823,"utf16_col":9},"end":{"line_number":823,"utf16_col":15}},"extent_utf16":{"start":{"line_number":823,"utf16_col":2},"end":{"line_number":852,"utf16_col":3}}},{"name":"worker","kind":"function","ident_start":22415,"ident_end":22421,"extent_start":22406,"extent_end":22456,"fully_qualified_name":"ThreadPool::worker::worker","ident_utf16":{"start":{"line_number":824,"utf16_col":13},"end":{"line_number":824,"utf16_col":19}},"extent_utf16":{"start":{"line_number":824,"utf16_col":4},"end":{"line_number":824,"utf16_col":54}}},{"name":"MatcherBase","kind":"class","ident_start":23990,"ident_end":24001,"extent_start":23984,"extent_end":24153,"fully_qualified_name":"MatcherBase","ident_utf16":{"start":{"line_number":887,"utf16_col":6},"end":{"line_number":887,"utf16_col":17}},"extent_utf16":{"start":{"line_number":887,"utf16_col":0},"end":{"line_number":893,"utf16_col":1}}},{"name":"match","kind":"method","ident_start":24117,"ident_end":24122,"extent_start":24104,"extent_end":24151,"fully_qualified_name":"MatcherBase::match","ident_utf16":{"start":{"line_number":892,"utf16_col":15},"end":{"line_number":892,"utf16_col":20}},"extent_utf16":{"start":{"line_number":892,"utf16_col":2},"end":{"line_number":892,"utf16_col":49}}},{"name":"PathParamsMatcher","kind":"class","ident_start":24828,"ident_end":24845,"extent_start":24822,"extent_end":25518,"fully_qualified_name":"PathParamsMatcher","ident_utf16":{"start":{"line_number":913,"utf16_col":6},"end":{"line_number":913,"utf16_col":23}},"extent_utf16":{"start":{"line_number":913,"utf16_col":0},"end":{"line_number":932,"utf16_col":1}}},{"name":"match","kind":"method","ident_start":24940,"ident_end":24945,"extent_start":24935,"extent_end":24979,"fully_qualified_name":"PathParamsMatcher::match","ident_utf16":{"start":{"line_number":917,"utf16_col":7},"end":{"line_number":917,"utf16_col":12}},"extent_utf16":{"start":{"line_number":917,"utf16_col":2},"end":{"line_number":917,"utf16_col":46}}},{"name":"RegexMatcher","kind":"class","ident_start":25854,"ident_end":25866,"extent_start":25848,"extent_end":26048,"fully_qualified_name":"RegexMatcher","ident_utf16":{"start":{"line_number":942,"utf16_col":6},"end":{"line_number":942,"utf16_col":18}},"extent_utf16":{"start":{"line_number":942,"utf16_col":0},"end":{"line_number":950,"utf16_col":1}}},{"name":"RegexMatcher","kind":"function","ident_start":25906,"ident_end":25918,"extent_start":25906,"extent_end":25967,"fully_qualified_name":"RegexMatcher::RegexMatcher","ident_utf16":{"start":{"line_number":944,"utf16_col":2},"end":{"line_number":944,"utf16_col":14}},"extent_utf16":{"start":{"line_number":944,"utf16_col":2},"end":{"line_number":944,"utf16_col":63}}},{"name":"match","kind":"method","ident_start":25976,"ident_end":25981,"extent_start":25971,"extent_end":26015,"fully_qualified_name":"RegexMatcher::match","ident_utf16":{"start":{"line_number":946,"utf16_col":7},"end":{"line_number":946,"utf16_col":12}},"extent_utf16":{"start":{"line_number":946,"utf16_col":2},"end":{"line_number":946,"utf16_col":46}}},{"name":"Server","kind":"class","ident_start":26142,"ident_end":26148,"extent_start":26136,"extent_end":35050,"fully_qualified_name":"Server","ident_utf16":{"start":{"line_number":956,"utf16_col":6},"end":{"line_number":956,"utf16_col":12}},"extent_utf16":{"start":{"line_number":956,"utf16_col":0},"end":{"line_number":1167,"utf16_col":1}}},{"name":"HandlerResponse","kind":"type","ident_start":26348,"ident_end":26363,"extent_start":26337,"extent_end":26397,"fully_qualified_name":"Server::HandlerResponse","ident_utf16":{"start":{"line_number":963,"utf16_col":13},"end":{"line_number":963,"utf16_col":28}},"extent_utf16":{"start":{"line_number":963,"utf16_col":2},"end":{"line_number":966,"utf16_col":3}}},{"name":"is_valid","kind":"method","ident_start":26768,"ident_end":26776,"extent_start":26755,"extent_end":26785,"fully_qualified_name":"Server::is_valid","ident_utf16":{"start":{"line_number":980,"utf16_col":15},"end":{"line_number":980,"utf16_col":23}},"extent_utf16":{"start":{"line_number":980,"utf16_col":2},"end":{"line_number":980,"utf16_col":32}}},{"name":"set_base_dir","kind":"method","ident_start":27479,"ident_end":27491,"extent_start":27474,"extent_end":27584,"fully_qualified_name":"Server::set_base_dir","ident_utf16":{"start":{"line_number":993,"utf16_col":7},"end":{"line_number":993,"utf16_col":19}},"extent_utf16":{"start":{"line_number":993,"utf16_col":2},"end":{"line_number":994,"utf16_col":68}}},{"name":"set_mount_point","kind":"method","ident_start":27592,"ident_end":27607,"extent_start":27587,"extent_end":27716,"fully_qualified_name":"Server::set_mount_point","ident_utf16":{"start":{"line_number":995,"utf16_col":7},"end":{"line_number":995,"utf16_col":22}},"extent_utf16":{"start":{"line_number":995,"utf16_col":2},"end":{"line_number":996,"utf16_col":52}}},{"name":"remove_mount_point","kind":"method","ident_start":27724,"ident_end":27742,"extent_start":27719,"extent_end":27775,"fully_qualified_name":"Server::remove_mount_point","ident_utf16":{"start":{"line_number":997,"utf16_col":7},"end":{"line_number":997,"utf16_col":25}},"extent_utf16":{"start":{"line_number":997,"utf16_col":2},"end":{"line_number":997,"utf16_col":58}}},{"name":"bind_to_port","kind":"method","ident_start":29586,"ident_end":29598,"extent_start":29581,"extent_end":29656,"fully_qualified_name":"Server::bind_to_port","ident_utf16":{"start":{"line_number":1043,"utf16_col":7},"end":{"line_number":1043,"utf16_col":19}},"extent_utf16":{"start":{"line_number":1043,"utf16_col":2},"end":{"line_number":1043,"utf16_col":77}}},{"name":"bind_to_any_port","kind":"method","ident_start":29663,"ident_end":29679,"extent_start":29659,"extent_end":29727,"fully_qualified_name":"Server::bind_to_any_port","ident_utf16":{"start":{"line_number":1044,"utf16_col":6},"end":{"line_number":1044,"utf16_col":22}},"extent_utf16":{"start":{"line_number":1044,"utf16_col":2},"end":{"line_number":1044,"utf16_col":70}}},{"name":"listen_after_bind","kind":"method","ident_start":29735,"ident_end":29752,"extent_start":29730,"extent_end":29755,"fully_qualified_name":"Server::listen_after_bind","ident_utf16":{"start":{"line_number":1045,"utf16_col":7},"end":{"line_number":1045,"utf16_col":24}},"extent_utf16":{"start":{"line_number":1045,"utf16_col":2},"end":{"line_number":1045,"utf16_col":27}}},{"name":"listen","kind":"method","ident_start":29764,"ident_end":29770,"extent_start":29759,"extent_end":29828,"fully_qualified_name":"Server::listen","ident_utf16":{"start":{"line_number":1047,"utf16_col":7},"end":{"line_number":1047,"utf16_col":13}},"extent_utf16":{"start":{"line_number":1047,"utf16_col":2},"end":{"line_number":1047,"utf16_col":71}}},{"name":"is_running","kind":"method","ident_start":29837,"ident_end":29847,"extent_start":29832,"extent_end":29856,"fully_qualified_name":"Server::is_running","ident_utf16":{"start":{"line_number":1049,"utf16_col":7},"end":{"line_number":1049,"utf16_col":17}},"extent_utf16":{"start":{"line_number":1049,"utf16_col":2},"end":{"line_number":1049,"utf16_col":26}}},{"name":"wait_until_ready","kind":"method","ident_start":29864,"ident_end":29880,"extent_start":29859,"extent_end":29889,"fully_qualified_name":"Server::wait_until_ready","ident_utf16":{"start":{"line_number":1050,"utf16_col":7},"end":{"line_number":1050,"utf16_col":23}},"extent_utf16":{"start":{"line_number":1050,"utf16_col":2},"end":{"line_number":1050,"utf16_col":32}}},{"name":"stop","kind":"method","ident_start":29897,"ident_end":29901,"extent_start":29892,"extent_end":29904,"fully_qualified_name":"Server::stop","ident_utf16":{"start":{"line_number":1051,"utf16_col":7},"end":{"line_number":1051,"utf16_col":11}},"extent_utf16":{"start":{"line_number":1051,"utf16_col":2},"end":{"line_number":1051,"utf16_col":14}}},{"name":"decommission","kind":"method","ident_start":29912,"ident_end":29924,"extent_start":29907,"extent_end":29927,"fully_qualified_name":"Server::decommission","ident_utf16":{"start":{"line_number":1052,"utf16_col":7},"end":{"line_number":1052,"utf16_col":19}},"extent_utf16":{"start":{"line_number":1052,"utf16_col":2},"end":{"line_number":1052,"utf16_col":22}}},{"name":"process_request","kind":"method","ident_start":29999,"ident_end":30014,"extent_start":29994,"extent_end":30318,"fully_qualified_name":"Server::process_request","ident_utf16":{"start":{"line_number":1057,"utf16_col":7},"end":{"line_number":1057,"utf16_col":22}},"extent_utf16":{"start":{"line_number":1057,"utf16_col":2},"end":{"line_number":1061,"utf16_col":76}}},{"name":"make_matcher","kind":"method","ident_start":31290,"ident_end":31302,"extent_start":31244,"extent_end":31331,"fully_qualified_name":"Server::make_matcher","ident_utf16":{"start":{"line_number":1082,"utf16_col":2},"end":{"line_number":1082,"utf16_col":14}},"extent_utf16":{"start":{"line_number":1081,"utf16_col":2},"end":{"line_number":1082,"utf16_col":43}}},{"name":"create_server_socket","kind":"method","ident_start":31492,"ident_end":31512,"extent_start":31483,"extent_end":31666,"fully_qualified_name":"Server::create_server_socket","ident_utf16":{"start":{"line_number":1087,"utf16_col":11},"end":{"line_number":1087,"utf16_col":31}},"extent_utf16":{"start":{"line_number":1087,"utf16_col":2},"end":{"line_number":1089,"utf16_col":68}}},{"name":"bind_internal","kind":"method","ident_start":31673,"ident_end":31686,"extent_start":31669,"extent_end":31740,"fully_qualified_name":"Server::bind_internal","ident_utf16":{"start":{"line_number":1090,"utf16_col":6},"end":{"line_number":1090,"utf16_col":19}},"extent_utf16":{"start":{"line_number":1090,"utf16_col":2},"end":{"line_number":1090,"utf16_col":73}}},{"name":"listen_internal","kind":"method","ident_start":31748,"ident_end":31763,"extent_start":31743,"extent_end":31766,"fully_qualified_name":"Server::listen_internal","ident_utf16":{"start":{"line_number":1091,"utf16_col":7},"end":{"line_number":1091,"utf16_col":22}},"extent_utf16":{"start":{"line_number":1091,"utf16_col":2},"end":{"line_number":1091,"utf16_col":25}}},{"name":"routing","kind":"method","ident_start":31775,"ident_end":31782,"extent_start":31770,"extent_end":31826,"fully_qualified_name":"Server::routing","ident_utf16":{"start":{"line_number":1093,"utf16_col":7},"end":{"line_number":1093,"utf16_col":14}},"extent_utf16":{"start":{"line_number":1093,"utf16_col":2},"end":{"line_number":1093,"utf16_col":58}}},{"name":"handle_file_request","kind":"method","ident_start":31834,"ident_end":31853,"extent_start":31829,"extent_end":31889,"fully_qualified_name":"Server::handle_file_request","ident_utf16":{"start":{"line_number":1094,"utf16_col":7},"end":{"line_number":1094,"utf16_col":26}},"extent_utf16":{"start":{"line_number":1094,"utf16_col":2},"end":{"line_number":1094,"utf16_col":62}}},{"name":"dispatch_request","kind":"method","ident_start":31897,"ident_end":31913,"extent_start":31892,"extent_end":31999,"fully_qualified_name":"Server::dispatch_request","ident_utf16":{"start":{"line_number":1095,"utf16_col":7},"end":{"line_number":1095,"utf16_col":23}},"extent_utf16":{"start":{"line_number":1095,"utf16_col":2},"end":{"line_number":1096,"utf16_col":56}}},{"name":"dispatch_request_for_content_reader","kind":"method","ident_start":32007,"ident_end":32042,"extent_start":32002,"extent_end":32163,"fully_qualified_name":"Server::dispatch_request_for_content_reader","ident_utf16":{"start":{"line_number":1097,"utf16_col":7},"end":{"line_number":1097,"utf16_col":42}},"extent_utf16":{"start":{"line_number":1097,"utf16_col":2},"end":{"line_number":1099,"utf16_col":54}}},{"name":"parse_request_line","kind":"method","ident_start":32172,"ident_end":32190,"extent_start":32167,"extent_end":32226,"fully_qualified_name":"Server::parse_request_line","ident_utf16":{"start":{"line_number":1101,"utf16_col":7},"end":{"line_number":1101,"utf16_col":25}},"extent_utf16":{"start":{"line_number":1101,"utf16_col":2},"end":{"line_number":1101,"utf16_col":61}}},{"name":"apply_ranges","kind":"method","ident_start":32234,"ident_end":32246,"extent_start":32229,"extent_end":32358,"fully_qualified_name":"Server::apply_ranges","ident_utf16":{"start":{"line_number":1102,"utf16_col":7},"end":{"line_number":1102,"utf16_col":19}},"extent_utf16":{"start":{"line_number":1102,"utf16_col":2},"end":{"line_number":1103,"utf16_col":76}}},{"name":"write_response","kind":"method","ident_start":32366,"ident_end":32380,"extent_start":32361,"extent_end":32469,"fully_qualified_name":"Server::write_response","ident_utf16":{"start":{"line_number":1104,"utf16_col":7},"end":{"line_number":1104,"utf16_col":21}},"extent_utf16":{"start":{"line_number":1104,"utf16_col":2},"end":{"line_number":1105,"utf16_col":37}}},{"name":"write_response_with_content","kind":"method","ident_start":32477,"ident_end":32504,"extent_start":32472,"extent_end":32612,"fully_qualified_name":"Server::write_response_with_content","ident_utf16":{"start":{"line_number":1106,"utf16_col":7},"end":{"line_number":1106,"utf16_col":34}},"extent_utf16":{"start":{"line_number":1106,"utf16_col":2},"end":{"line_number":1107,"utf16_col":70}}},{"name":"write_response_core","kind":"method","ident_start":32620,"ident_end":32639,"extent_start":32615,"extent_end":32790,"fully_qualified_name":"Server::write_response_core","ident_utf16":{"start":{"line_number":1108,"utf16_col":7},"end":{"line_number":1108,"utf16_col":26}},"extent_utf16":{"start":{"line_number":1108,"utf16_col":2},"end":{"line_number":1110,"utf16_col":51}}},{"name":"write_content_with_provider","kind":"method","ident_start":32798,"ident_end":32825,"extent_start":32793,"extent_end":33007,"fully_qualified_name":"Server::write_content_with_provider","ident_utf16":{"start":{"line_number":1111,"utf16_col":7},"end":{"line_number":1111,"utf16_col":34}},"extent_utf16":{"start":{"line_number":1111,"utf16_col":2},"end":{"line_number":1113,"utf16_col":68}}},{"name":"read_content","kind":"method","ident_start":33015,"ident_end":33027,"extent_start":33010,"extent_end":33071,"fully_qualified_name":"Server::read_content","ident_utf16":{"start":{"line_number":1114,"utf16_col":7},"end":{"line_number":1114,"utf16_col":19}},"extent_utf16":{"start":{"line_number":1114,"utf16_col":2},"end":{"line_number":1114,"utf16_col":63}}},{"name":"read_content_with_content_receiver","kind":"method","ident_start":33081,"ident_end":33115,"extent_start":33074,"extent_end":33373,"fully_qualified_name":"Server::read_content_with_content_receiver","ident_utf16":{"start":{"line_number":1116,"utf16_col":2},"end":{"line_number":1116,"utf16_col":36}},"extent_utf16":{"start":{"line_number":1115,"utf16_col":2},"end":{"line_number":1119,"utf16_col":73}}},{"name":"read_content_core","kind":"method","ident_start":33381,"ident_end":33398,"extent_start":33376,"extent_end":33626,"fully_qualified_name":"Server::read_content_core","ident_utf16":{"start":{"line_number":1120,"utf16_col":7},"end":{"line_number":1120,"utf16_col":24}},"extent_utf16":{"start":{"line_number":1120,"utf16_col":2},"end":{"line_number":1123,"utf16_col":67}}},{"name":"process_and_close_socket","kind":"method","ident_start":33643,"ident_end":33667,"extent_start":33630,"extent_end":33683,"fully_qualified_name":"Server::process_and_close_socket","ident_utf16":{"start":{"line_number":1125,"utf16_col":15},"end":{"line_number":1125,"utf16_col":39}},"extent_utf16":{"start":{"line_number":1125,"utf16_col":2},"end":{"line_number":1125,"utf16_col":55}}},{"name":"MountPointEntry","kind":"class","ident_start":33781,"ident_end":33796,"extent_start":33774,"extent_end":33878,"fully_qualified_name":"Server::MountPointEntry","ident_utf16":{"start":{"line_number":1130,"utf16_col":9},"end":{"line_number":1130,"utf16_col":24}},"extent_utf16":{"start":{"line_number":1130,"utf16_col":2},"end":{"line_number":1134,"utf16_col":3}}},{"name":"Error","kind":"type","ident_start":35064,"ident_end":35069,"extent_start":35053,"extent_end":35421,"fully_qualified_name":"Error","ident_utf16":{"start":{"line_number":1169,"utf16_col":11},"end":{"line_number":1169,"utf16_col":16}},"extent_utf16":{"start":{"line_number":1169,"utf16_col":0},"end":{"line_number":1189,"utf16_col":1}}},{"name":"Result","kind":"class","ident_start":35530,"ident_end":35536,"extent_start":35524,"extent_end":36895,"fully_qualified_name":"Result","ident_utf16":{"start":{"line_number":1195,"utf16_col":6},"end":{"line_number":1195,"utf16_col":12}},"extent_utf16":{"start":{"line_number":1195,"utf16_col":0},"end":{"line_number":1229,"utf16_col":1}}},{"name":"Result","kind":"function","ident_start":35549,"ident_end":35555,"extent_start":35549,"extent_end":35568,"fully_qualified_name":"Result::Result","ident_utf16":{"start":{"line_number":1197,"utf16_col":2},"end":{"line_number":1197,"utf16_col":8}},"extent_utf16":{"start":{"line_number":1197,"utf16_col":2},"end":{"line_number":1197,"utf16_col":21}}},{"name":"Result","kind":"function","ident_start":35571,"ident_end":35577,"extent_start":35571,"extent_end":35766,"fully_qualified_name":"Result::Result","ident_utf16":{"start":{"line_number":1198,"utf16_col":2},"end":{"line_number":1198,"utf16_col":8}},"extent_utf16":{"start":{"line_number":1198,"utf16_col":2},"end":{"line_number":1201,"utf16_col":55}}},{"name":"error","kind":"function","ident_start":36281,"ident_end":36286,"extent_start":36275,"extent_end":36311,"fully_qualified_name":"Result::error","ident_utf16":{"start":{"line_number":1214,"utf16_col":8},"end":{"line_number":1214,"utf16_col":13}},"extent_utf16":{"start":{"line_number":1214,"utf16_col":2},"end":{"line_number":1214,"utf16_col":38}}},{"name":"has_request_header","kind":"method","ident_start":36341,"ident_end":36359,"extent_start":36336,"extent_end":36390,"fully_qualified_name":"Result::has_request_header","ident_utf16":{"start":{"line_number":1217,"utf16_col":7},"end":{"line_number":1217,"utf16_col":25}},"extent_utf16":{"start":{"line_number":1217,"utf16_col":2},"end":{"line_number":1217,"utf16_col":56}}},{"name":"get_request_header_value","kind":"method","ident_start":36405,"ident_end":36429,"extent_start":36393,"extent_end":36575,"fully_qualified_name":"Result::get_request_header_value","ident_utf16":{"start":{"line_number":1218,"utf16_col":14},"end":{"line_number":1218,"utf16_col":38}},"extent_utf16":{"start":{"line_number":1218,"utf16_col":2},"end":{"line_number":1220,"utf16_col":60}}},{"name":"get_request_header_value_u64","kind":"method","ident_start":36587,"ident_end":36615,"extent_start":36578,"extent_end":36719,"fully_qualified_name":"Result::get_request_header_value_u64","ident_utf16":{"start":{"line_number":1221,"utf16_col":11},"end":{"line_number":1221,"utf16_col":39}},"extent_utf16":{"start":{"line_number":1221,"utf16_col":2},"end":{"line_number":1222,"utf16_col":79}}},{"name":"get_request_header_value_count","kind":"method","ident_start":36729,"ident_end":36759,"extent_start":36722,"extent_end":36790,"fully_qualified_name":"Result::get_request_header_value_count","ident_utf16":{"start":{"line_number":1223,"utf16_col":9},"end":{"line_number":1223,"utf16_col":39}},"extent_utf16":{"start":{"line_number":1223,"utf16_col":2},"end":{"line_number":1223,"utf16_col":70}}},{"name":"ClientImpl","kind":"class","ident_start":36904,"ident_end":36914,"extent_start":36898,"extent_end":55501,"fully_qualified_name":"ClientImpl","ident_utf16":{"start":{"line_number":1231,"utf16_col":6},"end":{"line_number":1231,"utf16_col":16}},"extent_utf16":{"start":{"line_number":1231,"utf16_col":0},"end":{"line_number":1659,"utf16_col":1}}},{"name":"is_valid","kind":"method","ident_start":37250,"ident_end":37258,"extent_start":37237,"extent_end":37267,"fully_qualified_name":"ClientImpl::is_valid","ident_utf16":{"start":{"line_number":1243,"utf16_col":15},"end":{"line_number":1243,"utf16_col":23}},"extent_utf16":{"start":{"line_number":1243,"utf16_col":2},"end":{"line_number":1243,"utf16_col":32}}},{"name":"Get","kind":"method","ident_start":37278,"ident_end":37281,"extent_start":37271,"extent_end":37307,"fully_qualified_name":"ClientImpl::Get","ident_utf16":{"start":{"line_number":1245,"utf16_col":9},"end":{"line_number":1245,"utf16_col":12}},"extent_utf16":{"start":{"line_number":1245,"utf16_col":2},"end":{"line_number":1245,"utf16_col":38}}},{"name":"Get","kind":"method","ident_start":37317,"ident_end":37320,"extent_start":37310,"extent_end":37370,"fully_qualified_name":"ClientImpl::Get","ident_utf16":{"start":{"line_number":1246,"utf16_col":9},"end":{"line_number":1246,"utf16_col":12}},"extent_utf16":{"start":{"line_number":1246,"utf16_col":2},"end":{"line_number":1246,"utf16_col":62}}},{"name":"Get","kind":"method","ident_start":37380,"ident_end":37383,"extent_start":37373,"extent_end":37428,"fully_qualified_name":"ClientImpl::Get","ident_utf16":{"start":{"line_number":1247,"utf16_col":9},"end":{"line_number":1247,"utf16_col":12}},"extent_utf16":{"start":{"line_number":1247,"utf16_col":2},"end":{"line_number":1247,"utf16_col":57}}},{"name":"Get","kind":"method","ident_start":37438,"ident_end":37441,"extent_start":37431,"extent_end":37523,"fully_qualified_name":"ClientImpl::Get","ident_utf16":{"start":{"line_number":1248,"utf16_col":9},"end":{"line_number":1248,"utf16_col":12}},"extent_utf16":{"start":{"line_number":1248,"utf16_col":2},"end":{"line_number":1249,"utf16_col":32}}},{"name":"Get","kind":"method","ident_start":37533,"ident_end":37536,"extent_start":37526,"extent_end":37596,"fully_qualified_name":"ClientImpl::Get","ident_utf16":{"start":{"line_number":1250,"utf16_col":9},"end":{"line_number":1250,"utf16_col":12}},"extent_utf16":{"start":{"line_number":1250,"utf16_col":2},"end":{"line_number":1250,"utf16_col":72}}},{"name":"Get","kind":"method","ident_start":37606,"ident_end":37609,"extent_start":37599,"extent_end":37706,"fully_qualified_name":"ClientImpl::Get","ident_utf16":{"start":{"line_number":1251,"utf16_col":9},"end":{"line_number":1251,"utf16_col":12}},"extent_utf16":{"start":{"line_number":1251,"utf16_col":2},"end":{"line_number":1252,"utf16_col":47}}},{"name":"Get","kind":"method","ident_start":37716,"ident_end":37719,"extent_start":37709,"extent_end":37811,"fully_qualified_name":"ClientImpl::Get","ident_utf16":{"start":{"line_number":1253,"utf16_col":9},"end":{"line_number":1253,"utf16_col":12}},"extent_utf16":{"start":{"line_number":1253,"utf16_col":2},"end":{"line_number":1254,"utf16_col":32}}},{"name":"Get","kind":"method","ident_start":37821,"ident_end":37824,"extent_start":37814,"extent_end":37940,"fully_qualified_name":"ClientImpl::Get","ident_utf16":{"start":{"line_number":1255,"utf16_col":9},"end":{"line_number":1255,"utf16_col":12}},"extent_utf16":{"start":{"line_number":1255,"utf16_col":2},"end":{"line_number":1256,"utf16_col":66}}},{"name":"Get","kind":"method","ident_start":37950,"ident_end":37953,"extent_start":37943,"extent_end":38060,"fully_qualified_name":"ClientImpl::Get","ident_utf16":{"start":{"line_number":1257,"utf16_col":9},"end":{"line_number":1257,"utf16_col":12}},"extent_utf16":{"start":{"line_number":1257,"utf16_col":2},"end":{"line_number":1258,"utf16_col":47}}},{"name":"Get","kind":"method","ident_start":38070,"ident_end":38073,"extent_start":38063,"extent_end":38217,"fully_qualified_name":"ClientImpl::Get","ident_utf16":{"start":{"line_number":1259,"utf16_col":9},"end":{"line_number":1259,"utf16_col":12}},"extent_utf16":{"start":{"line_number":1259,"utf16_col":2},"end":{"line_number":1261,"utf16_col":47}}},{"name":"Get","kind":"method","ident_start":38227,"ident_end":38230,"extent_start":38220,"extent_end":38356,"fully_qualified_name":"ClientImpl::Get","ident_utf16":{"start":{"line_number":1262,"utf16_col":9},"end":{"line_number":1262,"utf16_col":12}},"extent_utf16":{"start":{"line_number":1262,"utf16_col":2},"end":{"line_number":1263,"utf16_col":66}}},{"name":"Get","kind":"method","ident_start":38366,"ident_end":38369,"extent_start":38359,"extent_end":38532,"fully_qualified_name":"ClientImpl::Get","ident_utf16":{"start":{"line_number":1264,"utf16_col":9},"end":{"line_number":1264,"utf16_col":12}},"extent_utf16":{"start":{"line_number":1264,"utf16_col":2},"end":{"line_number":1266,"utf16_col":32}}},{"name":"Get","kind":"method","ident_start":38543,"ident_end":38546,"extent_start":38536,"extent_end":38660,"fully_qualified_name":"ClientImpl::Get","ident_utf16":{"start":{"line_number":1268,"utf16_col":9},"end":{"line_number":1268,"utf16_col":12}},"extent_utf16":{"start":{"line_number":1268,"utf16_col":2},"end":{"line_number":1269,"utf16_col":66}}},{"name":"Get","kind":"method","ident_start":38670,"ident_end":38673,"extent_start":38663,"extent_end":38834,"fully_qualified_name":"ClientImpl::Get","ident_utf16":{"start":{"line_number":1270,"utf16_col":9},"end":{"line_number":1270,"utf16_col":12}},"extent_utf16":{"start":{"line_number":1270,"utf16_col":2},"end":{"line_number":1272,"utf16_col":42}}},{"name":"Get","kind":"method","ident_start":38844,"ident_end":38847,"extent_start":38837,"extent_end":39042,"fully_qualified_name":"ClientImpl::Get","ident_utf16":{"start":{"line_number":1273,"utf16_col":9},"end":{"line_number":1273,"utf16_col":12}},"extent_utf16":{"start":{"line_number":1273,"utf16_col":2},"end":{"line_number":1275,"utf16_col":76}}},{"name":"Head","kind":"method","ident_start":39053,"ident_end":39057,"extent_start":39046,"extent_end":39083,"fully_qualified_name":"ClientImpl::Head","ident_utf16":{"start":{"line_number":1277,"utf16_col":9},"end":{"line_number":1277,"utf16_col":13}},"extent_utf16":{"start":{"line_number":1277,"utf16_col":2},"end":{"line_number":1277,"utf16_col":39}}},{"name":"Head","kind":"method","ident_start":39093,"ident_end":39097,"extent_start":39086,"extent_end":39147,"fully_qualified_name":"ClientImpl::Head","ident_utf16":{"start":{"line_number":1278,"utf16_col":9},"end":{"line_number":1278,"utf16_col":13}},"extent_utf16":{"start":{"line_number":1278,"utf16_col":2},"end":{"line_number":1278,"utf16_col":63}}},{"name":"Post","kind":"method","ident_start":39158,"ident_end":39162,"extent_start":39151,"extent_end":39188,"fully_qualified_name":"ClientImpl::Post","ident_utf16":{"start":{"line_number":1280,"utf16_col":9},"end":{"line_number":1280,"utf16_col":13}},"extent_utf16":{"start":{"line_number":1280,"utf16_col":2},"end":{"line_number":1280,"utf16_col":39}}},{"name":"Post","kind":"method","ident_start":39198,"ident_end":39202,"extent_start":39191,"extent_end":39252,"fully_qualified_name":"ClientImpl::Post","ident_utf16":{"start":{"line_number":1281,"utf16_col":9},"end":{"line_number":1281,"utf16_col":13}},"extent_utf16":{"start":{"line_number":1281,"utf16_col":2},"end":{"line_number":1281,"utf16_col":63}}},{"name":"Post","kind":"method","ident_start":39262,"ident_end":39266,"extent_start":39255,"extent_end":39380,"fully_qualified_name":"ClientImpl::Post","ident_utf16":{"start":{"line_number":1282,"utf16_col":9},"end":{"line_number":1282,"utf16_col":13}},"extent_utf16":{"start":{"line_number":1282,"utf16_col":2},"end":{"line_number":1283,"utf16_col":47}}},{"name":"Post","kind":"method","ident_start":39390,"ident_end":39394,"extent_start":39383,"extent_end":39532,"fully_qualified_name":"ClientImpl::Post","ident_utf16":{"start":{"line_number":1284,"utf16_col":9},"end":{"line_number":1284,"utf16_col":13}},"extent_utf16":{"start":{"line_number":1284,"utf16_col":2},"end":{"line_number":1285,"utf16_col":70}}},{"name":"Post","kind":"method","ident_start":39542,"ident_end":39546,"extent_start":39535,"extent_end":39717,"fully_qualified_name":"ClientImpl::Post","ident_utf16":{"start":{"line_number":1286,"utf16_col":9},"end":{"line_number":1286,"utf16_col":13}},"extent_utf16":{"start":{"line_number":1286,"utf16_col":2},"end":{"line_number":1288,"utf16_col":33}}},{"name":"Post","kind":"method","ident_start":39727,"ident_end":39731,"extent_start":39720,"extent_end":39829,"fully_qualified_name":"ClientImpl::Post","ident_utf16":{"start":{"line_number":1289,"utf16_col":9},"end":{"line_number":1289,"utf16_col":13}},"extent_utf16":{"start":{"line_number":1289,"utf16_col":2},"end":{"line_number":1290,"utf16_col":47}}},{"name":"Post","kind":"method","ident_start":39839,"ident_end":39843,"extent_start":39832,"extent_end":39960,"fully_qualified_name":"ClientImpl::Post","ident_utf16":{"start":{"line_number":1291,"utf16_col":9},"end":{"line_number":1291,"utf16_col":13}},"extent_utf16":{"start":{"line_number":1291,"utf16_col":2},"end":{"line_number":1292,"utf16_col":66}}},{"name":"Post","kind":"method","ident_start":39970,"ident_end":39974,"extent_start":39963,"extent_end":40096,"fully_qualified_name":"ClientImpl::Post","ident_utf16":{"start":{"line_number":1293,"utf16_col":9},"end":{"line_number":1293,"utf16_col":13}},"extent_utf16":{"start":{"line_number":1293,"utf16_col":2},"end":{"line_number":1294,"utf16_col":72}}},{"name":"Post","kind":"method","ident_start":40106,"ident_end":40110,"extent_start":40099,"extent_end":40265,"fully_qualified_name":"ClientImpl::Post","ident_utf16":{"start":{"line_number":1295,"utf16_col":9},"end":{"line_number":1295,"utf16_col":13}},"extent_utf16":{"start":{"line_number":1295,"utf16_col":2},"end":{"line_number":1297,"utf16_col":33}}},{"name":"Post","kind":"method","ident_start":40275,"ident_end":40279,"extent_start":40268,"extent_end":40423,"fully_qualified_name":"ClientImpl::Post","ident_utf16":{"start":{"line_number":1298,"utf16_col":9},"end":{"line_number":1298,"utf16_col":13}},"extent_utf16":{"start":{"line_number":1298,"utf16_col":2},"end":{"line_number":1300,"utf16_col":47}}},{"name":"Post","kind":"method","ident_start":40433,"ident_end":40437,"extent_start":40426,"extent_end":40571,"fully_qualified_name":"ClientImpl::Post","ident_utf16":{"start":{"line_number":1301,"utf16_col":9},"end":{"line_number":1301,"utf16_col":13}},"extent_utf16":{"start":{"line_number":1301,"utf16_col":2},"end":{"line_number":1303,"utf16_col":47}}},{"name":"Post","kind":"method","ident_start":40581,"ident_end":40585,"extent_start":40574,"extent_end":40753,"fully_qualified_name":"ClientImpl::Post","ident_utf16":{"start":{"line_number":1304,"utf16_col":9},"end":{"line_number":1304,"utf16_col":13}},"extent_utf16":{"start":{"line_number":1304,"utf16_col":2},"end":{"line_number":1306,"utf16_col":47}}},{"name":"Post","kind":"method","ident_start":40763,"ident_end":40767,"extent_start":40756,"extent_end":40925,"fully_qualified_name":"ClientImpl::Post","ident_utf16":{"start":{"line_number":1307,"utf16_col":9},"end":{"line_number":1307,"utf16_col":13}},"extent_utf16":{"start":{"line_number":1307,"utf16_col":2},"end":{"line_number":1309,"utf16_col":47}}},{"name":"Post","kind":"method","ident_start":40935,"ident_end":40939,"extent_start":40928,"extent_end":40987,"fully_qualified_name":"ClientImpl::Post","ident_utf16":{"start":{"line_number":1310,"utf16_col":9},"end":{"line_number":1310,"utf16_col":13}},"extent_utf16":{"start":{"line_number":1310,"utf16_col":2},"end":{"line_number":1310,"utf16_col":61}}},{"name":"Post","kind":"method","ident_start":40997,"ident_end":41001,"extent_start":40990,"extent_end":41087,"fully_qualified_name":"ClientImpl::Post","ident_utf16":{"start":{"line_number":1311,"utf16_col":9},"end":{"line_number":1311,"utf16_col":13}},"extent_utf16":{"start":{"line_number":1311,"utf16_col":2},"end":{"line_number":1312,"utf16_col":36}}},{"name":"Post","kind":"method","ident_start":41097,"ident_end":41101,"extent_start":41090,"extent_end":41206,"fully_qualified_name":"ClientImpl::Post","ident_utf16":{"start":{"line_number":1313,"utf16_col":9},"end":{"line_number":1313,"utf16_col":13}},"extent_utf16":{"start":{"line_number":1313,"utf16_col":2},"end":{"line_number":1314,"utf16_col":55}}},{"name":"Post","kind":"method","ident_start":41216,"ident_end":41220,"extent_start":41209,"extent_end":41283,"fully_qualified_name":"ClientImpl::Post","ident_utf16":{"start":{"line_number":1315,"utf16_col":9},"end":{"line_number":1315,"utf16_col":13}},"extent_utf16":{"start":{"line_number":1315,"utf16_col":2},"end":{"line_number":1315,"utf16_col":76}}},{"name":"Post","kind":"method","ident_start":41293,"ident_end":41297,"extent_start":41286,"extent_end":41398,"fully_qualified_name":"ClientImpl::Post","ident_utf16":{"start":{"line_number":1316,"utf16_col":9},"end":{"line_number":1316,"utf16_col":13}},"extent_utf16":{"start":{"line_number":1316,"utf16_col":2},"end":{"line_number":1317,"utf16_col":51}}},{"name":"Post","kind":"method","ident_start":41408,"ident_end":41412,"extent_start":41401,"extent_end":41542,"fully_qualified_name":"ClientImpl::Post","ident_utf16":{"start":{"line_number":1318,"utf16_col":9},"end":{"line_number":1318,"utf16_col":13}},"extent_utf16":{"start":{"line_number":1318,"utf16_col":2},"end":{"line_number":1319,"utf16_col":80}}},{"name":"Post","kind":"method","ident_start":41552,"ident_end":41556,"extent_start":41545,"extent_end":41725,"fully_qualified_name":"ClientImpl::Post","ident_utf16":{"start":{"line_number":1320,"utf16_col":9},"end":{"line_number":1320,"utf16_col":13}},"extent_utf16":{"start":{"line_number":1320,"utf16_col":2},"end":{"line_number":1322,"utf16_col":68}}},{"name":"Put","kind":"method","ident_start":41736,"ident_end":41739,"extent_start":41729,"extent_end":41765,"fully_qualified_name":"ClientImpl::Put","ident_utf16":{"start":{"line_number":1324,"utf16_col":9},"end":{"line_number":1324,"utf16_col":12}},"extent_utf16":{"start":{"line_number":1324,"utf16_col":2},"end":{"line_number":1324,"utf16_col":38}}},{"name":"Put","kind":"method","ident_start":41775,"ident_end":41778,"extent_start":41768,"extent_end":41891,"fully_qualified_name":"ClientImpl::Put","ident_utf16":{"start":{"line_number":1325,"utf16_col":9},"end":{"line_number":1325,"utf16_col":12}},"extent_utf16":{"start":{"line_number":1325,"utf16_col":2},"end":{"line_number":1326,"utf16_col":46}}},{"name":"Put","kind":"method","ident_start":41901,"ident_end":41904,"extent_start":41894,"extent_end":42041,"fully_qualified_name":"ClientImpl::Put","ident_utf16":{"start":{"line_number":1327,"utf16_col":9},"end":{"line_number":1327,"utf16_col":12}},"extent_utf16":{"start":{"line_number":1327,"utf16_col":2},"end":{"line_number":1328,"utf16_col":69}}},{"name":"Put","kind":"method","ident_start":42051,"ident_end":42054,"extent_start":42044,"extent_end":42223,"fully_qualified_name":"ClientImpl::Put","ident_utf16":{"start":{"line_number":1329,"utf16_col":9},"end":{"line_number":1329,"utf16_col":12}},"extent_utf16":{"start":{"line_number":1329,"utf16_col":2},"end":{"line_number":1331,"utf16_col":32}}},{"name":"Put","kind":"method","ident_start":42233,"ident_end":42236,"extent_start":42226,"extent_end":42333,"fully_qualified_name":"ClientImpl::Put","ident_utf16":{"start":{"line_number":1332,"utf16_col":9},"end":{"line_number":1332,"utf16_col":12}},"extent_utf16":{"start":{"line_number":1332,"utf16_col":2},"end":{"line_number":1333,"utf16_col":46}}},{"name":"Put","kind":"method","ident_start":42343,"ident_end":42346,"extent_start":42336,"extent_end":42462,"fully_qualified_name":"ClientImpl::Put","ident_utf16":{"start":{"line_number":1334,"utf16_col":9},"end":{"line_number":1334,"utf16_col":12}},"extent_utf16":{"start":{"line_number":1334,"utf16_col":2},"end":{"line_number":1335,"utf16_col":65}}},{"name":"Put","kind":"method","ident_start":42472,"ident_end":42475,"extent_start":42465,"extent_end":42596,"fully_qualified_name":"ClientImpl::Put","ident_utf16":{"start":{"line_number":1336,"utf16_col":9},"end":{"line_number":1336,"utf16_col":12}},"extent_utf16":{"start":{"line_number":1336,"utf16_col":2},"end":{"line_number":1337,"utf16_col":71}}},{"name":"Put","kind":"method","ident_start":42606,"ident_end":42609,"extent_start":42599,"extent_end":42762,"fully_qualified_name":"ClientImpl::Put","ident_utf16":{"start":{"line_number":1338,"utf16_col":9},"end":{"line_number":1338,"utf16_col":12}},"extent_utf16":{"start":{"line_number":1338,"utf16_col":2},"end":{"line_number":1340,"utf16_col":32}}},{"name":"Put","kind":"method","ident_start":42772,"ident_end":42775,"extent_start":42765,"extent_end":42904,"fully_qualified_name":"ClientImpl::Put","ident_utf16":{"start":{"line_number":1341,"utf16_col":9},"end":{"line_number":1341,"utf16_col":12}},"extent_utf16":{"start":{"line_number":1341,"utf16_col":2},"end":{"line_number":1342,"utf16_col":80}}},{"name":"Put","kind":"method","ident_start":42914,"ident_end":42917,"extent_start":42907,"extent_end":43049,"fully_qualified_name":"ClientImpl::Put","ident_utf16":{"start":{"line_number":1343,"utf16_col":9},"end":{"line_number":1343,"utf16_col":12}},"extent_utf16":{"start":{"line_number":1343,"utf16_col":2},"end":{"line_number":1345,"utf16_col":46}}},{"name":"Put","kind":"method","ident_start":43059,"ident_end":43062,"extent_start":43052,"extent_end":43228,"fully_qualified_name":"ClientImpl::Put","ident_utf16":{"start":{"line_number":1346,"utf16_col":9},"end":{"line_number":1346,"utf16_col":12}},"extent_utf16":{"start":{"line_number":1346,"utf16_col":2},"end":{"line_number":1348,"utf16_col":46}}},{"name":"Put","kind":"method","ident_start":43238,"ident_end":43241,"extent_start":43231,"extent_end":43397,"fully_qualified_name":"ClientImpl::Put","ident_utf16":{"start":{"line_number":1349,"utf16_col":9},"end":{"line_number":1349,"utf16_col":12}},"extent_utf16":{"start":{"line_number":1349,"utf16_col":2},"end":{"line_number":1351,"utf16_col":46}}},{"name":"Put","kind":"method","ident_start":43407,"ident_end":43410,"extent_start":43400,"extent_end":43458,"fully_qualified_name":"ClientImpl::Put","ident_utf16":{"start":{"line_number":1352,"utf16_col":9},"end":{"line_number":1352,"utf16_col":12}},"extent_utf16":{"start":{"line_number":1352,"utf16_col":2},"end":{"line_number":1352,"utf16_col":60}}},{"name":"Put","kind":"method","ident_start":43468,"ident_end":43471,"extent_start":43461,"extent_end":43556,"fully_qualified_name":"ClientImpl::Put","ident_utf16":{"start":{"line_number":1353,"utf16_col":9},"end":{"line_number":1353,"utf16_col":12}},"extent_utf16":{"start":{"line_number":1353,"utf16_col":2},"end":{"line_number":1354,"utf16_col":35}}},{"name":"Put","kind":"method","ident_start":43566,"ident_end":43569,"extent_start":43559,"extent_end":43673,"fully_qualified_name":"ClientImpl::Put","ident_utf16":{"start":{"line_number":1355,"utf16_col":9},"end":{"line_number":1355,"utf16_col":12}},"extent_utf16":{"start":{"line_number":1355,"utf16_col":2},"end":{"line_number":1356,"utf16_col":54}}},{"name":"Put","kind":"method","ident_start":43683,"ident_end":43686,"extent_start":43676,"extent_end":43749,"fully_qualified_name":"ClientImpl::Put","ident_utf16":{"start":{"line_number":1357,"utf16_col":9},"end":{"line_number":1357,"utf16_col":12}},"extent_utf16":{"start":{"line_number":1357,"utf16_col":2},"end":{"line_number":1357,"utf16_col":75}}},{"name":"Put","kind":"method","ident_start":43759,"ident_end":43762,"extent_start":43752,"extent_end":43862,"fully_qualified_name":"ClientImpl::Put","ident_utf16":{"start":{"line_number":1358,"utf16_col":9},"end":{"line_number":1358,"utf16_col":12}},"extent_utf16":{"start":{"line_number":1358,"utf16_col":2},"end":{"line_number":1359,"utf16_col":50}}},{"name":"Put","kind":"method","ident_start":43872,"ident_end":43875,"extent_start":43865,"extent_end":44004,"fully_qualified_name":"ClientImpl::Put","ident_utf16":{"start":{"line_number":1360,"utf16_col":9},"end":{"line_number":1360,"utf16_col":12}},"extent_utf16":{"start":{"line_number":1360,"utf16_col":2},"end":{"line_number":1361,"utf16_col":79}}},{"name":"Put","kind":"method","ident_start":44014,"ident_end":44017,"extent_start":44007,"extent_end":44184,"fully_qualified_name":"ClientImpl::Put","ident_utf16":{"start":{"line_number":1362,"utf16_col":9},"end":{"line_number":1362,"utf16_col":12}},"extent_utf16":{"start":{"line_number":1362,"utf16_col":2},"end":{"line_number":1364,"utf16_col":67}}},{"name":"Patch","kind":"method","ident_start":44195,"ident_end":44200,"extent_start":44188,"extent_end":44226,"fully_qualified_name":"ClientImpl::Patch","ident_utf16":{"start":{"line_number":1366,"utf16_col":9},"end":{"line_number":1366,"utf16_col":14}},"extent_utf16":{"start":{"line_number":1366,"utf16_col":2},"end":{"line_number":1366,"utf16_col":40}}},{"name":"Patch","kind":"method","ident_start":44236,"ident_end":44241,"extent_start":44229,"extent_end":44356,"fully_qualified_name":"ClientImpl::Patch","ident_utf16":{"start":{"line_number":1367,"utf16_col":9},"end":{"line_number":1367,"utf16_col":14}},"extent_utf16":{"start":{"line_number":1367,"utf16_col":2},"end":{"line_number":1368,"utf16_col":48}}},{"name":"Patch","kind":"method","ident_start":44366,"ident_end":44371,"extent_start":44359,"extent_end":44505,"fully_qualified_name":"ClientImpl::Patch","ident_utf16":{"start":{"line_number":1369,"utf16_col":9},"end":{"line_number":1369,"utf16_col":14}},"extent_utf16":{"start":{"line_number":1369,"utf16_col":2},"end":{"line_number":1370,"utf16_col":67}}},{"name":"Patch","kind":"method","ident_start":44515,"ident_end":44520,"extent_start":44508,"extent_end":44674,"fully_qualified_name":"ClientImpl::Patch","ident_utf16":{"start":{"line_number":1371,"utf16_col":9},"end":{"line_number":1371,"utf16_col":14}},"extent_utf16":{"start":{"line_number":1371,"utf16_col":2},"end":{"line_number":1373,"utf16_col":48}}},{"name":"Patch","kind":"method","ident_start":44684,"ident_end":44689,"extent_start":44677,"extent_end":44862,"fully_qualified_name":"ClientImpl::Patch","ident_utf16":{"start":{"line_number":1374,"utf16_col":9},"end":{"line_number":1374,"utf16_col":14}},"extent_utf16":{"start":{"line_number":1374,"utf16_col":2},"end":{"line_number":1376,"utf16_col":67}}},{"name":"Patch","kind":"method","ident_start":44872,"ident_end":44877,"extent_start":44865,"extent_end":44976,"fully_qualified_name":"ClientImpl::Patch","ident_utf16":{"start":{"line_number":1377,"utf16_col":9},"end":{"line_number":1377,"utf16_col":14}},"extent_utf16":{"start":{"line_number":1377,"utf16_col":2},"end":{"line_number":1378,"utf16_col":48}}},{"name":"Patch","kind":"method","ident_start":44986,"ident_end":44991,"extent_start":44979,"extent_end":45109,"fully_qualified_name":"ClientImpl::Patch","ident_utf16":{"start":{"line_number":1379,"utf16_col":9},"end":{"line_number":1379,"utf16_col":14}},"extent_utf16":{"start":{"line_number":1379,"utf16_col":2},"end":{"line_number":1380,"utf16_col":67}}},{"name":"Patch","kind":"method","ident_start":45119,"ident_end":45124,"extent_start":45112,"extent_end":45247,"fully_qualified_name":"ClientImpl::Patch","ident_utf16":{"start":{"line_number":1381,"utf16_col":9},"end":{"line_number":1381,"utf16_col":14}},"extent_utf16":{"start":{"line_number":1381,"utf16_col":2},"end":{"line_number":1382,"utf16_col":73}}},{"name":"Patch","kind":"method","ident_start":45257,"ident_end":45262,"extent_start":45250,"extent_end":45419,"fully_qualified_name":"ClientImpl::Patch","ident_utf16":{"start":{"line_number":1383,"utf16_col":9},"end":{"line_number":1383,"utf16_col":14}},"extent_utf16":{"start":{"line_number":1383,"utf16_col":2},"end":{"line_number":1385,"utf16_col":34}}},{"name":"Patch","kind":"method","ident_start":45429,"ident_end":45434,"extent_start":45422,"extent_end":45580,"fully_qualified_name":"ClientImpl::Patch","ident_utf16":{"start":{"line_number":1386,"utf16_col":9},"end":{"line_number":1386,"utf16_col":14}},"extent_utf16":{"start":{"line_number":1386,"utf16_col":2},"end":{"line_number":1388,"utf16_col":48}}},{"name":"Patch","kind":"method","ident_start":45590,"ident_end":45595,"extent_start":45583,"extent_end":45731,"fully_qualified_name":"ClientImpl::Patch","ident_utf16":{"start":{"line_number":1389,"utf16_col":9},"end":{"line_number":1389,"utf16_col":14}},"extent_utf16":{"start":{"line_number":1389,"utf16_col":2},"end":{"line_number":1391,"utf16_col":48}}},{"name":"Patch","kind":"method","ident_start":45741,"ident_end":45746,"extent_start":45734,"extent_end":45916,"fully_qualified_name":"ClientImpl::Patch","ident_utf16":{"start":{"line_number":1392,"utf16_col":9},"end":{"line_number":1392,"utf16_col":14}},"extent_utf16":{"start":{"line_number":1392,"utf16_col":2},"end":{"line_number":1394,"utf16_col":48}}},{"name":"Patch","kind":"method","ident_start":45926,"ident_end":45931,"extent_start":45919,"extent_end":46091,"fully_qualified_name":"ClientImpl::Patch","ident_utf16":{"start":{"line_number":1395,"utf16_col":9},"end":{"line_number":1395,"utf16_col":14}},"extent_utf16":{"start":{"line_number":1395,"utf16_col":2},"end":{"line_number":1397,"utf16_col":48}}},{"name":"Delete","kind":"method","ident_start":46102,"ident_end":46108,"extent_start":46095,"extent_end":46134,"fully_qualified_name":"ClientImpl::Delete","ident_utf16":{"start":{"line_number":1399,"utf16_col":9},"end":{"line_number":1399,"utf16_col":15}},"extent_utf16":{"start":{"line_number":1399,"utf16_col":2},"end":{"line_number":1399,"utf16_col":41}}},{"name":"Delete","kind":"method","ident_start":46144,"ident_end":46150,"extent_start":46137,"extent_end":46200,"fully_qualified_name":"ClientImpl::Delete","ident_utf16":{"start":{"line_number":1400,"utf16_col":9},"end":{"line_number":1400,"utf16_col":15}},"extent_utf16":{"start":{"line_number":1400,"utf16_col":2},"end":{"line_number":1400,"utf16_col":65}}},{"name":"Delete","kind":"method","ident_start":46210,"ident_end":46216,"extent_start":46203,"extent_end":46332,"fully_qualified_name":"ClientImpl::Delete","ident_utf16":{"start":{"line_number":1401,"utf16_col":9},"end":{"line_number":1401,"utf16_col":15}},"extent_utf16":{"start":{"line_number":1401,"utf16_col":2},"end":{"line_number":1402,"utf16_col":72}}},{"name":"Delete","kind":"method","ident_start":46342,"ident_end":46348,"extent_start":46335,"extent_end":46499,"fully_qualified_name":"ClientImpl::Delete","ident_utf16":{"start":{"line_number":1403,"utf16_col":9},"end":{"line_number":1403,"utf16_col":15}},"extent_utf16":{"start":{"line_number":1403,"utf16_col":2},"end":{"line_number":1405,"utf16_col":35}}},{"name":"Delete","kind":"method","ident_start":46509,"ident_end":46515,"extent_start":46502,"extent_end":46671,"fully_qualified_name":"ClientImpl::Delete","ident_utf16":{"start":{"line_number":1406,"utf16_col":9},"end":{"line_number":1406,"utf16_col":15}},"extent_utf16":{"start":{"line_number":1406,"utf16_col":2},"end":{"line_number":1408,"utf16_col":49}}},{"name":"Delete","kind":"method","ident_start":46681,"ident_end":46687,"extent_start":46674,"extent_end":46862,"fully_qualified_name":"ClientImpl::Delete","ident_utf16":{"start":{"line_number":1409,"utf16_col":9},"end":{"line_number":1409,"utf16_col":15}},"extent_utf16":{"start":{"line_number":1409,"utf16_col":2},"end":{"line_number":1411,"utf16_col":68}}},{"name":"Delete","kind":"method","ident_start":46872,"ident_end":46878,"extent_start":46865,"extent_end":46978,"fully_qualified_name":"ClientImpl::Delete","ident_utf16":{"start":{"line_number":1412,"utf16_col":9},"end":{"line_number":1412,"utf16_col":15}},"extent_utf16":{"start":{"line_number":1412,"utf16_col":2},"end":{"line_number":1413,"utf16_col":49}}},{"name":"Delete","kind":"method","ident_start":46988,"ident_end":46994,"extent_start":46981,"extent_end":47113,"fully_qualified_name":"ClientImpl::Delete","ident_utf16":{"start":{"line_number":1414,"utf16_col":9},"end":{"line_number":1414,"utf16_col":15}},"extent_utf16":{"start":{"line_number":1414,"utf16_col":2},"end":{"line_number":1415,"utf16_col":68}}},{"name":"Delete","kind":"method","ident_start":47123,"ident_end":47129,"extent_start":47116,"extent_end":47253,"fully_qualified_name":"ClientImpl::Delete","ident_utf16":{"start":{"line_number":1416,"utf16_col":9},"end":{"line_number":1416,"utf16_col":15}},"extent_utf16":{"start":{"line_number":1416,"utf16_col":2},"end":{"line_number":1417,"utf16_col":74}}},{"name":"Delete","kind":"method","ident_start":47263,"ident_end":47269,"extent_start":47256,"extent_end":47428,"fully_qualified_name":"ClientImpl::Delete","ident_utf16":{"start":{"line_number":1418,"utf16_col":9},"end":{"line_number":1418,"utf16_col":15}},"extent_utf16":{"start":{"line_number":1418,"utf16_col":2},"end":{"line_number":1420,"utf16_col":35}}},{"name":"Options","kind":"method","ident_start":47439,"ident_end":47446,"extent_start":47432,"extent_end":47472,"fully_qualified_name":"ClientImpl::Options","ident_utf16":{"start":{"line_number":1422,"utf16_col":9},"end":{"line_number":1422,"utf16_col":16}},"extent_utf16":{"start":{"line_number":1422,"utf16_col":2},"end":{"line_number":1422,"utf16_col":42}}},{"name":"Options","kind":"method","ident_start":47482,"ident_end":47489,"extent_start":47475,"extent_end":47539,"fully_qualified_name":"ClientImpl::Options","ident_utf16":{"start":{"line_number":1423,"utf16_col":9},"end":{"line_number":1423,"utf16_col":16}},"extent_utf16":{"start":{"line_number":1423,"utf16_col":2},"end":{"line_number":1423,"utf16_col":66}}},{"name":"send","kind":"method","ident_start":47548,"ident_end":47552,"extent_start":47543,"extent_end":47596,"fully_qualified_name":"ClientImpl::send","ident_utf16":{"start":{"line_number":1425,"utf16_col":7},"end":{"line_number":1425,"utf16_col":11}},"extent_utf16":{"start":{"line_number":1425,"utf16_col":2},"end":{"line_number":1425,"utf16_col":55}}},{"name":"send","kind":"method","ident_start":47606,"ident_end":47610,"extent_start":47599,"extent_end":47631,"fully_qualified_name":"ClientImpl::send","ident_utf16":{"start":{"line_number":1426,"utf16_col":9},"end":{"line_number":1426,"utf16_col":13}},"extent_utf16":{"start":{"line_number":1426,"utf16_col":2},"end":{"line_number":1426,"utf16_col":34}}},{"name":"stop","kind":"method","ident_start":47640,"ident_end":47644,"extent_start":47635,"extent_end":47647,"fully_qualified_name":"ClientImpl::stop","ident_utf16":{"start":{"line_number":1428,"utf16_col":7},"end":{"line_number":1428,"utf16_col":11}},"extent_utf16":{"start":{"line_number":1428,"utf16_col":2},"end":{"line_number":1428,"utf16_col":14}}},{"name":"host","kind":"method","ident_start":47663,"ident_end":47667,"extent_start":47651,"extent_end":47676,"fully_qualified_name":"ClientImpl::host","ident_utf16":{"start":{"line_number":1430,"utf16_col":14},"end":{"line_number":1430,"utf16_col":18}},"extent_utf16":{"start":{"line_number":1430,"utf16_col":2},"end":{"line_number":1430,"utf16_col":27}}},{"name":"port","kind":"method","ident_start":47683,"ident_end":47687,"extent_start":47679,"extent_end":47696,"fully_qualified_name":"ClientImpl::port","ident_utf16":{"start":{"line_number":1431,"utf16_col":6},"end":{"line_number":1431,"utf16_col":10}},"extent_utf16":{"start":{"line_number":1431,"utf16_col":2},"end":{"line_number":1431,"utf16_col":19}}},{"name":"is_socket_open","kind":"method","ident_start":47707,"ident_end":47721,"extent_start":47700,"extent_end":47730,"fully_qualified_name":"ClientImpl::is_socket_open","ident_utf16":{"start":{"line_number":1433,"utf16_col":9},"end":{"line_number":1433,"utf16_col":23}},"extent_utf16":{"start":{"line_number":1433,"utf16_col":2},"end":{"line_number":1433,"utf16_col":32}}},{"name":"socket","kind":"method","ident_start":47742,"ident_end":47748,"extent_start":47733,"extent_end":47757,"fully_qualified_name":"ClientImpl::socket","ident_utf16":{"start":{"line_number":1434,"utf16_col":11},"end":{"line_number":1434,"utf16_col":17}},"extent_utf16":{"start":{"line_number":1434,"utf16_col":2},"end":{"line_number":1434,"utf16_col":26}}},{"name":"set_hostname_addr_map","kind":"method","ident_start":47766,"ident_end":47787,"extent_start":47761,"extent_end":47833,"fully_qualified_name":"ClientImpl::set_hostname_addr_map","ident_utf16":{"start":{"line_number":1436,"utf16_col":7},"end":{"line_number":1436,"utf16_col":28}},"extent_utf16":{"start":{"line_number":1436,"utf16_col":2},"end":{"line_number":1436,"utf16_col":74}}},{"name":"set_default_headers","kind":"method","ident_start":47842,"ident_end":47861,"extent_start":47837,"extent_end":47879,"fully_qualified_name":"ClientImpl::set_default_headers","ident_utf16":{"start":{"line_number":1438,"utf16_col":7},"end":{"line_number":1438,"utf16_col":26}},"extent_utf16":{"start":{"line_number":1438,"utf16_col":2},"end":{"line_number":1438,"utf16_col":44}}},{"name":"set_header_writer","kind":"method","ident_start":47890,"ident_end":47907,"extent_start":47883,"extent_end":47967,"fully_qualified_name":"ClientImpl::set_header_writer","ident_utf16":{"start":{"line_number":1441,"utf16_col":2},"end":{"line_number":1441,"utf16_col":19}},"extent_utf16":{"start":{"line_number":1440,"utf16_col":2},"end":{"line_number":1441,"utf16_col":79}}},{"name":"set_address_family","kind":"method","ident_start":47976,"ident_end":47994,"extent_start":47971,"extent_end":48007,"fully_qualified_name":"ClientImpl::set_address_family","ident_utf16":{"start":{"line_number":1443,"utf16_col":7},"end":{"line_number":1443,"utf16_col":25}},"extent_utf16":{"start":{"line_number":1443,"utf16_col":2},"end":{"line_number":1443,"utf16_col":38}}},{"name":"set_tcp_nodelay","kind":"method","ident_start":48015,"ident_end":48030,"extent_start":48010,"extent_end":48040,"fully_qualified_name":"ClientImpl::set_tcp_nodelay","ident_utf16":{"start":{"line_number":1444,"utf16_col":7},"end":{"line_number":1444,"utf16_col":22}},"extent_utf16":{"start":{"line_number":1444,"utf16_col":2},"end":{"line_number":1444,"utf16_col":32}}},{"name":"set_ipv6_v6only","kind":"method","ident_start":48048,"ident_end":48063,"extent_start":48043,"extent_end":48073,"fully_qualified_name":"ClientImpl::set_ipv6_v6only","ident_utf16":{"start":{"line_number":1445,"utf16_col":7},"end":{"line_number":1445,"utf16_col":22}},"extent_utf16":{"start":{"line_number":1445,"utf16_col":2},"end":{"line_number":1445,"utf16_col":32}}},{"name":"set_socket_options","kind":"method","ident_start":48081,"ident_end":48099,"extent_start":48076,"extent_end":48130,"fully_qualified_name":"ClientImpl::set_socket_options","ident_utf16":{"start":{"line_number":1446,"utf16_col":7},"end":{"line_number":1446,"utf16_col":25}},"extent_utf16":{"start":{"line_number":1446,"utf16_col":2},"end":{"line_number":1446,"utf16_col":56}}},{"name":"set_connection_timeout","kind":"method","ident_start":48139,"ident_end":48161,"extent_start":48134,"extent_end":48191,"fully_qualified_name":"ClientImpl::set_connection_timeout","ident_utf16":{"start":{"line_number":1448,"utf16_col":7},"end":{"line_number":1448,"utf16_col":29}},"extent_utf16":{"start":{"line_number":1448,"utf16_col":2},"end":{"line_number":1448,"utf16_col":59}}},{"name":"set_read_timeout","kind":"method","ident_start":48322,"ident_end":48338,"extent_start":48317,"extent_end":48368,"fully_qualified_name":"ClientImpl::set_read_timeout","ident_utf16":{"start":{"line_number":1453,"utf16_col":7},"end":{"line_number":1453,"utf16_col":23}},"extent_utf16":{"start":{"line_number":1453,"utf16_col":2},"end":{"line_number":1453,"utf16_col":53}}},{"name":"set_write_timeout","kind":"method","ident_start":48491,"ident_end":48508,"extent_start":48486,"extent_end":48538,"fully_qualified_name":"ClientImpl::set_write_timeout","ident_utf16":{"start":{"line_number":1457,"utf16_col":7},"end":{"line_number":1457,"utf16_col":24}},"extent_utf16":{"start":{"line_number":1457,"utf16_col":2},"end":{"line_number":1457,"utf16_col":54}}},{"name":"set_max_timeout","kind":"method","ident_start":48662,"ident_end":48677,"extent_start":48657,"extent_end":48691,"fully_qualified_name":"ClientImpl::set_max_timeout","ident_utf16":{"start":{"line_number":1461,"utf16_col":7},"end":{"line_number":1461,"utf16_col":22}},"extent_utf16":{"start":{"line_number":1461,"utf16_col":2},"end":{"line_number":1461,"utf16_col":36}}},{"name":"set_basic_auth","kind":"method","ident_start":48813,"ident_end":48827,"extent_start":48808,"extent_end":48886,"fully_qualified_name":"ClientImpl::set_basic_auth","ident_utf16":{"start":{"line_number":1465,"utf16_col":7},"end":{"line_number":1465,"utf16_col":21}},"extent_utf16":{"start":{"line_number":1465,"utf16_col":2},"end":{"line_number":1465,"utf16_col":80}}},{"name":"set_bearer_token_auth","kind":"method","ident_start":48894,"ident_end":48915,"extent_start":48889,"extent_end":48942,"fully_qualified_name":"ClientImpl::set_bearer_token_auth","ident_utf16":{"start":{"line_number":1466,"utf16_col":7},"end":{"line_number":1466,"utf16_col":28}},"extent_utf16":{"start":{"line_number":1466,"utf16_col":2},"end":{"line_number":1466,"utf16_col":55}}},{"name":"set_keep_alive","kind":"method","ident_start":49097,"ident_end":49111,"extent_start":49092,"extent_end":49121,"fully_qualified_name":"ClientImpl::set_keep_alive","ident_utf16":{"start":{"line_number":1472,"utf16_col":7},"end":{"line_number":1472,"utf16_col":21}},"extent_utf16":{"start":{"line_number":1472,"utf16_col":2},"end":{"line_number":1472,"utf16_col":31}}},{"name":"set_follow_location","kind":"method","ident_start":49129,"ident_end":49148,"extent_start":49124,"extent_end":49158,"fully_qualified_name":"ClientImpl::set_follow_location","ident_utf16":{"start":{"line_number":1473,"utf16_col":7},"end":{"line_number":1473,"utf16_col":26}},"extent_utf16":{"start":{"line_number":1473,"utf16_col":2},"end":{"line_number":1473,"utf16_col":36}}},{"name":"set_url_encode","kind":"method","ident_start":49167,"ident_end":49181,"extent_start":49162,"extent_end":49191,"fully_qualified_name":"ClientImpl::set_url_encode","ident_utf16":{"start":{"line_number":1475,"utf16_col":7},"end":{"line_number":1475,"utf16_col":21}},"extent_utf16":{"start":{"line_number":1475,"utf16_col":2},"end":{"line_number":1475,"utf16_col":31}}},{"name":"set_compress","kind":"method","ident_start":49200,"ident_end":49212,"extent_start":49195,"extent_end":49222,"fully_qualified_name":"ClientImpl::set_compress","ident_utf16":{"start":{"line_number":1477,"utf16_col":7},"end":{"line_number":1477,"utf16_col":19}},"extent_utf16":{"start":{"line_number":1477,"utf16_col":2},"end":{"line_number":1477,"utf16_col":29}}},{"name":"set_decompress","kind":"method","ident_start":49231,"ident_end":49245,"extent_start":49226,"extent_end":49255,"fully_qualified_name":"ClientImpl::set_decompress","ident_utf16":{"start":{"line_number":1479,"utf16_col":7},"end":{"line_number":1479,"utf16_col":21}},"extent_utf16":{"start":{"line_number":1479,"utf16_col":2},"end":{"line_number":1479,"utf16_col":31}}},{"name":"set_interface","kind":"method","ident_start":49264,"ident_end":49277,"extent_start":49259,"extent_end":49303,"fully_qualified_name":"ClientImpl::set_interface","ident_utf16":{"start":{"line_number":1481,"utf16_col":7},"end":{"line_number":1481,"utf16_col":20}},"extent_utf16":{"start":{"line_number":1481,"utf16_col":2},"end":{"line_number":1481,"utf16_col":46}}},{"name":"set_proxy","kind":"method","ident_start":49312,"ident_end":49321,"extent_start":49307,"extent_end":49357,"fully_qualified_name":"ClientImpl::set_proxy","ident_utf16":{"start":{"line_number":1483,"utf16_col":7},"end":{"line_number":1483,"utf16_col":16}},"extent_utf16":{"start":{"line_number":1483,"utf16_col":2},"end":{"line_number":1483,"utf16_col":52}}},{"name":"set_proxy_basic_auth","kind":"method","ident_start":49365,"ident_end":49385,"extent_start":49360,"extent_end":49472,"fully_qualified_name":"ClientImpl::set_proxy_basic_auth","ident_utf16":{"start":{"line_number":1484,"utf16_col":7},"end":{"line_number":1484,"utf16_col":27}},"extent_utf16":{"start":{"line_number":1484,"utf16_col":2},"end":{"line_number":1485,"utf16_col":57}}},{"name":"set_proxy_bearer_token_auth","kind":"method","ident_start":49480,"ident_end":49507,"extent_start":49475,"extent_end":49534,"fully_qualified_name":"ClientImpl::set_proxy_bearer_token_auth","ident_utf16":{"start":{"line_number":1486,"utf16_col":7},"end":{"line_number":1486,"utf16_col":34}},"extent_utf16":{"start":{"line_number":1486,"utf16_col":2},"end":{"line_number":1486,"utf16_col":61}}},{"name":"set_logger","kind":"method","ident_start":50280,"ident_end":50290,"extent_start":50275,"extent_end":50306,"fully_qualified_name":"ClientImpl::set_logger","ident_utf16":{"start":{"line_number":1506,"utf16_col":7},"end":{"line_number":1506,"utf16_col":17}},"extent_utf16":{"start":{"line_number":1506,"utf16_col":2},"end":{"line_number":1506,"utf16_col":33}}},{"name":"Socket","kind":"class","ident_start":50328,"ident_end":50334,"extent_start":50321,"extent_end":50502,"fully_qualified_name":"ClientImpl::Socket","ident_utf16":{"start":{"line_number":1509,"utf16_col":9},"end":{"line_number":1509,"utf16_col":15}},"extent_utf16":{"start":{"line_number":1509,"utf16_col":2},"end":{"line_number":1516,"utf16_col":3}}},{"name":"is_open","kind":"function","ident_start":50448,"ident_end":50455,"extent_start":50443,"extent_end":50498,"fully_qualified_name":"ClientImpl::Socket::is_open","ident_utf16":{"start":{"line_number":1515,"utf16_col":9},"end":{"line_number":1515,"utf16_col":16}},"extent_utf16":{"start":{"line_number":1515,"utf16_col":4},"end":{"line_number":1515,"utf16_col":59}}},{"name":"create_and_connect_socket","kind":"method","ident_start":50520,"ident_end":50545,"extent_start":50507,"extent_end":50576,"fully_qualified_name":"ClientImpl::create_and_connect_socket","ident_utf16":{"start":{"line_number":1518,"utf16_col":15},"end":{"line_number":1518,"utf16_col":40}},"extent_utf16":{"start":{"line_number":1518,"utf16_col":2},"end":{"line_number":1518,"utf16_col":71}}},{"name":"shutdown_ssl","kind":"method","ident_start":50871,"ident_end":50883,"extent_start":50858,"extent_end":50926,"fully_qualified_name":"ClientImpl::shutdown_ssl","ident_utf16":{"start":{"line_number":1527,"utf16_col":15},"end":{"line_number":1527,"utf16_col":27}},"extent_utf16":{"start":{"line_number":1527,"utf16_col":2},"end":{"line_number":1527,"utf16_col":70}}},{"name":"shutdown_socket","kind":"method","ident_start":50934,"ident_end":50949,"extent_start":50929,"extent_end":50972,"fully_qualified_name":"ClientImpl::shutdown_socket","ident_utf16":{"start":{"line_number":1528,"utf16_col":7},"end":{"line_number":1528,"utf16_col":22}},"extent_utf16":{"start":{"line_number":1528,"utf16_col":2},"end":{"line_number":1528,"utf16_col":45}}},{"name":"close_socket","kind":"method","ident_start":50980,"ident_end":50992,"extent_start":50975,"extent_end":51009,"fully_qualified_name":"ClientImpl::close_socket","ident_utf16":{"start":{"line_number":1529,"utf16_col":7},"end":{"line_number":1529,"utf16_col":19}},"extent_utf16":{"start":{"line_number":1529,"utf16_col":2},"end":{"line_number":1529,"utf16_col":36}}},{"name":"process_request","kind":"method","ident_start":51018,"ident_end":51033,"extent_start":51013,"extent_end":51137,"fully_qualified_name":"ClientImpl::process_request","ident_utf16":{"start":{"line_number":1531,"utf16_col":7},"end":{"line_number":1531,"utf16_col":22}},"extent_utf16":{"start":{"line_number":1531,"utf16_col":2},"end":{"line_number":1532,"utf16_col":60}}},{"name":"write_content_with_provider","kind":"method","ident_start":51146,"ident_end":51173,"extent_start":51141,"extent_end":51263,"fully_qualified_name":"ClientImpl::write_content_with_provider","ident_utf16":{"start":{"line_number":1534,"utf16_col":7},"end":{"line_number":1534,"utf16_col":34}},"extent_utf16":{"start":{"line_number":1534,"utf16_col":2},"end":{"line_number":1535,"utf16_col":55}}},{"name":"copy_settings","kind":"method","ident_start":51272,"ident_end":51285,"extent_start":51267,"extent_end":51309,"fully_qualified_name":"ClientImpl::copy_settings","ident_utf16":{"start":{"line_number":1537,"utf16_col":7},"end":{"line_number":1537,"utf16_col":20}},"extent_utf16":{"start":{"line_number":1537,"utf16_col":2},"end":{"line_number":1537,"utf16_col":44}}},{"name":"send_","kind":"method","ident_start":53856,"ident_end":53861,"extent_start":53851,"extent_end":53905,"fully_qualified_name":"ClientImpl::send_","ident_utf16":{"start":{"line_number":1626,"utf16_col":7},"end":{"line_number":1626,"utf16_col":12}},"extent_utf16":{"start":{"line_number":1626,"utf16_col":2},"end":{"line_number":1626,"utf16_col":56}}},{"name":"send_","kind":"method","ident_start":53915,"ident_end":53920,"extent_start":53908,"extent_end":53936,"fully_qualified_name":"ClientImpl::send_","ident_utf16":{"start":{"line_number":1627,"utf16_col":9},"end":{"line_number":1627,"utf16_col":14}},"extent_utf16":{"start":{"line_number":1627,"utf16_col":2},"end":{"line_number":1627,"utf16_col":30}}},{"name":"create_client_socket","kind":"method","ident_start":53949,"ident_end":53969,"extent_start":53940,"extent_end":53990,"fully_qualified_name":"ClientImpl::create_client_socket","ident_utf16":{"start":{"line_number":1629,"utf16_col":11},"end":{"line_number":1629,"utf16_col":31}},"extent_utf16":{"start":{"line_number":1629,"utf16_col":2},"end":{"line_number":1629,"utf16_col":52}}},{"name":"read_response_line","kind":"method","ident_start":53998,"ident_end":54016,"extent_start":53993,"extent_end":54098,"fully_qualified_name":"ClientImpl::read_response_line","ident_utf16":{"start":{"line_number":1630,"utf16_col":7},"end":{"line_number":1630,"utf16_col":25}},"extent_utf16":{"start":{"line_number":1630,"utf16_col":2},"end":{"line_number":1631,"utf16_col":47}}},{"name":"write_request","kind":"method","ident_start":54106,"ident_end":54119,"extent_start":54101,"extent_end":54206,"fully_qualified_name":"ClientImpl::write_request","ident_utf16":{"start":{"line_number":1632,"utf16_col":7},"end":{"line_number":1632,"utf16_col":20}},"extent_utf16":{"start":{"line_number":1632,"utf16_col":2},"end":{"line_number":1633,"utf16_col":35}}},{"name":"redirect","kind":"method","ident_start":54214,"ident_end":54222,"extent_start":54209,"extent_end":54266,"fully_qualified_name":"ClientImpl::redirect","ident_utf16":{"start":{"line_number":1634,"utf16_col":7},"end":{"line_number":1634,"utf16_col":15}},"extent_utf16":{"start":{"line_number":1634,"utf16_col":2},"end":{"line_number":1634,"utf16_col":59}}},{"name":"handle_request","kind":"method","ident_start":54274,"ident_end":54288,"extent_start":54269,"extent_end":54391,"fully_qualified_name":"ClientImpl::handle_request","ident_utf16":{"start":{"line_number":1635,"utf16_col":7},"end":{"line_number":1635,"utf16_col":21}},"extent_utf16":{"start":{"line_number":1635,"utf16_col":2},"end":{"line_number":1636,"utf16_col":59}}},{"name":"send_with_content_provider","kind":"method","ident_start":54420,"ident_end":54446,"extent_start":54394,"extent_end":54670,"fully_qualified_name":"ClientImpl::send_with_content_provider","ident_utf16":{"start":{"line_number":1637,"utf16_col":28},"end":{"line_number":1637,"utf16_col":54}},"extent_utf16":{"start":{"line_number":1637,"utf16_col":2},"end":{"line_number":1641,"utf16_col":53}}},{"name":"send_with_content_provider","kind":"method","ident_start":54680,"ident_end":54706,"extent_start":54673,"extent_end":55003,"fully_qualified_name":"ClientImpl::send_with_content_provider","ident_utf16":{"start":{"line_number":1642,"utf16_col":9},"end":{"line_number":1642,"utf16_col":35}},"extent_utf16":{"start":{"line_number":1642,"utf16_col":2},"end":{"line_number":1647,"utf16_col":58}}},{"name":"get_multipart_content_provider","kind":"method","ident_start":55035,"ident_end":55065,"extent_start":55006,"extent_end":55205,"fully_qualified_name":"ClientImpl::get_multipart_content_provider","ident_utf16":{"start":{"line_number":1648,"utf16_col":31},"end":{"line_number":1648,"utf16_col":61}},"extent_utf16":{"start":{"line_number":1648,"utf16_col":2},"end":{"line_number":1650,"utf16_col":66}}},{"name":"adjust_host_string","kind":"method","ident_start":55221,"ident_end":55239,"extent_start":55209,"extent_end":55271,"fully_qualified_name":"ClientImpl::adjust_host_string","ident_utf16":{"start":{"line_number":1652,"utf16_col":14},"end":{"line_number":1652,"utf16_col":32}},"extent_utf16":{"start":{"line_number":1652,"utf16_col":2},"end":{"line_number":1652,"utf16_col":64}}},{"name":"process_socket","kind":"method","ident_start":55290,"ident_end":55304,"extent_start":55275,"extent_end":55468,"fully_qualified_name":"ClientImpl::process_socket","ident_utf16":{"start":{"line_number":1655,"utf16_col":2},"end":{"line_number":1655,"utf16_col":16}},"extent_utf16":{"start":{"line_number":1654,"utf16_col":2},"end":{"line_number":1657,"utf16_col":61}}},{"name":"is_ssl","kind":"method","ident_start":55484,"ident_end":55490,"extent_start":55471,"extent_end":55499,"fully_qualified_name":"ClientImpl::is_ssl","ident_utf16":{"start":{"line_number":1658,"utf16_col":15},"end":{"line_number":1658,"utf16_col":21}},"extent_utf16":{"start":{"line_number":1658,"utf16_col":2},"end":{"line_number":1658,"utf16_col":30}}},{"name":"Client","kind":"class","ident_start":55510,"ident_end":55516,"extent_start":55504,"extent_end":69322,"fully_qualified_name":"Client","ident_utf16":{"start":{"line_number":1661,"utf16_col":6},"end":{"line_number":1661,"utf16_col":12}},"extent_utf16":{"start":{"line_number":1661,"utf16_col":0},"end":{"line_number":1958,"utf16_col":1}}},{"name":"Client","kind":"function","ident_start":56021,"ident_end":56027,"extent_start":56021,"extent_end":56049,"fully_qualified_name":"Client::Client","ident_utf16":{"start":{"line_number":1677,"utf16_col":2},"end":{"line_number":1677,"utf16_col":8}},"extent_utf16":{"start":{"line_number":1677,"utf16_col":2},"end":{"line_number":1677,"utf16_col":30}}},{"name":"is_valid","kind":"method","ident_start":56114,"ident_end":56122,"extent_start":56109,"extent_end":56131,"fully_qualified_name":"Client::is_valid","ident_utf16":{"start":{"line_number":1682,"utf16_col":7},"end":{"line_number":1682,"utf16_col":15}},"extent_utf16":{"start":{"line_number":1682,"utf16_col":2},"end":{"line_number":1682,"utf16_col":24}}},{"name":"Get","kind":"method","ident_start":56142,"ident_end":56145,"extent_start":56135,"extent_end":56171,"fully_qualified_name":"Client::Get","ident_utf16":{"start":{"line_number":1684,"utf16_col":9},"end":{"line_number":1684,"utf16_col":12}},"extent_utf16":{"start":{"line_number":1684,"utf16_col":2},"end":{"line_number":1684,"utf16_col":38}}},{"name":"Get","kind":"method","ident_start":56181,"ident_end":56184,"extent_start":56174,"extent_end":56234,"fully_qualified_name":"Client::Get","ident_utf16":{"start":{"line_number":1685,"utf16_col":9},"end":{"line_number":1685,"utf16_col":12}},"extent_utf16":{"start":{"line_number":1685,"utf16_col":2},"end":{"line_number":1685,"utf16_col":62}}},{"name":"Get","kind":"method","ident_start":56244,"ident_end":56247,"extent_start":56237,"extent_end":56292,"fully_qualified_name":"Client::Get","ident_utf16":{"start":{"line_number":1686,"utf16_col":9},"end":{"line_number":1686,"utf16_col":12}},"extent_utf16":{"start":{"line_number":1686,"utf16_col":2},"end":{"line_number":1686,"utf16_col":57}}},{"name":"Get","kind":"method","ident_start":56302,"ident_end":56305,"extent_start":56295,"extent_end":56387,"fully_qualified_name":"Client::Get","ident_utf16":{"start":{"line_number":1687,"utf16_col":9},"end":{"line_number":1687,"utf16_col":12}},"extent_utf16":{"start":{"line_number":1687,"utf16_col":2},"end":{"line_number":1688,"utf16_col":32}}},{"name":"Get","kind":"method","ident_start":56397,"ident_end":56400,"extent_start":56390,"extent_end":56460,"fully_qualified_name":"Client::Get","ident_utf16":{"start":{"line_number":1689,"utf16_col":9},"end":{"line_number":1689,"utf16_col":12}},"extent_utf16":{"start":{"line_number":1689,"utf16_col":2},"end":{"line_number":1689,"utf16_col":72}}},{"name":"Get","kind":"method","ident_start":56470,"ident_end":56473,"extent_start":56463,"extent_end":56570,"fully_qualified_name":"Client::Get","ident_utf16":{"start":{"line_number":1690,"utf16_col":9},"end":{"line_number":1690,"utf16_col":12}},"extent_utf16":{"start":{"line_number":1690,"utf16_col":2},"end":{"line_number":1691,"utf16_col":47}}},{"name":"Get","kind":"method","ident_start":56580,"ident_end":56583,"extent_start":56573,"extent_end":56675,"fully_qualified_name":"Client::Get","ident_utf16":{"start":{"line_number":1692,"utf16_col":9},"end":{"line_number":1692,"utf16_col":12}},"extent_utf16":{"start":{"line_number":1692,"utf16_col":2},"end":{"line_number":1693,"utf16_col":32}}},{"name":"Get","kind":"method","ident_start":56685,"ident_end":56688,"extent_start":56678,"extent_end":56804,"fully_qualified_name":"Client::Get","ident_utf16":{"start":{"line_number":1694,"utf16_col":9},"end":{"line_number":1694,"utf16_col":12}},"extent_utf16":{"start":{"line_number":1694,"utf16_col":2},"end":{"line_number":1695,"utf16_col":66}}},{"name":"Get","kind":"method","ident_start":56814,"ident_end":56817,"extent_start":56807,"extent_end":56924,"fully_qualified_name":"Client::Get","ident_utf16":{"start":{"line_number":1696,"utf16_col":9},"end":{"line_number":1696,"utf16_col":12}},"extent_utf16":{"start":{"line_number":1696,"utf16_col":2},"end":{"line_number":1697,"utf16_col":47}}},{"name":"Get","kind":"method","ident_start":56934,"ident_end":56937,"extent_start":56927,"extent_end":57081,"fully_qualified_name":"Client::Get","ident_utf16":{"start":{"line_number":1698,"utf16_col":9},"end":{"line_number":1698,"utf16_col":12}},"extent_utf16":{"start":{"line_number":1698,"utf16_col":2},"end":{"line_number":1700,"utf16_col":47}}},{"name":"Get","kind":"method","ident_start":57091,"ident_end":57094,"extent_start":57084,"extent_end":57257,"fully_qualified_name":"Client::Get","ident_utf16":{"start":{"line_number":1701,"utf16_col":9},"end":{"line_number":1701,"utf16_col":12}},"extent_utf16":{"start":{"line_number":1701,"utf16_col":2},"end":{"line_number":1703,"utf16_col":32}}},{"name":"Get","kind":"method","ident_start":57267,"ident_end":57270,"extent_start":57260,"extent_end":57396,"fully_qualified_name":"Client::Get","ident_utf16":{"start":{"line_number":1704,"utf16_col":9},"end":{"line_number":1704,"utf16_col":12}},"extent_utf16":{"start":{"line_number":1704,"utf16_col":2},"end":{"line_number":1705,"utf16_col":66}}},{"name":"Get","kind":"method","ident_start":57407,"ident_end":57410,"extent_start":57400,"extent_end":57524,"fully_qualified_name":"Client::Get","ident_utf16":{"start":{"line_number":1707,"utf16_col":9},"end":{"line_number":1707,"utf16_col":12}},"extent_utf16":{"start":{"line_number":1707,"utf16_col":2},"end":{"line_number":1708,"utf16_col":66}}},{"name":"Get","kind":"method","ident_start":57534,"ident_end":57537,"extent_start":57527,"extent_end":57698,"fully_qualified_name":"Client::Get","ident_utf16":{"start":{"line_number":1709,"utf16_col":9},"end":{"line_number":1709,"utf16_col":12}},"extent_utf16":{"start":{"line_number":1709,"utf16_col":2},"end":{"line_number":1711,"utf16_col":42}}},{"name":"Get","kind":"method","ident_start":57708,"ident_end":57711,"extent_start":57701,"extent_end":57906,"fully_qualified_name":"Client::Get","ident_utf16":{"start":{"line_number":1712,"utf16_col":9},"end":{"line_number":1712,"utf16_col":12}},"extent_utf16":{"start":{"line_number":1712,"utf16_col":2},"end":{"line_number":1714,"utf16_col":76}}},{"name":"Head","kind":"method","ident_start":57917,"ident_end":57921,"extent_start":57910,"extent_end":57947,"fully_qualified_name":"Client::Head","ident_utf16":{"start":{"line_number":1716,"utf16_col":9},"end":{"line_number":1716,"utf16_col":13}},"extent_utf16":{"start":{"line_number":1716,"utf16_col":2},"end":{"line_number":1716,"utf16_col":39}}},{"name":"Head","kind":"method","ident_start":57957,"ident_end":57961,"extent_start":57950,"extent_end":58011,"fully_qualified_name":"Client::Head","ident_utf16":{"start":{"line_number":1717,"utf16_col":9},"end":{"line_number":1717,"utf16_col":13}},"extent_utf16":{"start":{"line_number":1717,"utf16_col":2},"end":{"line_number":1717,"utf16_col":63}}},{"name":"Post","kind":"method","ident_start":58022,"ident_end":58026,"extent_start":58015,"extent_end":58052,"fully_qualified_name":"Client::Post","ident_utf16":{"start":{"line_number":1719,"utf16_col":9},"end":{"line_number":1719,"utf16_col":13}},"extent_utf16":{"start":{"line_number":1719,"utf16_col":2},"end":{"line_number":1719,"utf16_col":39}}},{"name":"Post","kind":"method","ident_start":58062,"ident_end":58066,"extent_start":58055,"extent_end":58116,"fully_qualified_name":"Client::Post","ident_utf16":{"start":{"line_number":1720,"utf16_col":9},"end":{"line_number":1720,"utf16_col":13}},"extent_utf16":{"start":{"line_number":1720,"utf16_col":2},"end":{"line_number":1720,"utf16_col":63}}},{"name":"Post","kind":"method","ident_start":58126,"ident_end":58130,"extent_start":58119,"extent_end":58244,"fully_qualified_name":"Client::Post","ident_utf16":{"start":{"line_number":1721,"utf16_col":9},"end":{"line_number":1721,"utf16_col":13}},"extent_utf16":{"start":{"line_number":1721,"utf16_col":2},"end":{"line_number":1722,"utf16_col":47}}},{"name":"Post","kind":"method","ident_start":58254,"ident_end":58258,"extent_start":58247,"extent_end":58396,"fully_qualified_name":"Client::Post","ident_utf16":{"start":{"line_number":1723,"utf16_col":9},"end":{"line_number":1723,"utf16_col":13}},"extent_utf16":{"start":{"line_number":1723,"utf16_col":2},"end":{"line_number":1724,"utf16_col":70}}},{"name":"Post","kind":"method","ident_start":58406,"ident_end":58410,"extent_start":58399,"extent_end":58581,"fully_qualified_name":"Client::Post","ident_utf16":{"start":{"line_number":1725,"utf16_col":9},"end":{"line_number":1725,"utf16_col":13}},"extent_utf16":{"start":{"line_number":1725,"utf16_col":2},"end":{"line_number":1727,"utf16_col":33}}},{"name":"Post","kind":"method","ident_start":58591,"ident_end":58595,"extent_start":58584,"extent_end":58693,"fully_qualified_name":"Client::Post","ident_utf16":{"start":{"line_number":1728,"utf16_col":9},"end":{"line_number":1728,"utf16_col":13}},"extent_utf16":{"start":{"line_number":1728,"utf16_col":2},"end":{"line_number":1729,"utf16_col":47}}},{"name":"Post","kind":"method","ident_start":58703,"ident_end":58707,"extent_start":58696,"extent_end":58824,"fully_qualified_name":"Client::Post","ident_utf16":{"start":{"line_number":1730,"utf16_col":9},"end":{"line_number":1730,"utf16_col":13}},"extent_utf16":{"start":{"line_number":1730,"utf16_col":2},"end":{"line_number":1731,"utf16_col":66}}},{"name":"Post","kind":"method","ident_start":58834,"ident_end":58838,"extent_start":58827,"extent_end":58960,"fully_qualified_name":"Client::Post","ident_utf16":{"start":{"line_number":1732,"utf16_col":9},"end":{"line_number":1732,"utf16_col":13}},"extent_utf16":{"start":{"line_number":1732,"utf16_col":2},"end":{"line_number":1733,"utf16_col":72}}},{"name":"Post","kind":"method","ident_start":58970,"ident_end":58974,"extent_start":58963,"extent_end":59129,"fully_qualified_name":"Client::Post","ident_utf16":{"start":{"line_number":1734,"utf16_col":9},"end":{"line_number":1734,"utf16_col":13}},"extent_utf16":{"start":{"line_number":1734,"utf16_col":2},"end":{"line_number":1736,"utf16_col":33}}},{"name":"Post","kind":"method","ident_start":59139,"ident_end":59143,"extent_start":59132,"extent_end":59287,"fully_qualified_name":"Client::Post","ident_utf16":{"start":{"line_number":1737,"utf16_col":9},"end":{"line_number":1737,"utf16_col":13}},"extent_utf16":{"start":{"line_number":1737,"utf16_col":2},"end":{"line_number":1739,"utf16_col":47}}},{"name":"Post","kind":"method","ident_start":59297,"ident_end":59301,"extent_start":59290,"extent_end":59435,"fully_qualified_name":"Client::Post","ident_utf16":{"start":{"line_number":1740,"utf16_col":9},"end":{"line_number":1740,"utf16_col":13}},"extent_utf16":{"start":{"line_number":1740,"utf16_col":2},"end":{"line_number":1742,"utf16_col":47}}},{"name":"Post","kind":"method","ident_start":59445,"ident_end":59449,"extent_start":59438,"extent_end":59617,"fully_qualified_name":"Client::Post","ident_utf16":{"start":{"line_number":1743,"utf16_col":9},"end":{"line_number":1743,"utf16_col":13}},"extent_utf16":{"start":{"line_number":1743,"utf16_col":2},"end":{"line_number":1745,"utf16_col":47}}},{"name":"Post","kind":"method","ident_start":59627,"ident_end":59631,"extent_start":59620,"extent_end":59789,"fully_qualified_name":"Client::Post","ident_utf16":{"start":{"line_number":1746,"utf16_col":9},"end":{"line_number":1746,"utf16_col":13}},"extent_utf16":{"start":{"line_number":1746,"utf16_col":2},"end":{"line_number":1748,"utf16_col":47}}},{"name":"Post","kind":"method","ident_start":59799,"ident_end":59803,"extent_start":59792,"extent_end":59851,"fully_qualified_name":"Client::Post","ident_utf16":{"start":{"line_number":1749,"utf16_col":9},"end":{"line_number":1749,"utf16_col":13}},"extent_utf16":{"start":{"line_number":1749,"utf16_col":2},"end":{"line_number":1749,"utf16_col":61}}},{"name":"Post","kind":"method","ident_start":59861,"ident_end":59865,"extent_start":59854,"extent_end":59951,"fully_qualified_name":"Client::Post","ident_utf16":{"start":{"line_number":1750,"utf16_col":9},"end":{"line_number":1750,"utf16_col":13}},"extent_utf16":{"start":{"line_number":1750,"utf16_col":2},"end":{"line_number":1751,"utf16_col":36}}},{"name":"Post","kind":"method","ident_start":59961,"ident_end":59965,"extent_start":59954,"extent_end":60070,"fully_qualified_name":"Client::Post","ident_utf16":{"start":{"line_number":1752,"utf16_col":9},"end":{"line_number":1752,"utf16_col":13}},"extent_utf16":{"start":{"line_number":1752,"utf16_col":2},"end":{"line_number":1753,"utf16_col":55}}},{"name":"Post","kind":"method","ident_start":60080,"ident_end":60084,"extent_start":60073,"extent_end":60147,"fully_qualified_name":"Client::Post","ident_utf16":{"start":{"line_number":1754,"utf16_col":9},"end":{"line_number":1754,"utf16_col":13}},"extent_utf16":{"start":{"line_number":1754,"utf16_col":2},"end":{"line_number":1754,"utf16_col":76}}},{"name":"Post","kind":"method","ident_start":60157,"ident_end":60161,"extent_start":60150,"extent_end":60262,"fully_qualified_name":"Client::Post","ident_utf16":{"start":{"line_number":1755,"utf16_col":9},"end":{"line_number":1755,"utf16_col":13}},"extent_utf16":{"start":{"line_number":1755,"utf16_col":2},"end":{"line_number":1756,"utf16_col":51}}},{"name":"Post","kind":"method","ident_start":60272,"ident_end":60276,"extent_start":60265,"extent_end":60406,"fully_qualified_name":"Client::Post","ident_utf16":{"start":{"line_number":1757,"utf16_col":9},"end":{"line_number":1757,"utf16_col":13}},"extent_utf16":{"start":{"line_number":1757,"utf16_col":2},"end":{"line_number":1758,"utf16_col":80}}},{"name":"Post","kind":"method","ident_start":60416,"ident_end":60420,"extent_start":60409,"extent_end":60589,"fully_qualified_name":"Client::Post","ident_utf16":{"start":{"line_number":1759,"utf16_col":9},"end":{"line_number":1759,"utf16_col":13}},"extent_utf16":{"start":{"line_number":1759,"utf16_col":2},"end":{"line_number":1761,"utf16_col":68}}},{"name":"Put","kind":"method","ident_start":60600,"ident_end":60603,"extent_start":60593,"extent_end":60629,"fully_qualified_name":"Client::Put","ident_utf16":{"start":{"line_number":1763,"utf16_col":9},"end":{"line_number":1763,"utf16_col":12}},"extent_utf16":{"start":{"line_number":1763,"utf16_col":2},"end":{"line_number":1763,"utf16_col":38}}},{"name":"Put","kind":"method","ident_start":60639,"ident_end":60642,"extent_start":60632,"extent_end":60755,"fully_qualified_name":"Client::Put","ident_utf16":{"start":{"line_number":1764,"utf16_col":9},"end":{"line_number":1764,"utf16_col":12}},"extent_utf16":{"start":{"line_number":1764,"utf16_col":2},"end":{"line_number":1765,"utf16_col":46}}},{"name":"Put","kind":"method","ident_start":60765,"ident_end":60768,"extent_start":60758,"extent_end":60905,"fully_qualified_name":"Client::Put","ident_utf16":{"start":{"line_number":1766,"utf16_col":9},"end":{"line_number":1766,"utf16_col":12}},"extent_utf16":{"start":{"line_number":1766,"utf16_col":2},"end":{"line_number":1767,"utf16_col":69}}},{"name":"Put","kind":"method","ident_start":60915,"ident_end":60918,"extent_start":60908,"extent_end":61087,"fully_qualified_name":"Client::Put","ident_utf16":{"start":{"line_number":1768,"utf16_col":9},"end":{"line_number":1768,"utf16_col":12}},"extent_utf16":{"start":{"line_number":1768,"utf16_col":2},"end":{"line_number":1770,"utf16_col":32}}},{"name":"Put","kind":"method","ident_start":61097,"ident_end":61100,"extent_start":61090,"extent_end":61197,"fully_qualified_name":"Client::Put","ident_utf16":{"start":{"line_number":1771,"utf16_col":9},"end":{"line_number":1771,"utf16_col":12}},"extent_utf16":{"start":{"line_number":1771,"utf16_col":2},"end":{"line_number":1772,"utf16_col":46}}},{"name":"Put","kind":"method","ident_start":61207,"ident_end":61210,"extent_start":61200,"extent_end":61326,"fully_qualified_name":"Client::Put","ident_utf16":{"start":{"line_number":1773,"utf16_col":9},"end":{"line_number":1773,"utf16_col":12}},"extent_utf16":{"start":{"line_number":1773,"utf16_col":2},"end":{"line_number":1774,"utf16_col":65}}},{"name":"Put","kind":"method","ident_start":61336,"ident_end":61339,"extent_start":61329,"extent_end":61460,"fully_qualified_name":"Client::Put","ident_utf16":{"start":{"line_number":1775,"utf16_col":9},"end":{"line_number":1775,"utf16_col":12}},"extent_utf16":{"start":{"line_number":1775,"utf16_col":2},"end":{"line_number":1776,"utf16_col":71}}},{"name":"Put","kind":"method","ident_start":61470,"ident_end":61473,"extent_start":61463,"extent_end":61626,"fully_qualified_name":"Client::Put","ident_utf16":{"start":{"line_number":1777,"utf16_col":9},"end":{"line_number":1777,"utf16_col":12}},"extent_utf16":{"start":{"line_number":1777,"utf16_col":2},"end":{"line_number":1779,"utf16_col":32}}},{"name":"Put","kind":"method","ident_start":61636,"ident_end":61639,"extent_start":61629,"extent_end":61768,"fully_qualified_name":"Client::Put","ident_utf16":{"start":{"line_number":1780,"utf16_col":9},"end":{"line_number":1780,"utf16_col":12}},"extent_utf16":{"start":{"line_number":1780,"utf16_col":2},"end":{"line_number":1781,"utf16_col":80}}},{"name":"Put","kind":"method","ident_start":61778,"ident_end":61781,"extent_start":61771,"extent_end":61913,"fully_qualified_name":"Client::Put","ident_utf16":{"start":{"line_number":1782,"utf16_col":9},"end":{"line_number":1782,"utf16_col":12}},"extent_utf16":{"start":{"line_number":1782,"utf16_col":2},"end":{"line_number":1784,"utf16_col":46}}},{"name":"Put","kind":"method","ident_start":61923,"ident_end":61926,"extent_start":61916,"extent_end":62092,"fully_qualified_name":"Client::Put","ident_utf16":{"start":{"line_number":1785,"utf16_col":9},"end":{"line_number":1785,"utf16_col":12}},"extent_utf16":{"start":{"line_number":1785,"utf16_col":2},"end":{"line_number":1787,"utf16_col":46}}},{"name":"Put","kind":"method","ident_start":62102,"ident_end":62105,"extent_start":62095,"extent_end":62261,"fully_qualified_name":"Client::Put","ident_utf16":{"start":{"line_number":1788,"utf16_col":9},"end":{"line_number":1788,"utf16_col":12}},"extent_utf16":{"start":{"line_number":1788,"utf16_col":2},"end":{"line_number":1790,"utf16_col":46}}},{"name":"Put","kind":"method","ident_start":62271,"ident_end":62274,"extent_start":62264,"extent_end":62322,"fully_qualified_name":"Client::Put","ident_utf16":{"start":{"line_number":1791,"utf16_col":9},"end":{"line_number":1791,"utf16_col":12}},"extent_utf16":{"start":{"line_number":1791,"utf16_col":2},"end":{"line_number":1791,"utf16_col":60}}},{"name":"Put","kind":"method","ident_start":62332,"ident_end":62335,"extent_start":62325,"extent_end":62420,"fully_qualified_name":"Client::Put","ident_utf16":{"start":{"line_number":1792,"utf16_col":9},"end":{"line_number":1792,"utf16_col":12}},"extent_utf16":{"start":{"line_number":1792,"utf16_col":2},"end":{"line_number":1793,"utf16_col":35}}},{"name":"Put","kind":"method","ident_start":62430,"ident_end":62433,"extent_start":62423,"extent_end":62537,"fully_qualified_name":"Client::Put","ident_utf16":{"start":{"line_number":1794,"utf16_col":9},"end":{"line_number":1794,"utf16_col":12}},"extent_utf16":{"start":{"line_number":1794,"utf16_col":2},"end":{"line_number":1795,"utf16_col":54}}},{"name":"Put","kind":"method","ident_start":62547,"ident_end":62550,"extent_start":62540,"extent_end":62613,"fully_qualified_name":"Client::Put","ident_utf16":{"start":{"line_number":1796,"utf16_col":9},"end":{"line_number":1796,"utf16_col":12}},"extent_utf16":{"start":{"line_number":1796,"utf16_col":2},"end":{"line_number":1796,"utf16_col":75}}},{"name":"Put","kind":"method","ident_start":62623,"ident_end":62626,"extent_start":62616,"extent_end":62726,"fully_qualified_name":"Client::Put","ident_utf16":{"start":{"line_number":1797,"utf16_col":9},"end":{"line_number":1797,"utf16_col":12}},"extent_utf16":{"start":{"line_number":1797,"utf16_col":2},"end":{"line_number":1798,"utf16_col":50}}},{"name":"Put","kind":"method","ident_start":62736,"ident_end":62739,"extent_start":62729,"extent_end":62868,"fully_qualified_name":"Client::Put","ident_utf16":{"start":{"line_number":1799,"utf16_col":9},"end":{"line_number":1799,"utf16_col":12}},"extent_utf16":{"start":{"line_number":1799,"utf16_col":2},"end":{"line_number":1800,"utf16_col":79}}},{"name":"Put","kind":"method","ident_start":62878,"ident_end":62881,"extent_start":62871,"extent_end":63048,"fully_qualified_name":"Client::Put","ident_utf16":{"start":{"line_number":1801,"utf16_col":9},"end":{"line_number":1801,"utf16_col":12}},"extent_utf16":{"start":{"line_number":1801,"utf16_col":2},"end":{"line_number":1803,"utf16_col":67}}},{"name":"Patch","kind":"method","ident_start":63059,"ident_end":63064,"extent_start":63052,"extent_end":63090,"fully_qualified_name":"Client::Patch","ident_utf16":{"start":{"line_number":1805,"utf16_col":9},"end":{"line_number":1805,"utf16_col":14}},"extent_utf16":{"start":{"line_number":1805,"utf16_col":2},"end":{"line_number":1805,"utf16_col":40}}},{"name":"Patch","kind":"method","ident_start":63100,"ident_end":63105,"extent_start":63093,"extent_end":63220,"fully_qualified_name":"Client::Patch","ident_utf16":{"start":{"line_number":1806,"utf16_col":9},"end":{"line_number":1806,"utf16_col":14}},"extent_utf16":{"start":{"line_number":1806,"utf16_col":2},"end":{"line_number":1807,"utf16_col":48}}},{"name":"Patch","kind":"method","ident_start":63230,"ident_end":63235,"extent_start":63223,"extent_end":63369,"fully_qualified_name":"Client::Patch","ident_utf16":{"start":{"line_number":1808,"utf16_col":9},"end":{"line_number":1808,"utf16_col":14}},"extent_utf16":{"start":{"line_number":1808,"utf16_col":2},"end":{"line_number":1809,"utf16_col":67}}},{"name":"Patch","kind":"method","ident_start":63379,"ident_end":63384,"extent_start":63372,"extent_end":63538,"fully_qualified_name":"Client::Patch","ident_utf16":{"start":{"line_number":1810,"utf16_col":9},"end":{"line_number":1810,"utf16_col":14}},"extent_utf16":{"start":{"line_number":1810,"utf16_col":2},"end":{"line_number":1812,"utf16_col":48}}},{"name":"Patch","kind":"method","ident_start":63548,"ident_end":63553,"extent_start":63541,"extent_end":63726,"fully_qualified_name":"Client::Patch","ident_utf16":{"start":{"line_number":1813,"utf16_col":9},"end":{"line_number":1813,"utf16_col":14}},"extent_utf16":{"start":{"line_number":1813,"utf16_col":2},"end":{"line_number":1815,"utf16_col":67}}},{"name":"Patch","kind":"method","ident_start":63736,"ident_end":63741,"extent_start":63729,"extent_end":63840,"fully_qualified_name":"Client::Patch","ident_utf16":{"start":{"line_number":1816,"utf16_col":9},"end":{"line_number":1816,"utf16_col":14}},"extent_utf16":{"start":{"line_number":1816,"utf16_col":2},"end":{"line_number":1817,"utf16_col":48}}},{"name":"Patch","kind":"method","ident_start":63850,"ident_end":63855,"extent_start":63843,"extent_end":63973,"fully_qualified_name":"Client::Patch","ident_utf16":{"start":{"line_number":1818,"utf16_col":9},"end":{"line_number":1818,"utf16_col":14}},"extent_utf16":{"start":{"line_number":1818,"utf16_col":2},"end":{"line_number":1819,"utf16_col":67}}},{"name":"Patch","kind":"method","ident_start":63983,"ident_end":63988,"extent_start":63976,"extent_end":64111,"fully_qualified_name":"Client::Patch","ident_utf16":{"start":{"line_number":1820,"utf16_col":9},"end":{"line_number":1820,"utf16_col":14}},"extent_utf16":{"start":{"line_number":1820,"utf16_col":2},"end":{"line_number":1821,"utf16_col":73}}},{"name":"Patch","kind":"method","ident_start":64121,"ident_end":64126,"extent_start":64114,"extent_end":64283,"fully_qualified_name":"Client::Patch","ident_utf16":{"start":{"line_number":1822,"utf16_col":9},"end":{"line_number":1822,"utf16_col":14}},"extent_utf16":{"start":{"line_number":1822,"utf16_col":2},"end":{"line_number":1824,"utf16_col":34}}},{"name":"Patch","kind":"method","ident_start":64293,"ident_end":64298,"extent_start":64286,"extent_end":64444,"fully_qualified_name":"Client::Patch","ident_utf16":{"start":{"line_number":1825,"utf16_col":9},"end":{"line_number":1825,"utf16_col":14}},"extent_utf16":{"start":{"line_number":1825,"utf16_col":2},"end":{"line_number":1827,"utf16_col":48}}},{"name":"Patch","kind":"method","ident_start":64454,"ident_end":64459,"extent_start":64447,"extent_end":64595,"fully_qualified_name":"Client::Patch","ident_utf16":{"start":{"line_number":1828,"utf16_col":9},"end":{"line_number":1828,"utf16_col":14}},"extent_utf16":{"start":{"line_number":1828,"utf16_col":2},"end":{"line_number":1830,"utf16_col":48}}},{"name":"Patch","kind":"method","ident_start":64605,"ident_end":64610,"extent_start":64598,"extent_end":64780,"fully_qualified_name":"Client::Patch","ident_utf16":{"start":{"line_number":1831,"utf16_col":9},"end":{"line_number":1831,"utf16_col":14}},"extent_utf16":{"start":{"line_number":1831,"utf16_col":2},"end":{"line_number":1833,"utf16_col":48}}},{"name":"Patch","kind":"method","ident_start":64790,"ident_end":64795,"extent_start":64783,"extent_end":64955,"fully_qualified_name":"Client::Patch","ident_utf16":{"start":{"line_number":1834,"utf16_col":9},"end":{"line_number":1834,"utf16_col":14}},"extent_utf16":{"start":{"line_number":1834,"utf16_col":2},"end":{"line_number":1836,"utf16_col":48}}},{"name":"Delete","kind":"method","ident_start":64966,"ident_end":64972,"extent_start":64959,"extent_end":64998,"fully_qualified_name":"Client::Delete","ident_utf16":{"start":{"line_number":1838,"utf16_col":9},"end":{"line_number":1838,"utf16_col":15}},"extent_utf16":{"start":{"line_number":1838,"utf16_col":2},"end":{"line_number":1838,"utf16_col":41}}},{"name":"Delete","kind":"method","ident_start":65008,"ident_end":65014,"extent_start":65001,"extent_end":65064,"fully_qualified_name":"Client::Delete","ident_utf16":{"start":{"line_number":1839,"utf16_col":9},"end":{"line_number":1839,"utf16_col":15}},"extent_utf16":{"start":{"line_number":1839,"utf16_col":2},"end":{"line_number":1839,"utf16_col":65}}},{"name":"Delete","kind":"method","ident_start":65074,"ident_end":65080,"extent_start":65067,"extent_end":65196,"fully_qualified_name":"Client::Delete","ident_utf16":{"start":{"line_number":1840,"utf16_col":9},"end":{"line_number":1840,"utf16_col":15}},"extent_utf16":{"start":{"line_number":1840,"utf16_col":2},"end":{"line_number":1841,"utf16_col":72}}},{"name":"Delete","kind":"method","ident_start":65206,"ident_end":65212,"extent_start":65199,"extent_end":65363,"fully_qualified_name":"Client::Delete","ident_utf16":{"start":{"line_number":1842,"utf16_col":9},"end":{"line_number":1842,"utf16_col":15}},"extent_utf16":{"start":{"line_number":1842,"utf16_col":2},"end":{"line_number":1844,"utf16_col":35}}},{"name":"Delete","kind":"method","ident_start":65373,"ident_end":65379,"extent_start":65366,"extent_end":65535,"fully_qualified_name":"Client::Delete","ident_utf16":{"start":{"line_number":1845,"utf16_col":9},"end":{"line_number":1845,"utf16_col":15}},"extent_utf16":{"start":{"line_number":1845,"utf16_col":2},"end":{"line_number":1847,"utf16_col":49}}},{"name":"Delete","kind":"method","ident_start":65545,"ident_end":65551,"extent_start":65538,"extent_end":65726,"fully_qualified_name":"Client::Delete","ident_utf16":{"start":{"line_number":1848,"utf16_col":9},"end":{"line_number":1848,"utf16_col":15}},"extent_utf16":{"start":{"line_number":1848,"utf16_col":2},"end":{"line_number":1850,"utf16_col":68}}},{"name":"Delete","kind":"method","ident_start":65736,"ident_end":65742,"extent_start":65729,"extent_end":65842,"fully_qualified_name":"Client::Delete","ident_utf16":{"start":{"line_number":1851,"utf16_col":9},"end":{"line_number":1851,"utf16_col":15}},"extent_utf16":{"start":{"line_number":1851,"utf16_col":2},"end":{"line_number":1852,"utf16_col":49}}},{"name":"Delete","kind":"method","ident_start":65852,"ident_end":65858,"extent_start":65845,"extent_end":65977,"fully_qualified_name":"Client::Delete","ident_utf16":{"start":{"line_number":1853,"utf16_col":9},"end":{"line_number":1853,"utf16_col":15}},"extent_utf16":{"start":{"line_number":1853,"utf16_col":2},"end":{"line_number":1854,"utf16_col":68}}},{"name":"Delete","kind":"method","ident_start":65987,"ident_end":65993,"extent_start":65980,"extent_end":66117,"fully_qualified_name":"Client::Delete","ident_utf16":{"start":{"line_number":1855,"utf16_col":9},"end":{"line_number":1855,"utf16_col":15}},"extent_utf16":{"start":{"line_number":1855,"utf16_col":2},"end":{"line_number":1856,"utf16_col":74}}},{"name":"Delete","kind":"method","ident_start":66127,"ident_end":66133,"extent_start":66120,"extent_end":66292,"fully_qualified_name":"Client::Delete","ident_utf16":{"start":{"line_number":1857,"utf16_col":9},"end":{"line_number":1857,"utf16_col":15}},"extent_utf16":{"start":{"line_number":1857,"utf16_col":2},"end":{"line_number":1859,"utf16_col":35}}},{"name":"Options","kind":"method","ident_start":66303,"ident_end":66310,"extent_start":66296,"extent_end":66336,"fully_qualified_name":"Client::Options","ident_utf16":{"start":{"line_number":1861,"utf16_col":9},"end":{"line_number":1861,"utf16_col":16}},"extent_utf16":{"start":{"line_number":1861,"utf16_col":2},"end":{"line_number":1861,"utf16_col":42}}},{"name":"Options","kind":"method","ident_start":66346,"ident_end":66353,"extent_start":66339,"extent_end":66403,"fully_qualified_name":"Client::Options","ident_utf16":{"start":{"line_number":1862,"utf16_col":9},"end":{"line_number":1862,"utf16_col":16}},"extent_utf16":{"start":{"line_number":1862,"utf16_col":2},"end":{"line_number":1862,"utf16_col":66}}},{"name":"send","kind":"method","ident_start":66412,"ident_end":66416,"extent_start":66407,"extent_end":66460,"fully_qualified_name":"Client::send","ident_utf16":{"start":{"line_number":1864,"utf16_col":7},"end":{"line_number":1864,"utf16_col":11}},"extent_utf16":{"start":{"line_number":1864,"utf16_col":2},"end":{"line_number":1864,"utf16_col":55}}},{"name":"send","kind":"method","ident_start":66470,"ident_end":66474,"extent_start":66463,"extent_end":66495,"fully_qualified_name":"Client::send","ident_utf16":{"start":{"line_number":1865,"utf16_col":9},"end":{"line_number":1865,"utf16_col":13}},"extent_utf16":{"start":{"line_number":1865,"utf16_col":2},"end":{"line_number":1865,"utf16_col":34}}},{"name":"stop","kind":"method","ident_start":66504,"ident_end":66508,"extent_start":66499,"extent_end":66511,"fully_qualified_name":"Client::stop","ident_utf16":{"start":{"line_number":1867,"utf16_col":7},"end":{"line_number":1867,"utf16_col":11}},"extent_utf16":{"start":{"line_number":1867,"utf16_col":2},"end":{"line_number":1867,"utf16_col":14}}},{"name":"host","kind":"method","ident_start":66527,"ident_end":66531,"extent_start":66515,"extent_end":66540,"fully_qualified_name":"Client::host","ident_utf16":{"start":{"line_number":1869,"utf16_col":14},"end":{"line_number":1869,"utf16_col":18}},"extent_utf16":{"start":{"line_number":1869,"utf16_col":2},"end":{"line_number":1869,"utf16_col":27}}},{"name":"port","kind":"method","ident_start":66547,"ident_end":66551,"extent_start":66543,"extent_end":66560,"fully_qualified_name":"Client::port","ident_utf16":{"start":{"line_number":1870,"utf16_col":6},"end":{"line_number":1870,"utf16_col":10}},"extent_utf16":{"start":{"line_number":1870,"utf16_col":2},"end":{"line_number":1870,"utf16_col":19}}},{"name":"is_socket_open","kind":"method","ident_start":66571,"ident_end":66585,"extent_start":66564,"extent_end":66594,"fully_qualified_name":"Client::is_socket_open","ident_utf16":{"start":{"line_number":1872,"utf16_col":9},"end":{"line_number":1872,"utf16_col":23}},"extent_utf16":{"start":{"line_number":1872,"utf16_col":2},"end":{"line_number":1872,"utf16_col":32}}},{"name":"socket","kind":"method","ident_start":66606,"ident_end":66612,"extent_start":66597,"extent_end":66621,"fully_qualified_name":"Client::socket","ident_utf16":{"start":{"line_number":1873,"utf16_col":11},"end":{"line_number":1873,"utf16_col":17}},"extent_utf16":{"start":{"line_number":1873,"utf16_col":2},"end":{"line_number":1873,"utf16_col":26}}},{"name":"set_hostname_addr_map","kind":"method","ident_start":66630,"ident_end":66651,"extent_start":66625,"extent_end":66697,"fully_qualified_name":"Client::set_hostname_addr_map","ident_utf16":{"start":{"line_number":1875,"utf16_col":7},"end":{"line_number":1875,"utf16_col":28}},"extent_utf16":{"start":{"line_number":1875,"utf16_col":2},"end":{"line_number":1875,"utf16_col":74}}},{"name":"set_default_headers","kind":"method","ident_start":66706,"ident_end":66725,"extent_start":66701,"extent_end":66743,"fully_qualified_name":"Client::set_default_headers","ident_utf16":{"start":{"line_number":1877,"utf16_col":7},"end":{"line_number":1877,"utf16_col":26}},"extent_utf16":{"start":{"line_number":1877,"utf16_col":2},"end":{"line_number":1877,"utf16_col":44}}},{"name":"set_header_writer","kind":"method","ident_start":66754,"ident_end":66771,"extent_start":66747,"extent_end":66831,"fully_qualified_name":"Client::set_header_writer","ident_utf16":{"start":{"line_number":1880,"utf16_col":2},"end":{"line_number":1880,"utf16_col":19}},"extent_utf16":{"start":{"line_number":1879,"utf16_col":2},"end":{"line_number":1880,"utf16_col":79}}},{"name":"set_address_family","kind":"method","ident_start":66840,"ident_end":66858,"extent_start":66835,"extent_end":66871,"fully_qualified_name":"Client::set_address_family","ident_utf16":{"start":{"line_number":1882,"utf16_col":7},"end":{"line_number":1882,"utf16_col":25}},"extent_utf16":{"start":{"line_number":1882,"utf16_col":2},"end":{"line_number":1882,"utf16_col":38}}},{"name":"set_tcp_nodelay","kind":"method","ident_start":66879,"ident_end":66894,"extent_start":66874,"extent_end":66904,"fully_qualified_name":"Client::set_tcp_nodelay","ident_utf16":{"start":{"line_number":1883,"utf16_col":7},"end":{"line_number":1883,"utf16_col":22}},"extent_utf16":{"start":{"line_number":1883,"utf16_col":2},"end":{"line_number":1883,"utf16_col":32}}},{"name":"set_socket_options","kind":"method","ident_start":66912,"ident_end":66930,"extent_start":66907,"extent_end":66961,"fully_qualified_name":"Client::set_socket_options","ident_utf16":{"start":{"line_number":1884,"utf16_col":7},"end":{"line_number":1884,"utf16_col":25}},"extent_utf16":{"start":{"line_number":1884,"utf16_col":2},"end":{"line_number":1884,"utf16_col":56}}},{"name":"set_connection_timeout","kind":"method","ident_start":66970,"ident_end":66992,"extent_start":66965,"extent_end":67022,"fully_qualified_name":"Client::set_connection_timeout","ident_utf16":{"start":{"line_number":1886,"utf16_col":7},"end":{"line_number":1886,"utf16_col":29}},"extent_utf16":{"start":{"line_number":1886,"utf16_col":2},"end":{"line_number":1886,"utf16_col":59}}},{"name":"set_read_timeout","kind":"method","ident_start":67153,"ident_end":67169,"extent_start":67148,"extent_end":67199,"fully_qualified_name":"Client::set_read_timeout","ident_utf16":{"start":{"line_number":1891,"utf16_col":7},"end":{"line_number":1891,"utf16_col":23}},"extent_utf16":{"start":{"line_number":1891,"utf16_col":2},"end":{"line_number":1891,"utf16_col":53}}},{"name":"set_write_timeout","kind":"method","ident_start":67322,"ident_end":67339,"extent_start":67317,"extent_end":67369,"fully_qualified_name":"Client::set_write_timeout","ident_utf16":{"start":{"line_number":1895,"utf16_col":7},"end":{"line_number":1895,"utf16_col":24}},"extent_utf16":{"start":{"line_number":1895,"utf16_col":2},"end":{"line_number":1895,"utf16_col":54}}},{"name":"set_max_timeout","kind":"method","ident_start":67493,"ident_end":67508,"extent_start":67488,"extent_end":67522,"fully_qualified_name":"Client::set_max_timeout","ident_utf16":{"start":{"line_number":1899,"utf16_col":7},"end":{"line_number":1899,"utf16_col":22}},"extent_utf16":{"start":{"line_number":1899,"utf16_col":2},"end":{"line_number":1899,"utf16_col":36}}},{"name":"set_basic_auth","kind":"method","ident_start":67644,"ident_end":67658,"extent_start":67639,"extent_end":67717,"fully_qualified_name":"Client::set_basic_auth","ident_utf16":{"start":{"line_number":1903,"utf16_col":7},"end":{"line_number":1903,"utf16_col":21}},"extent_utf16":{"start":{"line_number":1903,"utf16_col":2},"end":{"line_number":1903,"utf16_col":80}}},{"name":"set_bearer_token_auth","kind":"method","ident_start":67725,"ident_end":67746,"extent_start":67720,"extent_end":67773,"fully_qualified_name":"Client::set_bearer_token_auth","ident_utf16":{"start":{"line_number":1904,"utf16_col":7},"end":{"line_number":1904,"utf16_col":28}},"extent_utf16":{"start":{"line_number":1904,"utf16_col":2},"end":{"line_number":1904,"utf16_col":55}}},{"name":"set_keep_alive","kind":"method","ident_start":67928,"ident_end":67942,"extent_start":67923,"extent_end":67952,"fully_qualified_name":"Client::set_keep_alive","ident_utf16":{"start":{"line_number":1910,"utf16_col":7},"end":{"line_number":1910,"utf16_col":21}},"extent_utf16":{"start":{"line_number":1910,"utf16_col":2},"end":{"line_number":1910,"utf16_col":31}}},{"name":"set_follow_location","kind":"method","ident_start":67960,"ident_end":67979,"extent_start":67955,"extent_end":67989,"fully_qualified_name":"Client::set_follow_location","ident_utf16":{"start":{"line_number":1911,"utf16_col":7},"end":{"line_number":1911,"utf16_col":26}},"extent_utf16":{"start":{"line_number":1911,"utf16_col":2},"end":{"line_number":1911,"utf16_col":36}}},{"name":"set_url_encode","kind":"method","ident_start":67998,"ident_end":68012,"extent_start":67993,"extent_end":68022,"fully_qualified_name":"Client::set_url_encode","ident_utf16":{"start":{"line_number":1913,"utf16_col":7},"end":{"line_number":1913,"utf16_col":21}},"extent_utf16":{"start":{"line_number":1913,"utf16_col":2},"end":{"line_number":1913,"utf16_col":31}}},{"name":"set_compress","kind":"method","ident_start":68031,"ident_end":68043,"extent_start":68026,"extent_end":68053,"fully_qualified_name":"Client::set_compress","ident_utf16":{"start":{"line_number":1915,"utf16_col":7},"end":{"line_number":1915,"utf16_col":19}},"extent_utf16":{"start":{"line_number":1915,"utf16_col":2},"end":{"line_number":1915,"utf16_col":29}}},{"name":"set_decompress","kind":"method","ident_start":68062,"ident_end":68076,"extent_start":68057,"extent_end":68086,"fully_qualified_name":"Client::set_decompress","ident_utf16":{"start":{"line_number":1917,"utf16_col":7},"end":{"line_number":1917,"utf16_col":21}},"extent_utf16":{"start":{"line_number":1917,"utf16_col":2},"end":{"line_number":1917,"utf16_col":31}}},{"name":"set_interface","kind":"method","ident_start":68095,"ident_end":68108,"extent_start":68090,"extent_end":68134,"fully_qualified_name":"Client::set_interface","ident_utf16":{"start":{"line_number":1919,"utf16_col":7},"end":{"line_number":1919,"utf16_col":20}},"extent_utf16":{"start":{"line_number":1919,"utf16_col":2},"end":{"line_number":1919,"utf16_col":46}}},{"name":"set_proxy","kind":"method","ident_start":68143,"ident_end":68152,"extent_start":68138,"extent_end":68188,"fully_qualified_name":"Client::set_proxy","ident_utf16":{"start":{"line_number":1921,"utf16_col":7},"end":{"line_number":1921,"utf16_col":16}},"extent_utf16":{"start":{"line_number":1921,"utf16_col":2},"end":{"line_number":1921,"utf16_col":52}}},{"name":"set_proxy_basic_auth","kind":"method","ident_start":68196,"ident_end":68216,"extent_start":68191,"extent_end":68303,"fully_qualified_name":"Client::set_proxy_basic_auth","ident_utf16":{"start":{"line_number":1922,"utf16_col":7},"end":{"line_number":1922,"utf16_col":27}},"extent_utf16":{"start":{"line_number":1922,"utf16_col":2},"end":{"line_number":1923,"utf16_col":57}}},{"name":"set_proxy_bearer_token_auth","kind":"method","ident_start":68311,"ident_end":68338,"extent_start":68306,"extent_end":68365,"fully_qualified_name":"Client::set_proxy_bearer_token_auth","ident_utf16":{"start":{"line_number":1924,"utf16_col":7},"end":{"line_number":1924,"utf16_col":34}},"extent_utf16":{"start":{"line_number":1924,"utf16_col":2},"end":{"line_number":1924,"utf16_col":61}}},{"name":"set_logger","kind":"method","ident_start":68795,"ident_end":68805,"extent_start":68790,"extent_end":68821,"fully_qualified_name":"Client::set_logger","ident_utf16":{"start":{"line_number":1937,"utf16_col":7},"end":{"line_number":1937,"utf16_col":17}},"extent_utf16":{"start":{"line_number":1937,"utf16_col":2},"end":{"line_number":1937,"utf16_col":33}}},{"name":"SSLServer","kind":"class","ident_start":69365,"ident_end":69374,"extent_start":69359,"extent_end":70163,"fully_qualified_name":"SSLServer","ident_utf16":{"start":{"line_number":1961,"utf16_col":6},"end":{"line_number":1961,"utf16_col":15}},"extent_utf16":{"start":{"line_number":1961,"utf16_col":0},"end":{"line_number":1988,"utf16_col":1}}},{"name":"is_valid","kind":"method","ident_start":69871,"ident_end":69879,"extent_start":69866,"extent_end":69897,"fully_qualified_name":"SSLServer::is_valid","ident_utf16":{"start":{"line_number":1976,"utf16_col":7},"end":{"line_number":1976,"utf16_col":15}},"extent_utf16":{"start":{"line_number":1976,"utf16_col":2},"end":{"line_number":1976,"utf16_col":33}}},{"name":"update_certs","kind":"method","ident_start":69939,"ident_end":69951,"extent_start":69934,"extent_end":70051,"fully_qualified_name":"SSLServer::update_certs","ident_utf16":{"start":{"line_number":1980,"utf16_col":7},"end":{"line_number":1980,"utf16_col":19}},"extent_utf16":{"start":{"line_number":1980,"utf16_col":2},"end":{"line_number":1981,"utf16_col":64}}},{"name":"process_and_close_socket","kind":"method","ident_start":70069,"ident_end":70093,"extent_start":70064,"extent_end":70118,"fully_qualified_name":"SSLServer::process_and_close_socket","ident_utf16":{"start":{"line_number":1984,"utf16_col":7},"end":{"line_number":1984,"utf16_col":31}},"extent_utf16":{"start":{"line_number":1984,"utf16_col":2},"end":{"line_number":1984,"utf16_col":56}}},{"name":"SSLClient","kind":"class","ident_start":70172,"ident_end":70181,"extent_start":70166,"extent_end":72152,"fully_qualified_name":"SSLClient","ident_utf16":{"start":{"line_number":1990,"utf16_col":6},"end":{"line_number":1990,"utf16_col":15}},"extent_utf16":{"start":{"line_number":1990,"utf16_col":0},"end":{"line_number":2049,"utf16_col":1}}},{"name":"is_valid","kind":"method","ident_start":70806,"ident_end":70814,"extent_start":70801,"extent_end":70832,"fully_qualified_name":"SSLClient::is_valid","ident_utf16":{"start":{"line_number":2007,"utf16_col":7},"end":{"line_number":2007,"utf16_col":15}},"extent_utf16":{"start":{"line_number":2007,"utf16_col":2},"end":{"line_number":2007,"utf16_col":33}}},{"name":"set_ca_cert_store","kind":"method","ident_start":70841,"ident_end":70858,"extent_start":70836,"extent_end":70886,"fully_qualified_name":"SSLClient::set_ca_cert_store","ident_utf16":{"start":{"line_number":2009,"utf16_col":7},"end":{"line_number":2009,"utf16_col":24}},"extent_utf16":{"start":{"line_number":2009,"utf16_col":2},"end":{"line_number":2009,"utf16_col":52}}},{"name":"load_ca_cert_store","kind":"method","ident_start":70894,"ident_end":70912,"extent_start":70889,"extent_end":70952,"fully_qualified_name":"SSLClient::load_ca_cert_store","ident_utf16":{"start":{"line_number":2010,"utf16_col":7},"end":{"line_number":2010,"utf16_col":25}},"extent_utf16":{"start":{"line_number":2010,"utf16_col":2},"end":{"line_number":2010,"utf16_col":65}}},{"name":"get_openssl_verify_result","kind":"method","ident_start":70961,"ident_end":70986,"extent_start":70956,"extent_end":70995,"fully_qualified_name":"SSLClient::get_openssl_verify_result","ident_utf16":{"start":{"line_number":2012,"utf16_col":7},"end":{"line_number":2012,"utf16_col":32}},"extent_utf16":{"start":{"line_number":2012,"utf16_col":2},"end":{"line_number":2012,"utf16_col":41}}},{"name":"create_and_connect_socket","kind":"method","ident_start":71046,"ident_end":71071,"extent_start":71041,"extent_end":71111,"fully_qualified_name":"SSLClient::create_and_connect_socket","ident_utf16":{"start":{"line_number":2017,"utf16_col":7},"end":{"line_number":2017,"utf16_col":32}},"extent_utf16":{"start":{"line_number":2017,"utf16_col":2},"end":{"line_number":2017,"utf16_col":72}}},{"name":"shutdown_ssl","kind":"method","ident_start":71119,"ident_end":71131,"extent_start":71114,"extent_end":71183,"fully_qualified_name":"SSLClient::shutdown_ssl","ident_utf16":{"start":{"line_number":2018,"utf16_col":7},"end":{"line_number":2018,"utf16_col":19}},"extent_utf16":{"start":{"line_number":2018,"utf16_col":2},"end":{"line_number":2018,"utf16_col":71}}},{"name":"shutdown_ssl_impl","kind":"method","ident_start":71191,"ident_end":71208,"extent_start":71186,"extent_end":71251,"fully_qualified_name":"SSLClient::shutdown_ssl_impl","ident_utf16":{"start":{"line_number":2019,"utf16_col":7},"end":{"line_number":2019,"utf16_col":24}},"extent_utf16":{"start":{"line_number":2019,"utf16_col":2},"end":{"line_number":2019,"utf16_col":67}}},{"name":"process_socket","kind":"method","ident_start":71262,"ident_end":71276,"extent_start":71255,"extent_end":71449,"fully_qualified_name":"SSLClient::process_socket","ident_utf16":{"start":{"line_number":2022,"utf16_col":2},"end":{"line_number":2022,"utf16_col":16}},"extent_utf16":{"start":{"line_number":2021,"utf16_col":2},"end":{"line_number":2024,"utf16_col":70}}},{"name":"is_ssl","kind":"method","ident_start":71457,"ident_end":71463,"extent_start":71452,"extent_end":71481,"fully_qualified_name":"SSLClient::is_ssl","ident_utf16":{"start":{"line_number":2025,"utf16_col":7},"end":{"line_number":2025,"utf16_col":13}},"extent_utf16":{"start":{"line_number":2025,"utf16_col":2},"end":{"line_number":2025,"utf16_col":31}}},{"name":"connect_with_proxy","kind":"method","ident_start":71490,"ident_end":71508,"extent_start":71485,"extent_end":71649,"fully_qualified_name":"SSLClient::connect_with_proxy","ident_utf16":{"start":{"line_number":2027,"utf16_col":7},"end":{"line_number":2027,"utf16_col":25}},"extent_utf16":{"start":{"line_number":2027,"utf16_col":2},"end":{"line_number":2030,"utf16_col":50}}},{"name":"initialize_ssl","kind":"method","ident_start":71657,"ident_end":71671,"extent_start":71652,"extent_end":71702,"fully_qualified_name":"SSLClient::initialize_ssl","ident_utf16":{"start":{"line_number":2031,"utf16_col":7},"end":{"line_number":2031,"utf16_col":21}},"extent_utf16":{"start":{"line_number":2031,"utf16_col":2},"end":{"line_number":2031,"utf16_col":52}}},{"name":"load_certs","kind":"method","ident_start":71711,"ident_end":71721,"extent_start":71706,"extent_end":71724,"fully_qualified_name":"SSLClient::load_certs","ident_utf16":{"start":{"line_number":2033,"utf16_col":7},"end":{"line_number":2033,"utf16_col":17}},"extent_utf16":{"start":{"line_number":2033,"utf16_col":2},"end":{"line_number":2033,"utf16_col":20}}},{"name":"verify_host","kind":"method","ident_start":71733,"ident_end":71744,"extent_start":71728,"extent_end":71770,"fully_qualified_name":"SSLClient::verify_host","ident_utf16":{"start":{"line_number":2035,"utf16_col":7},"end":{"line_number":2035,"utf16_col":18}},"extent_utf16":{"start":{"line_number":2035,"utf16_col":2},"end":{"line_number":2035,"utf16_col":44}}},{"name":"verify_host_with_subject_alt_name","kind":"method","ident_start":71778,"ident_end":71811,"extent_start":71773,"extent_end":71837,"fully_qualified_name":"SSLClient::verify_host_with_subject_alt_name","ident_utf16":{"start":{"line_number":2036,"utf16_col":7},"end":{"line_number":2036,"utf16_col":40}},"extent_utf16":{"start":{"line_number":2036,"utf16_col":2},"end":{"line_number":2036,"utf16_col":66}}},{"name":"verify_host_with_common_name","kind":"method","ident_start":71845,"ident_end":71873,"extent_start":71840,"extent_end":71899,"fully_qualified_name":"SSLClient::verify_host_with_common_name","ident_utf16":{"start":{"line_number":2037,"utf16_col":7},"end":{"line_number":2037,"utf16_col":35}},"extent_utf16":{"start":{"line_number":2037,"utf16_col":2},"end":{"line_number":2037,"utf16_col":61}}},{"name":"check_host_name","kind":"method","ident_start":71907,"ident_end":71922,"extent_start":71902,"extent_end":71970,"fully_qualified_name":"SSLClient::check_host_name","ident_utf16":{"start":{"line_number":2038,"utf16_col":7},"end":{"line_number":2038,"utf16_col":22}},"extent_utf16":{"start":{"line_number":2038,"utf16_col":2},"end":{"line_number":2038,"utf16_col":70}}},{"name":"duration_to_sec_and_usec","kind":"function","ident_start":72275,"ident_end":72299,"extent_start":72263,"extent_end":72633,"fully_qualified_name":"duration_to_sec_and_usec","ident_utf16":{"start":{"line_number":2059,"utf16_col":12},"end":{"line_number":2059,"utf16_col":36}},"extent_utf16":{"start":{"line_number":2059,"utf16_col":0},"end":{"line_number":2065,"utf16_col":1}}},{"name":"str_len","kind":"function","ident_start":72679,"ident_end":72686,"extent_start":72655,"extent_end":72725,"fully_qualified_name":"str_len","ident_utf16":{"start":{"line_number":2067,"utf16_col":44},"end":{"line_number":2067,"utf16_col":51}},"extent_utf16":{"start":{"line_number":2067,"utf16_col":20},"end":{"line_number":2069,"utf16_col":1}}},{"name":"is_numeric","kind":"function","ident_start":72739,"ident_end":72749,"extent_start":72727,"extent_end":72920,"fully_qualified_name":"is_numeric","ident_utf16":{"start":{"line_number":2071,"utf16_col":12},"end":{"line_number":2071,"utf16_col":22}},"extent_utf16":{"start":{"line_number":2071,"utf16_col":0},"end":{"line_number":2075,"utf16_col":1}}},{"name":"get_header_value_u64","kind":"function","ident_start":72938,"ident_end":72958,"extent_start":72922,"extent_end":73457,"fully_qualified_name":"get_header_value_u64","ident_utf16":{"start":{"line_number":2077,"utf16_col":16},"end":{"line_number":2077,"utf16_col":36}},"extent_utf16":{"start":{"line_number":2077,"utf16_col":0},"end":{"line_number":2092,"utf16_col":1}}},{"name":"get_header_value_u64","kind":"function","ident_start":73475,"ident_end":73495,"extent_start":73459,"extent_end":73729,"fully_qualified_name":"get_header_value_u64","ident_utf16":{"start":{"line_number":2094,"utf16_col":16},"end":{"line_number":2094,"utf16_col":36}},"extent_utf16":{"start":{"line_number":2094,"utf16_col":0},"end":{"line_number":2099,"utf16_col":1}}},{"name":"get_header_value_u64","kind":"method","ident_start":73779,"ident_end":73799,"extent_start":73754,"extent_end":73966,"fully_qualified_name":"Request::get_header_value_u64","ident_utf16":{"start":{"line_number":2103,"utf16_col":25},"end":{"line_number":2103,"utf16_col":45}},"extent_utf16":{"start":{"line_number":2103,"utf16_col":0},"end":{"line_number":2106,"utf16_col":1}}},{"name":"get_header_value_u64","kind":"method","ident_start":73994,"ident_end":74014,"extent_start":73968,"extent_end":74182,"fully_qualified_name":"Response::get_header_value_u64","ident_utf16":{"start":{"line_number":2108,"utf16_col":26},"end":{"line_number":2108,"utf16_col":46}},"extent_utf16":{"start":{"line_number":2108,"utf16_col":0},"end":{"line_number":2111,"utf16_col":1}}},{"name":"set_socket_opt_impl","kind":"function","ident_start":74216,"ident_end":74235,"extent_start":74204,"extent_end":74539,"fully_qualified_name":"set_socket_opt_impl","ident_utf16":{"start":{"line_number":2115,"utf16_col":12},"end":{"line_number":2115,"utf16_col":31}},"extent_utf16":{"start":{"line_number":2115,"utf16_col":0},"end":{"line_number":2124,"utf16_col":1}}},{"name":"set_socket_opt","kind":"function","ident_start":74553,"ident_end":74567,"extent_start":74541,"extent_end":74699,"fully_qualified_name":"set_socket_opt","ident_utf16":{"start":{"line_number":2126,"utf16_col":12},"end":{"line_number":2126,"utf16_col":26}},"extent_utf16":{"start":{"line_number":2126,"utf16_col":0},"end":{"line_number":2128,"utf16_col":1}}},{"name":"set_socket_opt_time","kind":"function","ident_start":74713,"ident_end":74732,"extent_start":74701,"extent_end":75132,"fully_qualified_name":"set_socket_opt_time","ident_utf16":{"start":{"line_number":2130,"utf16_col":12},"end":{"line_number":2130,"utf16_col":31}},"extent_utf16":{"start":{"line_number":2130,"utf16_col":0},"end":{"line_number":2140,"utf16_col":1}}},{"name":"default_socket_options","kind":"function","ident_start":75169,"ident_end":75191,"extent_start":75157,"extent_end":75393,"fully_qualified_name":"default_socket_options","ident_utf16":{"start":{"line_number":2144,"utf16_col":12},"end":{"line_number":2144,"utf16_col":34}},"extent_utf16":{"start":{"line_number":2144,"utf16_col":0},"end":{"line_number":2152,"utf16_col":1}}},{"name":"get_bearer_token_auth","kind":"function","ident_start":79620,"ident_end":79641,"extent_start":79601,"extent_end":79889,"fully_qualified_name":"get_bearer_token_auth","ident_utf16":{"start":{"line_number":2230,"utf16_col":19},"end":{"line_number":2230,"utf16_col":40}},"extent_utf16":{"start":{"line_number":2230,"utf16_col":0},"end":{"line_number":2237,"utf16_col":1}}},{"name":"to_string","kind":"function","ident_start":80709,"ident_end":80718,"extent_start":80690,"extent_end":81887,"fully_qualified_name":"to_string","ident_utf16":{"start":{"line_number":2263,"utf16_col":19},"end":{"line_number":2263,"utf16_col":28}},"extent_utf16":{"start":{"line_number":2263,"utf16_col":0},"end":{"line_number":2287,"utf16_col":1}}},{"name":"get_request_header_value_u64","kind":"method","ident_start":82099,"ident_end":82127,"extent_start":82075,"extent_end":82363,"fully_qualified_name":"Result::get_request_header_value_u64","ident_utf16":{"start":{"line_number":2295,"utf16_col":24},"end":{"line_number":2295,"utf16_col":52}},"extent_utf16":{"start":{"line_number":2295,"utf16_col":0},"end":{"line_number":2299,"utf16_col":1}}},{"name":"set_connection_timeout","kind":"method","ident_start":82424,"ident_end":82446,"extent_start":82400,"extent_end":82628,"fully_qualified_name":"ClientImpl::set_connection_timeout","ident_utf16":{"start":{"line_number":2302,"utf16_col":24},"end":{"line_number":2302,"utf16_col":46}},"extent_utf16":{"start":{"line_number":2302,"utf16_col":0},"end":{"line_number":2307,"utf16_col":1}}},{"name":"set_read_timeout","kind":"method","ident_start":82689,"ident_end":82705,"extent_start":82665,"extent_end":82882,"fully_qualified_name":"ClientImpl::set_read_timeout","ident_utf16":{"start":{"line_number":2310,"utf16_col":24},"end":{"line_number":2310,"utf16_col":40}},"extent_utf16":{"start":{"line_number":2310,"utf16_col":0},"end":{"line_number":2314,"utf16_col":1}}},{"name":"set_write_timeout","kind":"method","ident_start":82943,"ident_end":82960,"extent_start":82919,"extent_end":83138,"fully_qualified_name":"ClientImpl::set_write_timeout","ident_utf16":{"start":{"line_number":2317,"utf16_col":24},"end":{"line_number":2317,"utf16_col":41}},"extent_utf16":{"start":{"line_number":2317,"utf16_col":0},"end":{"line_number":2321,"utf16_col":1}}},{"name":"set_max_timeout","kind":"method","ident_start":83199,"ident_end":83214,"extent_start":83175,"extent_end":83393,"fully_qualified_name":"ClientImpl::set_max_timeout","ident_utf16":{"start":{"line_number":2324,"utf16_col":24},"end":{"line_number":2324,"utf16_col":39}},"extent_utf16":{"start":{"line_number":2324,"utf16_col":0},"end":{"line_number":2329,"utf16_col":1}}},{"name":"set_connection_timeout","kind":"method","ident_start":83450,"ident_end":83472,"extent_start":83430,"extent_end":83575,"fully_qualified_name":"Client::set_connection_timeout","ident_utf16":{"start":{"line_number":2332,"utf16_col":20},"end":{"line_number":2332,"utf16_col":42}},"extent_utf16":{"start":{"line_number":2332,"utf16_col":0},"end":{"line_number":2335,"utf16_col":1}}},{"name":"set_read_timeout","kind":"method","ident_start":83632,"ident_end":83648,"extent_start":83612,"extent_end":83740,"fully_qualified_name":"Client::set_read_timeout","ident_utf16":{"start":{"line_number":2339,"utf16_col":8},"end":{"line_number":2339,"utf16_col":24}},"extent_utf16":{"start":{"line_number":2338,"utf16_col":0},"end":{"line_number":2341,"utf16_col":1}}},{"name":"set_write_timeout","kind":"method","ident_start":83797,"ident_end":83814,"extent_start":83777,"extent_end":83907,"fully_qualified_name":"Client::set_write_timeout","ident_utf16":{"start":{"line_number":2345,"utf16_col":8},"end":{"line_number":2345,"utf16_col":25}},"extent_utf16":{"start":{"line_number":2344,"utf16_col":0},"end":{"line_number":2347,"utf16_col":1}}},{"name":"set_max_timeout","kind":"method","ident_start":83964,"ident_end":83979,"extent_start":83944,"extent_end":84070,"fully_qualified_name":"Client::set_max_timeout","ident_utf16":{"start":{"line_number":2351,"utf16_col":8},"end":{"line_number":2351,"utf16_col":23}},"extent_utf16":{"start":{"line_number":2350,"utf16_col":0},"end":{"line_number":2353,"utf16_col":1}}},{"name":"u8string_to_wstring","kind":"function","ident_start":84743,"ident_end":84762,"extent_start":84723,"extent_end":85163,"fully_qualified_name":"u8string_to_wstring","ident_utf16":{"start":{"line_number":2376,"utf16_col":20},"end":{"line_number":2376,"utf16_col":39}},"extent_utf16":{"start":{"line_number":2376,"utf16_col":0},"end":{"line_number":2388,"utf16_col":1}}},{"name":"FileStat","kind":"class","ident_start":85179,"ident_end":85187,"extent_start":85172,"extent_end":85374,"fully_qualified_name":"FileStat","ident_utf16":{"start":{"line_number":2391,"utf16_col":7},"end":{"line_number":2391,"utf16_col":15}},"extent_utf16":{"start":{"line_number":2391,"utf16_col":0},"end":{"line_number":2403,"utf16_col":1}}},{"name":"EncodingType","kind":"type","ident_start":87715,"ident_end":87727,"extent_start":87704,"extent_end":87760,"fully_qualified_name":"EncodingType","ident_utf16":{"start":{"line_number":2464,"utf16_col":11},"end":{"line_number":2464,"utf16_col":23}},"extent_utf16":{"start":{"line_number":2464,"utf16_col":0},"end":{"line_number":2464,"utf16_col":56}}},{"name":"BufferStream","kind":"class","ident_start":87839,"ident_end":87851,"extent_start":87833,"extent_end":88488,"fully_qualified_name":"BufferStream","ident_utf16":{"start":{"line_number":2468,"utf16_col":6},"end":{"line_number":2468,"utf16_col":18}},"extent_utf16":{"start":{"line_number":2468,"utf16_col":0},"end":{"line_number":2488,"utf16_col":1}}},{"name":"BufferStream","kind":"function","ident_start":87886,"ident_end":87898,"extent_start":87886,"extent_end":87911,"fully_qualified_name":"BufferStream::BufferStream","ident_utf16":{"start":{"line_number":2470,"utf16_col":2},"end":{"line_number":2470,"utf16_col":14}},"extent_utf16":{"start":{"line_number":2470,"utf16_col":2},"end":{"line_number":2470,"utf16_col":27}}},{"name":"is_readable","kind":"method","ident_start":87958,"ident_end":87969,"extent_start":87953,"extent_end":87987,"fully_qualified_name":"BufferStream::is_readable","ident_utf16":{"start":{"line_number":2473,"utf16_col":7},"end":{"line_number":2473,"utf16_col":18}},"extent_utf16":{"start":{"line_number":2473,"utf16_col":2},"end":{"line_number":2473,"utf16_col":36}}},{"name":"wait_readable","kind":"method","ident_start":87995,"ident_end":88008,"extent_start":87990,"extent_end":88026,"fully_qualified_name":"BufferStream::wait_readable","ident_utf16":{"start":{"line_number":2474,"utf16_col":7},"end":{"line_number":2474,"utf16_col":20}},"extent_utf16":{"start":{"line_number":2474,"utf16_col":2},"end":{"line_number":2474,"utf16_col":38}}},{"name":"wait_writable","kind":"method","ident_start":88034,"ident_end":88047,"extent_start":88029,"extent_end":88065,"fully_qualified_name":"BufferStream::wait_writable","ident_utf16":{"start":{"line_number":2475,"utf16_col":7},"end":{"line_number":2475,"utf16_col":20}},"extent_utf16":{"start":{"line_number":2475,"utf16_col":2},"end":{"line_number":2475,"utf16_col":38}}},{"name":"read","kind":"method","ident_start":88076,"ident_end":88080,"extent_start":88068,"extent_end":88114,"fully_qualified_name":"BufferStream::read","ident_utf16":{"start":{"line_number":2476,"utf16_col":10},"end":{"line_number":2476,"utf16_col":14}},"extent_utf16":{"start":{"line_number":2476,"utf16_col":2},"end":{"line_number":2476,"utf16_col":48}}},{"name":"write","kind":"method","ident_start":88125,"ident_end":88130,"extent_start":88117,"extent_end":88170,"fully_qualified_name":"BufferStream::write","ident_utf16":{"start":{"line_number":2477,"utf16_col":10},"end":{"line_number":2477,"utf16_col":15}},"extent_utf16":{"start":{"line_number":2477,"utf16_col":2},"end":{"line_number":2477,"utf16_col":55}}},{"name":"get_remote_ip_and_port","kind":"method","ident_start":88178,"ident_end":88200,"extent_start":88173,"extent_end":88244,"fully_qualified_name":"BufferStream::get_remote_ip_and_port","ident_utf16":{"start":{"line_number":2478,"utf16_col":7},"end":{"line_number":2478,"utf16_col":29}},"extent_utf16":{"start":{"line_number":2478,"utf16_col":2},"end":{"line_number":2478,"utf16_col":73}}},{"name":"get_local_ip_and_port","kind":"method","ident_start":88252,"ident_end":88273,"extent_start":88247,"extent_end":88317,"fully_qualified_name":"BufferStream::get_local_ip_and_port","ident_utf16":{"start":{"line_number":2479,"utf16_col":7},"end":{"line_number":2479,"utf16_col":28}},"extent_utf16":{"start":{"line_number":2479,"utf16_col":2},"end":{"line_number":2479,"utf16_col":72}}},{"name":"socket","kind":"method","ident_start":88329,"ident_end":88335,"extent_start":88320,"extent_end":88353,"fully_qualified_name":"BufferStream::socket","ident_utf16":{"start":{"line_number":2480,"utf16_col":11},"end":{"line_number":2480,"utf16_col":17}},"extent_utf16":{"start":{"line_number":2480,"utf16_col":2},"end":{"line_number":2480,"utf16_col":35}}},{"name":"duration","kind":"method","ident_start":88363,"ident_end":88371,"extent_start":88356,"extent_end":88389,"fully_qualified_name":"BufferStream::duration","ident_utf16":{"start":{"line_number":2481,"utf16_col":9},"end":{"line_number":2481,"utf16_col":17}},"extent_utf16":{"start":{"line_number":2481,"utf16_col":2},"end":{"line_number":2481,"utf16_col":35}}},{"name":"compressor","kind":"class","ident_start":88497,"ident_end":88507,"extent_start":88491,"extent_end":88751,"fully_qualified_name":"compressor","ident_utf16":{"start":{"line_number":2490,"utf16_col":6},"end":{"line_number":2490,"utf16_col":16}},"extent_utf16":{"start":{"line_number":2490,"utf16_col":0},"end":{"line_number":2497,"utf16_col":1}}},{"name":"Callback","kind":"type","ident_start":88619,"ident_end":88627,"extent_start":88556,"extent_end":88628,"fully_qualified_name":"compressor::Callback","ident_utf16":{"start":{"line_number":2494,"utf16_col":65},"end":{"line_number":2494,"utf16_col":73}},"extent_utf16":{"start":{"line_number":2494,"utf16_col":2},"end":{"line_number":2494,"utf16_col":74}}},{"name":"compress","kind":"method","ident_start":88644,"ident_end":88652,"extent_start":88631,"extent_end":88749,"fully_qualified_name":"compressor::compress","ident_utf16":{"start":{"line_number":2495,"utf16_col":15},"end":{"line_number":2495,"utf16_col":23}},"extent_utf16":{"start":{"line_number":2495,"utf16_col":2},"end":{"line_number":2496,"utf16_col":47}}},{"name":"decompressor","kind":"class","ident_start":88760,"ident_end":88772,"extent_start":88754,"extent_end":89049,"fully_qualified_name":"decompressor","ident_utf16":{"start":{"line_number":2499,"utf16_col":6},"end":{"line_number":2499,"utf16_col":18}},"extent_utf16":{"start":{"line_number":2499,"utf16_col":0},"end":{"line_number":2508,"utf16_col":1}}},{"name":"is_valid","kind":"method","ident_start":88836,"ident_end":88844,"extent_start":88823,"extent_end":88857,"fully_qualified_name":"decompressor::is_valid","ident_utf16":{"start":{"line_number":2503,"utf16_col":15},"end":{"line_number":2503,"utf16_col":23}},"extent_utf16":{"start":{"line_number":2503,"utf16_col":2},"end":{"line_number":2503,"utf16_col":36}}},{"name":"Callback","kind":"type","ident_start":88924,"ident_end":88932,"extent_start":88861,"extent_end":88933,"fully_qualified_name":"decompressor::Callback","ident_utf16":{"start":{"line_number":2505,"utf16_col":65},"end":{"line_number":2505,"utf16_col":73}},"extent_utf16":{"start":{"line_number":2505,"utf16_col":2},"end":{"line_number":2505,"utf16_col":74}}},{"name":"decompress","kind":"method","ident_start":88949,"ident_end":88959,"extent_start":88936,"extent_end":89047,"fully_qualified_name":"decompressor::decompress","ident_utf16":{"start":{"line_number":2506,"utf16_col":15},"end":{"line_number":2506,"utf16_col":25}},"extent_utf16":{"start":{"line_number":2506,"utf16_col":2},"end":{"line_number":2507,"utf16_col":49}}},{"name":"nocompressor","kind":"class","ident_start":89058,"ident_end":89070,"extent_start":89052,"extent_end":89261,"fully_qualified_name":"nocompressor","ident_utf16":{"start":{"line_number":2510,"utf16_col":6},"end":{"line_number":2510,"utf16_col":18}},"extent_utf16":{"start":{"line_number":2510,"utf16_col":0},"end":{"line_number":2516,"utf16_col":1}}},{"name":"compress","kind":"method","ident_start":89153,"ident_end":89161,"extent_start":89148,"extent_end":89259,"fully_qualified_name":"nocompressor::compress","ident_utf16":{"start":{"line_number":2514,"utf16_col":7},"end":{"line_number":2514,"utf16_col":15}},"extent_utf16":{"start":{"line_number":2514,"utf16_col":2},"end":{"line_number":2515,"utf16_col":44}}},{"name":"gzip_compressor","kind":"class","ident_start":89301,"ident_end":89316,"extent_start":89295,"extent_end":89571,"fully_qualified_name":"gzip_compressor","ident_utf16":{"start":{"line_number":2519,"utf16_col":6},"end":{"line_number":2519,"utf16_col":21}},"extent_utf16":{"start":{"line_number":2519,"utf16_col":0},"end":{"line_number":2530,"utf16_col":1}}},{"name":"compress","kind":"method","ident_start":89413,"ident_end":89421,"extent_start":89408,"extent_end":89515,"fully_qualified_name":"gzip_compressor::compress","ident_utf16":{"start":{"line_number":2524,"utf16_col":7},"end":{"line_number":2524,"utf16_col":15}},"extent_utf16":{"start":{"line_number":2524,"utf16_col":2},"end":{"line_number":2525,"utf16_col":44}}},{"name":"gzip_decompressor","kind":"class","ident_start":89580,"ident_end":89597,"extent_start":89574,"extent_end":89886,"fully_qualified_name":"gzip_decompressor","ident_utf16":{"start":{"line_number":2532,"utf16_col":6},"end":{"line_number":2532,"utf16_col":23}},"extent_utf16":{"start":{"line_number":2532,"utf16_col":0},"end":{"line_number":2545,"utf16_col":1}}},{"name":"is_valid","kind":"method","ident_start":89700,"ident_end":89708,"extent_start":89695,"extent_end":89726,"fully_qualified_name":"gzip_decompressor::is_valid","ident_utf16":{"start":{"line_number":2537,"utf16_col":7},"end":{"line_number":2537,"utf16_col":15}},"extent_utf16":{"start":{"line_number":2537,"utf16_col":2},"end":{"line_number":2537,"utf16_col":33}}},{"name":"decompress","kind":"method","ident_start":89735,"ident_end":89745,"extent_start":89730,"extent_end":89830,"fully_qualified_name":"gzip_decompressor::decompress","ident_utf16":{"start":{"line_number":2539,"utf16_col":7},"end":{"line_number":2539,"utf16_col":17}},"extent_utf16":{"start":{"line_number":2539,"utf16_col":2},"end":{"line_number":2540,"utf16_col":46}}},{"name":"brotli_compressor","kind":"class","ident_start":89935,"ident_end":89952,"extent_start":89929,"extent_end":90198,"fully_qualified_name":"brotli_compressor","ident_utf16":{"start":{"line_number":2549,"utf16_col":6},"end":{"line_number":2549,"utf16_col":23}},"extent_utf16":{"start":{"line_number":2549,"utf16_col":0},"end":{"line_number":2559,"utf16_col":1}}},{"name":"compress","kind":"method","ident_start":90044,"ident_end":90052,"extent_start":90039,"extent_end":90146,"fully_qualified_name":"brotli_compressor::compress","ident_utf16":{"start":{"line_number":2554,"utf16_col":7},"end":{"line_number":2554,"utf16_col":15}},"extent_utf16":{"start":{"line_number":2554,"utf16_col":2},"end":{"line_number":2555,"utf16_col":44}}},{"name":"brotli_decompressor","kind":"class","ident_start":90207,"ident_end":90226,"extent_start":90201,"extent_end":90542,"fully_qualified_name":"brotli_decompressor","ident_utf16":{"start":{"line_number":2561,"utf16_col":6},"end":{"line_number":2561,"utf16_col":25}},"extent_utf16":{"start":{"line_number":2561,"utf16_col":0},"end":{"line_number":2574,"utf16_col":1}}},{"name":"is_valid","kind":"method","ident_start":90324,"ident_end":90332,"extent_start":90319,"extent_end":90350,"fully_qualified_name":"brotli_decompressor::is_valid","ident_utf16":{"start":{"line_number":2566,"utf16_col":7},"end":{"line_number":2566,"utf16_col":15}},"extent_utf16":{"start":{"line_number":2566,"utf16_col":2},"end":{"line_number":2566,"utf16_col":33}}},{"name":"decompress","kind":"method","ident_start":90359,"ident_end":90369,"extent_start":90354,"extent_end":90454,"fully_qualified_name":"brotli_decompressor::decompress","ident_utf16":{"start":{"line_number":2568,"utf16_col":7},"end":{"line_number":2568,"utf16_col":17}},"extent_utf16":{"start":{"line_number":2568,"utf16_col":2},"end":{"line_number":2569,"utf16_col":46}}},{"name":"zstd_compressor","kind":"class","ident_start":90589,"ident_end":90604,"extent_start":90583,"extent_end":90829,"fully_qualified_name":"zstd_compressor","ident_utf16":{"start":{"line_number":2578,"utf16_col":6},"end":{"line_number":2578,"utf16_col":21}},"extent_utf16":{"start":{"line_number":2578,"utf16_col":0},"end":{"line_number":2588,"utf16_col":1}}},{"name":"compress","kind":"method","ident_start":90686,"ident_end":90694,"extent_start":90681,"extent_end":90788,"fully_qualified_name":"zstd_compressor::compress","ident_utf16":{"start":{"line_number":2583,"utf16_col":7},"end":{"line_number":2583,"utf16_col":15}},"extent_utf16":{"start":{"line_number":2583,"utf16_col":2},"end":{"line_number":2584,"utf16_col":44}}},{"name":"zstd_decompressor","kind":"class","ident_start":90838,"ident_end":90855,"extent_start":90832,"extent_end":91114,"fully_qualified_name":"zstd_decompressor","ident_utf16":{"start":{"line_number":2590,"utf16_col":6},"end":{"line_number":2590,"utf16_col":23}},"extent_utf16":{"start":{"line_number":2590,"utf16_col":0},"end":{"line_number":2602,"utf16_col":1}}},{"name":"is_valid","kind":"method","ident_start":90943,"ident_end":90951,"extent_start":90938,"extent_end":90969,"fully_qualified_name":"zstd_decompressor::is_valid","ident_utf16":{"start":{"line_number":2595,"utf16_col":7},"end":{"line_number":2595,"utf16_col":15}},"extent_utf16":{"start":{"line_number":2595,"utf16_col":2},"end":{"line_number":2595,"utf16_col":33}}},{"name":"decompress","kind":"method","ident_start":90978,"ident_end":90988,"extent_start":90973,"extent_end":91073,"fully_qualified_name":"zstd_decompressor::decompress","ident_utf16":{"start":{"line_number":2597,"utf16_col":7},"end":{"line_number":2597,"utf16_col":17}},"extent_utf16":{"start":{"line_number":2597,"utf16_col":2},"end":{"line_number":2598,"utf16_col":46}}},{"name":"stream_line_reader","kind":"class","ident_start":91275,"ident_end":91293,"extent_start":91269,"extent_end":91685,"fully_qualified_name":"stream_line_reader","ident_utf16":{"start":{"line_number":2607,"utf16_col":6},"end":{"line_number":2607,"utf16_col":24}},"extent_utf16":{"start":{"line_number":2607,"utf16_col":0},"end":{"line_number":2624,"utf16_col":1}}},{"name":"size","kind":"method","ident_start":91443,"ident_end":91447,"extent_start":91436,"extent_end":91456,"fully_qualified_name":"stream_line_reader::size","ident_utf16":{"start":{"line_number":2612,"utf16_col":9},"end":{"line_number":2612,"utf16_col":13}},"extent_utf16":{"start":{"line_number":2612,"utf16_col":2},"end":{"line_number":2612,"utf16_col":22}}},{"name":"end_with_crlf","kind":"method","ident_start":91464,"ident_end":91477,"extent_start":91459,"extent_end":91486,"fully_qualified_name":"stream_line_reader::end_with_crlf","ident_utf16":{"start":{"line_number":2613,"utf16_col":7},"end":{"line_number":2613,"utf16_col":20}},"extent_utf16":{"start":{"line_number":2613,"utf16_col":2},"end":{"line_number":2613,"utf16_col":29}}},{"name":"getline","kind":"method","ident_start":91494,"ident_end":91501,"extent_start":91489,"extent_end":91504,"fully_qualified_name":"stream_line_reader::getline","ident_utf16":{"start":{"line_number":2614,"utf16_col":7},"end":{"line_number":2614,"utf16_col":14}},"extent_utf16":{"start":{"line_number":2614,"utf16_col":2},"end":{"line_number":2614,"utf16_col":17}}},{"name":"append","kind":"method","ident_start":91522,"ident_end":91528,"extent_start":91517,"extent_end":91537,"fully_qualified_name":"stream_line_reader::append","ident_utf16":{"start":{"line_number":2617,"utf16_col":7},"end":{"line_number":2617,"utf16_col":13}},"extent_utf16":{"start":{"line_number":2617,"utf16_col":2},"end":{"line_number":2617,"utf16_col":22}}},{"name":"mmap","kind":"class","ident_start":91694,"ident_end":91698,"extent_start":91688,"extent_end":92061,"fully_qualified_name":"mmap","ident_utf16":{"start":{"line_number":2626,"utf16_col":6},"end":{"line_number":2626,"utf16_col":10}},"extent_utf16":{"start":{"line_number":2626,"utf16_col":0},"end":{"line_number":2648,"utf16_col":1}}},{"name":"open","kind":"method","ident_start":91754,"ident_end":91758,"extent_start":91749,"extent_end":91777,"fully_qualified_name":"mmap::open","ident_utf16":{"start":{"line_number":2631,"utf16_col":7},"end":{"line_number":2631,"utf16_col":11}},"extent_utf16":{"start":{"line_number":2631,"utf16_col":2},"end":{"line_number":2631,"utf16_col":30}}},{"name":"close","kind":"method","ident_start":91785,"ident_end":91790,"extent_start":91780,"extent_end":91793,"fully_qualified_name":"mmap::close","ident_utf16":{"start":{"line_number":2632,"utf16_col":7},"end":{"line_number":2632,"utf16_col":12}},"extent_utf16":{"start":{"line_number":2632,"utf16_col":2},"end":{"line_number":2632,"utf16_col":15}}},{"name":"is_open","kind":"method","ident_start":91802,"ident_end":91809,"extent_start":91797,"extent_end":91818,"fully_qualified_name":"mmap::is_open","ident_utf16":{"start":{"line_number":2634,"utf16_col":7},"end":{"line_number":2634,"utf16_col":14}},"extent_utf16":{"start":{"line_number":2634,"utf16_col":2},"end":{"line_number":2634,"utf16_col":23}}},{"name":"size","kind":"method","ident_start":91828,"ident_end":91832,"extent_start":91821,"extent_end":91841,"fully_qualified_name":"mmap::size","ident_utf16":{"start":{"line_number":2635,"utf16_col":9},"end":{"line_number":2635,"utf16_col":13}},"extent_utf16":{"start":{"line_number":2635,"utf16_col":2},"end":{"line_number":2635,"utf16_col":22}}},{"name":"is_token_char","kind":"function","ident_start":92154,"ident_end":92167,"extent_start":92142,"extent_end":92404,"fully_qualified_name":"is_token_char","ident_utf16":{"start":{"line_number":2653,"utf16_col":12},"end":{"line_number":2653,"utf16_col":25}},"extent_utf16":{"start":{"line_number":2653,"utf16_col":0},"end":{"line_number":2657,"utf16_col":1}}},{"name":"is_token","kind":"function","ident_start":92418,"ident_end":92426,"extent_start":92406,"extent_end":92572,"fully_qualified_name":"is_token","ident_utf16":{"start":{"line_number":2659,"utf16_col":12},"end":{"line_number":2659,"utf16_col":20}},"extent_utf16":{"start":{"line_number":2659,"utf16_col":0},"end":{"line_number":2665,"utf16_col":1}}},{"name":"is_field_name","kind":"function","ident_start":92586,"ident_end":92599,"extent_start":92574,"extent_end":92645,"fully_qualified_name":"is_field_name","ident_utf16":{"start":{"line_number":2667,"utf16_col":12},"end":{"line_number":2667,"utf16_col":25}},"extent_utf16":{"start":{"line_number":2667,"utf16_col":0},"end":{"line_number":2667,"utf16_col":71}}},{"name":"is_vchar","kind":"function","ident_start":92659,"ident_end":92667,"extent_start":92647,"extent_end":92707,"fully_qualified_name":"is_vchar","ident_utf16":{"start":{"line_number":2669,"utf16_col":12},"end":{"line_number":2669,"utf16_col":20}},"extent_utf16":{"start":{"line_number":2669,"utf16_col":0},"end":{"line_number":2669,"utf16_col":60}}},{"name":"is_obs_text","kind":"function","ident_start":92721,"ident_end":92732,"extent_start":92709,"extent_end":92789,"fully_qualified_name":"is_obs_text","ident_utf16":{"start":{"line_number":2671,"utf16_col":12},"end":{"line_number":2671,"utf16_col":23}},"extent_utf16":{"start":{"line_number":2671,"utf16_col":0},"end":{"line_number":2671,"utf16_col":80}}},{"name":"is_field_vchar","kind":"function","ident_start":92803,"ident_end":92817,"extent_start":92791,"extent_end":92867,"fully_qualified_name":"is_field_vchar","ident_utf16":{"start":{"line_number":2673,"utf16_col":12},"end":{"line_number":2673,"utf16_col":26}},"extent_utf16":{"start":{"line_number":2673,"utf16_col":0},"end":{"line_number":2673,"utf16_col":76}}},{"name":"is_field_content","kind":"function","ident_start":92881,"ident_end":92897,"extent_start":92869,"extent_end":93389,"fully_qualified_name":"is_field_content","ident_utf16":{"start":{"line_number":2675,"utf16_col":12},"end":{"line_number":2675,"utf16_col":28}},"extent_utf16":{"start":{"line_number":2675,"utf16_col":0},"end":{"line_number":2698,"utf16_col":1}}},{"name":"is_field_value","kind":"function","ident_start":93403,"ident_end":93417,"extent_start":93391,"extent_end":93471,"fully_qualified_name":"is_field_value","ident_utf16":{"start":{"line_number":2700,"utf16_col":12},"end":{"line_number":2700,"utf16_col":26}},"extent_utf16":{"start":{"line_number":2700,"utf16_col":0},"end":{"line_number":2700,"utf16_col":80}}},{"name":"is_hex","kind":"function","ident_start":93716,"ident_end":93722,"extent_start":93704,"extent_end":93981,"fully_qualified_name":"is_hex","ident_utf16":{"start":{"line_number":2714,"utf16_col":12},"end":{"line_number":2714,"utf16_col":18}},"extent_utf16":{"start":{"line_number":2714,"utf16_col":0},"end":{"line_number":2726,"utf16_col":1}}},{"name":"from_hex_to_i","kind":"function","ident_start":93995,"ident_end":94008,"extent_start":93983,"extent_end":94331,"fully_qualified_name":"from_hex_to_i","ident_utf16":{"start":{"line_number":2728,"utf16_col":12},"end":{"line_number":2728,"utf16_col":25}},"extent_utf16":{"start":{"line_number":2728,"utf16_col":0},"end":{"line_number":2743,"utf16_col":1}}},{"name":"from_i_to_hex","kind":"function","ident_start":94352,"ident_end":94365,"extent_start":94333,"extent_end":94534,"fully_qualified_name":"from_i_to_hex","ident_utf16":{"start":{"line_number":2745,"utf16_col":19},"end":{"line_number":2745,"utf16_col":32}},"extent_utf16":{"start":{"line_number":2745,"utf16_col":0},"end":{"line_number":2753,"utf16_col":1}}},{"name":"to_utf8","kind":"function","ident_start":94550,"ident_end":94557,"extent_start":94536,"extent_end":95668,"fully_qualified_name":"to_utf8","ident_utf16":{"start":{"line_number":2755,"utf16_col":14},"end":{"line_number":2755,"utf16_col":21}},"extent_utf16":{"start":{"line_number":2755,"utf16_col":0},"end":{"line_number":2785,"utf16_col":1}}},{"name":"base64_encode","kind":"function","ident_start":95828,"ident_end":95841,"extent_start":95809,"extent_end":96391,"fully_qualified_name":"base64_encode","ident_utf16":{"start":{"line_number":2789,"utf16_col":19},"end":{"line_number":2789,"utf16_col":32}},"extent_utf16":{"start":{"line_number":2789,"utf16_col":0},"end":{"line_number":2815,"utf16_col":1}}},{"name":"is_valid_path","kind":"function","ident_start":96405,"ident_end":96418,"extent_start":96393,"extent_end":97146,"fully_qualified_name":"is_valid_path","ident_utf16":{"start":{"line_number":2817,"utf16_col":12},"end":{"line_number":2817,"utf16_col":25}},"extent_utf16":{"start":{"line_number":2817,"utf16_col":0},"end":{"line_number":2857,"utf16_col":1}}},{"name":"FileStat","kind":"method","ident_start":97165,"ident_end":97173,"extent_start":97148,"extent_end":97358,"fully_qualified_name":"FileStat::FileStat","ident_utf16":{"start":{"line_number":2859,"utf16_col":17},"end":{"line_number":2859,"utf16_col":25}},"extent_utf16":{"start":{"line_number":2859,"utf16_col":0},"end":{"line_number":2866,"utf16_col":1}}},{"name":"is_file","kind":"method","ident_start":97381,"ident_end":97388,"extent_start":97359,"extent_end":97444,"fully_qualified_name":"FileStat::is_file","ident_utf16":{"start":{"line_number":2867,"utf16_col":22},"end":{"line_number":2867,"utf16_col":29}},"extent_utf16":{"start":{"line_number":2867,"utf16_col":0},"end":{"line_number":2869,"utf16_col":1}}},{"name":"is_dir","kind":"method","ident_start":97467,"ident_end":97473,"extent_start":97445,"extent_end":97529,"fully_qualified_name":"FileStat::is_dir","ident_utf16":{"start":{"line_number":2870,"utf16_col":22},"end":{"line_number":2870,"utf16_col":28}},"extent_utf16":{"start":{"line_number":2870,"utf16_col":0},"end":{"line_number":2872,"utf16_col":1}}},{"name":"encode_query_param","kind":"function","ident_start":97550,"ident_end":97568,"extent_start":97531,"extent_end":98111,"fully_qualified_name":"encode_query_param","ident_utf16":{"start":{"line_number":2874,"utf16_col":19},"end":{"line_number":2874,"utf16_col":37}},"extent_utf16":{"start":{"line_number":2874,"utf16_col":0},"end":{"line_number":2893,"utf16_col":1}}},{"name":"encode_url","kind":"function","ident_start":98132,"ident_end":98142,"extent_start":98113,"extent_end":98955,"fully_qualified_name":"encode_url","ident_utf16":{"start":{"line_number":2895,"utf16_col":19},"end":{"line_number":2895,"utf16_col":29}},"extent_utf16":{"start":{"line_number":2895,"utf16_col":0},"end":{"line_number":2925,"utf16_col":1}}},{"name":"decode_url","kind":"function","ident_start":98976,"ident_end":98986,"extent_start":98957,"extent_end":99900,"fully_qualified_name":"decode_url","ident_utf16":{"start":{"line_number":2927,"utf16_col":19},"end":{"line_number":2927,"utf16_col":29}},"extent_utf16":{"start":{"line_number":2927,"utf16_col":0},"end":{"line_number":2962,"utf16_col":1}}},{"name":"file_extension","kind":"function","ident_start":99921,"ident_end":99935,"extent_start":99902,"extent_end":100125,"fully_qualified_name":"file_extension","ident_utf16":{"start":{"line_number":2964,"utf16_col":19},"end":{"line_number":2964,"utf16_col":33}},"extent_utf16":{"start":{"line_number":2964,"utf16_col":0},"end":{"line_number":2969,"utf16_col":1}}},{"name":"is_space_or_tab","kind":"function","ident_start":100139,"ident_end":100154,"extent_start":100127,"extent_end":100196,"fully_qualified_name":"is_space_or_tab","ident_utf16":{"start":{"line_number":2971,"utf16_col":12},"end":{"line_number":2971,"utf16_col":27}},"extent_utf16":{"start":{"line_number":2971,"utf16_col":0},"end":{"line_number":2971,"utf16_col":69}}},{"name":"trim","kind":"function","ident_start":100231,"ident_end":100235,"extent_start":100198,"extent_end":100513,"fully_qualified_name":"trim","ident_utf16":{"start":{"line_number":2973,"utf16_col":33},"end":{"line_number":2973,"utf16_col":37}},"extent_utf16":{"start":{"line_number":2973,"utf16_col":0},"end":{"line_number":2982,"utf16_col":1}}},{"name":"trim_copy","kind":"function","ident_start":100534,"ident_end":100543,"extent_start":100515,"extent_end":100678,"fully_qualified_name":"trim_copy","ident_utf16":{"start":{"line_number":2984,"utf16_col":19},"end":{"line_number":2984,"utf16_col":28}},"extent_utf16":{"start":{"line_number":2984,"utf16_col":0},"end":{"line_number":2987,"utf16_col":1}}},{"name":"trim_double_quotes_copy","kind":"function","ident_start":100699,"ident_end":100722,"extent_start":100680,"extent_end":100866,"fully_qualified_name":"trim_double_quotes_copy","ident_utf16":{"start":{"line_number":2989,"utf16_col":19},"end":{"line_number":2989,"utf16_col":42}},"extent_utf16":{"start":{"line_number":2989,"utf16_col":0},"end":{"line_number":2994,"utf16_col":1}}},{"name":"divide","kind":"function","ident_start":100880,"ident_end":100886,"extent_start":100868,"extent_end":101370,"fully_qualified_name":"divide","ident_utf16":{"start":{"line_number":2997,"utf16_col":0},"end":{"line_number":2997,"utf16_col":6}},"extent_utf16":{"start":{"line_number":2996,"utf16_col":0},"end":{"line_number":3008,"utf16_col":1}}},{"name":"divide","kind":"function","ident_start":101384,"ident_end":101390,"extent_start":101372,"extent_end":101574,"fully_qualified_name":"divide","ident_utf16":{"start":{"line_number":3011,"utf16_col":0},"end":{"line_number":3011,"utf16_col":6}},"extent_utf16":{"start":{"line_number":3010,"utf16_col":0},"end":{"line_number":3015,"utf16_col":1}}},{"name":"split","kind":"function","ident_start":101588,"ident_end":101593,"extent_start":101576,"extent_end":101783,"fully_qualified_name":"split","ident_utf16":{"start":{"line_number":3017,"utf16_col":12},"end":{"line_number":3017,"utf16_col":17}},"extent_utf16":{"start":{"line_number":3017,"utf16_col":0},"end":{"line_number":3020,"utf16_col":1}}},{"name":"split","kind":"function","ident_start":101797,"ident_end":101802,"extent_start":101785,"extent_end":102323,"fully_qualified_name":"split","ident_utf16":{"start":{"line_number":3022,"utf16_col":12},"end":{"line_number":3022,"utf16_col":17}},"extent_utf16":{"start":{"line_number":3022,"utf16_col":0},"end":{"line_number":3042,"utf16_col":1}}},{"name":"stream_line_reader","kind":"method","ident_start":102352,"ident_end":102370,"extent_start":102325,"extent_end":102571,"fully_qualified_name":"stream_line_reader::stream_line_reader","ident_utf16":{"start":{"line_number":3044,"utf16_col":27},"end":{"line_number":3044,"utf16_col":45}},"extent_utf16":{"start":{"line_number":3044,"utf16_col":0},"end":{"line_number":3047,"utf16_col":46}}},{"name":"size","kind":"method","ident_start":102774,"ident_end":102778,"extent_start":102740,"extent_end":102911,"fully_qualified_name":"stream_line_reader::size","ident_utf16":{"start":{"line_number":3057,"utf16_col":34},"end":{"line_number":3057,"utf16_col":38}},"extent_utf16":{"start":{"line_number":3057,"utf16_col":0},"end":{"line_number":3063,"utf16_col":1}}},{"name":"end_with_crlf","kind":"method","ident_start":102945,"ident_end":102958,"extent_start":102913,"extent_end":103059,"fully_qualified_name":"stream_line_reader::end_with_crlf","ident_utf16":{"start":{"line_number":3065,"utf16_col":32},"end":{"line_number":3065,"utf16_col":45}},"extent_utf16":{"start":{"line_number":3065,"utf16_col":0},"end":{"line_number":3068,"utf16_col":1}}},{"name":"getline","kind":"method","ident_start":103093,"ident_end":103100,"extent_start":103061,"extent_end":103858,"fully_qualified_name":"stream_line_reader::getline","ident_utf16":{"start":{"line_number":3070,"utf16_col":32},"end":{"line_number":3070,"utf16_col":39}},"extent_utf16":{"start":{"line_number":3070,"utf16_col":0},"end":{"line_number":3108,"utf16_col":1}}},{"name":"append","kind":"method","ident_start":103892,"ident_end":103898,"extent_start":103860,"extent_end":104286,"fully_qualified_name":"stream_line_reader::append","ident_utf16":{"start":{"line_number":3110,"utf16_col":32},"end":{"line_number":3110,"utf16_col":38}},"extent_utf16":{"start":{"line_number":3110,"utf16_col":0},"end":{"line_number":3121,"utf16_col":1}}},{"name":"mmap","kind":"method","ident_start":104301,"ident_end":104305,"extent_start":104288,"extent_end":104339,"fully_qualified_name":"mmap::mmap","ident_utf16":{"start":{"line_number":3123,"utf16_col":13},"end":{"line_number":3123,"utf16_col":17}},"extent_utf16":{"start":{"line_number":3123,"utf16_col":0},"end":{"line_number":3123,"utf16_col":51}}},{"name":"open","kind":"method","ident_start":104394,"ident_end":104398,"extent_start":104376,"extent_end":106499,"fully_qualified_name":"mmap::open","ident_utf16":{"start":{"line_number":3127,"utf16_col":18},"end":{"line_number":3127,"utf16_col":22}},"extent_utf16":{"start":{"line_number":3127,"utf16_col":0},"end":{"line_number":3207,"utf16_col":1}}},{"name":"is_open","kind":"method","ident_start":106519,"ident_end":106526,"extent_start":106501,"extent_end":106593,"fully_qualified_name":"mmap::is_open","ident_utf16":{"start":{"line_number":3209,"utf16_col":18},"end":{"line_number":3209,"utf16_col":25}},"extent_utf16":{"start":{"line_number":3209,"utf16_col":0},"end":{"line_number":3211,"utf16_col":1}}},{"name":"size","kind":"method","ident_start":106615,"ident_end":106619,"extent_start":106595,"extent_end":106645,"fully_qualified_name":"mmap::size","ident_utf16":{"start":{"line_number":3213,"utf16_col":20},"end":{"line_number":3213,"utf16_col":24}},"extent_utf16":{"start":{"line_number":3213,"utf16_col":0},"end":{"line_number":3213,"utf16_col":50}}},{"name":"close","kind":"method","ident_start":106777,"ident_end":106782,"extent_start":106759,"extent_end":107251,"fully_qualified_name":"mmap::close","ident_utf16":{"start":{"line_number":3219,"utf16_col":18},"end":{"line_number":3219,"utf16_col":23}},"extent_utf16":{"start":{"line_number":3219,"utf16_col":0},"end":{"line_number":3249,"utf16_col":1}}},{"name":"close_socket","kind":"function","ident_start":107263,"ident_end":107275,"extent_start":107252,"extent_end":107371,"fully_qualified_name":"close_socket","ident_utf16":{"start":{"line_number":3250,"utf16_col":11},"end":{"line_number":3250,"utf16_col":23}},"extent_utf16":{"start":{"line_number":3250,"utf16_col":0},"end":{"line_number":3256,"utf16_col":1}}},{"name":"handle_EINTR","kind":"function","ident_start":107410,"ident_end":107422,"extent_start":107395,"extent_end":107637,"fully_qualified_name":"handle_EINTR","ident_utf16":{"start":{"line_number":3258,"utf16_col":37},"end":{"line_number":3258,"utf16_col":49}},"extent_utf16":{"start":{"line_number":3258,"utf16_col":22},"end":{"line_number":3269,"utf16_col":1}}},{"name":"read_socket","kind":"function","ident_start":107654,"ident_end":107665,"extent_start":107639,"extent_end":107921,"fully_qualified_name":"read_socket","ident_utf16":{"start":{"line_number":3271,"utf16_col":15},"end":{"line_number":3271,"utf16_col":26}},"extent_utf16":{"start":{"line_number":3271,"utf16_col":0},"end":{"line_number":3281,"utf16_col":1}}},{"name":"send_socket","kind":"function","ident_start":107938,"ident_end":107949,"extent_start":107923,"extent_end":108244,"fully_qualified_name":"send_socket","ident_utf16":{"start":{"line_number":3283,"utf16_col":15},"end":{"line_number":3283,"utf16_col":26}},"extent_utf16":{"start":{"line_number":3283,"utf16_col":0},"end":{"line_number":3294,"utf16_col":1}}},{"name":"poll_wrapper","kind":"function","ident_start":108257,"ident_end":108269,"extent_start":108246,"extent_end":108423,"fully_qualified_name":"poll_wrapper","ident_utf16":{"start":{"line_number":3296,"utf16_col":11},"end":{"line_number":3296,"utf16_col":23}},"extent_utf16":{"start":{"line_number":3296,"utf16_col":0},"end":{"line_number":3302,"utf16_col":1}}},{"name":"select_impl","kind":"function","ident_start":108461,"ident_end":108472,"extent_start":108446,"extent_end":108732,"fully_qualified_name":"select_impl","ident_utf16":{"start":{"line_number":3305,"utf16_col":15},"end":{"line_number":3305,"utf16_col":26}},"extent_utf16":{"start":{"line_number":3305,"utf16_col":0},"end":{"line_number":3313,"utf16_col":1}}},{"name":"select_read","kind":"function","ident_start":108749,"ident_end":108760,"extent_start":108734,"extent_end":108849,"fully_qualified_name":"select_read","ident_utf16":{"start":{"line_number":3315,"utf16_col":15},"end":{"line_number":3315,"utf16_col":26}},"extent_utf16":{"start":{"line_number":3315,"utf16_col":0},"end":{"line_number":3317,"utf16_col":1}}},{"name":"select_write","kind":"function","ident_start":108866,"ident_end":108878,"extent_start":108851,"extent_end":108968,"fully_qualified_name":"select_write","ident_utf16":{"start":{"line_number":3319,"utf16_col":15},"end":{"line_number":3319,"utf16_col":27}},"extent_utf16":{"start":{"line_number":3319,"utf16_col":0},"end":{"line_number":3321,"utf16_col":1}}},{"name":"wait_until_socket_is_ready","kind":"function","ident_start":108983,"ident_end":109009,"extent_start":108970,"extent_end":109769,"fully_qualified_name":"wait_until_socket_is_ready","ident_utf16":{"start":{"line_number":3323,"utf16_col":13},"end":{"line_number":3323,"utf16_col":39}},"extent_utf16":{"start":{"line_number":3323,"utf16_col":0},"end":{"line_number":3346,"utf16_col":1}}},{"name":"is_socket_alive","kind":"function","ident_start":109783,"ident_end":109798,"extent_start":109771,"extent_end":110055,"fully_qualified_name":"is_socket_alive","ident_utf16":{"start":{"line_number":3348,"utf16_col":12},"end":{"line_number":3348,"utf16_col":27}},"extent_utf16":{"start":{"line_number":3348,"utf16_col":0},"end":{"line_number":3357,"utf16_col":1}}},{"name":"SocketStream","kind":"class","ident_start":110063,"ident_end":110075,"extent_start":110057,"extent_end":111313,"fully_qualified_name":"SocketStream","ident_utf16":{"start":{"line_number":3359,"utf16_col":6},"end":{"line_number":3359,"utf16_col":18}},"extent_utf16":{"start":{"line_number":3359,"utf16_col":0},"end":{"line_number":3392,"utf16_col":1}}},{"name":"is_readable","kind":"method","ident_start":110484,"ident_end":110495,"extent_start":110479,"extent_end":110513,"fully_qualified_name":"SocketStream::is_readable","ident_utf16":{"start":{"line_number":3368,"utf16_col":7},"end":{"line_number":3368,"utf16_col":18}},"extent_utf16":{"start":{"line_number":3368,"utf16_col":2},"end":{"line_number":3368,"utf16_col":36}}},{"name":"wait_readable","kind":"method","ident_start":110521,"ident_end":110534,"extent_start":110516,"extent_end":110552,"fully_qualified_name":"SocketStream::wait_readable","ident_utf16":{"start":{"line_number":3369,"utf16_col":7},"end":{"line_number":3369,"utf16_col":20}},"extent_utf16":{"start":{"line_number":3369,"utf16_col":2},"end":{"line_number":3369,"utf16_col":38}}},{"name":"wait_writable","kind":"method","ident_start":110560,"ident_end":110573,"extent_start":110555,"extent_end":110591,"fully_qualified_name":"SocketStream::wait_writable","ident_utf16":{"start":{"line_number":3370,"utf16_col":7},"end":{"line_number":3370,"utf16_col":20}},"extent_utf16":{"start":{"line_number":3370,"utf16_col":2},"end":{"line_number":3370,"utf16_col":38}}},{"name":"read","kind":"method","ident_start":110602,"ident_end":110606,"extent_start":110594,"extent_end":110640,"fully_qualified_name":"SocketStream::read","ident_utf16":{"start":{"line_number":3371,"utf16_col":10},"end":{"line_number":3371,"utf16_col":14}},"extent_utf16":{"start":{"line_number":3371,"utf16_col":2},"end":{"line_number":3371,"utf16_col":48}}},{"name":"write","kind":"method","ident_start":110651,"ident_end":110656,"extent_start":110643,"extent_end":110696,"fully_qualified_name":"SocketStream::write","ident_utf16":{"start":{"line_number":3372,"utf16_col":10},"end":{"line_number":3372,"utf16_col":15}},"extent_utf16":{"start":{"line_number":3372,"utf16_col":2},"end":{"line_number":3372,"utf16_col":55}}},{"name":"get_remote_ip_and_port","kind":"method","ident_start":110704,"ident_end":110726,"extent_start":110699,"extent_end":110770,"fully_qualified_name":"SocketStream::get_remote_ip_and_port","ident_utf16":{"start":{"line_number":3373,"utf16_col":7},"end":{"line_number":3373,"utf16_col":29}},"extent_utf16":{"start":{"line_number":3373,"utf16_col":2},"end":{"line_number":3373,"utf16_col":73}}},{"name":"get_local_ip_and_port","kind":"method","ident_start":110778,"ident_end":110799,"extent_start":110773,"extent_end":110843,"fully_qualified_name":"SocketStream::get_local_ip_and_port","ident_utf16":{"start":{"line_number":3374,"utf16_col":7},"end":{"line_number":3374,"utf16_col":28}},"extent_utf16":{"start":{"line_number":3374,"utf16_col":2},"end":{"line_number":3374,"utf16_col":72}}},{"name":"socket","kind":"method","ident_start":110855,"ident_end":110861,"extent_start":110846,"extent_end":110879,"fully_qualified_name":"SocketStream::socket","ident_utf16":{"start":{"line_number":3375,"utf16_col":11},"end":{"line_number":3375,"utf16_col":17}},"extent_utf16":{"start":{"line_number":3375,"utf16_col":2},"end":{"line_number":3375,"utf16_col":35}}},{"name":"duration","kind":"method","ident_start":110889,"ident_end":110897,"extent_start":110882,"extent_end":110915,"fully_qualified_name":"SocketStream::duration","ident_utf16":{"start":{"line_number":3376,"utf16_col":9},"end":{"line_number":3376,"utf16_col":17}},"extent_utf16":{"start":{"line_number":3376,"utf16_col":2},"end":{"line_number":3376,"utf16_col":35}}},{"name":"SSLSocketStream","kind":"class","ident_start":111356,"ident_end":111371,"extent_start":111350,"extent_end":112457,"fully_qualified_name":"SSLSocketStream","ident_utf16":{"start":{"line_number":3395,"utf16_col":6},"end":{"line_number":3395,"utf16_col":21}},"extent_utf16":{"start":{"line_number":3395,"utf16_col":0},"end":{"line_number":3424,"utf16_col":1}}},{"name":"is_readable","kind":"method","ident_start":111767,"ident_end":111778,"extent_start":111762,"extent_end":111796,"fully_qualified_name":"SSLSocketStream::is_readable","ident_utf16":{"start":{"line_number":3405,"utf16_col":7},"end":{"line_number":3405,"utf16_col":18}},"extent_utf16":{"start":{"line_number":3405,"utf16_col":2},"end":{"line_number":3405,"utf16_col":36}}},{"name":"wait_readable","kind":"method","ident_start":111804,"ident_end":111817,"extent_start":111799,"extent_end":111835,"fully_qualified_name":"SSLSocketStream::wait_readable","ident_utf16":{"start":{"line_number":3406,"utf16_col":7},"end":{"line_number":3406,"utf16_col":20}},"extent_utf16":{"start":{"line_number":3406,"utf16_col":2},"end":{"line_number":3406,"utf16_col":38}}},{"name":"wait_writable","kind":"method","ident_start":111843,"ident_end":111856,"extent_start":111838,"extent_end":111874,"fully_qualified_name":"SSLSocketStream::wait_writable","ident_utf16":{"start":{"line_number":3407,"utf16_col":7},"end":{"line_number":3407,"utf16_col":20}},"extent_utf16":{"start":{"line_number":3407,"utf16_col":2},"end":{"line_number":3407,"utf16_col":38}}},{"name":"read","kind":"method","ident_start":111885,"ident_end":111889,"extent_start":111877,"extent_end":111923,"fully_qualified_name":"SSLSocketStream::read","ident_utf16":{"start":{"line_number":3408,"utf16_col":10},"end":{"line_number":3408,"utf16_col":14}},"extent_utf16":{"start":{"line_number":3408,"utf16_col":2},"end":{"line_number":3408,"utf16_col":48}}},{"name":"write","kind":"method","ident_start":111934,"ident_end":111939,"extent_start":111926,"extent_end":111979,"fully_qualified_name":"SSLSocketStream::write","ident_utf16":{"start":{"line_number":3409,"utf16_col":10},"end":{"line_number":3409,"utf16_col":15}},"extent_utf16":{"start":{"line_number":3409,"utf16_col":2},"end":{"line_number":3409,"utf16_col":55}}},{"name":"get_remote_ip_and_port","kind":"method","ident_start":111987,"ident_end":112009,"extent_start":111982,"extent_end":112053,"fully_qualified_name":"SSLSocketStream::get_remote_ip_and_port","ident_utf16":{"start":{"line_number":3410,"utf16_col":7},"end":{"line_number":3410,"utf16_col":29}},"extent_utf16":{"start":{"line_number":3410,"utf16_col":2},"end":{"line_number":3410,"utf16_col":73}}},{"name":"get_local_ip_and_port","kind":"method","ident_start":112061,"ident_end":112082,"extent_start":112056,"extent_end":112126,"fully_qualified_name":"SSLSocketStream::get_local_ip_and_port","ident_utf16":{"start":{"line_number":3411,"utf16_col":7},"end":{"line_number":3411,"utf16_col":28}},"extent_utf16":{"start":{"line_number":3411,"utf16_col":2},"end":{"line_number":3411,"utf16_col":72}}},{"name":"socket","kind":"method","ident_start":112138,"ident_end":112144,"extent_start":112129,"extent_end":112162,"fully_qualified_name":"SSLSocketStream::socket","ident_utf16":{"start":{"line_number":3412,"utf16_col":11},"end":{"line_number":3412,"utf16_col":17}},"extent_utf16":{"start":{"line_number":3412,"utf16_col":2},"end":{"line_number":3412,"utf16_col":35}}},{"name":"duration","kind":"method","ident_start":112172,"ident_end":112180,"extent_start":112165,"extent_end":112198,"fully_qualified_name":"SSLSocketStream::duration","ident_utf16":{"start":{"line_number":3413,"utf16_col":9},"end":{"line_number":3413,"utf16_col":17}},"extent_utf16":{"start":{"line_number":3413,"utf16_col":2},"end":{"line_number":3413,"utf16_col":35}}},{"name":"keep_alive","kind":"function","ident_start":112479,"ident_end":112489,"extent_start":112467,"extent_end":113375,"fully_qualified_name":"keep_alive","ident_utf16":{"start":{"line_number":3427,"utf16_col":12},"end":{"line_number":3427,"utf16_col":22}},"extent_utf16":{"start":{"line_number":3427,"utf16_col":0},"end":{"line_number":3458,"utf16_col":1}}},{"name":"process_server_socket_core","kind":"function","ident_start":113411,"ident_end":113437,"extent_start":113399,"extent_end":114000,"fully_qualified_name":"process_server_socket_core","ident_utf16":{"start":{"line_number":3462,"utf16_col":0},"end":{"line_number":3462,"utf16_col":26}},"extent_utf16":{"start":{"line_number":3461,"utf16_col":0},"end":{"line_number":3476,"utf16_col":1}}},{"name":"process_server_socket","kind":"function","ident_start":114036,"ident_end":114057,"extent_start":114024,"extent_end":114757,"fully_qualified_name":"process_server_socket","ident_utf16":{"start":{"line_number":3480,"utf16_col":0},"end":{"line_number":3480,"utf16_col":21}},"extent_utf16":{"start":{"line_number":3479,"utf16_col":0},"end":{"line_number":3492,"utf16_col":1}}},{"name":"process_client_socket","kind":"function","ident_start":114771,"ident_end":114792,"extent_start":114759,"extent_end":115262,"fully_qualified_name":"process_client_socket","ident_utf16":{"start":{"line_number":3494,"utf16_col":12},"end":{"line_number":3494,"utf16_col":33}},"extent_utf16":{"start":{"line_number":3494,"utf16_col":0},"end":{"line_number":3504,"utf16_col":1}}},{"name":"shutdown_socket","kind":"function","ident_start":115275,"ident_end":115290,"extent_start":115264,"extent_end":115406,"fully_qualified_name":"shutdown_socket","ident_utf16":{"start":{"line_number":3506,"utf16_col":11},"end":{"line_number":3506,"utf16_col":26}},"extent_utf16":{"start":{"line_number":3506,"utf16_col":0},"end":{"line_number":3512,"utf16_col":1}}},{"name":"escape_abstract_namespace_unix_domain","kind":"function","ident_start":115427,"ident_end":115464,"extent_start":115408,"extent_end":115596,"fully_qualified_name":"escape_abstract_namespace_unix_domain","ident_utf16":{"start":{"line_number":3514,"utf16_col":19},"end":{"line_number":3514,"utf16_col":56}},"extent_utf16":{"start":{"line_number":3514,"utf16_col":0},"end":{"line_number":3521,"utf16_col":1}}},{"name":"unescape_abstract_namespace_unix_domain","kind":"function","ident_start":115617,"ident_end":115656,"extent_start":115598,"extent_end":115788,"fully_qualified_name":"unescape_abstract_namespace_unix_domain","ident_utf16":{"start":{"line_number":3524,"utf16_col":0},"end":{"line_number":3524,"utf16_col":39}},"extent_utf16":{"start":{"line_number":3523,"utf16_col":0},"end":{"line_number":3531,"utf16_col":1}}},{"name":"create_socket","kind":"function","ident_start":115833,"ident_end":115846,"extent_start":115824,"extent_end":119987,"fully_qualified_name":"create_socket","ident_utf16":{"start":{"line_number":3534,"utf16_col":9},"end":{"line_number":3534,"utf16_col":22}},"extent_utf16":{"start":{"line_number":3534,"utf16_col":0},"end":{"line_number":3675,"utf16_col":1}}},{"name":"set_nonblocking","kind":"function","ident_start":120001,"ident_end":120016,"extent_start":119989,"extent_end":120292,"fully_qualified_name":"set_nonblocking","ident_utf16":{"start":{"line_number":3677,"utf16_col":12},"end":{"line_number":3677,"utf16_col":27}},"extent_utf16":{"start":{"line_number":3677,"utf16_col":0},"end":{"line_number":3686,"utf16_col":1}}},{"name":"is_connection_error","kind":"function","ident_start":120306,"ident_end":120325,"extent_start":120294,"extent_end":120435,"fully_qualified_name":"is_connection_error","ident_utf16":{"start":{"line_number":3688,"utf16_col":12},"end":{"line_number":3688,"utf16_col":31}},"extent_utf16":{"start":{"line_number":3688,"utf16_col":0},"end":{"line_number":3694,"utf16_col":1}}},{"name":"bind_ip_address","kind":"function","ident_start":120449,"ident_end":120464,"extent_start":120437,"extent_end":121063,"fully_qualified_name":"bind_ip_address","ident_utf16":{"start":{"line_number":3696,"utf16_col":12},"end":{"line_number":3696,"utf16_col":27}},"extent_utf16":{"start":{"line_number":3696,"utf16_col":0},"end":{"line_number":3718,"utf16_col":1}}},{"name":"if2ip","kind":"function","ident_start":121204,"ident_end":121209,"extent_start":121185,"extent_end":122590,"fully_qualified_name":"if2ip","ident_utf16":{"start":{"line_number":3725,"utf16_col":19},"end":{"line_number":3725,"utf16_col":24}},"extent_utf16":{"start":{"line_number":3725,"utf16_col":0},"end":{"line_number":3759,"utf16_col":1}}},{"name":"create_client_socket","kind":"function","ident_start":122615,"ident_end":122635,"extent_start":122599,"extent_end":124620,"fully_qualified_name":"create_client_socket","ident_utf16":{"start":{"line_number":3762,"utf16_col":16},"end":{"line_number":3762,"utf16_col":36}},"extent_utf16":{"start":{"line_number":3762,"utf16_col":0},"end":{"line_number":3819,"utf16_col":1}}},{"name":"get_ip_and_port","kind":"function","ident_start":124634,"ident_end":124649,"extent_start":124622,"extent_end":125346,"fully_qualified_name":"get_ip_and_port","ident_utf16":{"start":{"line_number":3821,"utf16_col":12},"end":{"line_number":3821,"utf16_col":27}},"extent_utf16":{"start":{"line_number":3821,"utf16_col":0},"end":{"line_number":3841,"utf16_col":1}}},{"name":"get_local_ip_and_port","kind":"function","ident_start":125360,"ident_end":125381,"extent_start":125348,"extent_end":125650,"fully_qualified_name":"get_local_ip_and_port","ident_utf16":{"start":{"line_number":3843,"utf16_col":12},"end":{"line_number":3843,"utf16_col":33}},"extent_utf16":{"start":{"line_number":3843,"utf16_col":0},"end":{"line_number":3850,"utf16_col":1}}},{"name":"get_remote_ip_and_port","kind":"function","ident_start":125664,"ident_end":125686,"extent_start":125652,"extent_end":126447,"fully_qualified_name":"get_remote_ip_and_port","ident_utf16":{"start":{"line_number":3852,"utf16_col":12},"end":{"line_number":3852,"utf16_col":34}},"extent_utf16":{"start":{"line_number":3852,"utf16_col":0},"end":{"line_number":3878,"utf16_col":1}}},{"name":"str2tag_core","kind":"function","ident_start":126479,"ident_end":126491,"extent_start":126449,"extent_end":126915,"fully_qualified_name":"str2tag_core","ident_utf16":{"start":{"line_number":3880,"utf16_col":30},"end":{"line_number":3880,"utf16_col":42}},"extent_utf16":{"start":{"line_number":3880,"utf16_col":0},"end":{"line_number":3890,"utf16_col":1}}},{"name":"str2tag","kind":"function","ident_start":126937,"ident_end":126944,"extent_start":126917,"extent_end":127016,"fully_qualified_name":"str2tag","ident_utf16":{"start":{"line_number":3892,"utf16_col":20},"end":{"line_number":3892,"utf16_col":27}},"extent_utf16":{"start":{"line_number":3892,"utf16_col":0},"end":{"line_number":3894,"utf16_col":1}}},{"name":"find_content_type","kind":"function","ident_start":127179,"ident_end":127196,"extent_start":127160,"extent_end":129231,"fully_qualified_name":"find_content_type","ident_utf16":{"start":{"line_number":3905,"utf16_col":0},"end":{"line_number":3905,"utf16_col":17}},"extent_utf16":{"start":{"line_number":3904,"utf16_col":0},"end":{"line_number":3968,"utf16_col":1}}},{"name":"can_compress_content_type","kind":"function","ident_start":129245,"ident_end":129270,"extent_start":129233,"extent_end":129688,"fully_qualified_name":"can_compress_content_type","ident_utf16":{"start":{"line_number":3970,"utf16_col":12},"end":{"line_number":3970,"utf16_col":37}},"extent_utf16":{"start":{"line_number":3970,"utf16_col":0},"end":{"line_number":3987,"utf16_col":1}}},{"name":"encoding_type","kind":"function","ident_start":129710,"ident_end":129723,"extent_start":129690,"extent_end":130538,"fully_qualified_name":"encoding_type","ident_utf16":{"start":{"line_number":3989,"utf16_col":20},"end":{"line_number":3989,"utf16_col":33}},"extent_utf16":{"start":{"line_number":3989,"utf16_col":0},"end":{"line_number":4016,"utf16_col":1}}},{"name":"compress","kind":"method","ident_start":130566,"ident_end":130574,"extent_start":130540,"extent_end":130760,"fully_qualified_name":"nocompressor::compress","ident_utf16":{"start":{"line_number":4018,"utf16_col":26},"end":{"line_number":4018,"utf16_col":34}},"extent_utf16":{"start":{"line_number":4018,"utf16_col":0},"end":{"line_number":4022,"utf16_col":1}}},{"name":"gzip_compressor","kind":"method","ident_start":130817,"ident_end":130832,"extent_start":130793,"extent_end":131087,"fully_qualified_name":"gzip_compressor::gzip_compressor","ident_utf16":{"start":{"line_number":4025,"utf16_col":24},"end":{"line_number":4025,"utf16_col":39}},"extent_utf16":{"start":{"line_number":4025,"utf16_col":0},"end":{"line_number":4033,"utf16_col":1}}},{"name":"compress","kind":"method","ident_start":131186,"ident_end":131194,"extent_start":131157,"extent_end":132374,"fully_qualified_name":"gzip_compressor::compress","ident_utf16":{"start":{"line_number":4037,"utf16_col":29},"end":{"line_number":4037,"utf16_col":37}},"extent_utf16":{"start":{"line_number":4037,"utf16_col":0},"end":{"line_number":4074,"utf16_col":1}}},{"name":"gzip_decompressor","kind":"method","ident_start":132402,"ident_end":132419,"extent_start":132376,"extent_end":132838,"fully_qualified_name":"gzip_decompressor::gzip_decompressor","ident_utf16":{"start":{"line_number":4076,"utf16_col":26},"end":{"line_number":4076,"utf16_col":43}},"extent_utf16":{"start":{"line_number":4076,"utf16_col":0},"end":{"line_number":4087,"utf16_col":1}}},{"name":"is_valid","kind":"method","ident_start":132943,"ident_end":132951,"extent_start":132912,"extent_end":132981,"fully_qualified_name":"gzip_decompressor::is_valid","ident_utf16":{"start":{"line_number":4091,"utf16_col":31},"end":{"line_number":4091,"utf16_col":39}},"extent_utf16":{"start":{"line_number":4091,"utf16_col":0},"end":{"line_number":4091,"utf16_col":69}}},{"name":"decompress","kind":"method","ident_start":133014,"ident_end":133024,"extent_start":132983,"extent_end":134186,"fully_qualified_name":"gzip_decompressor::decompress","ident_utf16":{"start":{"line_number":4093,"utf16_col":31},"end":{"line_number":4093,"utf16_col":41}},"extent_utf16":{"start":{"line_number":4093,"utf16_col":0},"end":{"line_number":4134,"utf16_col":1}}},{"name":"brotli_compressor","kind":"method","ident_start":134254,"ident_end":134271,"extent_start":134228,"extent_end":134344,"fully_qualified_name":"brotli_compressor::brotli_compressor","ident_utf16":{"start":{"line_number":4138,"utf16_col":26},"end":{"line_number":4138,"utf16_col":43}},"extent_utf16":{"start":{"line_number":4138,"utf16_col":0},"end":{"line_number":4140,"utf16_col":1}}},{"name":"compress","kind":"method","ident_start":134469,"ident_end":134477,"extent_start":134438,"extent_end":135396,"fully_qualified_name":"brotli_compressor::compress","ident_utf16":{"start":{"line_number":4146,"utf16_col":31},"end":{"line_number":4146,"utf16_col":39}},"extent_utf16":{"start":{"line_number":4146,"utf16_col":0},"end":{"line_number":4176,"utf16_col":1}}},{"name":"brotli_decompressor","kind":"method","ident_start":135426,"ident_end":135445,"extent_start":135398,"extent_end":135623,"fully_qualified_name":"brotli_decompressor::brotli_decompressor","ident_utf16":{"start":{"line_number":4178,"utf16_col":28},"end":{"line_number":4178,"utf16_col":47}},"extent_utf16":{"start":{"line_number":4178,"utf16_col":0},"end":{"line_number":4182,"utf16_col":1}}},{"name":"is_valid","kind":"method","ident_start":135776,"ident_end":135784,"extent_start":135743,"extent_end":135814,"fully_qualified_name":"brotli_decompressor::is_valid","ident_utf16":{"start":{"line_number":4188,"utf16_col":33},"end":{"line_number":4188,"utf16_col":41}},"extent_utf16":{"start":{"line_number":4188,"utf16_col":0},"end":{"line_number":4188,"utf16_col":71}}},{"name":"decompress","kind":"method","ident_start":135849,"ident_end":135859,"extent_start":135816,"extent_end":136919,"fully_qualified_name":"brotli_decompressor::decompress","ident_utf16":{"start":{"line_number":4190,"utf16_col":33},"end":{"line_number":4190,"utf16_col":43}},"extent_utf16":{"start":{"line_number":4190,"utf16_col":0},"end":{"line_number":4220,"utf16_col":1}}},{"name":"zstd_compressor","kind":"method","ident_start":136983,"ident_end":136998,"extent_start":136959,"extent_end":137100,"fully_qualified_name":"zstd_compressor::zstd_compressor","ident_utf16":{"start":{"line_number":4224,"utf16_col":24},"end":{"line_number":4224,"utf16_col":39}},"extent_utf16":{"start":{"line_number":4224,"utf16_col":0},"end":{"line_number":4227,"utf16_col":1}}},{"name":"compress","kind":"method","ident_start":137200,"ident_end":137208,"extent_start":137171,"extent_end":137895,"fully_qualified_name":"zstd_compressor::compress","ident_utf16":{"start":{"line_number":4231,"utf16_col":29},"end":{"line_number":4231,"utf16_col":37}},"extent_utf16":{"start":{"line_number":4231,"utf16_col":0},"end":{"line_number":4252,"utf16_col":1}}},{"name":"zstd_decompressor","kind":"method","ident_start":137923,"ident_end":137940,"extent_start":137897,"extent_end":137972,"fully_qualified_name":"zstd_decompressor::zstd_decompressor","ident_utf16":{"start":{"line_number":4254,"utf16_col":26},"end":{"line_number":4254,"utf16_col":43}},"extent_utf16":{"start":{"line_number":4254,"utf16_col":0},"end":{"line_number":4254,"utf16_col":75}}},{"name":"is_valid","kind":"method","ident_start":138078,"ident_end":138086,"extent_start":138047,"extent_end":138122,"fully_qualified_name":"zstd_decompressor::is_valid","ident_utf16":{"start":{"line_number":4258,"utf16_col":31},"end":{"line_number":4258,"utf16_col":39}},"extent_utf16":{"start":{"line_number":4258,"utf16_col":0},"end":{"line_number":4258,"utf16_col":75}}},{"name":"decompress","kind":"method","ident_start":138155,"ident_end":138165,"extent_start":138124,"extent_end":138697,"fully_qualified_name":"zstd_decompressor::decompress","ident_utf16":{"start":{"line_number":4260,"utf16_col":31},"end":{"line_number":4260,"utf16_col":41}},"extent_utf16":{"start":{"line_number":4260,"utf16_col":0},"end":{"line_number":4275,"utf16_col":1}}},{"name":"has_header","kind":"function","ident_start":138718,"ident_end":138728,"extent_start":138706,"extent_end":138825,"fully_qualified_name":"has_header","ident_utf16":{"start":{"line_number":4278,"utf16_col":12},"end":{"line_number":4278,"utf16_col":22}},"extent_utf16":{"start":{"line_number":4278,"utf16_col":0},"end":{"line_number":4280,"utf16_col":1}}},{"name":"parse_header","kind":"function","ident_start":139227,"ident_end":139239,"extent_start":139215,"extent_end":140140,"fully_qualified_name":"parse_header","ident_utf16":{"start":{"line_number":4293,"utf16_col":12},"end":{"line_number":4293,"utf16_col":24}},"extent_utf16":{"start":{"line_number":4293,"utf16_col":0},"end":{"line_number":4337,"utf16_col":1}}},{"name":"read_headers","kind":"function","ident_start":140154,"ident_end":140166,"extent_start":140142,"extent_end":141248,"fully_qualified_name":"read_headers","ident_utf16":{"start":{"line_number":4339,"utf16_col":12},"end":{"line_number":4339,"utf16_col":24}},"extent_utf16":{"start":{"line_number":4339,"utf16_col":0},"end":{"line_number":4376,"utf16_col":1}}},{"name":"read_content_with_length","kind":"function","ident_start":141262,"ident_end":141286,"extent_start":141250,"extent_end":141877,"fully_qualified_name":"read_content_with_length","ident_utf16":{"start":{"line_number":4378,"utf16_col":12},"end":{"line_number":4378,"utf16_col":36}},"extent_utf16":{"start":{"line_number":4378,"utf16_col":0},"end":{"line_number":4398,"utf16_col":1}}},{"name":"skip_content_with_length","kind":"function","ident_start":141891,"ident_end":141915,"extent_start":141879,"extent_end":142213,"fully_qualified_name":"skip_content_with_length","ident_utf16":{"start":{"line_number":4400,"utf16_col":12},"end":{"line_number":4400,"utf16_col":36}},"extent_utf16":{"start":{"line_number":4400,"utf16_col":0},"end":{"line_number":4409,"utf16_col":1}}},{"name":"read_content_without_length","kind":"function","ident_start":142227,"ident_end":142254,"extent_start":142215,"extent_end":142654,"fully_qualified_name":"read_content_without_length","ident_utf16":{"start":{"line_number":4411,"utf16_col":12},"end":{"line_number":4411,"utf16_col":39}},"extent_utf16":{"start":{"line_number":4411,"utf16_col":0},"end":{"line_number":4425,"utf16_col":1}}},{"name":"read_content_chunked","kind":"function","ident_start":142690,"ident_end":142710,"extent_start":142678,"extent_end":144837,"fully_qualified_name":"read_content_chunked","ident_utf16":{"start":{"line_number":4428,"utf16_col":12},"end":{"line_number":4428,"utf16_col":32}},"extent_utf16":{"start":{"line_number":4428,"utf16_col":0},"end":{"line_number":4491,"utf16_col":1}}},{"name":"is_chunked_transfer_encoding","kind":"function","ident_start":144851,"ident_end":144879,"extent_start":144839,"extent_end":145009,"fully_qualified_name":"is_chunked_transfer_encoding","ident_utf16":{"start":{"line_number":4493,"utf16_col":12},"end":{"line_number":4493,"utf16_col":40}},"extent_utf16":{"start":{"line_number":4493,"utf16_col":0},"end":{"line_number":4496,"utf16_col":1}}},{"name":"prepare_content_receiver","kind":"function","ident_start":145050,"ident_end":145074,"extent_start":145045,"extent_end":146905,"fully_qualified_name":"prepare_content_receiver","ident_utf16":{"start":{"line_number":4499,"utf16_col":5},"end":{"line_number":4499,"utf16_col":29}},"extent_utf16":{"start":{"line_number":4499,"utf16_col":0},"end":{"line_number":4551,"utf16_col":1}}},{"name":"read_content","kind":"function","ident_start":146934,"ident_end":146946,"extent_start":146929,"extent_end":148356,"fully_qualified_name":"read_content","ident_utf16":{"start":{"line_number":4554,"utf16_col":5},"end":{"line_number":4554,"utf16_col":17}},"extent_utf16":{"start":{"line_number":4554,"utf16_col":0},"end":{"line_number":4590,"utf16_col":1}}},{"name":"write_request_line","kind":"function","ident_start":148373,"ident_end":148391,"extent_start":148358,"extent_end":148611,"fully_qualified_name":"write_request_line","ident_utf16":{"start":{"line_number":4592,"utf16_col":15},"end":{"line_number":4592,"utf16_col":33}},"extent_utf16":{"start":{"line_number":4592,"utf16_col":0},"end":{"line_number":4599,"utf16_col":1}}},{"name":"write_response_line","kind":"function","ident_start":148628,"ident_end":148647,"extent_start":148613,"extent_end":148847,"fully_qualified_name":"write_response_line","ident_utf16":{"start":{"line_number":4601,"utf16_col":15},"end":{"line_number":4601,"utf16_col":34}},"extent_utf16":{"start":{"line_number":4601,"utf16_col":0},"end":{"line_number":4608,"utf16_col":1}}},{"name":"write_headers","kind":"function","ident_start":148864,"ident_end":148877,"extent_start":148849,"extent_end":149276,"fully_qualified_name":"write_headers","ident_utf16":{"start":{"line_number":4610,"utf16_col":15},"end":{"line_number":4610,"utf16_col":28}},"extent_utf16":{"start":{"line_number":4610,"utf16_col":0},"end":{"line_number":4627,"utf16_col":1}}},{"name":"write_data","kind":"function","ident_start":149290,"ident_end":149300,"extent_start":149278,"extent_end":149541,"fully_qualified_name":"write_data","ident_utf16":{"start":{"line_number":4629,"utf16_col":12},"end":{"line_number":4629,"utf16_col":22}},"extent_utf16":{"start":{"line_number":4629,"utf16_col":0},"end":{"line_number":4637,"utf16_col":1}}},{"name":"write_content","kind":"function","ident_start":149577,"ident_end":149590,"extent_start":149565,"extent_end":150505,"fully_qualified_name":"write_content","ident_utf16":{"start":{"line_number":4640,"utf16_col":12},"end":{"line_number":4640,"utf16_col":25}},"extent_utf16":{"start":{"line_number":4640,"utf16_col":0},"end":{"line_number":4675,"utf16_col":1}}},{"name":"write_content","kind":"function","ident_start":150541,"ident_end":150554,"extent_start":150529,"extent_end":150865,"fully_qualified_name":"write_content","ident_utf16":{"start":{"line_number":4678,"utf16_col":12},"end":{"line_number":4678,"utf16_col":25}},"extent_utf16":{"start":{"line_number":4678,"utf16_col":0},"end":{"line_number":4684,"utf16_col":1}}},{"name":"write_content_without_length","kind":"function","ident_start":150901,"ident_end":150929,"extent_start":150889,"extent_end":151717,"fully_qualified_name":"write_content_without_length","ident_utf16":{"start":{"line_number":4688,"utf16_col":0},"end":{"line_number":4688,"utf16_col":28}},"extent_utf16":{"start":{"line_number":4687,"utf16_col":0},"end":{"line_number":4718,"utf16_col":1}}},{"name":"write_content_chunked","kind":"function","ident_start":151765,"ident_end":151786,"extent_start":151753,"extent_end":154597,"fully_qualified_name":"write_content_chunked","ident_utf16":{"start":{"line_number":4722,"utf16_col":0},"end":{"line_number":4722,"utf16_col":21}},"extent_utf16":{"start":{"line_number":4721,"utf16_col":0},"end":{"line_number":4817,"utf16_col":1}}},{"name":"write_content_chunked","kind":"function","ident_start":154645,"ident_end":154666,"extent_start":154633,"extent_end":154990,"fully_qualified_name":"write_content_chunked","ident_utf16":{"start":{"line_number":4820,"utf16_col":12},"end":{"line_number":4820,"utf16_col":33}},"extent_utf16":{"start":{"line_number":4820,"utf16_col":0},"end":{"line_number":4826,"utf16_col":1}}},{"name":"redirect","kind":"function","ident_start":155026,"ident_end":155034,"extent_start":155014,"extent_end":155655,"fully_qualified_name":"redirect","ident_utf16":{"start":{"line_number":4829,"utf16_col":12},"end":{"line_number":4829,"utf16_col":20}},"extent_utf16":{"start":{"line_number":4829,"utf16_col":0},"end":{"line_number":4853,"utf16_col":1}}},{"name":"params_to_query_str","kind":"function","ident_start":155676,"ident_end":155695,"extent_start":155657,"extent_end":155959,"fully_qualified_name":"params_to_query_str","ident_utf16":{"start":{"line_number":4855,"utf16_col":19},"end":{"line_number":4855,"utf16_col":38}},"extent_utf16":{"start":{"line_number":4855,"utf16_col":0},"end":{"line_number":4865,"utf16_col":1}}},{"name":"parse_query_text","kind":"function","ident_start":155973,"ident_end":155989,"extent_start":155961,"extent_end":156708,"fully_qualified_name":"parse_query_text","ident_utf16":{"start":{"line_number":4867,"utf16_col":12},"end":{"line_number":4867,"utf16_col":28}},"extent_utf16":{"start":{"line_number":4867,"utf16_col":0},"end":{"line_number":4888,"utf16_col":1}}},{"name":"parse_query_text","kind":"function","ident_start":156722,"ident_end":156738,"extent_start":156710,"extent_end":156828,"fully_qualified_name":"parse_query_text","ident_utf16":{"start":{"line_number":4890,"utf16_col":12},"end":{"line_number":4890,"utf16_col":28}},"extent_utf16":{"start":{"line_number":4890,"utf16_col":0},"end":{"line_number":4892,"utf16_col":1}}},{"name":"parse_multipart_boundary","kind":"function","ident_start":156842,"ident_end":156866,"extent_start":156830,"extent_end":157292,"fully_qualified_name":"parse_multipart_boundary","ident_utf16":{"start":{"line_number":4894,"utf16_col":12},"end":{"line_number":4894,"utf16_col":36}},"extent_utf16":{"start":{"line_number":4894,"utf16_col":0},"end":{"line_number":4903,"utf16_col":1}}},{"name":"parse_disposition_params","kind":"function","ident_start":157306,"ident_end":157330,"extent_start":157294,"extent_end":157940,"fully_qualified_name":"parse_disposition_params","ident_utf16":{"start":{"line_number":4905,"utf16_col":12},"end":{"line_number":4905,"utf16_col":36}},"extent_utf16":{"start":{"line_number":4905,"utf16_col":0},"end":{"line_number":4927,"utf16_col":1}}},{"name":"parse_range_header","kind":"function","ident_start":157986,"ident_end":158004,"extent_start":157974,"extent_end":184873,"fully_qualified_name":"parse_range_header","ident_utf16":{"start":{"line_number":4930,"utf16_col":12},"end":{"line_number":4930,"utf16_col":30}},"extent_utf16":{"start":{"line_number":4930,"utf16_col":0},"end":{"line_number":5794,"utf16_col":1}}},{"name":"parse_range_header","kind":"function","ident_start":158063,"ident_end":158081,"extent_start":158051,"extent_end":159464,"fully_qualified_name":"parse_range_header","ident_utf16":{"start":{"line_number":4932,"utf16_col":12},"end":{"line_number":4932,"utf16_col":30}},"extent_utf16":{"start":{"line_number":4932,"utf16_col":0},"end":{"line_number":4977,"utf16_col":31}}},{"name":"MultipartFormDataParser","kind":"class","ident_start":159479,"ident_end":159502,"extent_start":159473,"extent_end":166517,"fully_qualified_name":"MultipartFormDataParser","ident_utf16":{"start":{"line_number":4980,"utf16_col":6},"end":{"line_number":4980,"utf16_col":29}},"extent_utf16":{"start":{"line_number":4980,"utf16_col":0},"end":{"line_number":5223,"utf16_col":1}}},{"name":"MultipartFormDataParser","kind":"function","ident_start":159515,"ident_end":159538,"extent_start":159515,"extent_end":159551,"fully_qualified_name":"MultipartFormDataParser::MultipartFormDataParser","ident_utf16":{"start":{"line_number":4982,"utf16_col":2},"end":{"line_number":4982,"utf16_col":25}},"extent_utf16":{"start":{"line_number":4982,"utf16_col":2},"end":{"line_number":4982,"utf16_col":38}}},{"name":"set_boundary","kind":"function","ident_start":159560,"ident_end":159572,"extent_start":159555,"extent_end":159734,"fully_qualified_name":"MultipartFormDataParser::set_boundary","ident_utf16":{"start":{"line_number":4984,"utf16_col":7},"end":{"line_number":4984,"utf16_col":19}},"extent_utf16":{"start":{"line_number":4984,"utf16_col":2},"end":{"line_number":4988,"utf16_col":3}}},{"name":"is_valid","kind":"function","ident_start":159743,"ident_end":159751,"extent_start":159738,"extent_end":159781,"fully_qualified_name":"MultipartFormDataParser::is_valid","ident_utf16":{"start":{"line_number":4990,"utf16_col":7},"end":{"line_number":4990,"utf16_col":15}},"extent_utf16":{"start":{"line_number":4990,"utf16_col":2},"end":{"line_number":4990,"utf16_col":45}}},{"name":"parse","kind":"function","ident_start":159790,"ident_end":159795,"extent_start":159785,"extent_end":164091,"fully_qualified_name":"MultipartFormDataParser::parse","ident_utf16":{"start":{"line_number":4992,"utf16_col":7},"end":{"line_number":4992,"utf16_col":12}},"extent_utf16":{"start":{"line_number":4992,"utf16_col":2},"end":{"line_number":5127,"utf16_col":3}}},{"name":"clear_file_info","kind":"function","ident_start":164109,"ident_end":164124,"extent_start":164104,"extent_end":164216,"fully_qualified_name":"MultipartFormDataParser::clear_file_info","ident_utf16":{"start":{"line_number":5130,"utf16_col":7},"end":{"line_number":5130,"utf16_col":22}},"extent_utf16":{"start":{"line_number":5130,"utf16_col":2},"end":{"line_number":5134,"utf16_col":3}}},{"name":"start_with_case_ignore","kind":"function","ident_start":164225,"ident_end":164247,"extent_start":164220,"extent_end":164540,"fully_qualified_name":"MultipartFormDataParser::start_with_case_ignore","ident_utf16":{"start":{"line_number":5136,"utf16_col":7},"end":{"line_number":5136,"utf16_col":29}},"extent_utf16":{"start":{"line_number":5136,"utf16_col":2},"end":{"line_number":5145,"utf16_col":3}}},{"name":"start_with","kind":"function","ident_start":164802,"ident_end":164812,"extent_start":164797,"extent_end":165078,"fully_qualified_name":"MultipartFormDataParser::start_with","ident_utf16":{"start":{"line_number":5158,"utf16_col":7},"end":{"line_number":5158,"utf16_col":17}},"extent_utf16":{"start":{"line_number":5158,"utf16_col":2},"end":{"line_number":5165,"utf16_col":3}}},{"name":"buf_size","kind":"function","ident_start":165089,"ident_end":165097,"extent_start":165082,"extent_end":165139,"fully_qualified_name":"MultipartFormDataParser::buf_size","ident_utf16":{"start":{"line_number":5167,"utf16_col":9},"end":{"line_number":5167,"utf16_col":17}},"extent_utf16":{"start":{"line_number":5167,"utf16_col":2},"end":{"line_number":5167,"utf16_col":59}}},{"name":"buf_head","kind":"function","ident_start":165216,"ident_end":165224,"extent_start":165204,"extent_end":165278,"fully_qualified_name":"MultipartFormDataParser::buf_head","ident_utf16":{"start":{"line_number":5171,"utf16_col":14},"end":{"line_number":5171,"utf16_col":22}},"extent_utf16":{"start":{"line_number":5171,"utf16_col":2},"end":{"line_number":5171,"utf16_col":76}}},{"name":"buf_start_with","kind":"function","ident_start":165287,"ident_end":165301,"extent_start":165282,"extent_end":165389,"fully_qualified_name":"MultipartFormDataParser::buf_start_with","ident_utf16":{"start":{"line_number":5173,"utf16_col":7},"end":{"line_number":5173,"utf16_col":21}},"extent_utf16":{"start":{"line_number":5173,"utf16_col":2},"end":{"line_number":5175,"utf16_col":3}}},{"name":"buf_find","kind":"function","ident_start":165400,"ident_end":165408,"extent_start":165393,"extent_end":165917,"fully_qualified_name":"MultipartFormDataParser::buf_find","ident_utf16":{"start":{"line_number":5177,"utf16_col":9},"end":{"line_number":5177,"utf16_col":17}},"extent_utf16":{"start":{"line_number":5177,"utf16_col":2},"end":{"line_number":5198,"utf16_col":3}}},{"name":"buf_append","kind":"function","ident_start":165926,"ident_end":165936,"extent_start":165921,"extent_end":166392,"fully_qualified_name":"MultipartFormDataParser::buf_append","ident_utf16":{"start":{"line_number":5200,"utf16_col":7},"end":{"line_number":5200,"utf16_col":17}},"extent_utf16":{"start":{"line_number":5200,"utf16_col":2},"end":{"line_number":5216,"utf16_col":3}}},{"name":"buf_erase","kind":"function","ident_start":166401,"ident_end":166410,"extent_start":166396,"extent_end":166446,"fully_qualified_name":"MultipartFormDataParser::buf_erase","ident_utf16":{"start":{"line_number":5218,"utf16_col":7},"end":{"line_number":5218,"utf16_col":16}},"extent_utf16":{"start":{"line_number":5218,"utf16_col":2},"end":{"line_number":5218,"utf16_col":52}}},{"name":"random_string","kind":"function","ident_start":166539,"ident_end":166552,"extent_start":166520,"extent_end":167278,"fully_qualified_name":"random_string","ident_utf16":{"start":{"line_number":5225,"utf16_col":19},"end":{"line_number":5225,"utf16_col":32}},"extent_utf16":{"start":{"line_number":5225,"utf16_col":0},"end":{"line_number":5244,"utf16_col":1}}},{"name":"make_multipart_data_boundary","kind":"function","ident_start":167299,"ident_end":167327,"extent_start":167280,"extent_end":167403,"fully_qualified_name":"make_multipart_data_boundary","ident_utf16":{"start":{"line_number":5246,"utf16_col":19},"end":{"line_number":5246,"utf16_col":47}},"extent_utf16":{"start":{"line_number":5246,"utf16_col":0},"end":{"line_number":5248,"utf16_col":1}}},{"name":"is_multipart_boundary_chars_valid","kind":"function","ident_start":167417,"ident_end":167450,"extent_start":167405,"extent_end":167691,"fully_qualified_name":"is_multipart_boundary_chars_valid","ident_utf16":{"start":{"line_number":5250,"utf16_col":12},"end":{"line_number":5250,"utf16_col":45}},"extent_utf16":{"start":{"line_number":5250,"utf16_col":0},"end":{"line_number":5260,"utf16_col":1}}},{"name":"serialize_multipart_formdata_item_begin","kind":"function","ident_start":167734,"ident_end":167773,"extent_start":167715,"extent_end":168219,"fully_qualified_name":"serialize_multipart_formdata_item_begin","ident_utf16":{"start":{"line_number":5264,"utf16_col":0},"end":{"line_number":5264,"utf16_col":39}},"extent_utf16":{"start":{"line_number":5263,"utf16_col":0},"end":{"line_number":5278,"utf16_col":1}}},{"name":"serialize_multipart_formdata_item_end","kind":"function","ident_start":168240,"ident_end":168277,"extent_start":168221,"extent_end":168298,"fully_qualified_name":"serialize_multipart_formdata_item_end","ident_utf16":{"start":{"line_number":5280,"utf16_col":19},"end":{"line_number":5280,"utf16_col":56}},"extent_utf16":{"start":{"line_number":5280,"utf16_col":0},"end":{"line_number":5280,"utf16_col":77}}},{"name":"serialize_multipart_formdata_finish","kind":"function","ident_start":168319,"ident_end":168354,"extent_start":168300,"extent_end":168424,"fully_qualified_name":"serialize_multipart_formdata_finish","ident_utf16":{"start":{"line_number":5283,"utf16_col":0},"end":{"line_number":5283,"utf16_col":35}},"extent_utf16":{"start":{"line_number":5282,"utf16_col":0},"end":{"line_number":5285,"utf16_col":1}}},{"name":"serialize_multipart_formdata_get_content_type","kind":"function","ident_start":168445,"ident_end":168490,"extent_start":168426,"extent_end":168577,"fully_qualified_name":"serialize_multipart_formdata_get_content_type","ident_utf16":{"start":{"line_number":5288,"utf16_col":0},"end":{"line_number":5288,"utf16_col":45}},"extent_utf16":{"start":{"line_number":5287,"utf16_col":0},"end":{"line_number":5290,"utf16_col":1}}},{"name":"serialize_multipart_formdata","kind":"function","ident_start":168598,"ident_end":168626,"extent_start":168579,"extent_end":169032,"fully_qualified_name":"serialize_multipart_formdata","ident_utf16":{"start":{"line_number":5293,"utf16_col":0},"end":{"line_number":5293,"utf16_col":28}},"extent_utf16":{"start":{"line_number":5292,"utf16_col":0},"end":{"line_number":5305,"utf16_col":1}}},{"name":"range_error","kind":"function","ident_start":169046,"ident_end":169057,"extent_start":169034,"extent_end":171346,"fully_qualified_name":"range_error","ident_utf16":{"start":{"line_number":5307,"utf16_col":12},"end":{"line_number":5307,"utf16_col":23}},"extent_utf16":{"start":{"line_number":5307,"utf16_col":0},"end":{"line_number":5371,"utf16_col":1}}},{"name":"get_range_offset_and_length","kind":"function","ident_start":171381,"ident_end":171408,"extent_start":171348,"extent_end":171757,"fully_qualified_name":"get_range_offset_and_length","ident_utf16":{"start":{"line_number":5374,"utf16_col":0},"end":{"line_number":5374,"utf16_col":27}},"extent_utf16":{"start":{"line_number":5373,"utf16_col":0},"end":{"line_number":5381,"utf16_col":1}}},{"name":"make_content_range_header_field","kind":"function","ident_start":171778,"ident_end":171809,"extent_start":171759,"extent_end":172163,"fully_qualified_name":"make_content_range_header_field","ident_utf16":{"start":{"line_number":5383,"utf16_col":19},"end":{"line_number":5383,"utf16_col":50}},"extent_utf16":{"start":{"line_number":5383,"utf16_col":0},"end":{"line_number":5395,"utf16_col":1}}},{"name":"process_multipart_ranges_data","kind":"function","ident_start":172232,"ident_end":172261,"extent_start":172227,"extent_end":173230,"fully_qualified_name":"process_multipart_ranges_data","ident_utf16":{"start":{"line_number":5398,"utf16_col":5},"end":{"line_number":5398,"utf16_col":34}},"extent_utf16":{"start":{"line_number":5398,"utf16_col":0},"end":{"line_number":5432,"utf16_col":1}}},{"name":"make_multipart_ranges_data","kind":"function","ident_start":173244,"ident_end":173270,"extent_start":173232,"extent_end":173938,"fully_qualified_name":"make_multipart_ranges_data","ident_utf16":{"start":{"line_number":5434,"utf16_col":12},"end":{"line_number":5434,"utf16_col":38}},"extent_utf16":{"start":{"line_number":5434,"utf16_col":0},"end":{"line_number":5448,"utf16_col":1}}},{"name":"get_multipart_ranges_data_length","kind":"function","ident_start":173954,"ident_end":173986,"extent_start":173940,"extent_end":174618,"fully_qualified_name":"get_multipart_ranges_data_length","ident_utf16":{"start":{"line_number":5450,"utf16_col":14},"end":{"line_number":5450,"utf16_col":46}},"extent_utf16":{"start":{"line_number":5450,"utf16_col":0},"end":{"line_number":5466,"utf16_col":1}}},{"name":"write_multipart_ranges_data","kind":"function","ident_start":174654,"ident_end":174681,"extent_start":174642,"extent_end":175315,"fully_qualified_name":"write_multipart_ranges_data","ident_utf16":{"start":{"line_number":5470,"utf16_col":0},"end":{"line_number":5470,"utf16_col":27}},"extent_utf16":{"start":{"line_number":5469,"utf16_col":0},"end":{"line_number":5482,"utf16_col":1}}},{"name":"expect_content","kind":"function","ident_start":175329,"ident_end":175343,"extent_start":175317,"extent_end":175699,"fully_qualified_name":"expect_content","ident_utf16":{"start":{"line_number":5484,"utf16_col":12},"end":{"line_number":5484,"utf16_col":26}},"extent_utf16":{"start":{"line_number":5484,"utf16_col":0},"end":{"line_number":5495,"utf16_col":1}}},{"name":"has_crlf","kind":"function","ident_start":175713,"ident_end":175721,"extent_start":175701,"extent_end":175864,"fully_qualified_name":"has_crlf","ident_utf16":{"start":{"line_number":5497,"utf16_col":12},"end":{"line_number":5497,"utf16_col":20}},"extent_utf16":{"start":{"line_number":5497,"utf16_col":0},"end":{"line_number":5504,"utf16_col":1}}},{"name":"message_digest","kind":"function","ident_start":175919,"ident_end":175933,"extent_start":175900,"extent_end":176527,"fully_qualified_name":"message_digest","ident_utf16":{"start":{"line_number":5507,"utf16_col":19},"end":{"line_number":5507,"utf16_col":33}},"extent_utf16":{"start":{"line_number":5507,"utf16_col":0},"end":{"line_number":5525,"utf16_col":1}}},{"name":"MD5","kind":"function","ident_start":176548,"ident_end":176551,"extent_start":176529,"extent_end":176616,"fully_qualified_name":"MD5","ident_utf16":{"start":{"line_number":5527,"utf16_col":19},"end":{"line_number":5527,"utf16_col":22}},"extent_utf16":{"start":{"line_number":5527,"utf16_col":0},"end":{"line_number":5529,"utf16_col":1}}},{"name":"SHA_256","kind":"function","ident_start":176637,"ident_end":176644,"extent_start":176618,"extent_end":176712,"fully_qualified_name":"SHA_256","ident_utf16":{"start":{"line_number":5531,"utf16_col":19},"end":{"line_number":5531,"utf16_col":26}},"extent_utf16":{"start":{"line_number":5531,"utf16_col":0},"end":{"line_number":5533,"utf16_col":1}}},{"name":"SHA_512","kind":"function","ident_start":176733,"ident_end":176740,"extent_start":176714,"extent_end":176808,"fully_qualified_name":"SHA_512","ident_utf16":{"start":{"line_number":5535,"utf16_col":19},"end":{"line_number":5535,"utf16_col":26}},"extent_utf16":{"start":{"line_number":5535,"utf16_col":0},"end":{"line_number":5537,"utf16_col":1}}},{"name":"make_digest_authentication_header","kind":"function","ident_start":176853,"ident_end":176886,"extent_start":176810,"extent_end":178890,"fully_qualified_name":"make_digest_authentication_header","ident_utf16":{"start":{"line_number":5539,"utf16_col":43},"end":{"line_number":5539,"utf16_col":76}},"extent_utf16":{"start":{"line_number":5539,"utf16_col":0},"end":{"line_number":5597,"utf16_col":1}}},{"name":"is_ssl_peer_could_be_closed","kind":"function","ident_start":178904,"ident_end":178931,"extent_start":178892,"extent_end":179188,"fully_qualified_name":"is_ssl_peer_could_be_closed","ident_utf16":{"start":{"line_number":5599,"utf16_col":12},"end":{"line_number":5599,"utf16_col":39}},"extent_utf16":{"start":{"line_number":5599,"utf16_col":0},"end":{"line_number":5606,"utf16_col":1}}},{"name":"load_system_certs_on_windows","kind":"function","ident_start":179385,"ident_end":179413,"extent_start":179373,"extent_end":180054,"fully_qualified_name":"load_system_certs_on_windows","ident_utf16":{"start":{"line_number":5611,"utf16_col":12},"end":{"line_number":5611,"utf16_col":40}},"extent_utf16":{"start":{"line_number":5611,"utf16_col":0},"end":{"line_number":5634,"utf16_col":1}}},{"name":"cf_object_ptr_deleter","kind":"function","ident_start":180288,"ident_end":180309,"extent_start":180276,"extent_end":180359,"fully_qualified_name":"cf_object_ptr_deleter","ident_utf16":{"start":{"line_number":5641,"utf16_col":12},"end":{"line_number":5641,"utf16_col":33}},"extent_utf16":{"start":{"line_number":5641,"utf16_col":0},"end":{"line_number":5643,"utf16_col":1}}},{"name":"retrieve_certs_from_keychain","kind":"function","ident_start":180373,"ident_end":180401,"extent_start":180361,"extent_end":181240,"fully_qualified_name":"retrieve_certs_from_keychain","ident_utf16":{"start":{"line_number":5645,"utf16_col":12},"end":{"line_number":5645,"utf16_col":40}},"extent_utf16":{"start":{"line_number":5645,"utf16_col":0},"end":{"line_number":5667,"utf16_col":1}}},{"name":"retrieve_root_certs_from_keychain","kind":"function","ident_start":181254,"ident_end":181287,"extent_start":181242,"extent_end":181520,"fully_qualified_name":"retrieve_root_certs_from_keychain","ident_utf16":{"start":{"line_number":5669,"utf16_col":12},"end":{"line_number":5669,"utf16_col":45}},"extent_utf16":{"start":{"line_number":5669,"utf16_col":0},"end":{"line_number":5677,"utf16_col":1}}},{"name":"add_certs_to_x509_store","kind":"function","ident_start":181534,"ident_end":181557,"extent_start":181522,"extent_end":182422,"fully_qualified_name":"add_certs_to_x509_store","ident_utf16":{"start":{"line_number":5679,"utf16_col":12},"end":{"line_number":5679,"utf16_col":35}},"extent_utf16":{"start":{"line_number":5679,"utf16_col":0},"end":{"line_number":5709,"utf16_col":1}}},{"name":"load_system_certs_on_macos","kind":"function","ident_start":182436,"ident_end":182462,"extent_start":182424,"extent_end":182839,"fully_qualified_name":"load_system_certs_on_macos","ident_utf16":{"start":{"line_number":5711,"utf16_col":12},"end":{"line_number":5711,"utf16_col":38}},"extent_utf16":{"start":{"line_number":5711,"utf16_col":0},"end":{"line_number":5723,"utf16_col":1}}},{"name":"WSInit","kind":"class","ident_start":182939,"ident_end":182945,"extent_start":182933,"extent_end":183135,"fully_qualified_name":"WSInit","ident_utf16":{"start":{"line_number":5729,"utf16_col":6},"end":{"line_number":5729,"utf16_col":12}},"extent_utf16":{"start":{"line_number":5729,"utf16_col":0},"end":{"line_number":5741,"utf16_col":1}}},{"name":"WSInit","kind":"function","ident_start":182958,"ident_end":182964,"extent_start":182958,"extent_end":183054,"fully_qualified_name":"WSInit::WSInit","ident_utf16":{"start":{"line_number":5731,"utf16_col":2},"end":{"line_number":5731,"utf16_col":8}},"extent_utf16":{"start":{"line_number":5731,"utf16_col":2},"end":{"line_number":5734,"utf16_col":3}}},{"name":"parse_www_authenticate","kind":"function","ident_start":183181,"ident_end":183203,"extent_start":183169,"extent_end":184522,"fully_qualified_name":"parse_www_authenticate","ident_utf16":{"start":{"line_number":5746,"utf16_col":12},"end":{"line_number":5746,"utf16_col":34}},"extent_utf16":{"start":{"line_number":5746,"utf16_col":0},"end":{"line_number":5778,"utf16_col":1}}},{"name":"ContentProviderAdapter","kind":"class","ident_start":184530,"ident_end":184552,"extent_start":184524,"extent_end":184869,"fully_qualified_name":"ContentProviderAdapter","ident_utf16":{"start":{"line_number":5780,"utf16_col":6},"end":{"line_number":5780,"utf16_col":28}},"extent_utf16":{"start":{"line_number":5780,"utf16_col":0},"end":{"line_number":5792,"utf16_col":1}}},{"name":"ContentProviderAdapter","kind":"function","ident_start":184574,"ident_end":184596,"extent_start":184565,"extent_end":184699,"fully_qualified_name":"ContentProviderAdapter::ContentProviderAdapter","ident_utf16":{"start":{"line_number":5782,"utf16_col":11},"end":{"line_number":5782,"utf16_col":33}},"extent_utf16":{"start":{"line_number":5782,"utf16_col":2},"end":{"line_number":5784,"utf16_col":46}}},{"name":"hosted_at","kind":"function","ident_start":184914,"ident_end":184923,"extent_start":184895,"extent_end":185086,"fully_qualified_name":"hosted_at","ident_utf16":{"start":{"line_number":5796,"utf16_col":19},"end":{"line_number":5796,"utf16_col":28}},"extent_utf16":{"start":{"line_number":5796,"utf16_col":0},"end":{"line_number":5801,"utf16_col":1}}},{"name":"hosted_at","kind":"function","ident_start":185100,"ident_end":185109,"extent_start":185088,"extent_end":185936,"fully_qualified_name":"hosted_at","ident_utf16":{"start":{"line_number":5803,"utf16_col":12},"end":{"line_number":5803,"utf16_col":21}},"extent_utf16":{"start":{"line_number":5803,"utf16_col":0},"end":{"line_number":5831,"utf16_col":1}}},{"name":"append_query_params","kind":"function","ident_start":185957,"ident_end":185976,"extent_start":185938,"extent_end":186299,"fully_qualified_name":"append_query_params","ident_utf16":{"start":{"line_number":5833,"utf16_col":19},"end":{"line_number":5833,"utf16_col":38}},"extent_utf16":{"start":{"line_number":5833,"utf16_col":0},"end":{"line_number":5840,"utf16_col":1}}},{"name":"make_range_header","kind":"function","ident_start":186364,"ident_end":186381,"extent_start":186321,"extent_end":186728,"fully_qualified_name":"make_range_header","ident_utf16":{"start":{"line_number":5844,"utf16_col":0},"end":{"line_number":5844,"utf16_col":17}},"extent_utf16":{"start":{"line_number":5843,"utf16_col":0},"end":{"line_number":5855,"utf16_col":1}}},{"name":"make_basic_authentication_header","kind":"function","ident_start":186773,"ident_end":186805,"extent_start":186730,"extent_end":187104,"fully_qualified_name":"make_basic_authentication_header","ident_utf16":{"start":{"line_number":5858,"utf16_col":0},"end":{"line_number":5858,"utf16_col":32}},"extent_utf16":{"start":{"line_number":5857,"utf16_col":0},"end":{"line_number":5863,"utf16_col":1}}},{"name":"make_bearer_token_authentication_header","kind":"function","ident_start":187149,"ident_end":187188,"extent_start":187106,"extent_end":187428,"fully_qualified_name":"make_bearer_token_authentication_header","ident_utf16":{"start":{"line_number":5866,"utf16_col":0},"end":{"line_number":5866,"utf16_col":39}},"extent_utf16":{"start":{"line_number":5865,"utf16_col":0},"end":{"line_number":5871,"utf16_col":1}}},{"name":"has_header","kind":"method","ident_start":187477,"ident_end":187487,"extent_start":187456,"extent_end":187564,"fully_qualified_name":"Request::has_header","ident_utf16":{"start":{"line_number":5874,"utf16_col":21},"end":{"line_number":5874,"utf16_col":31}},"extent_utf16":{"start":{"line_number":5874,"utf16_col":0},"end":{"line_number":5876,"utf16_col":1}}},{"name":"get_header_value","kind":"method","ident_start":187594,"ident_end":187610,"extent_start":187566,"extent_end":187775,"fully_qualified_name":"Request::get_header_value","ident_utf16":{"start":{"line_number":5878,"utf16_col":28},"end":{"line_number":5878,"utf16_col":44}},"extent_utf16":{"start":{"line_number":5878,"utf16_col":0},"end":{"line_number":5881,"utf16_col":1}}},{"name":"get_header_value_count","kind":"method","ident_start":187800,"ident_end":187822,"extent_start":187777,"extent_end":187957,"fully_qualified_name":"Request::get_header_value_count","ident_utf16":{"start":{"line_number":5883,"utf16_col":23},"end":{"line_number":5883,"utf16_col":45}},"extent_utf16":{"start":{"line_number":5883,"utf16_col":0},"end":{"line_number":5886,"utf16_col":1}}},{"name":"set_header","kind":"method","ident_start":187980,"ident_end":187990,"extent_start":187959,"extent_end":188198,"fully_qualified_name":"Request::set_header","ident_utf16":{"start":{"line_number":5888,"utf16_col":21},"end":{"line_number":5888,"utf16_col":31}},"extent_utf16":{"start":{"line_number":5888,"utf16_col":0},"end":{"line_number":5894,"utf16_col":1}}},{"name":"has_param","kind":"method","ident_start":188221,"ident_end":188230,"extent_start":188200,"extent_end":188307,"fully_qualified_name":"Request::has_param","ident_utf16":{"start":{"line_number":5896,"utf16_col":21},"end":{"line_number":5896,"utf16_col":30}},"extent_utf16":{"start":{"line_number":5896,"utf16_col":0},"end":{"line_number":5898,"utf16_col":1}}},{"name":"get_param_value","kind":"method","ident_start":188337,"ident_end":188352,"extent_start":188309,"extent_end":188619,"fully_qualified_name":"Request::get_param_value","ident_utf16":{"start":{"line_number":5900,"utf16_col":28},"end":{"line_number":5900,"utf16_col":43}},"extent_utf16":{"start":{"line_number":5900,"utf16_col":0},"end":{"line_number":5907,"utf16_col":1}}},{"name":"get_param_value_count","kind":"method","ident_start":188644,"ident_end":188665,"extent_start":188621,"extent_end":188799,"fully_qualified_name":"Request::get_param_value_count","ident_utf16":{"start":{"line_number":5909,"utf16_col":23},"end":{"line_number":5909,"utf16_col":44}},"extent_utf16":{"start":{"line_number":5909,"utf16_col":0},"end":{"line_number":5912,"utf16_col":1}}},{"name":"is_multipart_form_data","kind":"method","ident_start":188822,"ident_end":188844,"extent_start":188801,"extent_end":188975,"fully_qualified_name":"Request::is_multipart_form_data","ident_utf16":{"start":{"line_number":5914,"utf16_col":21},"end":{"line_number":5914,"utf16_col":43}},"extent_utf16":{"start":{"line_number":5914,"utf16_col":0},"end":{"line_number":5917,"utf16_col":1}}},{"name":"has_file","kind":"method","ident_start":188998,"ident_end":189006,"extent_start":188977,"extent_end":189081,"fully_qualified_name":"Request::has_file","ident_utf16":{"start":{"line_number":5919,"utf16_col":21},"end":{"line_number":5919,"utf16_col":29}},"extent_utf16":{"start":{"line_number":5919,"utf16_col":0},"end":{"line_number":5921,"utf16_col":1}}},{"name":"get_file_value","kind":"method","ident_start":189117,"ident_end":189131,"extent_start":189083,"extent_end":189272,"fully_qualified_name":"Request::get_file_value","ident_utf16":{"start":{"line_number":5923,"utf16_col":34},"end":{"line_number":5923,"utf16_col":48}},"extent_utf16":{"start":{"line_number":5923,"utf16_col":0},"end":{"line_number":5927,"utf16_col":1}}},{"name":"get_file_values","kind":"method","ident_start":189321,"ident_end":189336,"extent_start":189274,"extent_end":189557,"fully_qualified_name":"Request::get_file_values","ident_utf16":{"start":{"line_number":5930,"utf16_col":9},"end":{"line_number":5930,"utf16_col":24}},"extent_utf16":{"start":{"line_number":5929,"utf16_col":0},"end":{"line_number":5937,"utf16_col":1}}},{"name":"has_header","kind":"method","ident_start":189608,"ident_end":189618,"extent_start":189586,"extent_end":189697,"fully_qualified_name":"Response::has_header","ident_utf16":{"start":{"line_number":5940,"utf16_col":22},"end":{"line_number":5940,"utf16_col":32}},"extent_utf16":{"start":{"line_number":5940,"utf16_col":0},"end":{"line_number":5942,"utf16_col":1}}},{"name":"get_header_value","kind":"method","ident_start":189728,"ident_end":189744,"extent_start":189699,"extent_end":189956,"fully_qualified_name":"Response::get_header_value","ident_utf16":{"start":{"line_number":5944,"utf16_col":29},"end":{"line_number":5944,"utf16_col":45}},"extent_utf16":{"start":{"line_number":5944,"utf16_col":0},"end":{"line_number":5948,"utf16_col":1}}},{"name":"get_header_value_count","kind":"method","ident_start":189982,"ident_end":190004,"extent_start":189958,"extent_end":190139,"fully_qualified_name":"Response::get_header_value_count","ident_utf16":{"start":{"line_number":5950,"utf16_col":24},"end":{"line_number":5950,"utf16_col":46}},"extent_utf16":{"start":{"line_number":5950,"utf16_col":0},"end":{"line_number":5953,"utf16_col":1}}},{"name":"set_header","kind":"method","ident_start":190163,"ident_end":190173,"extent_start":190141,"extent_end":190382,"fully_qualified_name":"Response::set_header","ident_utf16":{"start":{"line_number":5955,"utf16_col":22},"end":{"line_number":5955,"utf16_col":32}},"extent_utf16":{"start":{"line_number":5955,"utf16_col":0},"end":{"line_number":5961,"utf16_col":1}}},{"name":"set_redirect","kind":"method","ident_start":190406,"ident_end":190418,"extent_start":190384,"extent_end":190665,"fully_qualified_name":"Response::set_redirect","ident_utf16":{"start":{"line_number":5963,"utf16_col":22},"end":{"line_number":5963,"utf16_col":34}},"extent_utf16":{"start":{"line_number":5963,"utf16_col":0},"end":{"line_number":5972,"utf16_col":1}}},{"name":"set_content","kind":"method","ident_start":190689,"ident_end":190700,"extent_start":190667,"extent_end":190952,"fully_qualified_name":"Response::set_content","ident_utf16":{"start":{"line_number":5974,"utf16_col":22},"end":{"line_number":5974,"utf16_col":33}},"extent_utf16":{"start":{"line_number":5974,"utf16_col":0},"end":{"line_number":5981,"utf16_col":1}}},{"name":"set_content","kind":"method","ident_start":190976,"ident_end":190987,"extent_start":190954,"extent_end":191129,"fully_qualified_name":"Response::set_content","ident_utf16":{"start":{"line_number":5983,"utf16_col":22},"end":{"line_number":5983,"utf16_col":33}},"extent_utf16":{"start":{"line_number":5983,"utf16_col":0},"end":{"line_number":5986,"utf16_col":1}}},{"name":"set_content","kind":"method","ident_start":191153,"ident_end":191164,"extent_start":191131,"extent_end":191410,"fully_qualified_name":"Response::set_content","ident_utf16":{"start":{"line_number":5988,"utf16_col":22},"end":{"line_number":5988,"utf16_col":33}},"extent_utf16":{"start":{"line_number":5988,"utf16_col":0},"end":{"line_number":5995,"utf16_col":1}}},{"name":"set_content_provider","kind":"method","ident_start":191434,"ident_end":191454,"extent_start":191412,"extent_end":191846,"fully_qualified_name":"Response::set_content_provider","ident_utf16":{"start":{"line_number":5997,"utf16_col":22},"end":{"line_number":5997,"utf16_col":42}},"extent_utf16":{"start":{"line_number":5997,"utf16_col":0},"end":{"line_number":6005,"utf16_col":1}}},{"name":"set_content_provider","kind":"method","ident_start":191870,"ident_end":191890,"extent_start":191848,"extent_end":192278,"fully_qualified_name":"Response::set_content_provider","ident_utf16":{"start":{"line_number":6007,"utf16_col":22},"end":{"line_number":6007,"utf16_col":42}},"extent_utf16":{"start":{"line_number":6007,"utf16_col":0},"end":{"line_number":6015,"utf16_col":1}}},{"name":"set_chunked_content_provider","kind":"method","ident_start":192302,"ident_end":192330,"extent_start":192280,"extent_end":192717,"fully_qualified_name":"Response::set_chunked_content_provider","ident_utf16":{"start":{"line_number":6017,"utf16_col":22},"end":{"line_number":6017,"utf16_col":50}},"extent_utf16":{"start":{"line_number":6017,"utf16_col":0},"end":{"line_number":6025,"utf16_col":1}}},{"name":"set_file_content","kind":"method","ident_start":192741,"ident_end":192757,"extent_start":192719,"extent_end":192932,"fully_qualified_name":"Response::set_file_content","ident_utf16":{"start":{"line_number":6027,"utf16_col":22},"end":{"line_number":6027,"utf16_col":38}},"extent_utf16":{"start":{"line_number":6027,"utf16_col":0},"end":{"line_number":6031,"utf16_col":1}}},{"name":"set_file_content","kind":"method","ident_start":192956,"ident_end":192972,"extent_start":192934,"extent_end":193030,"fully_qualified_name":"Response::set_file_content","ident_utf16":{"start":{"line_number":6033,"utf16_col":22},"end":{"line_number":6033,"utf16_col":38}},"extent_utf16":{"start":{"line_number":6033,"utf16_col":0},"end":{"line_number":6035,"utf16_col":1}}},{"name":"has_request_header","kind":"method","ident_start":193077,"ident_end":193095,"extent_start":193057,"extent_end":193192,"fully_qualified_name":"Result::has_request_header","ident_utf16":{"start":{"line_number":6038,"utf16_col":20},"end":{"line_number":6038,"utf16_col":38}},"extent_utf16":{"start":{"line_number":6038,"utf16_col":0},"end":{"line_number":6040,"utf16_col":1}}},{"name":"get_request_header_value","kind":"method","ident_start":193221,"ident_end":193245,"extent_start":193194,"extent_end":193478,"fully_qualified_name":"Result::get_request_header_value","ident_utf16":{"start":{"line_number":6042,"utf16_col":27},"end":{"line_number":6042,"utf16_col":51}},"extent_utf16":{"start":{"line_number":6042,"utf16_col":0},"end":{"line_number":6046,"utf16_col":1}}},{"name":"get_request_header_value_count","kind":"method","ident_start":193502,"ident_end":193532,"extent_start":193480,"extent_end":193676,"fully_qualified_name":"Result::get_request_header_value_count","ident_utf16":{"start":{"line_number":6049,"utf16_col":8},"end":{"line_number":6049,"utf16_col":38}},"extent_utf16":{"start":{"line_number":6048,"utf16_col":0},"end":{"line_number":6052,"utf16_col":1}}},{"name":"write","kind":"method","ident_start":193726,"ident_end":193731,"extent_start":193703,"extent_end":193786,"fully_qualified_name":"Stream::write","ident_utf16":{"start":{"line_number":6055,"utf16_col":23},"end":{"line_number":6055,"utf16_col":28}},"extent_utf16":{"start":{"line_number":6055,"utf16_col":0},"end":{"line_number":6057,"utf16_col":1}}},{"name":"write","kind":"method","ident_start":193811,"ident_end":193816,"extent_start":193788,"extent_end":193878,"fully_qualified_name":"Stream::write","ident_utf16":{"start":{"line_number":6059,"utf16_col":23},"end":{"line_number":6059,"utf16_col":28}},"extent_utf16":{"start":{"line_number":6059,"utf16_col":0},"end":{"line_number":6061,"utf16_col":1}}},{"name":"calc_actual_timeout","kind":"function","ident_start":193912,"ident_end":193931,"extent_start":193900,"extent_end":194514,"fully_qualified_name":"calc_actual_timeout","ident_utf16":{"start":{"line_number":6065,"utf16_col":12},"end":{"line_number":6065,"utf16_col":31}},"extent_utf16":{"start":{"line_number":6065,"utf16_col":0},"end":{"line_number":6078,"utf16_col":1}}},{"name":"SocketStream","kind":"method","ident_start":194569,"ident_end":194581,"extent_start":194548,"extent_end":195106,"fully_qualified_name":"SocketStream::SocketStream","ident_utf16":{"start":{"line_number":6081,"utf16_col":21},"end":{"line_number":6081,"utf16_col":33}},"extent_utf16":{"start":{"line_number":6081,"utf16_col":0},"end":{"line_number":6091,"utf16_col":39}}},{"name":"is_readable","kind":"method","ident_start":195183,"ident_end":195194,"extent_start":195157,"extent_end":195257,"fully_qualified_name":"SocketStream::is_readable","ident_utf16":{"start":{"line_number":6095,"utf16_col":26},"end":{"line_number":6095,"utf16_col":37}},"extent_utf16":{"start":{"line_number":6095,"utf16_col":0},"end":{"line_number":6097,"utf16_col":1}}},{"name":"wait_readable","kind":"method","ident_start":195285,"ident_end":195298,"extent_start":195259,"extent_end":195699,"fully_qualified_name":"SocketStream::wait_readable","ident_utf16":{"start":{"line_number":6099,"utf16_col":26},"end":{"line_number":6099,"utf16_col":39}},"extent_utf16":{"start":{"line_number":6099,"utf16_col":0},"end":{"line_number":6110,"utf16_col":1}}},{"name":"wait_writable","kind":"method","ident_start":195727,"ident_end":195740,"extent_start":195701,"extent_end":195862,"fully_qualified_name":"SocketStream::wait_writable","ident_utf16":{"start":{"line_number":6112,"utf16_col":26},"end":{"line_number":6112,"utf16_col":39}},"extent_utf16":{"start":{"line_number":6112,"utf16_col":0},"end":{"line_number":6115,"utf16_col":1}}},{"name":"read","kind":"method","ident_start":195893,"ident_end":195897,"extent_start":195864,"extent_end":197293,"fully_qualified_name":"SocketStream::read","ident_utf16":{"start":{"line_number":6117,"utf16_col":29},"end":{"line_number":6117,"utf16_col":33}},"extent_utf16":{"start":{"line_number":6117,"utf16_col":0},"end":{"line_number":6161,"utf16_col":1}}},{"name":"write","kind":"method","ident_start":197324,"ident_end":197329,"extent_start":197295,"extent_end":197603,"fully_qualified_name":"SocketStream::write","ident_utf16":{"start":{"line_number":6163,"utf16_col":29},"end":{"line_number":6163,"utf16_col":34}},"extent_utf16":{"start":{"line_number":6163,"utf16_col":0},"end":{"line_number":6172,"utf16_col":1}}},{"name":"get_remote_ip_and_port","kind":"method","ident_start":197631,"ident_end":197653,"extent_start":197605,"extent_end":197798,"fully_qualified_name":"SocketStream::get_remote_ip_and_port","ident_utf16":{"start":{"line_number":6174,"utf16_col":26},"end":{"line_number":6174,"utf16_col":48}},"extent_utf16":{"start":{"line_number":6174,"utf16_col":0},"end":{"line_number":6177,"utf16_col":1}}},{"name":"get_local_ip_and_port","kind":"method","ident_start":197826,"ident_end":197847,"extent_start":197800,"extent_end":197990,"fully_qualified_name":"SocketStream::get_local_ip_and_port","ident_utf16":{"start":{"line_number":6179,"utf16_col":26},"end":{"line_number":6179,"utf16_col":47}},"extent_utf16":{"start":{"line_number":6179,"utf16_col":0},"end":{"line_number":6182,"utf16_col":1}}},{"name":"socket","kind":"method","ident_start":198022,"ident_end":198028,"extent_start":197992,"extent_end":198054,"fully_qualified_name":"SocketStream::socket","ident_utf16":{"start":{"line_number":6184,"utf16_col":30},"end":{"line_number":6184,"utf16_col":36}},"extent_utf16":{"start":{"line_number":6184,"utf16_col":0},"end":{"line_number":6184,"utf16_col":62}}},{"name":"duration","kind":"method","ident_start":198084,"ident_end":198092,"extent_start":198056,"extent_end":198245,"fully_qualified_name":"SocketStream::duration","ident_utf16":{"start":{"line_number":6186,"utf16_col":28},"end":{"line_number":6186,"utf16_col":36}},"extent_utf16":{"start":{"line_number":6186,"utf16_col":0},"end":{"line_number":6190,"utf16_col":1}}},{"name":"is_readable","kind":"method","ident_start":198305,"ident_end":198316,"extent_start":198279,"extent_end":198341,"fully_qualified_name":"BufferStream::is_readable","ident_utf16":{"start":{"line_number":6193,"utf16_col":26},"end":{"line_number":6193,"utf16_col":37}},"extent_utf16":{"start":{"line_number":6193,"utf16_col":0},"end":{"line_number":6193,"utf16_col":62}}},{"name":"wait_readable","kind":"method","ident_start":198369,"ident_end":198382,"extent_start":198343,"extent_end":198407,"fully_qualified_name":"BufferStream::wait_readable","ident_utf16":{"start":{"line_number":6195,"utf16_col":26},"end":{"line_number":6195,"utf16_col":39}},"extent_utf16":{"start":{"line_number":6195,"utf16_col":0},"end":{"line_number":6195,"utf16_col":64}}},{"name":"wait_writable","kind":"method","ident_start":198435,"ident_end":198448,"extent_start":198409,"extent_end":198473,"fully_qualified_name":"BufferStream::wait_writable","ident_utf16":{"start":{"line_number":6197,"utf16_col":26},"end":{"line_number":6197,"utf16_col":39}},"extent_utf16":{"start":{"line_number":6197,"utf16_col":0},"end":{"line_number":6197,"utf16_col":64}}},{"name":"read","kind":"method","ident_start":198504,"ident_end":198508,"extent_start":198475,"extent_end":198789,"fully_qualified_name":"BufferStream::read","ident_utf16":{"start":{"line_number":6199,"utf16_col":29},"end":{"line_number":6199,"utf16_col":33}},"extent_utf16":{"start":{"line_number":6199,"utf16_col":0},"end":{"line_number":6207,"utf16_col":1}}},{"name":"write","kind":"method","ident_start":198820,"ident_end":198825,"extent_start":198791,"extent_end":198924,"fully_qualified_name":"BufferStream::write","ident_utf16":{"start":{"line_number":6209,"utf16_col":29},"end":{"line_number":6209,"utf16_col":34}},"extent_utf16":{"start":{"line_number":6209,"utf16_col":0},"end":{"line_number":6212,"utf16_col":1}}},{"name":"get_remote_ip_and_port","kind":"method","ident_start":198952,"ident_end":198974,"extent_start":198926,"extent_end":199070,"fully_qualified_name":"BufferStream::get_remote_ip_and_port","ident_utf16":{"start":{"line_number":6214,"utf16_col":26},"end":{"line_number":6214,"utf16_col":48}},"extent_utf16":{"start":{"line_number":6214,"utf16_col":0},"end":{"line_number":6215,"utf16_col":73}}},{"name":"get_local_ip_and_port","kind":"method","ident_start":199098,"ident_end":199119,"extent_start":199072,"extent_end":199214,"fully_qualified_name":"BufferStream::get_local_ip_and_port","ident_utf16":{"start":{"line_number":6217,"utf16_col":26},"end":{"line_number":6217,"utf16_col":47}},"extent_utf16":{"start":{"line_number":6217,"utf16_col":0},"end":{"line_number":6218,"utf16_col":72}}},{"name":"socket","kind":"method","ident_start":199246,"ident_end":199252,"extent_start":199216,"extent_end":199274,"fully_qualified_name":"BufferStream::socket","ident_utf16":{"start":{"line_number":6220,"utf16_col":30},"end":{"line_number":6220,"utf16_col":36}},"extent_utf16":{"start":{"line_number":6220,"utf16_col":0},"end":{"line_number":6220,"utf16_col":58}}},{"name":"duration","kind":"method","ident_start":199304,"ident_end":199312,"extent_start":199276,"extent_end":199334,"fully_qualified_name":"BufferStream::duration","ident_utf16":{"start":{"line_number":6222,"utf16_col":28},"end":{"line_number":6222,"utf16_col":36}},"extent_utf16":{"start":{"line_number":6222,"utf16_col":0},"end":{"line_number":6222,"utf16_col":58}}},{"name":"PathParamsMatcher","kind":"method","ident_start":199441,"ident_end":199458,"extent_start":199415,"extent_end":200989,"fully_qualified_name":"PathParamsMatcher::PathParamsMatcher","ident_utf16":{"start":{"line_number":6226,"utf16_col":26},"end":{"line_number":6226,"utf16_col":43}},"extent_utf16":{"start":{"line_number":6226,"utf16_col":0},"end":{"line_number":6272,"utf16_col":1}}},{"name":"match","kind":"method","ident_start":201022,"ident_end":201027,"extent_start":200991,"extent_end":202492,"fully_qualified_name":"PathParamsMatcher::match","ident_utf16":{"start":{"line_number":6274,"utf16_col":31},"end":{"line_number":6274,"utf16_col":36}},"extent_utf16":{"start":{"line_number":6274,"utf16_col":0},"end":{"line_number":6315,"utf16_col":1}}},{"name":"match","kind":"method","ident_start":202520,"ident_end":202525,"extent_start":202494,"extent_end":202650,"fully_qualified_name":"RegexMatcher::match","ident_utf16":{"start":{"line_number":6317,"utf16_col":26},"end":{"line_number":6317,"utf16_col":31}},"extent_utf16":{"start":{"line_number":6317,"utf16_col":0},"end":{"line_number":6320,"utf16_col":1}}},{"name":"Server","kind":"method","ident_start":202720,"ident_end":202726,"extent_start":202705,"extent_end":202875,"fully_qualified_name":"Server::Server","ident_utf16":{"start":{"line_number":6325,"utf16_col":15},"end":{"line_number":6325,"utf16_col":21}},"extent_utf16":{"start":{"line_number":6325,"utf16_col":0},"end":{"line_number":6331,"utf16_col":1}}},{"name":"make_matcher","kind":"method","ident_start":202966,"ident_end":202978,"extent_start":202914,"extent_end":203205,"fully_qualified_name":"Server::make_matcher","ident_utf16":{"start":{"line_number":6336,"utf16_col":8},"end":{"line_number":6336,"utf16_col":20}},"extent_utf16":{"start":{"line_number":6335,"utf16_col":0},"end":{"line_number":6342,"utf16_col":1}}},{"name":"set_base_dir","kind":"method","ident_start":205375,"ident_end":205387,"extent_start":205355,"extent_end":205524,"fully_qualified_name":"Server::set_base_dir","ident_utf16":{"start":{"line_number":6402,"utf16_col":20},"end":{"line_number":6402,"utf16_col":32}},"extent_utf16":{"start":{"line_number":6402,"utf16_col":0},"end":{"line_number":6405,"utf16_col":1}}},{"name":"set_mount_point","kind":"method","ident_start":205546,"ident_end":205561,"extent_start":205526,"extent_end":205937,"fully_qualified_name":"Server::set_mount_point","ident_utf16":{"start":{"line_number":6407,"utf16_col":20},"end":{"line_number":6407,"utf16_col":35}},"extent_utf16":{"start":{"line_number":6407,"utf16_col":0},"end":{"line_number":6418,"utf16_col":1}}},{"name":"remove_mount_point","kind":"method","ident_start":205959,"ident_end":205977,"extent_start":205939,"extent_end":206197,"fully_qualified_name":"Server::remove_mount_point","ident_utf16":{"start":{"line_number":6420,"utf16_col":20},"end":{"line_number":6420,"utf16_col":38}},"extent_utf16":{"start":{"line_number":6420,"utf16_col":0},"end":{"line_number":6428,"utf16_col":1}}},{"name":"bind_to_port","kind":"method","ident_start":209330,"ident_end":209342,"extent_start":209310,"extent_end":209552,"fully_qualified_name":"Server::bind_to_port","ident_utf16":{"start":{"line_number":6552,"utf16_col":20},"end":{"line_number":6552,"utf16_col":32}},"extent_utf16":{"start":{"line_number":6552,"utf16_col":0},"end":{"line_number":6557,"utf16_col":1}}},{"name":"bind_to_any_port","kind":"method","ident_start":209572,"ident_end":209588,"extent_start":209553,"extent_end":209747,"fully_qualified_name":"Server::bind_to_any_port","ident_utf16":{"start":{"line_number":6558,"utf16_col":19},"end":{"line_number":6558,"utf16_col":35}},"extent_utf16":{"start":{"line_number":6558,"utf16_col":0},"end":{"line_number":6562,"utf16_col":1}}},{"name":"listen_after_bind","kind":"method","ident_start":209769,"ident_end":209786,"extent_start":209749,"extent_end":209818,"fully_qualified_name":"Server::listen_after_bind","ident_utf16":{"start":{"line_number":6564,"utf16_col":20},"end":{"line_number":6564,"utf16_col":37}},"extent_utf16":{"start":{"line_number":6564,"utf16_col":0},"end":{"line_number":6564,"utf16_col":69}}},{"name":"listen","kind":"method","ident_start":209840,"ident_end":209846,"extent_start":209820,"extent_end":210000,"fully_qualified_name":"Server::listen","ident_utf16":{"start":{"line_number":6566,"utf16_col":20},"end":{"line_number":6566,"utf16_col":26}},"extent_utf16":{"start":{"line_number":6566,"utf16_col":0},"end":{"line_number":6569,"utf16_col":1}}},{"name":"is_running","kind":"method","ident_start":210022,"ident_end":210032,"extent_start":210002,"extent_end":210064,"fully_qualified_name":"Server::is_running","ident_utf16":{"start":{"line_number":6571,"utf16_col":20},"end":{"line_number":6571,"utf16_col":30}},"extent_utf16":{"start":{"line_number":6571,"utf16_col":0},"end":{"line_number":6571,"utf16_col":62}}},{"name":"wait_until_ready","kind":"method","ident_start":210086,"ident_end":210102,"extent_start":210066,"extent_end":210228,"fully_qualified_name":"Server::wait_until_ready","ident_utf16":{"start":{"line_number":6573,"utf16_col":20},"end":{"line_number":6573,"utf16_col":36}},"extent_utf16":{"start":{"line_number":6573,"utf16_col":0},"end":{"line_number":6577,"utf16_col":1}}},{"name":"stop","kind":"method","ident_start":210250,"ident_end":210254,"extent_start":210230,"extent_end":210490,"fully_qualified_name":"Server::stop","ident_utf16":{"start":{"line_number":6579,"utf16_col":20},"end":{"line_number":6579,"utf16_col":24}},"extent_utf16":{"start":{"line_number":6579,"utf16_col":0},"end":{"line_number":6587,"utf16_col":1}}},{"name":"decommission","kind":"method","ident_start":210512,"ident_end":210524,"extent_start":210492,"extent_end":210556,"fully_qualified_name":"Server::decommission","ident_utf16":{"start":{"line_number":6589,"utf16_col":20},"end":{"line_number":6589,"utf16_col":32}},"extent_utf16":{"start":{"line_number":6589,"utf16_col":0},"end":{"line_number":6589,"utf16_col":64}}},{"name":"parse_request_line","kind":"method","ident_start":210578,"ident_end":210596,"extent_start":210558,"extent_end":212026,"fully_qualified_name":"Server::parse_request_line","ident_utf16":{"start":{"line_number":6591,"utf16_col":20},"end":{"line_number":6591,"utf16_col":38}},"extent_utf16":{"start":{"line_number":6591,"utf16_col":0},"end":{"line_number":6639,"utf16_col":1}}},{"name":"write_response","kind":"method","ident_start":212048,"ident_end":212062,"extent_start":212028,"extent_end":212369,"fully_qualified_name":"Server::write_response","ident_utf16":{"start":{"line_number":6641,"utf16_col":20},"end":{"line_number":6641,"utf16_col":34}},"extent_utf16":{"start":{"line_number":6641,"utf16_col":0},"end":{"line_number":6647,"utf16_col":1}}},{"name":"write_response_with_content","kind":"method","ident_start":212391,"ident_end":212418,"extent_start":212371,"extent_end":212708,"fully_qualified_name":"Server::write_response_with_content","ident_utf16":{"start":{"line_number":6649,"utf16_col":20},"end":{"line_number":6649,"utf16_col":47}},"extent_utf16":{"start":{"line_number":6649,"utf16_col":0},"end":{"line_number":6654,"utf16_col":1}}},{"name":"write_response_core","kind":"method","ident_start":212730,"ident_end":212749,"extent_start":212710,"extent_end":214908,"fully_qualified_name":"Server::write_response_core","ident_utf16":{"start":{"line_number":6656,"utf16_col":20},"end":{"line_number":6656,"utf16_col":39}},"extent_utf16":{"start":{"line_number":6656,"utf16_col":0},"end":{"line_number":6728,"utf16_col":1}}},{"name":"write_content_with_provider","kind":"method","ident_start":214930,"ident_end":214957,"extent_start":214910,"extent_end":217059,"fully_qualified_name":"Server::write_content_with_provider","ident_utf16":{"start":{"line_number":6731,"utf16_col":8},"end":{"line_number":6731,"utf16_col":35}},"extent_utf16":{"start":{"line_number":6730,"utf16_col":0},"end":{"line_number":6783,"utf16_col":1}}},{"name":"read_content","kind":"method","ident_start":217081,"ident_end":217093,"extent_start":217061,"extent_end":218416,"fully_qualified_name":"Server::read_content","ident_utf16":{"start":{"line_number":6785,"utf16_col":20},"end":{"line_number":6785,"utf16_col":32}},"extent_utf16":{"start":{"line_number":6785,"utf16_col":0},"end":{"line_number":6821,"utf16_col":1}}},{"name":"read_content_with_content_receiver","kind":"method","ident_start":218438,"ident_end":218472,"extent_start":218418,"extent_end":218814,"fully_qualified_name":"Server::read_content_with_content_receiver","ident_utf16":{"start":{"line_number":6823,"utf16_col":20},"end":{"line_number":6823,"utf16_col":54}},"extent_utf16":{"start":{"line_number":6823,"utf16_col":0},"end":{"line_number":6830,"utf16_col":1}}},{"name":"read_content_core","kind":"method","ident_start":218836,"ident_end":218853,"extent_start":218816,"extent_end":220667,"fully_qualified_name":"Server::read_content_core","ident_utf16":{"start":{"line_number":6833,"utf16_col":8},"end":{"line_number":6833,"utf16_col":25}},"extent_utf16":{"start":{"line_number":6832,"utf16_col":0},"end":{"line_number":6886,"utf16_col":1}}},{"name":"handle_file_request","kind":"method","ident_start":220689,"ident_end":220708,"extent_start":220669,"extent_end":222124,"fully_qualified_name":"Server::handle_file_request","ident_utf16":{"start":{"line_number":6888,"utf16_col":20},"end":{"line_number":6888,"utf16_col":39}},"extent_utf16":{"start":{"line_number":6888,"utf16_col":0},"end":{"line_number":6931,"utf16_col":1}}},{"name":"create_server_socket","kind":"method","ident_start":222150,"ident_end":222170,"extent_start":222126,"extent_end":222767,"fully_qualified_name":"Server::create_server_socket","ident_utf16":{"start":{"line_number":6934,"utf16_col":8},"end":{"line_number":6934,"utf16_col":28}},"extent_utf16":{"start":{"line_number":6933,"utf16_col":0},"end":{"line_number":6947,"utf16_col":1}}},{"name":"bind_internal","kind":"method","ident_start":222788,"ident_end":222801,"extent_start":222769,"extent_end":223633,"fully_qualified_name":"Server::bind_internal","ident_utf16":{"start":{"line_number":6949,"utf16_col":19},"end":{"line_number":6949,"utf16_col":32}},"extent_utf16":{"start":{"line_number":6949,"utf16_col":0},"end":{"line_number":6975,"utf16_col":1}}},{"name":"routing","kind":"method","ident_start":225806,"ident_end":225813,"extent_start":225786,"extent_end":228373,"fully_qualified_name":"Server::routing","ident_utf16":{"start":{"line_number":7048,"utf16_col":20},"end":{"line_number":7048,"utf16_col":27}},"extent_utf16":{"start":{"line_number":7048,"utf16_col":0},"end":{"line_number":7122,"utf16_col":1}}},{"name":"dispatch_request","kind":"method","ident_start":228395,"ident_end":228411,"extent_start":228375,"extent_end":228721,"fully_qualified_name":"Server::dispatch_request","ident_utf16":{"start":{"line_number":7124,"utf16_col":20},"end":{"line_number":7124,"utf16_col":36}},"extent_utf16":{"start":{"line_number":7124,"utf16_col":0},"end":{"line_number":7136,"utf16_col":1}}},{"name":"apply_ranges","kind":"method","ident_start":228743,"ident_end":228755,"extent_start":228723,"extent_end":232826,"fully_qualified_name":"Server::apply_ranges","ident_utf16":{"start":{"line_number":7138,"utf16_col":20},"end":{"line_number":7138,"utf16_col":32}},"extent_utf16":{"start":{"line_number":7138,"utf16_col":0},"end":{"line_number":7248,"utf16_col":1}}},{"name":"dispatch_request_for_content_reader","kind":"method","ident_start":232848,"ident_end":232883,"extent_start":232828,"extent_end":233227,"fully_qualified_name":"Server::dispatch_request_for_content_reader","ident_utf16":{"start":{"line_number":7250,"utf16_col":20},"end":{"line_number":7250,"utf16_col":55}},"extent_utf16":{"start":{"line_number":7250,"utf16_col":0},"end":{"line_number":7263,"utf16_col":1}}},{"name":"process_request","kind":"method","ident_start":233249,"ident_end":233264,"extent_start":233229,"extent_end":238541,"fully_qualified_name":"Server::process_request","ident_utf16":{"start":{"line_number":7266,"utf16_col":8},"end":{"line_number":7266,"utf16_col":23}},"extent_utf16":{"start":{"line_number":7265,"utf16_col":0},"end":{"line_number":7433,"utf16_col":1}}},{"name":"is_valid","kind":"method","ident_start":238563,"ident_end":238571,"extent_start":238543,"extent_end":238596,"fully_qualified_name":"Server::is_valid","ident_utf16":{"start":{"line_number":7435,"utf16_col":20},"end":{"line_number":7435,"utf16_col":28}},"extent_utf16":{"start":{"line_number":7435,"utf16_col":0},"end":{"line_number":7435,"utf16_col":53}}},{"name":"process_and_close_socket","kind":"method","ident_start":238618,"ident_end":238642,"extent_start":238598,"extent_end":239455,"fully_qualified_name":"Server::process_and_close_socket","ident_utf16":{"start":{"line_number":7437,"utf16_col":20},"end":{"line_number":7437,"utf16_col":44}},"extent_utf16":{"start":{"line_number":7437,"utf16_col":0},"end":{"line_number":7459,"utf16_col":1}}},{"name":"ClientImpl","kind":"method","ident_start":239506,"ident_end":239516,"extent_start":239487,"extent_end":239601,"fully_qualified_name":"ClientImpl::ClientImpl","ident_utf16":{"start":{"line_number":7462,"utf16_col":19},"end":{"line_number":7462,"utf16_col":29}},"extent_utf16":{"start":{"line_number":7462,"utf16_col":0},"end":{"line_number":7463,"utf16_col":59}}},{"name":"ClientImpl","kind":"method","ident_start":239622,"ident_end":239632,"extent_start":239603,"extent_end":239729,"fully_qualified_name":"ClientImpl::ClientImpl","ident_utf16":{"start":{"line_number":7465,"utf16_col":19},"end":{"line_number":7465,"utf16_col":29}},"extent_utf16":{"start":{"line_number":7465,"utf16_col":0},"end":{"line_number":7466,"utf16_col":61}}},{"name":"ClientImpl","kind":"method","ident_start":239750,"ident_end":239760,"extent_start":239731,"extent_end":240165,"fully_qualified_name":"ClientImpl::ClientImpl","ident_utf16":{"start":{"line_number":7468,"utf16_col":19},"end":{"line_number":7468,"utf16_col":29}},"extent_utf16":{"start":{"line_number":7468,"utf16_col":0},"end":{"line_number":7473,"utf16_col":79}}},{"name":"is_valid","kind":"method","ident_start":240637,"ident_end":240645,"extent_start":240613,"extent_end":240670,"fully_qualified_name":"ClientImpl::is_valid","ident_utf16":{"start":{"line_number":7491,"utf16_col":24},"end":{"line_number":7491,"utf16_col":32}},"extent_utf16":{"start":{"line_number":7491,"utf16_col":0},"end":{"line_number":7491,"utf16_col":57}}},{"name":"copy_settings","kind":"method","ident_start":240696,"ident_end":240709,"extent_start":240672,"extent_end":242659,"fully_qualified_name":"ClientImpl::copy_settings","ident_utf16":{"start":{"line_number":7493,"utf16_col":24},"end":{"line_number":7493,"utf16_col":37}},"extent_utf16":{"start":{"line_number":7493,"utf16_col":0},"end":{"line_number":7539,"utf16_col":1}}},{"name":"create_client_socket","kind":"method","ident_start":242689,"ident_end":242709,"extent_start":242661,"extent_end":243558,"fully_qualified_name":"ClientImpl::create_client_socket","ident_utf16":{"start":{"line_number":7541,"utf16_col":28},"end":{"line_number":7541,"utf16_col":48}},"extent_utf16":{"start":{"line_number":7541,"utf16_col":0},"end":{"line_number":7560,"utf16_col":1}}},{"name":"create_and_connect_socket","kind":"method","ident_start":243584,"ident_end":243609,"extent_start":243560,"extent_end":243821,"fully_qualified_name":"ClientImpl::create_and_connect_socket","ident_utf16":{"start":{"line_number":7562,"utf16_col":24},"end":{"line_number":7562,"utf16_col":49}},"extent_utf16":{"start":{"line_number":7562,"utf16_col":0},"end":{"line_number":7568,"utf16_col":1}}},{"name":"shutdown_ssl","kind":"method","ident_start":243847,"ident_end":243859,"extent_start":243823,"extent_end":244227,"fully_qualified_name":"ClientImpl::shutdown_ssl","ident_utf16":{"start":{"line_number":7570,"utf16_col":24},"end":{"line_number":7570,"utf16_col":36}},"extent_utf16":{"start":{"line_number":7570,"utf16_col":0},"end":{"line_number":7576,"utf16_col":1}}},{"name":"shutdown_socket","kind":"method","ident_start":244253,"ident_end":244268,"extent_start":244229,"extent_end":244383,"fully_qualified_name":"ClientImpl::shutdown_socket","ident_utf16":{"start":{"line_number":7578,"utf16_col":24},"end":{"line_number":7578,"utf16_col":39}},"extent_utf16":{"start":{"line_number":7578,"utf16_col":0},"end":{"line_number":7581,"utf16_col":1}}},{"name":"close_socket","kind":"method","ident_start":244409,"ident_end":244421,"extent_start":244385,"extent_end":245207,"fully_qualified_name":"ClientImpl::close_socket","ident_utf16":{"start":{"line_number":7583,"utf16_col":24},"end":{"line_number":7583,"utf16_col":36}},"extent_utf16":{"start":{"line_number":7583,"utf16_col":0},"end":{"line_number":7600,"utf16_col":1}}},{"name":"read_response_line","kind":"method","ident_start":245233,"ident_end":245251,"extent_start":245209,"extent_end":246372,"fully_qualified_name":"ClientImpl::read_response_line","ident_utf16":{"start":{"line_number":7602,"utf16_col":24},"end":{"line_number":7602,"utf16_col":42}},"extent_utf16":{"start":{"line_number":7602,"utf16_col":0},"end":{"line_number":7636,"utf16_col":1}}},{"name":"send","kind":"method","ident_start":246398,"ident_end":246402,"extent_start":246374,"extent_end":246680,"fully_qualified_name":"ClientImpl::send","ident_utf16":{"start":{"line_number":7638,"utf16_col":24},"end":{"line_number":7638,"utf16_col":28}},"extent_utf16":{"start":{"line_number":7638,"utf16_col":0},"end":{"line_number":7646,"utf16_col":1}}},{"name":"send_","kind":"method","ident_start":246706,"ident_end":246711,"extent_start":246682,"extent_end":249881,"fully_qualified_name":"ClientImpl::send_","ident_utf16":{"start":{"line_number":7648,"utf16_col":24},"end":{"line_number":7648,"utf16_col":29}},"extent_utf16":{"start":{"line_number":7648,"utf16_col":0},"end":{"line_number":7745,"utf16_col":1}}},{"name":"send","kind":"method","ident_start":249909,"ident_end":249913,"extent_start":249883,"extent_end":249989,"fully_qualified_name":"ClientImpl::send","ident_utf16":{"start":{"line_number":7747,"utf16_col":26},"end":{"line_number":7747,"utf16_col":30}},"extent_utf16":{"start":{"line_number":7747,"utf16_col":0},"end":{"line_number":7750,"utf16_col":1}}},{"name":"send_","kind":"method","ident_start":250017,"ident_end":250022,"extent_start":249991,"extent_end":250235,"fully_qualified_name":"ClientImpl::send_","ident_utf16":{"start":{"line_number":7752,"utf16_col":26},"end":{"line_number":7752,"utf16_col":31}},"extent_utf16":{"start":{"line_number":7752,"utf16_col":0},"end":{"line_number":7757,"utf16_col":1}}},{"name":"handle_request","kind":"method","ident_start":250261,"ident_end":250275,"extent_start":250237,"extent_end":252923,"fully_qualified_name":"ClientImpl::handle_request","ident_utf16":{"start":{"line_number":7759,"utf16_col":24},"end":{"line_number":7759,"utf16_col":38}},"extent_utf16":{"start":{"line_number":7759,"utf16_col":0},"end":{"line_number":7834,"utf16_col":1}}},{"name":"redirect","kind":"method","ident_start":252949,"ident_end":252957,"extent_start":252925,"extent_end":254706,"fully_qualified_name":"ClientImpl::redirect","ident_utf16":{"start":{"line_number":7836,"utf16_col":24},"end":{"line_number":7836,"utf16_col":32}},"extent_utf16":{"start":{"line_number":7836,"utf16_col":0},"end":{"line_number":7891,"utf16_col":1}}},{"name":"write_content_with_provider","kind":"method","ident_start":254732,"ident_end":254759,"extent_start":254708,"extent_end":255618,"fully_qualified_name":"ClientImpl::write_content_with_provider","ident_utf16":{"start":{"line_number":7893,"utf16_col":24},"end":{"line_number":7893,"utf16_col":51}},"extent_utf16":{"start":{"line_number":7893,"utf16_col":0},"end":{"line_number":7916,"utf16_col":1}}},{"name":"write_request","kind":"method","ident_start":255644,"ident_end":255657,"extent_start":255620,"extent_end":259592,"fully_qualified_name":"ClientImpl::write_request","ident_utf16":{"start":{"line_number":7918,"utf16_col":24},"end":{"line_number":7918,"utf16_col":37}},"extent_utf16":{"start":{"line_number":7918,"utf16_col":0},"end":{"line_number":8058,"utf16_col":1}}},{"name":"send_with_content_provider","kind":"method","ident_start":259639,"ident_end":259665,"extent_start":259594,"extent_end":262139,"fully_qualified_name":"ClientImpl::send_with_content_provider","ident_utf16":{"start":{"line_number":8060,"utf16_col":45},"end":{"line_number":8060,"utf16_col":71}},"extent_utf16":{"start":{"line_number":8060,"utf16_col":0},"end":{"line_number":8137,"utf16_col":1}}},{"name":"send_with_content_provider","kind":"method","ident_start":262167,"ident_end":262193,"extent_start":262141,"extent_end":262952,"fully_qualified_name":"ClientImpl::send_with_content_provider","ident_utf16":{"start":{"line_number":8139,"utf16_col":26},"end":{"line_number":8139,"utf16_col":52}},"extent_utf16":{"start":{"line_number":8139,"utf16_col":0},"end":{"line_number":8160,"utf16_col":1}}},{"name":"adjust_host_string","kind":"method","ident_start":262985,"ident_end":263003,"extent_start":262954,"extent_end":263125,"fully_qualified_name":"ClientImpl::adjust_host_string","ident_utf16":{"start":{"line_number":8163,"utf16_col":12},"end":{"line_number":8163,"utf16_col":30}},"extent_utf16":{"start":{"line_number":8162,"utf16_col":0},"end":{"line_number":8166,"utf16_col":1}}},{"name":"process_request","kind":"method","ident_start":263151,"ident_end":263166,"extent_start":263127,"extent_end":266115,"fully_qualified_name":"ClientImpl::process_request","ident_utf16":{"start":{"line_number":8168,"utf16_col":24},"end":{"line_number":8168,"utf16_col":39}},"extent_utf16":{"start":{"line_number":8168,"utf16_col":0},"end":{"line_number":8257,"utf16_col":1}}},{"name":"get_multipart_content_provider","kind":"method","ident_start":266165,"ident_end":266195,"extent_start":266117,"extent_end":267589,"fully_qualified_name":"ClientImpl::get_multipart_content_provider","ident_utf16":{"start":{"line_number":8259,"utf16_col":48},"end":{"line_number":8259,"utf16_col":78}},"extent_utf16":{"start":{"line_number":8259,"utf16_col":0},"end":{"line_number":8301,"utf16_col":1}}},{"name":"process_socket","kind":"method","ident_start":267615,"ident_end":267629,"extent_start":267591,"extent_end":267973,"fully_qualified_name":"ClientImpl::process_socket","ident_utf16":{"start":{"line_number":8303,"utf16_col":24},"end":{"line_number":8303,"utf16_col":38}},"extent_utf16":{"start":{"line_number":8303,"utf16_col":0},"end":{"line_number":8310,"utf16_col":1}}},{"name":"is_ssl","kind":"method","ident_start":267999,"ident_end":268005,"extent_start":267975,"extent_end":268031,"fully_qualified_name":"ClientImpl::is_ssl","ident_utf16":{"start":{"line_number":8312,"utf16_col":24},"end":{"line_number":8312,"utf16_col":30}},"extent_utf16":{"start":{"line_number":8312,"utf16_col":0},"end":{"line_number":8312,"utf16_col":56}}},{"name":"Get","kind":"method","ident_start":268059,"ident_end":268062,"extent_start":268033,"extent_end":268134,"fully_qualified_name":"ClientImpl::Get","ident_utf16":{"start":{"line_number":8314,"utf16_col":26},"end":{"line_number":8314,"utf16_col":29}},"extent_utf16":{"start":{"line_number":8314,"utf16_col":0},"end":{"line_number":8316,"utf16_col":1}}},{"name":"Get","kind":"method","ident_start":268162,"ident_end":268165,"extent_start":268136,"extent_end":268265,"fully_qualified_name":"ClientImpl::Get","ident_utf16":{"start":{"line_number":8318,"utf16_col":26},"end":{"line_number":8318,"utf16_col":29}},"extent_utf16":{"start":{"line_number":8318,"utf16_col":0},"end":{"line_number":8320,"utf16_col":1}}},{"name":"Get","kind":"method","ident_start":268293,"ident_end":268296,"extent_start":268267,"extent_end":268390,"fully_qualified_name":"ClientImpl::Get","ident_utf16":{"start":{"line_number":8322,"utf16_col":26},"end":{"line_number":8322,"utf16_col":29}},"extent_utf16":{"start":{"line_number":8322,"utf16_col":0},"end":{"line_number":8324,"utf16_col":1}}},{"name":"Get","kind":"method","ident_start":268418,"ident_end":268421,"extent_start":268392,"extent_end":268766,"fully_qualified_name":"ClientImpl::Get","ident_utf16":{"start":{"line_number":8326,"utf16_col":26},"end":{"line_number":8326,"utf16_col":29}},"extent_utf16":{"start":{"line_number":8326,"utf16_col":0},"end":{"line_number":8338,"utf16_col":1}}},{"name":"Get","kind":"method","ident_start":268794,"ident_end":268797,"extent_start":268768,"extent_end":268968,"fully_qualified_name":"ClientImpl::Get","ident_utf16":{"start":{"line_number":8340,"utf16_col":26},"end":{"line_number":8340,"utf16_col":29}},"extent_utf16":{"start":{"line_number":8340,"utf16_col":0},"end":{"line_number":8343,"utf16_col":1}}},{"name":"Get","kind":"method","ident_start":268996,"ident_end":268999,"extent_start":268970,"extent_end":269244,"fully_qualified_name":"ClientImpl::Get","ident_utf16":{"start":{"line_number":8345,"utf16_col":26},"end":{"line_number":8345,"utf16_col":29}},"extent_utf16":{"start":{"line_number":8345,"utf16_col":0},"end":{"line_number":8350,"utf16_col":1}}},{"name":"Get","kind":"method","ident_start":269272,"ident_end":269275,"extent_start":269246,"extent_end":269468,"fully_qualified_name":"ClientImpl::Get","ident_utf16":{"start":{"line_number":8352,"utf16_col":26},"end":{"line_number":8352,"utf16_col":29}},"extent_utf16":{"start":{"line_number":8352,"utf16_col":0},"end":{"line_number":8355,"utf16_col":1}}},{"name":"Get","kind":"method","ident_start":269496,"ident_end":269499,"extent_start":269470,"extent_end":269766,"fully_qualified_name":"ClientImpl::Get","ident_utf16":{"start":{"line_number":8357,"utf16_col":26},"end":{"line_number":8357,"utf16_col":29}},"extent_utf16":{"start":{"line_number":8357,"utf16_col":0},"end":{"line_number":8362,"utf16_col":1}}},{"name":"Get","kind":"method","ident_start":269794,"ident_end":269797,"extent_start":269768,"extent_end":270065,"fully_qualified_name":"ClientImpl::Get","ident_utf16":{"start":{"line_number":8364,"utf16_col":26},"end":{"line_number":8364,"utf16_col":29}},"extent_utf16":{"start":{"line_number":8364,"utf16_col":0},"end":{"line_number":8369,"utf16_col":1}}},{"name":"Get","kind":"method","ident_start":270093,"ident_end":270096,"extent_start":270067,"extent_end":270386,"fully_qualified_name":"ClientImpl::Get","ident_utf16":{"start":{"line_number":8371,"utf16_col":26},"end":{"line_number":8371,"utf16_col":29}},"extent_utf16":{"start":{"line_number":8371,"utf16_col":0},"end":{"line_number":8376,"utf16_col":1}}},{"name":"Get","kind":"method","ident_start":270414,"ident_end":270417,"extent_start":270388,"extent_end":270746,"fully_qualified_name":"ClientImpl::Get","ident_utf16":{"start":{"line_number":8378,"utf16_col":26},"end":{"line_number":8378,"utf16_col":29}},"extent_utf16":{"start":{"line_number":8378,"utf16_col":0},"end":{"line_number":8384,"utf16_col":1}}},{"name":"Get","kind":"method","ident_start":270774,"ident_end":270777,"extent_start":270748,"extent_end":271528,"fully_qualified_name":"ClientImpl::Get","ident_utf16":{"start":{"line_number":8386,"utf16_col":26},"end":{"line_number":8386,"utf16_col":29}},"extent_utf16":{"start":{"line_number":8386,"utf16_col":0},"end":{"line_number":8406,"utf16_col":1}}},{"name":"Get","kind":"method","ident_start":271556,"ident_end":271559,"extent_start":271530,"extent_end":271865,"fully_qualified_name":"ClientImpl::Get","ident_utf16":{"start":{"line_number":8408,"utf16_col":26},"end":{"line_number":8408,"utf16_col":29}},"extent_utf16":{"start":{"line_number":8408,"utf16_col":0},"end":{"line_number":8414,"utf16_col":1}}},{"name":"Get","kind":"method","ident_start":271893,"ident_end":271896,"extent_start":271867,"extent_end":272223,"fully_qualified_name":"ClientImpl::Get","ident_utf16":{"start":{"line_number":8416,"utf16_col":26},"end":{"line_number":8416,"utf16_col":29}},"extent_utf16":{"start":{"line_number":8416,"utf16_col":0},"end":{"line_number":8422,"utf16_col":1}}},{"name":"Get","kind":"method","ident_start":272251,"ident_end":272254,"extent_start":272225,"extent_end":272889,"fully_qualified_name":"ClientImpl::Get","ident_utf16":{"start":{"line_number":8424,"utf16_col":26},"end":{"line_number":8424,"utf16_col":29}},"extent_utf16":{"start":{"line_number":8424,"utf16_col":0},"end":{"line_number":8437,"utf16_col":1}}},{"name":"Head","kind":"method","ident_start":272917,"ident_end":272921,"extent_start":272891,"extent_end":272982,"fully_qualified_name":"ClientImpl::Head","ident_utf16":{"start":{"line_number":8439,"utf16_col":26},"end":{"line_number":8439,"utf16_col":30}},"extent_utf16":{"start":{"line_number":8439,"utf16_col":0},"end":{"line_number":8441,"utf16_col":1}}},{"name":"Head","kind":"method","ident_start":273010,"ident_end":273014,"extent_start":272984,"extent_end":273304,"fully_qualified_name":"ClientImpl::Head","ident_utf16":{"start":{"line_number":8443,"utf16_col":26},"end":{"line_number":8443,"utf16_col":30}},"extent_utf16":{"start":{"line_number":8443,"utf16_col":0},"end":{"line_number":8454,"utf16_col":1}}},{"name":"Post","kind":"method","ident_start":273332,"ident_end":273336,"extent_start":273306,"extent_end":273416,"fully_qualified_name":"ClientImpl::Post","ident_utf16":{"start":{"line_number":8456,"utf16_col":26},"end":{"line_number":8456,"utf16_col":30}},"extent_utf16":{"start":{"line_number":8456,"utf16_col":0},"end":{"line_number":8458,"utf16_col":1}}},{"name":"Post","kind":"method","ident_start":273444,"ident_end":273448,"extent_start":273418,"extent_end":273589,"fully_qualified_name":"ClientImpl::Post","ident_utf16":{"start":{"line_number":8460,"utf16_col":26},"end":{"line_number":8460,"utf16_col":30}},"extent_utf16":{"start":{"line_number":8460,"utf16_col":0},"end":{"line_number":8463,"utf16_col":1}}},{"name":"Post","kind":"method","ident_start":273617,"ident_end":273621,"extent_start":273591,"extent_end":273863,"fully_qualified_name":"ClientImpl::Post","ident_utf16":{"start":{"line_number":8465,"utf16_col":26},"end":{"line_number":8465,"utf16_col":30}},"extent_utf16":{"start":{"line_number":8465,"utf16_col":0},"end":{"line_number":8469,"utf16_col":1}}},{"name":"Post","kind":"method","ident_start":273891,"ident_end":273895,"extent_start":273865,"extent_end":274243,"fully_qualified_name":"ClientImpl::Post","ident_utf16":{"start":{"line_number":8471,"utf16_col":26},"end":{"line_number":8471,"utf16_col":30}},"extent_utf16":{"start":{"line_number":8471,"utf16_col":0},"end":{"line_number":8476,"utf16_col":1}}},{"name":"Post","kind":"method","ident_start":274271,"ident_end":274275,"extent_start":274245,"extent_end":274674,"fully_qualified_name":"ClientImpl::Post","ident_utf16":{"start":{"line_number":8478,"utf16_col":26},"end":{"line_number":8478,"utf16_col":30}},"extent_utf16":{"start":{"line_number":8478,"utf16_col":0},"end":{"line_number":8484,"utf16_col":1}}},{"name":"Post","kind":"method","ident_start":274702,"ident_end":274706,"extent_start":274676,"extent_end":274876,"fully_qualified_name":"ClientImpl::Post","ident_utf16":{"start":{"line_number":8486,"utf16_col":26},"end":{"line_number":8486,"utf16_col":30}},"extent_utf16":{"start":{"line_number":8486,"utf16_col":0},"end":{"line_number":8489,"utf16_col":1}}},{"name":"Post","kind":"method","ident_start":274904,"ident_end":274908,"extent_start":274878,"extent_end":275138,"fully_qualified_name":"ClientImpl::Post","ident_utf16":{"start":{"line_number":8491,"utf16_col":26},"end":{"line_number":8491,"utf16_col":30}},"extent_utf16":{"start":{"line_number":8491,"utf16_col":0},"end":{"line_number":8495,"utf16_col":1}}},{"name":"Post","kind":"method","ident_start":275166,"ident_end":275170,"extent_start":275140,"extent_end":275542,"fully_qualified_name":"ClientImpl::Post","ident_utf16":{"start":{"line_number":8497,"utf16_col":26},"end":{"line_number":8497,"utf16_col":30}},"extent_utf16":{"start":{"line_number":8497,"utf16_col":0},"end":{"line_number":8503,"utf16_col":1}}},{"name":"Post","kind":"method","ident_start":275570,"ident_end":275574,"extent_start":275544,"extent_end":275997,"fully_qualified_name":"ClientImpl::Post","ident_utf16":{"start":{"line_number":8505,"utf16_col":26},"end":{"line_number":8505,"utf16_col":30}},"extent_utf16":{"start":{"line_number":8505,"utf16_col":0},"end":{"line_number":8512,"utf16_col":1}}},{"name":"Post","kind":"method","ident_start":276025,"ident_end":276029,"extent_start":275999,"extent_end":276120,"fully_qualified_name":"ClientImpl::Post","ident_utf16":{"start":{"line_number":8514,"utf16_col":26},"end":{"line_number":8514,"utf16_col":30}},"extent_utf16":{"start":{"line_number":8514,"utf16_col":0},"end":{"line_number":8516,"utf16_col":1}}},{"name":"Post","kind":"method","ident_start":276148,"ident_end":276152,"extent_start":276122,"extent_end":276438,"fully_qualified_name":"ClientImpl::Post","ident_utf16":{"start":{"line_number":8518,"utf16_col":26},"end":{"line_number":8518,"utf16_col":30}},"extent_utf16":{"start":{"line_number":8518,"utf16_col":0},"end":{"line_number":8523,"utf16_col":1}}},{"name":"Post","kind":"method","ident_start":276466,"ident_end":276470,"extent_start":276440,"extent_end":276716,"fully_qualified_name":"ClientImpl::Post","ident_utf16":{"start":{"line_number":8525,"utf16_col":26},"end":{"line_number":8525,"utf16_col":30}},"extent_utf16":{"start":{"line_number":8525,"utf16_col":0},"end":{"line_number":8529,"utf16_col":1}}},{"name":"Post","kind":"method","ident_start":276744,"ident_end":276748,"extent_start":276718,"extent_end":277202,"fully_qualified_name":"ClientImpl::Post","ident_utf16":{"start":{"line_number":8531,"utf16_col":26},"end":{"line_number":8531,"utf16_col":30}},"extent_utf16":{"start":{"line_number":8531,"utf16_col":0},"end":{"line_number":8538,"utf16_col":1}}},{"name":"Post","kind":"method","ident_start":277230,"ident_end":277234,"extent_start":277204,"extent_end":277634,"fully_qualified_name":"ClientImpl::Post","ident_utf16":{"start":{"line_number":8540,"utf16_col":26},"end":{"line_number":8540,"utf16_col":30}},"extent_utf16":{"start":{"line_number":8540,"utf16_col":0},"end":{"line_number":8546,"utf16_col":1}}},{"name":"Post","kind":"method","ident_start":277662,"ident_end":277666,"extent_start":277636,"extent_end":277898,"fully_qualified_name":"ClientImpl::Post","ident_utf16":{"start":{"line_number":8548,"utf16_col":26},"end":{"line_number":8548,"utf16_col":30}},"extent_utf16":{"start":{"line_number":8548,"utf16_col":0},"end":{"line_number":8552,"utf16_col":1}}},{"name":"Post","kind":"method","ident_start":277926,"ident_end":277930,"extent_start":277900,"extent_end":278205,"fully_qualified_name":"ClientImpl::Post","ident_utf16":{"start":{"line_number":8554,"utf16_col":26},"end":{"line_number":8554,"utf16_col":30}},"extent_utf16":{"start":{"line_number":8554,"utf16_col":0},"end":{"line_number":8559,"utf16_col":1}}},{"name":"Post","kind":"method","ident_start":278233,"ident_end":278237,"extent_start":278207,"extent_end":278373,"fully_qualified_name":"ClientImpl::Post","ident_utf16":{"start":{"line_number":8561,"utf16_col":26},"end":{"line_number":8561,"utf16_col":30}},"extent_utf16":{"start":{"line_number":8561,"utf16_col":0},"end":{"line_number":8564,"utf16_col":1}}},{"name":"Post","kind":"method","ident_start":278401,"ident_end":278405,"extent_start":278375,"extent_end":278817,"fully_qualified_name":"ClientImpl::Post","ident_utf16":{"start":{"line_number":8566,"utf16_col":26},"end":{"line_number":8566,"utf16_col":30}},"extent_utf16":{"start":{"line_number":8566,"utf16_col":0},"end":{"line_number":8573,"utf16_col":1}}},{"name":"Post","kind":"method","ident_start":278845,"ident_end":278849,"extent_start":278819,"extent_end":279393,"fully_qualified_name":"ClientImpl::Post","ident_utf16":{"start":{"line_number":8575,"utf16_col":26},"end":{"line_number":8575,"utf16_col":30}},"extent_utf16":{"start":{"line_number":8575,"utf16_col":0},"end":{"line_number":8586,"utf16_col":1}}},{"name":"Post","kind":"method","ident_start":279421,"ident_end":279425,"extent_start":279395,"extent_end":279956,"fully_qualified_name":"ClientImpl::Post","ident_utf16":{"start":{"line_number":8589,"utf16_col":12},"end":{"line_number":8589,"utf16_col":16}},"extent_utf16":{"start":{"line_number":8588,"utf16_col":0},"end":{"line_number":8599,"utf16_col":1}}},{"name":"Put","kind":"method","ident_start":279984,"ident_end":279987,"extent_start":279958,"extent_end":280066,"fully_qualified_name":"ClientImpl::Put","ident_utf16":{"start":{"line_number":8601,"utf16_col":26},"end":{"line_number":8601,"utf16_col":29}},"extent_utf16":{"start":{"line_number":8601,"utf16_col":0},"end":{"line_number":8603,"utf16_col":1}}},{"name":"Put","kind":"method","ident_start":280094,"ident_end":280097,"extent_start":280068,"extent_end":280327,"fully_qualified_name":"ClientImpl::Put","ident_utf16":{"start":{"line_number":8605,"utf16_col":26},"end":{"line_number":8605,"utf16_col":29}},"extent_utf16":{"start":{"line_number":8605,"utf16_col":0},"end":{"line_number":8609,"utf16_col":1}}},{"name":"Put","kind":"method","ident_start":280355,"ident_end":280358,"extent_start":280329,"extent_end":280703,"fully_qualified_name":"ClientImpl::Put","ident_utf16":{"start":{"line_number":8611,"utf16_col":26},"end":{"line_number":8611,"utf16_col":29}},"extent_utf16":{"start":{"line_number":8611,"utf16_col":0},"end":{"line_number":8616,"utf16_col":1}}},{"name":"Put","kind":"method","ident_start":280731,"ident_end":280734,"extent_start":280705,"extent_end":281129,"fully_qualified_name":"ClientImpl::Put","ident_utf16":{"start":{"line_number":8618,"utf16_col":26},"end":{"line_number":8618,"utf16_col":29}},"extent_utf16":{"start":{"line_number":8618,"utf16_col":0},"end":{"line_number":8624,"utf16_col":1}}},{"name":"Put","kind":"method","ident_start":281157,"ident_end":281160,"extent_start":281131,"extent_end":281328,"fully_qualified_name":"ClientImpl::Put","ident_utf16":{"start":{"line_number":8626,"utf16_col":26},"end":{"line_number":8626,"utf16_col":29}},"extent_utf16":{"start":{"line_number":8626,"utf16_col":0},"end":{"line_number":8629,"utf16_col":1}}},{"name":"Put","kind":"method","ident_start":281356,"ident_end":281359,"extent_start":281330,"extent_end":281586,"fully_qualified_name":"ClientImpl::Put","ident_utf16":{"start":{"line_number":8631,"utf16_col":26},"end":{"line_number":8631,"utf16_col":29}},"extent_utf16":{"start":{"line_number":8631,"utf16_col":0},"end":{"line_number":8635,"utf16_col":1}}},{"name":"Put","kind":"method","ident_start":281614,"ident_end":281617,"extent_start":281588,"extent_end":281986,"fully_qualified_name":"ClientImpl::Put","ident_utf16":{"start":{"line_number":8637,"utf16_col":26},"end":{"line_number":8637,"utf16_col":29}},"extent_utf16":{"start":{"line_number":8637,"utf16_col":0},"end":{"line_number":8643,"utf16_col":1}}},{"name":"Put","kind":"method","ident_start":282014,"ident_end":282017,"extent_start":281988,"extent_end":282436,"fully_qualified_name":"ClientImpl::Put","ident_utf16":{"start":{"line_number":8645,"utf16_col":26},"end":{"line_number":8645,"utf16_col":29}},"extent_utf16":{"start":{"line_number":8645,"utf16_col":0},"end":{"line_number":8652,"utf16_col":1}}},{"name":"Put","kind":"method","ident_start":282464,"ident_end":282467,"extent_start":282438,"extent_end":282749,"fully_qualified_name":"ClientImpl::Put","ident_utf16":{"start":{"line_number":8654,"utf16_col":26},"end":{"line_number":8654,"utf16_col":29}},"extent_utf16":{"start":{"line_number":8654,"utf16_col":0},"end":{"line_number":8659,"utf16_col":1}}},{"name":"Put","kind":"method","ident_start":282777,"ident_end":282780,"extent_start":282751,"extent_end":283023,"fully_qualified_name":"ClientImpl::Put","ident_utf16":{"start":{"line_number":8661,"utf16_col":26},"end":{"line_number":8661,"utf16_col":29}},"extent_utf16":{"start":{"line_number":8661,"utf16_col":0},"end":{"line_number":8665,"utf16_col":1}}},{"name":"Put","kind":"method","ident_start":283051,"ident_end":283054,"extent_start":283025,"extent_end":283504,"fully_qualified_name":"ClientImpl::Put","ident_utf16":{"start":{"line_number":8667,"utf16_col":26},"end":{"line_number":8667,"utf16_col":29}},"extent_utf16":{"start":{"line_number":8667,"utf16_col":0},"end":{"line_number":8674,"utf16_col":1}}},{"name":"Put","kind":"method","ident_start":283532,"ident_end":283535,"extent_start":283506,"extent_end":283932,"fully_qualified_name":"ClientImpl::Put","ident_utf16":{"start":{"line_number":8676,"utf16_col":26},"end":{"line_number":8676,"utf16_col":29}},"extent_utf16":{"start":{"line_number":8676,"utf16_col":0},"end":{"line_number":8682,"utf16_col":1}}},{"name":"Put","kind":"method","ident_start":283960,"ident_end":283963,"extent_start":283934,"extent_end":284053,"fully_qualified_name":"ClientImpl::Put","ident_utf16":{"start":{"line_number":8684,"utf16_col":26},"end":{"line_number":8684,"utf16_col":29}},"extent_utf16":{"start":{"line_number":8684,"utf16_col":0},"end":{"line_number":8686,"utf16_col":1}}},{"name":"Put","kind":"method","ident_start":284081,"ident_end":284084,"extent_start":284055,"extent_end":284314,"fully_qualified_name":"ClientImpl::Put","ident_utf16":{"start":{"line_number":8688,"utf16_col":26},"end":{"line_number":8688,"utf16_col":29}},"extent_utf16":{"start":{"line_number":8688,"utf16_col":0},"end":{"line_number":8692,"utf16_col":1}}},{"name":"Put","kind":"method","ident_start":284342,"ident_end":284345,"extent_start":284316,"extent_end":284617,"fully_qualified_name":"ClientImpl::Put","ident_utf16":{"start":{"line_number":8694,"utf16_col":26},"end":{"line_number":8694,"utf16_col":29}},"extent_utf16":{"start":{"line_number":8694,"utf16_col":0},"end":{"line_number":8699,"utf16_col":1}}},{"name":"Put","kind":"method","ident_start":284645,"ident_end":284648,"extent_start":284619,"extent_end":284782,"fully_qualified_name":"ClientImpl::Put","ident_utf16":{"start":{"line_number":8701,"utf16_col":26},"end":{"line_number":8701,"utf16_col":29}},"extent_utf16":{"start":{"line_number":8701,"utf16_col":0},"end":{"line_number":8704,"utf16_col":1}}},{"name":"Put","kind":"method","ident_start":284810,"ident_end":284813,"extent_start":284784,"extent_end":285223,"fully_qualified_name":"ClientImpl::Put","ident_utf16":{"start":{"line_number":8706,"utf16_col":26},"end":{"line_number":8706,"utf16_col":29}},"extent_utf16":{"start":{"line_number":8706,"utf16_col":0},"end":{"line_number":8713,"utf16_col":1}}},{"name":"Put","kind":"method","ident_start":285251,"ident_end":285254,"extent_start":285225,"extent_end":285795,"fully_qualified_name":"ClientImpl::Put","ident_utf16":{"start":{"line_number":8715,"utf16_col":26},"end":{"line_number":8715,"utf16_col":29}},"extent_utf16":{"start":{"line_number":8715,"utf16_col":0},"end":{"line_number":8726,"utf16_col":1}}},{"name":"Put","kind":"method","ident_start":285823,"ident_end":285826,"extent_start":285797,"extent_end":286354,"fully_qualified_name":"ClientImpl::Put","ident_utf16":{"start":{"line_number":8729,"utf16_col":12},"end":{"line_number":8729,"utf16_col":15}},"extent_utf16":{"start":{"line_number":8728,"utf16_col":0},"end":{"line_number":8739,"utf16_col":1}}},{"name":"Patch","kind":"method","ident_start":286381,"ident_end":286386,"extent_start":286355,"extent_end":286467,"fully_qualified_name":"ClientImpl::Patch","ident_utf16":{"start":{"line_number":8740,"utf16_col":26},"end":{"line_number":8740,"utf16_col":31}},"extent_utf16":{"start":{"line_number":8740,"utf16_col":0},"end":{"line_number":8742,"utf16_col":1}}},{"name":"Patch","kind":"method","ident_start":286495,"ident_end":286500,"extent_start":286469,"extent_end":286736,"fully_qualified_name":"ClientImpl::Patch","ident_utf16":{"start":{"line_number":8744,"utf16_col":26},"end":{"line_number":8744,"utf16_col":31}},"extent_utf16":{"start":{"line_number":8744,"utf16_col":0},"end":{"line_number":8748,"utf16_col":1}}},{"name":"Patch","kind":"method","ident_start":286764,"ident_end":286769,"extent_start":286738,"extent_end":287066,"fully_qualified_name":"ClientImpl::Patch","ident_utf16":{"start":{"line_number":8750,"utf16_col":26},"end":{"line_number":8750,"utf16_col":31}},"extent_utf16":{"start":{"line_number":8750,"utf16_col":0},"end":{"line_number":8755,"utf16_col":1}}},{"name":"Patch","kind":"method","ident_start":287094,"ident_end":287099,"extent_start":287068,"extent_end":287366,"fully_qualified_name":"ClientImpl::Patch","ident_utf16":{"start":{"line_number":8757,"utf16_col":26},"end":{"line_number":8757,"utf16_col":31}},"extent_utf16":{"start":{"line_number":8757,"utf16_col":0},"end":{"line_number":8761,"utf16_col":1}}},{"name":"Patch","kind":"method","ident_start":287394,"ident_end":287399,"extent_start":287368,"extent_end":287838,"fully_qualified_name":"ClientImpl::Patch","ident_utf16":{"start":{"line_number":8763,"utf16_col":26},"end":{"line_number":8763,"utf16_col":31}},"extent_utf16":{"start":{"line_number":8763,"utf16_col":0},"end":{"line_number":8770,"utf16_col":1}}},{"name":"Patch","kind":"method","ident_start":287866,"ident_end":287871,"extent_start":287840,"extent_end":288075,"fully_qualified_name":"ClientImpl::Patch","ident_utf16":{"start":{"line_number":8772,"utf16_col":26},"end":{"line_number":8772,"utf16_col":31}},"extent_utf16":{"start":{"line_number":8772,"utf16_col":0},"end":{"line_number":8776,"utf16_col":1}}},{"name":"Patch","kind":"method","ident_start":288103,"ident_end":288108,"extent_start":288077,"extent_end":288373,"fully_qualified_name":"ClientImpl::Patch","ident_utf16":{"start":{"line_number":8778,"utf16_col":26},"end":{"line_number":8778,"utf16_col":31}},"extent_utf16":{"start":{"line_number":8778,"utf16_col":0},"end":{"line_number":8783,"utf16_col":1}}},{"name":"Patch","kind":"method","ident_start":288401,"ident_end":288406,"extent_start":288375,"extent_end":288641,"fully_qualified_name":"ClientImpl::Patch","ident_utf16":{"start":{"line_number":8785,"utf16_col":26},"end":{"line_number":8785,"utf16_col":31}},"extent_utf16":{"start":{"line_number":8785,"utf16_col":0},"end":{"line_number":8789,"utf16_col":1}}},{"name":"Patch","kind":"method","ident_start":288669,"ident_end":288674,"extent_start":288643,"extent_end":289101,"fully_qualified_name":"ClientImpl::Patch","ident_utf16":{"start":{"line_number":8791,"utf16_col":26},"end":{"line_number":8791,"utf16_col":31}},"extent_utf16":{"start":{"line_number":8791,"utf16_col":0},"end":{"line_number":8798,"utf16_col":1}}},{"name":"Patch","kind":"method","ident_start":289129,"ident_end":289134,"extent_start":289103,"extent_end":289424,"fully_qualified_name":"ClientImpl::Patch","ident_utf16":{"start":{"line_number":8800,"utf16_col":26},"end":{"line_number":8800,"utf16_col":31}},"extent_utf16":{"start":{"line_number":8800,"utf16_col":0},"end":{"line_number":8805,"utf16_col":1}}},{"name":"Patch","kind":"method","ident_start":289452,"ident_end":289457,"extent_start":289426,"extent_end":289706,"fully_qualified_name":"ClientImpl::Patch","ident_utf16":{"start":{"line_number":8807,"utf16_col":26},"end":{"line_number":8807,"utf16_col":31}},"extent_utf16":{"start":{"line_number":8807,"utf16_col":0},"end":{"line_number":8811,"utf16_col":1}}},{"name":"Patch","kind":"method","ident_start":289734,"ident_end":289739,"extent_start":289708,"extent_end":290197,"fully_qualified_name":"ClientImpl::Patch","ident_utf16":{"start":{"line_number":8813,"utf16_col":26},"end":{"line_number":8813,"utf16_col":31}},"extent_utf16":{"start":{"line_number":8813,"utf16_col":0},"end":{"line_number":8820,"utf16_col":1}}},{"name":"Patch","kind":"method","ident_start":290225,"ident_end":290230,"extent_start":290199,"extent_end":290633,"fully_qualified_name":"ClientImpl::Patch","ident_utf16":{"start":{"line_number":8822,"utf16_col":26},"end":{"line_number":8822,"utf16_col":31}},"extent_utf16":{"start":{"line_number":8822,"utf16_col":0},"end":{"line_number":8828,"utf16_col":1}}},{"name":"Delete","kind":"method","ident_start":290661,"ident_end":290667,"extent_start":290635,"extent_end":290760,"fully_qualified_name":"ClientImpl::Delete","ident_utf16":{"start":{"line_number":8830,"utf16_col":26},"end":{"line_number":8830,"utf16_col":32}},"extent_utf16":{"start":{"line_number":8830,"utf16_col":0},"end":{"line_number":8832,"utf16_col":1}}},{"name":"Delete","kind":"method","ident_start":290788,"ident_end":290794,"extent_start":290762,"extent_end":290942,"fully_qualified_name":"ClientImpl::Delete","ident_utf16":{"start":{"line_number":8834,"utf16_col":26},"end":{"line_number":8834,"utf16_col":32}},"extent_utf16":{"start":{"line_number":8834,"utf16_col":0},"end":{"line_number":8837,"utf16_col":1}}},{"name":"Delete","kind":"method","ident_start":290970,"ident_end":290976,"extent_start":290944,"extent_end":291215,"fully_qualified_name":"ClientImpl::Delete","ident_utf16":{"start":{"line_number":8839,"utf16_col":26},"end":{"line_number":8839,"utf16_col":32}},"extent_utf16":{"start":{"line_number":8839,"utf16_col":0},"end":{"line_number":8843,"utf16_col":1}}},{"name":"Delete","kind":"method","ident_start":291243,"ident_end":291249,"extent_start":291217,"extent_end":291550,"fully_qualified_name":"ClientImpl::Delete","ident_utf16":{"start":{"line_number":8845,"utf16_col":26},"end":{"line_number":8845,"utf16_col":32}},"extent_utf16":{"start":{"line_number":8845,"utf16_col":0},"end":{"line_number":8850,"utf16_col":1}}},{"name":"Delete","kind":"method","ident_start":291578,"ident_end":291584,"extent_start":291552,"extent_end":291887,"fully_qualified_name":"ClientImpl::Delete","ident_utf16":{"start":{"line_number":8852,"utf16_col":26},"end":{"line_number":8852,"utf16_col":32}},"extent_utf16":{"start":{"line_number":8852,"utf16_col":0},"end":{"line_number":8857,"utf16_col":1}}},{"name":"Delete","kind":"method","ident_start":291915,"ident_end":291921,"extent_start":291889,"extent_end":292555,"fully_qualified_name":"ClientImpl::Delete","ident_utf16":{"start":{"line_number":8859,"utf16_col":26},"end":{"line_number":8859,"utf16_col":32}},"extent_utf16":{"start":{"line_number":8859,"utf16_col":0},"end":{"line_number":8877,"utf16_col":1}}},{"name":"Delete","kind":"method","ident_start":292583,"ident_end":292589,"extent_start":292557,"extent_end":292816,"fully_qualified_name":"ClientImpl::Delete","ident_utf16":{"start":{"line_number":8879,"utf16_col":26},"end":{"line_number":8879,"utf16_col":32}},"extent_utf16":{"start":{"line_number":8879,"utf16_col":0},"end":{"line_number":8883,"utf16_col":1}}},{"name":"Delete","kind":"method","ident_start":292844,"ident_end":292850,"extent_start":292818,"extent_end":293155,"fully_qualified_name":"ClientImpl::Delete","ident_utf16":{"start":{"line_number":8885,"utf16_col":26},"end":{"line_number":8885,"utf16_col":32}},"extent_utf16":{"start":{"line_number":8885,"utf16_col":0},"end":{"line_number":8891,"utf16_col":1}}},{"name":"Delete","kind":"method","ident_start":293183,"ident_end":293189,"extent_start":293157,"extent_end":293471,"fully_qualified_name":"ClientImpl::Delete","ident_utf16":{"start":{"line_number":8893,"utf16_col":26},"end":{"line_number":8893,"utf16_col":32}},"extent_utf16":{"start":{"line_number":8893,"utf16_col":0},"end":{"line_number":8898,"utf16_col":1}}},{"name":"Delete","kind":"method","ident_start":293499,"ident_end":293505,"extent_start":293473,"extent_end":293865,"fully_qualified_name":"ClientImpl::Delete","ident_utf16":{"start":{"line_number":8900,"utf16_col":26},"end":{"line_number":8900,"utf16_col":32}},"extent_utf16":{"start":{"line_number":8900,"utf16_col":0},"end":{"line_number":8907,"utf16_col":1}}},{"name":"Options","kind":"method","ident_start":293893,"ident_end":293900,"extent_start":293867,"extent_end":293964,"fully_qualified_name":"ClientImpl::Options","ident_utf16":{"start":{"line_number":8909,"utf16_col":26},"end":{"line_number":8909,"utf16_col":33}},"extent_utf16":{"start":{"line_number":8909,"utf16_col":0},"end":{"line_number":8911,"utf16_col":1}}},{"name":"Options","kind":"method","ident_start":293992,"ident_end":293999,"extent_start":293966,"extent_end":294295,"fully_qualified_name":"ClientImpl::Options","ident_utf16":{"start":{"line_number":8913,"utf16_col":26},"end":{"line_number":8913,"utf16_col":33}},"extent_utf16":{"start":{"line_number":8913,"utf16_col":0},"end":{"line_number":8924,"utf16_col":1}}},{"name":"stop","kind":"method","ident_start":294321,"ident_end":294325,"extent_start":294297,"extent_end":295115,"fully_qualified_name":"ClientImpl::stop","ident_utf16":{"start":{"line_number":8926,"utf16_col":24},"end":{"line_number":8926,"utf16_col":28}},"extent_utf16":{"start":{"line_number":8926,"utf16_col":0},"end":{"line_number":8947,"utf16_col":1}}},{"name":"host","kind":"method","ident_start":295148,"ident_end":295152,"extent_start":295117,"extent_end":295178,"fully_qualified_name":"ClientImpl::host","ident_utf16":{"start":{"line_number":8949,"utf16_col":31},"end":{"line_number":8949,"utf16_col":35}},"extent_utf16":{"start":{"line_number":8949,"utf16_col":0},"end":{"line_number":8949,"utf16_col":61}}},{"name":"port","kind":"method","ident_start":295203,"ident_end":295207,"extent_start":295180,"extent_end":295233,"fully_qualified_name":"ClientImpl::port","ident_utf16":{"start":{"line_number":8951,"utf16_col":23},"end":{"line_number":8951,"utf16_col":27}},"extent_utf16":{"start":{"line_number":8951,"utf16_col":0},"end":{"line_number":8951,"utf16_col":53}}},{"name":"is_socket_open","kind":"method","ident_start":295261,"ident_end":295275,"extent_start":295235,"extent_end":295367,"fully_qualified_name":"ClientImpl::is_socket_open","ident_utf16":{"start":{"line_number":8953,"utf16_col":26},"end":{"line_number":8953,"utf16_col":40}},"extent_utf16":{"start":{"line_number":8953,"utf16_col":0},"end":{"line_number":8956,"utf16_col":1}}},{"name":"socket","kind":"method","ident_start":295397,"ident_end":295403,"extent_start":295369,"extent_end":295436,"fully_qualified_name":"ClientImpl::socket","ident_utf16":{"start":{"line_number":8958,"utf16_col":28},"end":{"line_number":8958,"utf16_col":34}},"extent_utf16":{"start":{"line_number":8958,"utf16_col":0},"end":{"line_number":8958,"utf16_col":67}}},{"name":"set_connection_timeout","kind":"method","ident_start":295462,"ident_end":295484,"extent_start":295438,"extent_end":295581,"fully_qualified_name":"ClientImpl::set_connection_timeout","ident_utf16":{"start":{"line_number":8960,"utf16_col":24},"end":{"line_number":8960,"utf16_col":46}},"extent_utf16":{"start":{"line_number":8960,"utf16_col":0},"end":{"line_number":8963,"utf16_col":1}}},{"name":"set_read_timeout","kind":"method","ident_start":295607,"ident_end":295623,"extent_start":295583,"extent_end":295708,"fully_qualified_name":"ClientImpl::set_read_timeout","ident_utf16":{"start":{"line_number":8965,"utf16_col":24},"end":{"line_number":8965,"utf16_col":40}},"extent_utf16":{"start":{"line_number":8965,"utf16_col":0},"end":{"line_number":8968,"utf16_col":1}}},{"name":"set_write_timeout","kind":"method","ident_start":295734,"ident_end":295751,"extent_start":295710,"extent_end":295838,"fully_qualified_name":"ClientImpl::set_write_timeout","ident_utf16":{"start":{"line_number":8970,"utf16_col":24},"end":{"line_number":8970,"utf16_col":41}},"extent_utf16":{"start":{"line_number":8970,"utf16_col":0},"end":{"line_number":8973,"utf16_col":1}}},{"name":"set_max_timeout","kind":"method","ident_start":295864,"ident_end":295879,"extent_start":295840,"extent_end":295924,"fully_qualified_name":"ClientImpl::set_max_timeout","ident_utf16":{"start":{"line_number":8975,"utf16_col":24},"end":{"line_number":8975,"utf16_col":39}},"extent_utf16":{"start":{"line_number":8975,"utf16_col":0},"end":{"line_number":8977,"utf16_col":1}}},{"name":"set_basic_auth","kind":"method","ident_start":295950,"ident_end":295964,"extent_start":295926,"extent_end":296135,"fully_qualified_name":"ClientImpl::set_basic_auth","ident_utf16":{"start":{"line_number":8979,"utf16_col":24},"end":{"line_number":8979,"utf16_col":38}},"extent_utf16":{"start":{"line_number":8979,"utf16_col":0},"end":{"line_number":8983,"utf16_col":1}}},{"name":"set_bearer_token_auth","kind":"method","ident_start":296161,"ident_end":296182,"extent_start":296137,"extent_end":296248,"fully_qualified_name":"ClientImpl::set_bearer_token_auth","ident_utf16":{"start":{"line_number":8985,"utf16_col":24},"end":{"line_number":8985,"utf16_col":45}},"extent_utf16":{"start":{"line_number":8985,"utf16_col":0},"end":{"line_number":8987,"utf16_col":1}}},{"name":"set_digest_auth","kind":"method","ident_start":296308,"ident_end":296323,"extent_start":296284,"extent_end":296497,"fully_qualified_name":"ClientImpl::set_digest_auth","ident_utf16":{"start":{"line_number":8990,"utf16_col":24},"end":{"line_number":8990,"utf16_col":39}},"extent_utf16":{"start":{"line_number":8990,"utf16_col":0},"end":{"line_number":8994,"utf16_col":1}}},{"name":"set_keep_alive","kind":"method","ident_start":296530,"ident_end":296544,"extent_start":296506,"extent_end":296575,"fully_qualified_name":"ClientImpl::set_keep_alive","ident_utf16":{"start":{"line_number":8997,"utf16_col":24},"end":{"line_number":8997,"utf16_col":38}},"extent_utf16":{"start":{"line_number":8997,"utf16_col":0},"end":{"line_number":8997,"utf16_col":69}}},{"name":"set_follow_location","kind":"method","ident_start":296601,"ident_end":296620,"extent_start":296577,"extent_end":296656,"fully_qualified_name":"ClientImpl::set_follow_location","ident_utf16":{"start":{"line_number":8999,"utf16_col":24},"end":{"line_number":8999,"utf16_col":43}},"extent_utf16":{"start":{"line_number":8999,"utf16_col":0},"end":{"line_number":8999,"utf16_col":79}}},{"name":"set_url_encode","kind":"method","ident_start":296682,"ident_end":296696,"extent_start":296658,"extent_end":296727,"fully_qualified_name":"ClientImpl::set_url_encode","ident_utf16":{"start":{"line_number":9001,"utf16_col":24},"end":{"line_number":9001,"utf16_col":38}},"extent_utf16":{"start":{"line_number":9001,"utf16_col":0},"end":{"line_number":9001,"utf16_col":69}}},{"name":"set_hostname_addr_map","kind":"method","ident_start":296753,"ident_end":296774,"extent_start":296729,"extent_end":296858,"fully_qualified_name":"ClientImpl::set_hostname_addr_map","ident_utf16":{"start":{"line_number":9004,"utf16_col":12},"end":{"line_number":9004,"utf16_col":33}},"extent_utf16":{"start":{"line_number":9003,"utf16_col":0},"end":{"line_number":9006,"utf16_col":1}}},{"name":"set_default_headers","kind":"method","ident_start":296884,"ident_end":296903,"extent_start":296860,"extent_end":296965,"fully_qualified_name":"ClientImpl::set_default_headers","ident_utf16":{"start":{"line_number":9008,"utf16_col":24},"end":{"line_number":9008,"utf16_col":43}},"extent_utf16":{"start":{"line_number":9008,"utf16_col":0},"end":{"line_number":9010,"utf16_col":1}}},{"name":"set_header_writer","kind":"method","ident_start":296991,"ident_end":297008,"extent_start":296967,"extent_end":297103,"fully_qualified_name":"ClientImpl::set_header_writer","ident_utf16":{"start":{"line_number":9012,"utf16_col":24},"end":{"line_number":9012,"utf16_col":41}},"extent_utf16":{"start":{"line_number":9012,"utf16_col":0},"end":{"line_number":9015,"utf16_col":1}}},{"name":"set_address_family","kind":"method","ident_start":297129,"ident_end":297147,"extent_start":297105,"extent_end":297191,"fully_qualified_name":"ClientImpl::set_address_family","ident_utf16":{"start":{"line_number":9017,"utf16_col":24},"end":{"line_number":9017,"utf16_col":42}},"extent_utf16":{"start":{"line_number":9017,"utf16_col":0},"end":{"line_number":9019,"utf16_col":1}}},{"name":"set_tcp_nodelay","kind":"method","ident_start":297217,"ident_end":297232,"extent_start":297193,"extent_end":297264,"fully_qualified_name":"ClientImpl::set_tcp_nodelay","ident_utf16":{"start":{"line_number":9021,"utf16_col":24},"end":{"line_number":9021,"utf16_col":39}},"extent_utf16":{"start":{"line_number":9021,"utf16_col":0},"end":{"line_number":9021,"utf16_col":71}}},{"name":"set_ipv6_v6only","kind":"method","ident_start":297290,"ident_end":297305,"extent_start":297266,"extent_end":297337,"fully_qualified_name":"ClientImpl::set_ipv6_v6only","ident_utf16":{"start":{"line_number":9023,"utf16_col":24},"end":{"line_number":9023,"utf16_col":39}},"extent_utf16":{"start":{"line_number":9023,"utf16_col":0},"end":{"line_number":9023,"utf16_col":71}}},{"name":"set_socket_options","kind":"method","ident_start":297363,"ident_end":297381,"extent_start":297339,"extent_end":297462,"fully_qualified_name":"ClientImpl::set_socket_options","ident_utf16":{"start":{"line_number":9025,"utf16_col":24},"end":{"line_number":9025,"utf16_col":42}},"extent_utf16":{"start":{"line_number":9025,"utf16_col":0},"end":{"line_number":9027,"utf16_col":1}}},{"name":"set_compress","kind":"method","ident_start":297488,"ident_end":297500,"extent_start":297464,"extent_end":297529,"fully_qualified_name":"ClientImpl::set_compress","ident_utf16":{"start":{"line_number":9029,"utf16_col":24},"end":{"line_number":9029,"utf16_col":36}},"extent_utf16":{"start":{"line_number":9029,"utf16_col":0},"end":{"line_number":9029,"utf16_col":65}}},{"name":"set_decompress","kind":"method","ident_start":297555,"ident_end":297569,"extent_start":297531,"extent_end":297600,"fully_qualified_name":"ClientImpl::set_decompress","ident_utf16":{"start":{"line_number":9031,"utf16_col":24},"end":{"line_number":9031,"utf16_col":38}},"extent_utf16":{"start":{"line_number":9031,"utf16_col":0},"end":{"line_number":9031,"utf16_col":69}}},{"name":"set_interface","kind":"method","ident_start":297626,"ident_end":297639,"extent_start":297602,"extent_end":297689,"fully_qualified_name":"ClientImpl::set_interface","ident_utf16":{"start":{"line_number":9033,"utf16_col":24},"end":{"line_number":9033,"utf16_col":37}},"extent_utf16":{"start":{"line_number":9033,"utf16_col":0},"end":{"line_number":9035,"utf16_col":1}}},{"name":"set_proxy","kind":"method","ident_start":297715,"ident_end":297724,"extent_start":297691,"extent_end":297807,"fully_qualified_name":"ClientImpl::set_proxy","ident_utf16":{"start":{"line_number":9037,"utf16_col":24},"end":{"line_number":9037,"utf16_col":33}},"extent_utf16":{"start":{"line_number":9037,"utf16_col":0},"end":{"line_number":9040,"utf16_col":1}}},{"name":"set_proxy_basic_auth","kind":"method","ident_start":297833,"ident_end":297853,"extent_start":297809,"extent_end":298042,"fully_qualified_name":"ClientImpl::set_proxy_basic_auth","ident_utf16":{"start":{"line_number":9042,"utf16_col":24},"end":{"line_number":9042,"utf16_col":44}},"extent_utf16":{"start":{"line_number":9042,"utf16_col":0},"end":{"line_number":9046,"utf16_col":1}}},{"name":"set_proxy_bearer_token_auth","kind":"method","ident_start":298068,"ident_end":298095,"extent_start":298044,"extent_end":298167,"fully_qualified_name":"ClientImpl::set_proxy_bearer_token_auth","ident_utf16":{"start":{"line_number":9048,"utf16_col":24},"end":{"line_number":9048,"utf16_col":51}},"extent_utf16":{"start":{"line_number":9048,"utf16_col":0},"end":{"line_number":9050,"utf16_col":1}}},{"name":"set_proxy_digest_auth","kind":"method","ident_start":298227,"ident_end":298248,"extent_start":298203,"extent_end":298440,"fully_qualified_name":"ClientImpl::set_proxy_digest_auth","ident_utf16":{"start":{"line_number":9053,"utf16_col":24},"end":{"line_number":9053,"utf16_col":45}},"extent_utf16":{"start":{"line_number":9053,"utf16_col":0},"end":{"line_number":9057,"utf16_col":1}}},{"name":"set_ca_cert_path","kind":"method","ident_start":298466,"ident_end":298482,"extent_start":298442,"extent_end":298684,"fully_qualified_name":"ClientImpl::set_ca_cert_path","ident_utf16":{"start":{"line_number":9059,"utf16_col":24},"end":{"line_number":9059,"utf16_col":40}},"extent_utf16":{"start":{"line_number":9059,"utf16_col":0},"end":{"line_number":9063,"utf16_col":1}}},{"name":"set_ca_cert_store","kind":"method","ident_start":298710,"ident_end":298727,"extent_start":298686,"extent_end":298856,"fully_qualified_name":"ClientImpl::set_ca_cert_store","ident_utf16":{"start":{"line_number":9065,"utf16_col":24},"end":{"line_number":9065,"utf16_col":41}},"extent_utf16":{"start":{"line_number":9065,"utf16_col":0},"end":{"line_number":9069,"utf16_col":1}}},{"name":"enable_server_certificate_verification","kind":"method","ident_start":299685,"ident_end":299723,"extent_start":299661,"extent_end":299787,"fully_qualified_name":"ClientImpl::enable_server_certificate_verification","ident_utf16":{"start":{"line_number":9095,"utf16_col":24},"end":{"line_number":9095,"utf16_col":62}},"extent_utf16":{"start":{"line_number":9095,"utf16_col":0},"end":{"line_number":9097,"utf16_col":1}}},{"name":"enable_server_hostname_verification","kind":"method","ident_start":299813,"ident_end":299848,"extent_start":299789,"extent_end":299909,"fully_qualified_name":"ClientImpl::enable_server_hostname_verification","ident_utf16":{"start":{"line_number":9099,"utf16_col":24},"end":{"line_number":9099,"utf16_col":59}},"extent_utf16":{"start":{"line_number":9099,"utf16_col":0},"end":{"line_number":9101,"utf16_col":1}}},{"name":"set_server_certificate_verifier","kind":"method","ident_start":299935,"ident_end":299966,"extent_start":299911,"extent_end":300073,"fully_qualified_name":"ClientImpl::set_server_certificate_verifier","ident_utf16":{"start":{"line_number":9103,"utf16_col":24},"end":{"line_number":9103,"utf16_col":55}},"extent_utf16":{"start":{"line_number":9103,"utf16_col":0},"end":{"line_number":9106,"utf16_col":1}}},{"name":"set_logger","kind":"method","ident_start":300106,"ident_end":300116,"extent_start":300082,"extent_end":300166,"fully_qualified_name":"ClientImpl::set_logger","ident_utf16":{"start":{"line_number":9109,"utf16_col":24},"end":{"line_number":9109,"utf16_col":34}},"extent_utf16":{"start":{"line_number":9109,"utf16_col":0},"end":{"line_number":9111,"utf16_col":1}}},{"name":"ssl_delete","kind":"function","ident_start":301025,"ident_end":301035,"extent_start":301013,"extent_end":301761,"fully_qualified_name":"ssl_delete","ident_utf16":{"start":{"line_number":9150,"utf16_col":12},"end":{"line_number":9150,"utf16_col":22}},"extent_utf16":{"start":{"line_number":9150,"utf16_col":0},"end":{"line_number":9168,"utf16_col":1}}},{"name":"ssl_connect_or_accept_nonblocking","kind":"function","ident_start":301790,"ident_end":301823,"extent_start":301785,"extent_end":302461,"fully_qualified_name":"ssl_connect_or_accept_nonblocking","ident_utf16":{"start":{"line_number":9171,"utf16_col":5},"end":{"line_number":9171,"utf16_col":38}},"extent_utf16":{"start":{"line_number":9171,"utf16_col":0},"end":{"line_number":9190,"utf16_col":1}}},{"name":"process_server_socket_ssl","kind":"function","ident_start":302497,"ident_end":302522,"extent_start":302485,"extent_end":303172,"fully_qualified_name":"process_server_socket_ssl","ident_utf16":{"start":{"line_number":9193,"utf16_col":12},"end":{"line_number":9193,"utf16_col":37}},"extent_utf16":{"start":{"line_number":9193,"utf16_col":0},"end":{"line_number":9205,"utf16_col":1}}},{"name":"process_client_socket_ssl","kind":"function","ident_start":303208,"ident_end":303233,"extent_start":303196,"extent_end":303695,"fully_qualified_name":"process_client_socket_ssl","ident_utf16":{"start":{"line_number":9208,"utf16_col":12},"end":{"line_number":9208,"utf16_col":37}},"extent_utf16":{"start":{"line_number":9208,"utf16_col":0},"end":{"line_number":9217,"utf16_col":1}}},{"name":"SSLSocketStream","kind":"method","ident_start":303757,"ident_end":303772,"extent_start":303733,"extent_end":304325,"fully_qualified_name":"SSLSocketStream::SSLSocketStream","ident_utf16":{"start":{"line_number":9220,"utf16_col":24},"end":{"line_number":9220,"utf16_col":39}},"extent_utf16":{"start":{"line_number":9220,"utf16_col":0},"end":{"line_number":9231,"utf16_col":1}}},{"name":"is_readable","kind":"method","ident_start":304411,"ident_end":304422,"extent_start":304382,"extent_end":304466,"fully_qualified_name":"SSLSocketStream::is_readable","ident_utf16":{"start":{"line_number":9235,"utf16_col":29},"end":{"line_number":9235,"utf16_col":40}},"extent_utf16":{"start":{"line_number":9235,"utf16_col":0},"end":{"line_number":9237,"utf16_col":1}}},{"name":"wait_readable","kind":"method","ident_start":304497,"ident_end":304510,"extent_start":304468,"extent_end":304911,"fully_qualified_name":"SSLSocketStream::wait_readable","ident_utf16":{"start":{"line_number":9239,"utf16_col":29},"end":{"line_number":9239,"utf16_col":42}},"extent_utf16":{"start":{"line_number":9239,"utf16_col":0},"end":{"line_number":9250,"utf16_col":1}}},{"name":"wait_writable","kind":"method","ident_start":304942,"ident_end":304955,"extent_start":304913,"extent_end":305122,"fully_qualified_name":"SSLSocketStream::wait_writable","ident_utf16":{"start":{"line_number":9252,"utf16_col":29},"end":{"line_number":9252,"utf16_col":42}},"extent_utf16":{"start":{"line_number":9252,"utf16_col":0},"end":{"line_number":9255,"utf16_col":1}}},{"name":"write","kind":"method","ident_start":306201,"ident_end":306206,"extent_start":306169,"extent_end":307783,"fully_qualified_name":"SSLSocketStream::write","ident_utf16":{"start":{"line_number":9290,"utf16_col":32},"end":{"line_number":9290,"utf16_col":37}},"extent_utf16":{"start":{"line_number":9290,"utf16_col":0},"end":{"line_number":9339,"utf16_col":1}}},{"name":"get_remote_ip_and_port","kind":"method","ident_start":307165,"ident_end":307187,"extent_start":307136,"extent_end":307328,"fully_qualified_name":"SSLSocketStream::get_remote_ip_and_port","ident_utf16":{"start":{"line_number":9321,"utf16_col":29},"end":{"line_number":9321,"utf16_col":51}},"extent_utf16":{"start":{"line_number":9321,"utf16_col":0},"end":{"line_number":9324,"utf16_col":1}}},{"name":"get_local_ip_and_port","kind":"method","ident_start":307359,"ident_end":307380,"extent_start":307330,"extent_end":307519,"fully_qualified_name":"SSLSocketStream::get_local_ip_and_port","ident_utf16":{"start":{"line_number":9326,"utf16_col":29},"end":{"line_number":9326,"utf16_col":50}},"extent_utf16":{"start":{"line_number":9326,"utf16_col":0},"end":{"line_number":9329,"utf16_col":1}}},{"name":"socket","kind":"method","ident_start":307554,"ident_end":307560,"extent_start":307521,"extent_end":307586,"fully_qualified_name":"SSLSocketStream::socket","ident_utf16":{"start":{"line_number":9331,"utf16_col":33},"end":{"line_number":9331,"utf16_col":39}},"extent_utf16":{"start":{"line_number":9331,"utf16_col":0},"end":{"line_number":9331,"utf16_col":65}}},{"name":"duration","kind":"method","ident_start":307619,"ident_end":307627,"extent_start":307588,"extent_end":307780,"fully_qualified_name":"SSLSocketStream::duration","ident_utf16":{"start":{"line_number":9333,"utf16_col":31},"end":{"line_number":9333,"utf16_col":39}},"extent_utf16":{"start":{"line_number":9333,"utf16_col":0},"end":{"line_number":9337,"utf16_col":1}}},{"name":"SSLServer","kind":"method","ident_start":307857,"ident_end":307866,"extent_start":307839,"extent_end":309191,"fully_qualified_name":"SSLServer::SSLServer","ident_utf16":{"start":{"line_number":9342,"utf16_col":18},"end":{"line_number":9342,"utf16_col":27}},"extent_utf16":{"start":{"line_number":9342,"utf16_col":0},"end":{"line_number":9375,"utf16_col":1}}},{"name":"SSLServer","kind":"method","ident_start":309211,"ident_end":309220,"extent_start":309193,"extent_end":309961,"fully_qualified_name":"SSLServer::SSLServer","ident_utf16":{"start":{"line_number":9377,"utf16_col":18},"end":{"line_number":9377,"utf16_col":27}},"extent_utf16":{"start":{"line_number":9377,"utf16_col":0},"end":{"line_number":9399,"utf16_col":1}}},{"name":"SSLServer","kind":"method","ident_start":309981,"ident_end":309990,"extent_start":309963,"extent_end":310218,"fully_qualified_name":"SSLServer::SSLServer","ident_utf16":{"start":{"line_number":9401,"utf16_col":18},"end":{"line_number":9401,"utf16_col":27}},"extent_utf16":{"start":{"line_number":9401,"utf16_col":0},"end":{"line_number":9410,"utf16_col":1}}},{"name":"is_valid","kind":"method","ident_start":310315,"ident_end":310323,"extent_start":310292,"extent_end":310348,"fully_qualified_name":"SSLServer::is_valid","ident_utf16":{"start":{"line_number":9416,"utf16_col":23},"end":{"line_number":9416,"utf16_col":31}},"extent_utf16":{"start":{"line_number":9416,"utf16_col":0},"end":{"line_number":9416,"utf16_col":56}}},{"name":"update_certs","kind":"method","ident_start":310438,"ident_end":310450,"extent_start":310415,"extent_end":310796,"fully_qualified_name":"SSLServer::update_certs","ident_utf16":{"start":{"line_number":9420,"utf16_col":23},"end":{"line_number":9420,"utf16_col":35}},"extent_utf16":{"start":{"line_number":9420,"utf16_col":0},"end":{"line_number":9431,"utf16_col":1}}},{"name":"process_and_close_socket","kind":"method","ident_start":310821,"ident_end":310845,"extent_start":310798,"extent_end":312296,"fully_qualified_name":"SSLServer::process_and_close_socket","ident_utf16":{"start":{"line_number":9433,"utf16_col":23},"end":{"line_number":9433,"utf16_col":47}},"extent_utf16":{"start":{"line_number":9433,"utf16_col":0},"end":{"line_number":9472,"utf16_col":1}}},{"name":"SSLClient","kind":"method","ident_start":312350,"ident_end":312359,"extent_start":312332,"extent_end":312444,"fully_qualified_name":"SSLClient::SSLClient","ident_utf16":{"start":{"line_number":9475,"utf16_col":18},"end":{"line_number":9475,"utf16_col":27}},"extent_utf16":{"start":{"line_number":9475,"utf16_col":0},"end":{"line_number":9476,"utf16_col":59}}},{"name":"SSLClient","kind":"method","ident_start":312464,"ident_end":312473,"extent_start":312446,"extent_end":312569,"fully_qualified_name":"SSLClient::SSLClient","ident_utf16":{"start":{"line_number":9478,"utf16_col":18},"end":{"line_number":9478,"utf16_col":27}},"extent_utf16":{"start":{"line_number":9478,"utf16_col":0},"end":{"line_number":9479,"utf16_col":60}}},{"name":"SSLClient","kind":"method","ident_start":312589,"ident_end":312598,"extent_start":312571,"extent_end":313771,"fully_qualified_name":"SSLClient::SSLClient","ident_utf16":{"start":{"line_number":9481,"utf16_col":18},"end":{"line_number":9481,"utf16_col":27}},"extent_utf16":{"start":{"line_number":9481,"utf16_col":0},"end":{"line_number":9510,"utf16_col":1}}},{"name":"SSLClient","kind":"method","ident_start":313791,"ident_end":313800,"extent_start":313773,"extent_end":314671,"fully_qualified_name":"SSLClient::SSLClient","ident_utf16":{"start":{"line_number":9512,"utf16_col":18},"end":{"line_number":9512,"utf16_col":27}},"extent_utf16":{"start":{"line_number":9512,"utf16_col":0},"end":{"line_number":9536,"utf16_col":1}}},{"name":"is_valid","kind":"method","ident_start":315015,"ident_end":315023,"extent_start":314992,"extent_end":315048,"fully_qualified_name":"SSLClient::is_valid","ident_utf16":{"start":{"line_number":9546,"utf16_col":23},"end":{"line_number":9546,"utf16_col":31}},"extent_utf16":{"start":{"line_number":9546,"utf16_col":0},"end":{"line_number":9546,"utf16_col":56}}},{"name":"set_ca_cert_store","kind":"method","ident_start":315073,"ident_end":315090,"extent_start":315050,"extent_end":315421,"fully_qualified_name":"SSLClient::set_ca_cert_store","ident_utf16":{"start":{"line_number":9548,"utf16_col":23},"end":{"line_number":9548,"utf16_col":40}},"extent_utf16":{"start":{"line_number":9548,"utf16_col":0},"end":{"line_number":9559,"utf16_col":1}}},{"name":"load_ca_cert_store","kind":"method","ident_start":315446,"ident_end":315464,"extent_start":315423,"extent_end":315619,"fully_qualified_name":"SSLClient::load_ca_cert_store","ident_utf16":{"start":{"line_number":9561,"utf16_col":23},"end":{"line_number":9561,"utf16_col":41}},"extent_utf16":{"start":{"line_number":9561,"utf16_col":0},"end":{"line_number":9564,"utf16_col":1}}},{"name":"get_openssl_verify_result","kind":"method","ident_start":315644,"ident_end":315669,"extent_start":315621,"extent_end":315706,"fully_qualified_name":"SSLClient::get_openssl_verify_result","ident_utf16":{"start":{"line_number":9566,"utf16_col":23},"end":{"line_number":9566,"utf16_col":48}},"extent_utf16":{"start":{"line_number":9566,"utf16_col":0},"end":{"line_number":9568,"utf16_col":1}}},{"name":"create_and_connect_socket","kind":"method","ident_start":315796,"ident_end":315821,"extent_start":315773,"extent_end":315932,"fully_qualified_name":"SSLClient::create_and_connect_socket","ident_utf16":{"start":{"line_number":9572,"utf16_col":23},"end":{"line_number":9572,"utf16_col":48}},"extent_utf16":{"start":{"line_number":9572,"utf16_col":0},"end":{"line_number":9574,"utf16_col":1}}},{"name":"connect_with_proxy","kind":"method","ident_start":316038,"ident_end":316056,"extent_start":316015,"extent_end":318958,"fully_qualified_name":"SSLClient::connect_with_proxy","ident_utf16":{"start":{"line_number":9577,"utf16_col":23},"end":{"line_number":9577,"utf16_col":41}},"extent_utf16":{"start":{"line_number":9577,"utf16_col":0},"end":{"line_number":9653,"utf16_col":1}}},{"name":"load_certs","kind":"method","ident_start":318983,"ident_end":318993,"extent_start":318960,"extent_end":319966,"fully_qualified_name":"SSLClient::load_certs","ident_utf16":{"start":{"line_number":9655,"utf16_col":23},"end":{"line_number":9655,"utf16_col":33}},"extent_utf16":{"start":{"line_number":9655,"utf16_col":0},"end":{"line_number":9685,"utf16_col":1}}},{"name":"initialize_ssl","kind":"method","ident_start":319991,"ident_end":320005,"extent_start":319968,"extent_end":322402,"fully_qualified_name":"SSLClient::initialize_ssl","ident_utf16":{"start":{"line_number":9687,"utf16_col":23},"end":{"line_number":9687,"utf16_col":37}},"extent_utf16":{"start":{"line_number":9687,"utf16_col":0},"end":{"line_number":9765,"utf16_col":1}}},{"name":"shutdown_ssl","kind":"method","ident_start":322427,"ident_end":322439,"extent_start":322404,"extent_end":322535,"fully_qualified_name":"SSLClient::shutdown_ssl","ident_utf16":{"start":{"line_number":9767,"utf16_col":23},"end":{"line_number":9767,"utf16_col":35}},"extent_utf16":{"start":{"line_number":9767,"utf16_col":0},"end":{"line_number":9769,"utf16_col":1}}},{"name":"shutdown_ssl_impl","kind":"method","ident_start":322560,"ident_end":322577,"extent_start":322537,"extent_end":322942,"fully_qualified_name":"SSLClient::shutdown_ssl_impl","ident_utf16":{"start":{"line_number":9771,"utf16_col":23},"end":{"line_number":9771,"utf16_col":40}},"extent_utf16":{"start":{"line_number":9771,"utf16_col":0},"end":{"line_number":9783,"utf16_col":1}}},{"name":"process_socket","kind":"method","ident_start":322967,"ident_end":322981,"extent_start":322944,"extent_end":323369,"fully_qualified_name":"SSLClient::process_socket","ident_utf16":{"start":{"line_number":9785,"utf16_col":23},"end":{"line_number":9785,"utf16_col":37}},"extent_utf16":{"start":{"line_number":9785,"utf16_col":0},"end":{"line_number":9794,"utf16_col":1}}},{"name":"is_ssl","kind":"method","ident_start":323394,"ident_end":323400,"extent_start":323371,"extent_end":323425,"fully_qualified_name":"SSLClient::is_ssl","ident_utf16":{"start":{"line_number":9796,"utf16_col":23},"end":{"line_number":9796,"utf16_col":29}},"extent_utf16":{"start":{"line_number":9796,"utf16_col":0},"end":{"line_number":9796,"utf16_col":54}}},{"name":"verify_host","kind":"method","ident_start":323450,"ident_end":323461,"extent_start":323427,"extent_end":324739,"fully_qualified_name":"SSLClient::verify_host","ident_utf16":{"start":{"line_number":9798,"utf16_col":23},"end":{"line_number":9798,"utf16_col":34}},"extent_utf16":{"start":{"line_number":9798,"utf16_col":0},"end":{"line_number":9822,"utf16_col":1}}},{"name":"verify_host_with_subject_alt_name","kind":"method","ident_start":324764,"ident_end":324797,"extent_start":324741,"extent_end":326328,"fully_qualified_name":"SSLClient::verify_host_with_subject_alt_name","ident_utf16":{"start":{"line_number":9825,"utf16_col":11},"end":{"line_number":9825,"utf16_col":44}},"extent_utf16":{"start":{"line_number":9824,"utf16_col":0},"end":{"line_number":9879,"utf16_col":1}}},{"name":"verify_host_with_common_name","kind":"method","ident_start":326353,"ident_end":326381,"extent_start":326330,"extent_end":326795,"fully_qualified_name":"SSLClient::verify_host_with_common_name","ident_utf16":{"start":{"line_number":9881,"utf16_col":23},"end":{"line_number":9881,"utf16_col":51}},"extent_utf16":{"start":{"line_number":9881,"utf16_col":0},"end":{"line_number":9895,"utf16_col":1}}},{"name":"check_host_name","kind":"method","ident_start":326820,"ident_end":326835,"extent_start":326797,"extent_end":327748,"fully_qualified_name":"SSLClient::check_host_name","ident_utf16":{"start":{"line_number":9897,"utf16_col":23},"end":{"line_number":9897,"utf16_col":38}},"extent_utf16":{"start":{"line_number":9897,"utf16_col":0},"end":{"line_number":9923,"utf16_col":1}}},{"name":"Client","kind":"method","ident_start":327807,"ident_end":327813,"extent_start":327792,"extent_end":327914,"fully_qualified_name":"Client::Client","ident_utf16":{"start":{"line_number":9927,"utf16_col":15},"end":{"line_number":9927,"utf16_col":21}},"extent_utf16":{"start":{"line_number":9927,"utf16_col":0},"end":{"line_number":9928,"utf16_col":63}}},{"name":"Client","kind":"method","ident_start":329537,"ident_end":329543,"extent_start":329522,"extent_end":329637,"fully_qualified_name":"Client::Client","ident_utf16":{"start":{"line_number":9978,"utf16_col":15},"end":{"line_number":9978,"utf16_col":21}},"extent_utf16":{"start":{"line_number":9978,"utf16_col":0},"end":{"line_number":9979,"utf16_col":58}}},{"name":"Client","kind":"method","ident_start":329654,"ident_end":329660,"extent_start":329639,"extent_end":329949,"fully_qualified_name":"Client::Client","ident_utf16":{"start":{"line_number":9981,"utf16_col":15},"end":{"line_number":9981,"utf16_col":21}},"extent_utf16":{"start":{"line_number":9981,"utf16_col":0},"end":{"line_number":9985,"utf16_col":63}}},{"name":"is_valid","kind":"method","ident_start":330008,"ident_end":330016,"extent_start":329988,"extent_end":330074,"fully_qualified_name":"Client::is_valid","ident_utf16":{"start":{"line_number":9989,"utf16_col":20},"end":{"line_number":9989,"utf16_col":28}},"extent_utf16":{"start":{"line_number":9989,"utf16_col":0},"end":{"line_number":9991,"utf16_col":1}}},{"name":"Get","kind":"method","ident_start":330098,"ident_end":330101,"extent_start":330076,"extent_end":330154,"fully_qualified_name":"Client::Get","ident_utf16":{"start":{"line_number":9993,"utf16_col":22},"end":{"line_number":9993,"utf16_col":25}},"extent_utf16":{"start":{"line_number":9993,"utf16_col":0},"end":{"line_number":9993,"utf16_col":78}}},{"name":"Get","kind":"method","ident_start":330177,"ident_end":330180,"extent_start":330155,"extent_end":330268,"fully_qualified_name":"Client::Get","ident_utf16":{"start":{"line_number":9994,"utf16_col":22},"end":{"line_number":9994,"utf16_col":25}},"extent_utf16":{"start":{"line_number":9994,"utf16_col":0},"end":{"line_number":9996,"utf16_col":1}}},{"name":"Get","kind":"method","ident_start":330291,"ident_end":330294,"extent_start":330269,"extent_end":330389,"fully_qualified_name":"Client::Get","ident_utf16":{"start":{"line_number":9997,"utf16_col":22},"end":{"line_number":9997,"utf16_col":25}},"extent_utf16":{"start":{"line_number":9997,"utf16_col":0},"end":{"line_number":9999,"utf16_col":1}}},{"name":"Get","kind":"method","ident_start":330412,"ident_end":330415,"extent_start":330390,"extent_end":330569,"fully_qualified_name":"Client::Get","ident_utf16":{"start":{"line_number":10000,"utf16_col":22},"end":{"line_number":10000,"utf16_col":25}},"extent_utf16":{"start":{"line_number":10000,"utf16_col":0},"end":{"line_number":10003,"utf16_col":1}}},{"name":"Get","kind":"method","ident_start":330592,"ident_end":330595,"extent_start":330570,"extent_end":330739,"fully_qualified_name":"Client::Get","ident_utf16":{"start":{"line_number":10004,"utf16_col":22},"end":{"line_number":10004,"utf16_col":25}},"extent_utf16":{"start":{"line_number":10004,"utf16_col":0},"end":{"line_number":10007,"utf16_col":1}}},{"name":"Get","kind":"method","ident_start":330762,"ident_end":330765,"extent_start":330740,"extent_end":330942,"fully_qualified_name":"Client::Get","ident_utf16":{"start":{"line_number":10008,"utf16_col":22},"end":{"line_number":10008,"utf16_col":25}},"extent_utf16":{"start":{"line_number":10008,"utf16_col":0},"end":{"line_number":10011,"utf16_col":1}}},{"name":"Get","kind":"method","ident_start":330965,"ident_end":330968,"extent_start":330943,"extent_end":331152,"fully_qualified_name":"Client::Get","ident_utf16":{"start":{"line_number":10012,"utf16_col":22},"end":{"line_number":10012,"utf16_col":25}},"extent_utf16":{"start":{"line_number":10012,"utf16_col":0},"end":{"line_number":10015,"utf16_col":1}}},{"name":"Get","kind":"method","ident_start":331175,"ident_end":331178,"extent_start":331153,"extent_end":331414,"fully_qualified_name":"Client::Get","ident_utf16":{"start":{"line_number":10016,"utf16_col":22},"end":{"line_number":10016,"utf16_col":25}},"extent_utf16":{"start":{"line_number":10016,"utf16_col":0},"end":{"line_number":10020,"utf16_col":1}}},{"name":"Get","kind":"method","ident_start":331437,"ident_end":331440,"extent_start":331415,"extent_end":331692,"fully_qualified_name":"Client::Get","ident_utf16":{"start":{"line_number":10021,"utf16_col":22},"end":{"line_number":10021,"utf16_col":25}},"extent_utf16":{"start":{"line_number":10021,"utf16_col":0},"end":{"line_number":10026,"utf16_col":1}}},{"name":"Get","kind":"method","ident_start":331715,"ident_end":331718,"extent_start":331693,"extent_end":332003,"fully_qualified_name":"Client::Get","ident_utf16":{"start":{"line_number":10027,"utf16_col":22},"end":{"line_number":10027,"utf16_col":25}},"extent_utf16":{"start":{"line_number":10027,"utf16_col":0},"end":{"line_number":10032,"utf16_col":1}}},{"name":"Get","kind":"method","ident_start":332026,"ident_end":332029,"extent_start":332004,"extent_end":332321,"fully_qualified_name":"Client::Get","ident_utf16":{"start":{"line_number":10033,"utf16_col":22},"end":{"line_number":10033,"utf16_col":25}},"extent_utf16":{"start":{"line_number":10033,"utf16_col":0},"end":{"line_number":10038,"utf16_col":1}}},{"name":"Get","kind":"method","ident_start":332344,"ident_end":332347,"extent_start":332322,"extent_end":332672,"fully_qualified_name":"Client::Get","ident_utf16":{"start":{"line_number":10039,"utf16_col":22},"end":{"line_number":10039,"utf16_col":25}},"extent_utf16":{"start":{"line_number":10039,"utf16_col":0},"end":{"line_number":10044,"utf16_col":1}}},{"name":"Get","kind":"method","ident_start":332695,"ident_end":332698,"extent_start":332673,"extent_end":332882,"fully_qualified_name":"Client::Get","ident_utf16":{"start":{"line_number":10045,"utf16_col":22},"end":{"line_number":10045,"utf16_col":25}},"extent_utf16":{"start":{"line_number":10045,"utf16_col":0},"end":{"line_number":10048,"utf16_col":1}}},{"name":"Get","kind":"method","ident_start":332905,"ident_end":332908,"extent_start":332883,"extent_end":333200,"fully_qualified_name":"Client::Get","ident_utf16":{"start":{"line_number":10049,"utf16_col":22},"end":{"line_number":10049,"utf16_col":25}},"extent_utf16":{"start":{"line_number":10049,"utf16_col":0},"end":{"line_number":10054,"utf16_col":1}}},{"name":"Get","kind":"method","ident_start":333223,"ident_end":333226,"extent_start":333201,"extent_end":333607,"fully_qualified_name":"Client::Get","ident_utf16":{"start":{"line_number":10055,"utf16_col":22},"end":{"line_number":10055,"utf16_col":25}},"extent_utf16":{"start":{"line_number":10055,"utf16_col":0},"end":{"line_number":10061,"utf16_col":1}}},{"name":"Head","kind":"method","ident_start":333631,"ident_end":333635,"extent_start":333609,"extent_end":333689,"fully_qualified_name":"Client::Head","ident_utf16":{"start":{"line_number":10063,"utf16_col":22},"end":{"line_number":10063,"utf16_col":26}},"extent_utf16":{"start":{"line_number":10063,"utf16_col":0},"end":{"line_number":10063,"utf16_col":80}}},{"name":"Head","kind":"method","ident_start":333712,"ident_end":333716,"extent_start":333690,"extent_end":333805,"fully_qualified_name":"Client::Head","ident_utf16":{"start":{"line_number":10064,"utf16_col":22},"end":{"line_number":10064,"utf16_col":26}},"extent_utf16":{"start":{"line_number":10064,"utf16_col":0},"end":{"line_number":10066,"utf16_col":1}}},{"name":"Post","kind":"method","ident_start":333829,"ident_end":333833,"extent_start":333807,"extent_end":333887,"fully_qualified_name":"Client::Post","ident_utf16":{"start":{"line_number":10068,"utf16_col":22},"end":{"line_number":10068,"utf16_col":26}},"extent_utf16":{"start":{"line_number":10068,"utf16_col":0},"end":{"line_number":10068,"utf16_col":80}}},{"name":"Post","kind":"method","ident_start":333910,"ident_end":333914,"extent_start":333888,"extent_end":334003,"fully_qualified_name":"Client::Post","ident_utf16":{"start":{"line_number":10069,"utf16_col":22},"end":{"line_number":10069,"utf16_col":26}},"extent_utf16":{"start":{"line_number":10069,"utf16_col":0},"end":{"line_number":10071,"utf16_col":1}}},{"name":"Post","kind":"method","ident_start":334026,"ident_end":334030,"extent_start":334004,"extent_end":334250,"fully_qualified_name":"Client::Post","ident_utf16":{"start":{"line_number":10072,"utf16_col":22},"end":{"line_number":10072,"utf16_col":26}},"extent_utf16":{"start":{"line_number":10072,"utf16_col":0},"end":{"line_number":10076,"utf16_col":1}}},{"name":"Post","kind":"method","ident_start":334273,"ident_end":334277,"extent_start":334251,"extent_end":334530,"fully_qualified_name":"Client::Post","ident_utf16":{"start":{"line_number":10077,"utf16_col":22},"end":{"line_number":10077,"utf16_col":26}},"extent_utf16":{"start":{"line_number":10077,"utf16_col":0},"end":{"line_number":10081,"utf16_col":1}}},{"name":"Post","kind":"method","ident_start":334553,"ident_end":334557,"extent_start":334531,"extent_end":334859,"fully_qualified_name":"Client::Post","ident_utf16":{"start":{"line_number":10082,"utf16_col":22},"end":{"line_number":10082,"utf16_col":26}},"extent_utf16":{"start":{"line_number":10082,"utf16_col":0},"end":{"line_number":10087,"utf16_col":1}}},{"name":"Post","kind":"method","ident_start":334882,"ident_end":334886,"extent_start":334860,"extent_end":335047,"fully_qualified_name":"Client::Post","ident_utf16":{"start":{"line_number":10088,"utf16_col":22},"end":{"line_number":10088,"utf16_col":26}},"extent_utf16":{"start":{"line_number":10088,"utf16_col":0},"end":{"line_number":10091,"utf16_col":1}}},{"name":"Post","kind":"method","ident_start":335070,"ident_end":335074,"extent_start":335048,"extent_end":335264,"fully_qualified_name":"Client::Post","ident_utf16":{"start":{"line_number":10092,"utf16_col":22},"end":{"line_number":10092,"utf16_col":26}},"extent_utf16":{"start":{"line_number":10092,"utf16_col":0},"end":{"line_number":10095,"utf16_col":1}}},{"name":"Post","kind":"method","ident_start":335287,"ident_end":335291,"extent_start":335265,"extent_end":335512,"fully_qualified_name":"Client::Post","ident_utf16":{"start":{"line_number":10096,"utf16_col":22},"end":{"line_number":10096,"utf16_col":26}},"extent_utf16":{"start":{"line_number":10096,"utf16_col":0},"end":{"line_number":10100,"utf16_col":1}}},{"name":"Post","kind":"method","ident_start":335535,"ident_end":335539,"extent_start":335513,"extent_end":335789,"fully_qualified_name":"Client::Post","ident_utf16":{"start":{"line_number":10101,"utf16_col":22},"end":{"line_number":10101,"utf16_col":26}},"extent_utf16":{"start":{"line_number":10101,"utf16_col":0},"end":{"line_number":10105,"utf16_col":1}}},{"name":"Post","kind":"method","ident_start":335812,"ident_end":335816,"extent_start":335790,"extent_end":336095,"fully_qualified_name":"Client::Post","ident_utf16":{"start":{"line_number":10106,"utf16_col":22},"end":{"line_number":10106,"utf16_col":26}},"extent_utf16":{"start":{"line_number":10106,"utf16_col":0},"end":{"line_number":10111,"utf16_col":1}}},{"name":"Post","kind":"method","ident_start":336118,"ident_end":336122,"extent_start":336096,"extent_end":336355,"fully_qualified_name":"Client::Post","ident_utf16":{"start":{"line_number":10112,"utf16_col":22},"end":{"line_number":10112,"utf16_col":26}},"extent_utf16":{"start":{"line_number":10112,"utf16_col":0},"end":{"line_number":10116,"utf16_col":1}}},{"name":"Post","kind":"method","ident_start":336378,"ident_end":336382,"extent_start":336356,"extent_end":336721,"fully_qualified_name":"Client::Post","ident_utf16":{"start":{"line_number":10117,"utf16_col":22},"end":{"line_number":10117,"utf16_col":26}},"extent_utf16":{"start":{"line_number":10117,"utf16_col":0},"end":{"line_number":10123,"utf16_col":1}}},{"name":"Post","kind":"method","ident_start":336744,"ident_end":336748,"extent_start":336722,"extent_end":337014,"fully_qualified_name":"Client::Post","ident_utf16":{"start":{"line_number":10124,"utf16_col":22},"end":{"line_number":10124,"utf16_col":26}},"extent_utf16":{"start":{"line_number":10124,"utf16_col":0},"end":{"line_number":10128,"utf16_col":1}}},{"name":"Post","kind":"method","ident_start":337037,"ident_end":337041,"extent_start":337015,"extent_end":337127,"fully_qualified_name":"Client::Post","ident_utf16":{"start":{"line_number":10129,"utf16_col":22},"end":{"line_number":10129,"utf16_col":26}},"extent_utf16":{"start":{"line_number":10129,"utf16_col":0},"end":{"line_number":10131,"utf16_col":1}}},{"name":"Post","kind":"method","ident_start":337150,"ident_end":337154,"extent_start":337128,"extent_end":337300,"fully_qualified_name":"Client::Post","ident_utf16":{"start":{"line_number":10132,"utf16_col":22},"end":{"line_number":10132,"utf16_col":26}},"extent_utf16":{"start":{"line_number":10132,"utf16_col":0},"end":{"line_number":10135,"utf16_col":1}}},{"name":"Post","kind":"method","ident_start":337323,"ident_end":337327,"extent_start":337301,"extent_end":337502,"fully_qualified_name":"Client::Post","ident_utf16":{"start":{"line_number":10136,"utf16_col":22},"end":{"line_number":10136,"utf16_col":26}},"extent_utf16":{"start":{"line_number":10136,"utf16_col":0},"end":{"line_number":10139,"utf16_col":1}}},{"name":"Post","kind":"method","ident_start":337525,"ident_end":337529,"extent_start":337503,"extent_end":337656,"fully_qualified_name":"Client::Post","ident_utf16":{"start":{"line_number":10140,"utf16_col":22},"end":{"line_number":10140,"utf16_col":26}},"extent_utf16":{"start":{"line_number":10140,"utf16_col":0},"end":{"line_number":10143,"utf16_col":1}}},{"name":"Post","kind":"method","ident_start":337679,"ident_end":337683,"extent_start":337657,"extent_end":337843,"fully_qualified_name":"Client::Post","ident_utf16":{"start":{"line_number":10144,"utf16_col":22},"end":{"line_number":10144,"utf16_col":26}},"extent_utf16":{"start":{"line_number":10144,"utf16_col":0},"end":{"line_number":10147,"utf16_col":1}}},{"name":"Post","kind":"method","ident_start":337866,"ident_end":337870,"extent_start":337844,"extent_end":338096,"fully_qualified_name":"Client::Post","ident_utf16":{"start":{"line_number":10148,"utf16_col":22},"end":{"line_number":10148,"utf16_col":26}},"extent_utf16":{"start":{"line_number":10148,"utf16_col":0},"end":{"line_number":10152,"utf16_col":1}}},{"name":"Post","kind":"method","ident_start":338119,"ident_end":338123,"extent_start":338097,"extent_end":338352,"fully_qualified_name":"Client::Post","ident_utf16":{"start":{"line_number":10154,"utf16_col":8},"end":{"line_number":10154,"utf16_col":12}},"extent_utf16":{"start":{"line_number":10153,"utf16_col":0},"end":{"line_number":10158,"utf16_col":1}}},{"name":"Put","kind":"method","ident_start":338375,"ident_end":338378,"extent_start":338353,"extent_end":338431,"fully_qualified_name":"Client::Put","ident_utf16":{"start":{"line_number":10159,"utf16_col":22},"end":{"line_number":10159,"utf16_col":25}},"extent_utf16":{"start":{"line_number":10159,"utf16_col":0},"end":{"line_number":10159,"utf16_col":78}}},{"name":"Put","kind":"method","ident_start":338454,"ident_end":338457,"extent_start":338432,"extent_end":338674,"fully_qualified_name":"Client::Put","ident_utf16":{"start":{"line_number":10160,"utf16_col":22},"end":{"line_number":10160,"utf16_col":25}},"extent_utf16":{"start":{"line_number":10160,"utf16_col":0},"end":{"line_number":10164,"utf16_col":1}}},{"name":"Put","kind":"method","ident_start":338697,"ident_end":338700,"extent_start":338675,"extent_end":338950,"fully_qualified_name":"Client::Put","ident_utf16":{"start":{"line_number":10165,"utf16_col":22},"end":{"line_number":10165,"utf16_col":25}},"extent_utf16":{"start":{"line_number":10165,"utf16_col":0},"end":{"line_number":10169,"utf16_col":1}}},{"name":"Put","kind":"method","ident_start":338973,"ident_end":338976,"extent_start":338951,"extent_end":339255,"fully_qualified_name":"Client::Put","ident_utf16":{"start":{"line_number":10170,"utf16_col":22},"end":{"line_number":10170,"utf16_col":25}},"extent_utf16":{"start":{"line_number":10170,"utf16_col":0},"end":{"line_number":10174,"utf16_col":1}}},{"name":"Put","kind":"method","ident_start":339278,"ident_end":339281,"extent_start":339256,"extent_end":339440,"fully_qualified_name":"Client::Put","ident_utf16":{"start":{"line_number":10175,"utf16_col":22},"end":{"line_number":10175,"utf16_col":25}},"extent_utf16":{"start":{"line_number":10175,"utf16_col":0},"end":{"line_number":10178,"utf16_col":1}}},{"name":"Put","kind":"method","ident_start":339463,"ident_end":339466,"extent_start":339441,"extent_end":339654,"fully_qualified_name":"Client::Put","ident_utf16":{"start":{"line_number":10179,"utf16_col":22},"end":{"line_number":10179,"utf16_col":25}},"extent_utf16":{"start":{"line_number":10179,"utf16_col":0},"end":{"line_number":10182,"utf16_col":1}}},{"name":"Put","kind":"method","ident_start":339677,"ident_end":339680,"extent_start":339655,"extent_end":339898,"fully_qualified_name":"Client::Put","ident_utf16":{"start":{"line_number":10183,"utf16_col":22},"end":{"line_number":10183,"utf16_col":25}},"extent_utf16":{"start":{"line_number":10183,"utf16_col":0},"end":{"line_number":10187,"utf16_col":1}}},{"name":"Put","kind":"method","ident_start":339921,"ident_end":339924,"extent_start":339899,"extent_end":340171,"fully_qualified_name":"Client::Put","ident_utf16":{"start":{"line_number":10188,"utf16_col":22},"end":{"line_number":10188,"utf16_col":25}},"extent_utf16":{"start":{"line_number":10188,"utf16_col":0},"end":{"line_number":10192,"utf16_col":1}}},{"name":"Put","kind":"method","ident_start":340194,"ident_end":340197,"extent_start":340172,"extent_end":340472,"fully_qualified_name":"Client::Put","ident_utf16":{"start":{"line_number":10193,"utf16_col":22},"end":{"line_number":10193,"utf16_col":25}},"extent_utf16":{"start":{"line_number":10193,"utf16_col":0},"end":{"line_number":10198,"utf16_col":1}}},{"name":"Put","kind":"method","ident_start":340495,"ident_end":340498,"extent_start":340473,"extent_end":340728,"fully_qualified_name":"Client::Put","ident_utf16":{"start":{"line_number":10199,"utf16_col":22},"end":{"line_number":10199,"utf16_col":25}},"extent_utf16":{"start":{"line_number":10199,"utf16_col":0},"end":{"line_number":10203,"utf16_col":1}}},{"name":"Put","kind":"method","ident_start":340751,"ident_end":340754,"extent_start":340729,"extent_end":341088,"fully_qualified_name":"Client::Put","ident_utf16":{"start":{"line_number":10204,"utf16_col":22},"end":{"line_number":10204,"utf16_col":25}},"extent_utf16":{"start":{"line_number":10204,"utf16_col":0},"end":{"line_number":10210,"utf16_col":1}}},{"name":"Put","kind":"method","ident_start":341111,"ident_end":341114,"extent_start":341089,"extent_end":341377,"fully_qualified_name":"Client::Put","ident_utf16":{"start":{"line_number":10211,"utf16_col":22},"end":{"line_number":10211,"utf16_col":25}},"extent_utf16":{"start":{"line_number":10211,"utf16_col":0},"end":{"line_number":10215,"utf16_col":1}}},{"name":"Put","kind":"method","ident_start":341400,"ident_end":341403,"extent_start":341378,"extent_end":341488,"fully_qualified_name":"Client::Put","ident_utf16":{"start":{"line_number":10216,"utf16_col":22},"end":{"line_number":10216,"utf16_col":25}},"extent_utf16":{"start":{"line_number":10216,"utf16_col":0},"end":{"line_number":10218,"utf16_col":1}}},{"name":"Put","kind":"method","ident_start":341511,"ident_end":341514,"extent_start":341489,"extent_end":341658,"fully_qualified_name":"Client::Put","ident_utf16":{"start":{"line_number":10219,"utf16_col":22},"end":{"line_number":10219,"utf16_col":25}},"extent_utf16":{"start":{"line_number":10219,"utf16_col":0},"end":{"line_number":10222,"utf16_col":1}}},{"name":"Put","kind":"method","ident_start":341681,"ident_end":341684,"extent_start":341659,"extent_end":341857,"fully_qualified_name":"Client::Put","ident_utf16":{"start":{"line_number":10223,"utf16_col":22},"end":{"line_number":10223,"utf16_col":25}},"extent_utf16":{"start":{"line_number":10223,"utf16_col":0},"end":{"line_number":10226,"utf16_col":1}}},{"name":"Put","kind":"method","ident_start":341880,"ident_end":341883,"extent_start":341858,"extent_end":342008,"fully_qualified_name":"Client::Put","ident_utf16":{"start":{"line_number":10227,"utf16_col":22},"end":{"line_number":10227,"utf16_col":25}},"extent_utf16":{"start":{"line_number":10227,"utf16_col":0},"end":{"line_number":10230,"utf16_col":1}}},{"name":"Put","kind":"method","ident_start":342031,"ident_end":342034,"extent_start":342009,"extent_end":342192,"fully_qualified_name":"Client::Put","ident_utf16":{"start":{"line_number":10231,"utf16_col":22},"end":{"line_number":10231,"utf16_col":25}},"extent_utf16":{"start":{"line_number":10231,"utf16_col":0},"end":{"line_number":10234,"utf16_col":1}}},{"name":"Put","kind":"method","ident_start":342215,"ident_end":342218,"extent_start":342193,"extent_end":342441,"fully_qualified_name":"Client::Put","ident_utf16":{"start":{"line_number":10235,"utf16_col":22},"end":{"line_number":10235,"utf16_col":25}},"extent_utf16":{"start":{"line_number":10235,"utf16_col":0},"end":{"line_number":10239,"utf16_col":1}}},{"name":"Put","kind":"method","ident_start":342464,"ident_end":342467,"extent_start":342442,"extent_end":342693,"fully_qualified_name":"Client::Put","ident_utf16":{"start":{"line_number":10241,"utf16_col":8},"end":{"line_number":10241,"utf16_col":11}},"extent_utf16":{"start":{"line_number":10240,"utf16_col":0},"end":{"line_number":10245,"utf16_col":1}}},{"name":"Patch","kind":"method","ident_start":342716,"ident_end":342721,"extent_start":342694,"extent_end":342778,"fully_qualified_name":"Client::Patch","ident_utf16":{"start":{"line_number":10246,"utf16_col":22},"end":{"line_number":10246,"utf16_col":27}},"extent_utf16":{"start":{"line_number":10246,"utf16_col":0},"end":{"line_number":10248,"utf16_col":1}}},{"name":"Patch","kind":"method","ident_start":342801,"ident_end":342806,"extent_start":342779,"extent_end":343029,"fully_qualified_name":"Client::Patch","ident_utf16":{"start":{"line_number":10249,"utf16_col":22},"end":{"line_number":10249,"utf16_col":27}},"extent_utf16":{"start":{"line_number":10249,"utf16_col":0},"end":{"line_number":10253,"utf16_col":1}}},{"name":"Patch","kind":"method","ident_start":343052,"ident_end":343057,"extent_start":343030,"extent_end":343337,"fully_qualified_name":"Client::Patch","ident_utf16":{"start":{"line_number":10254,"utf16_col":22},"end":{"line_number":10254,"utf16_col":27}},"extent_utf16":{"start":{"line_number":10254,"utf16_col":0},"end":{"line_number":10259,"utf16_col":1}}},{"name":"Patch","kind":"method","ident_start":343360,"ident_end":343365,"extent_start":343338,"extent_end":343621,"fully_qualified_name":"Client::Patch","ident_utf16":{"start":{"line_number":10260,"utf16_col":22},"end":{"line_number":10260,"utf16_col":27}},"extent_utf16":{"start":{"line_number":10260,"utf16_col":0},"end":{"line_number":10264,"utf16_col":1}}},{"name":"Patch","kind":"method","ident_start":343644,"ident_end":343649,"extent_start":343622,"extent_end":343983,"fully_qualified_name":"Client::Patch","ident_utf16":{"start":{"line_number":10265,"utf16_col":22},"end":{"line_number":10265,"utf16_col":27}},"extent_utf16":{"start":{"line_number":10265,"utf16_col":0},"end":{"line_number":10271,"utf16_col":1}}},{"name":"Patch","kind":"method","ident_start":344006,"ident_end":344011,"extent_start":343984,"extent_end":344174,"fully_qualified_name":"Client::Patch","ident_utf16":{"start":{"line_number":10272,"utf16_col":22},"end":{"line_number":10272,"utf16_col":27}},"extent_utf16":{"start":{"line_number":10272,"utf16_col":0},"end":{"line_number":10275,"utf16_col":1}}},{"name":"Patch","kind":"method","ident_start":344197,"ident_end":344202,"extent_start":344175,"extent_end":344422,"fully_qualified_name":"Client::Patch","ident_utf16":{"start":{"line_number":10276,"utf16_col":22},"end":{"line_number":10276,"utf16_col":27}},"extent_utf16":{"start":{"line_number":10276,"utf16_col":0},"end":{"line_number":10280,"utf16_col":1}}},{"name":"Patch","kind":"method","ident_start":344445,"ident_end":344450,"extent_start":344423,"extent_end":344674,"fully_qualified_name":"Client::Patch","ident_utf16":{"start":{"line_number":10281,"utf16_col":22},"end":{"line_number":10281,"utf16_col":27}},"extent_utf16":{"start":{"line_number":10281,"utf16_col":0},"end":{"line_number":10285,"utf16_col":1}}},{"name":"Patch","kind":"method","ident_start":344697,"ident_end":344702,"extent_start":344675,"extent_end":344983,"fully_qualified_name":"Client::Patch","ident_utf16":{"start":{"line_number":10286,"utf16_col":22},"end":{"line_number":10286,"utf16_col":27}},"extent_utf16":{"start":{"line_number":10286,"utf16_col":0},"end":{"line_number":10291,"utf16_col":1}}},{"name":"Patch","kind":"method","ident_start":345006,"ident_end":345011,"extent_start":344984,"extent_end":345294,"fully_qualified_name":"Client::Patch","ident_utf16":{"start":{"line_number":10292,"utf16_col":22},"end":{"line_number":10292,"utf16_col":27}},"extent_utf16":{"start":{"line_number":10292,"utf16_col":0},"end":{"line_number":10297,"utf16_col":1}}},{"name":"Patch","kind":"method","ident_start":345317,"ident_end":345322,"extent_start":345295,"extent_end":345558,"fully_qualified_name":"Client::Patch","ident_utf16":{"start":{"line_number":10298,"utf16_col":22},"end":{"line_number":10298,"utf16_col":27}},"extent_utf16":{"start":{"line_number":10298,"utf16_col":0},"end":{"line_number":10302,"utf16_col":1}}},{"name":"Patch","kind":"method","ident_start":345581,"ident_end":345586,"extent_start":345559,"extent_end":345930,"fully_qualified_name":"Client::Patch","ident_utf16":{"start":{"line_number":10303,"utf16_col":22},"end":{"line_number":10303,"utf16_col":27}},"extent_utf16":{"start":{"line_number":10303,"utf16_col":0},"end":{"line_number":10309,"utf16_col":1}}},{"name":"Patch","kind":"method","ident_start":345953,"ident_end":345958,"extent_start":345931,"extent_end":346227,"fully_qualified_name":"Client::Patch","ident_utf16":{"start":{"line_number":10310,"utf16_col":22},"end":{"line_number":10310,"utf16_col":27}},"extent_utf16":{"start":{"line_number":10310,"utf16_col":0},"end":{"line_number":10314,"utf16_col":1}}},{"name":"Delete","kind":"method","ident_start":346250,"ident_end":346256,"extent_start":346228,"extent_end":346314,"fully_qualified_name":"Client::Delete","ident_utf16":{"start":{"line_number":10315,"utf16_col":22},"end":{"line_number":10315,"utf16_col":28}},"extent_utf16":{"start":{"line_number":10315,"utf16_col":0},"end":{"line_number":10317,"utf16_col":1}}},{"name":"Delete","kind":"method","ident_start":346337,"ident_end":346343,"extent_start":346315,"extent_end":346434,"fully_qualified_name":"Client::Delete","ident_utf16":{"start":{"line_number":10318,"utf16_col":22},"end":{"line_number":10318,"utf16_col":28}},"extent_utf16":{"start":{"line_number":10318,"utf16_col":0},"end":{"line_number":10320,"utf16_col":1}}},{"name":"Delete","kind":"method","ident_start":346457,"ident_end":346463,"extent_start":346435,"extent_end":346689,"fully_qualified_name":"Client::Delete","ident_utf16":{"start":{"line_number":10321,"utf16_col":22},"end":{"line_number":10321,"utf16_col":28}},"extent_utf16":{"start":{"line_number":10321,"utf16_col":0},"end":{"line_number":10325,"utf16_col":1}}},{"name":"Delete","kind":"method","ident_start":346712,"ident_end":346718,"extent_start":346690,"extent_end":347002,"fully_qualified_name":"Client::Delete","ident_utf16":{"start":{"line_number":10326,"utf16_col":22},"end":{"line_number":10326,"utf16_col":28}},"extent_utf16":{"start":{"line_number":10326,"utf16_col":0},"end":{"line_number":10331,"utf16_col":1}}},{"name":"Delete","kind":"method","ident_start":347025,"ident_end":347031,"extent_start":347003,"extent_end":347290,"fully_qualified_name":"Client::Delete","ident_utf16":{"start":{"line_number":10332,"utf16_col":22},"end":{"line_number":10332,"utf16_col":28}},"extent_utf16":{"start":{"line_number":10332,"utf16_col":0},"end":{"line_number":10336,"utf16_col":1}}},{"name":"Delete","kind":"method","ident_start":347313,"ident_end":347319,"extent_start":347291,"extent_end":347658,"fully_qualified_name":"Client::Delete","ident_utf16":{"start":{"line_number":10337,"utf16_col":22},"end":{"line_number":10337,"utf16_col":28}},"extent_utf16":{"start":{"line_number":10337,"utf16_col":0},"end":{"line_number":10343,"utf16_col":1}}},{"name":"Delete","kind":"method","ident_start":347681,"ident_end":347687,"extent_start":347659,"extent_end":347852,"fully_qualified_name":"Client::Delete","ident_utf16":{"start":{"line_number":10344,"utf16_col":22},"end":{"line_number":10344,"utf16_col":28}},"extent_utf16":{"start":{"line_number":10344,"utf16_col":0},"end":{"line_number":10347,"utf16_col":1}}},{"name":"Delete","kind":"method","ident_start":347875,"ident_end":347881,"extent_start":347853,"extent_end":348104,"fully_qualified_name":"Client::Delete","ident_utf16":{"start":{"line_number":10348,"utf16_col":22},"end":{"line_number":10348,"utf16_col":28}},"extent_utf16":{"start":{"line_number":10348,"utf16_col":0},"end":{"line_number":10352,"utf16_col":1}}},{"name":"Delete","kind":"method","ident_start":348127,"ident_end":348133,"extent_start":348105,"extent_end":348360,"fully_qualified_name":"Client::Delete","ident_utf16":{"start":{"line_number":10353,"utf16_col":22},"end":{"line_number":10353,"utf16_col":28}},"extent_utf16":{"start":{"line_number":10353,"utf16_col":0},"end":{"line_number":10357,"utf16_col":1}}},{"name":"Delete","kind":"method","ident_start":348383,"ident_end":348389,"extent_start":348361,"extent_end":348674,"fully_qualified_name":"Client::Delete","ident_utf16":{"start":{"line_number":10358,"utf16_col":22},"end":{"line_number":10358,"utf16_col":28}},"extent_utf16":{"start":{"line_number":10358,"utf16_col":0},"end":{"line_number":10363,"utf16_col":1}}},{"name":"Options","kind":"method","ident_start":348697,"ident_end":348704,"extent_start":348675,"extent_end":348763,"fully_qualified_name":"Client::Options","ident_utf16":{"start":{"line_number":10364,"utf16_col":22},"end":{"line_number":10364,"utf16_col":29}},"extent_utf16":{"start":{"line_number":10364,"utf16_col":0},"end":{"line_number":10366,"utf16_col":1}}},{"name":"Options","kind":"method","ident_start":348786,"ident_end":348793,"extent_start":348764,"extent_end":348885,"fully_qualified_name":"Client::Options","ident_utf16":{"start":{"line_number":10367,"utf16_col":22},"end":{"line_number":10367,"utf16_col":29}},"extent_utf16":{"start":{"line_number":10367,"utf16_col":0},"end":{"line_number":10369,"utf16_col":1}}},{"name":"send","kind":"method","ident_start":348907,"ident_end":348911,"extent_start":348887,"extent_end":348996,"fully_qualified_name":"Client::send","ident_utf16":{"start":{"line_number":10371,"utf16_col":20},"end":{"line_number":10371,"utf16_col":24}},"extent_utf16":{"start":{"line_number":10371,"utf16_col":0},"end":{"line_number":10373,"utf16_col":1}}},{"name":"send","kind":"method","ident_start":349020,"ident_end":349024,"extent_start":348998,"extent_end":349072,"fully_qualified_name":"Client::send","ident_utf16":{"start":{"line_number":10375,"utf16_col":22},"end":{"line_number":10375,"utf16_col":26}},"extent_utf16":{"start":{"line_number":10375,"utf16_col":0},"end":{"line_number":10375,"utf16_col":74}}},{"name":"stop","kind":"method","ident_start":349094,"ident_end":349098,"extent_start":349074,"extent_end":349118,"fully_qualified_name":"Client::stop","ident_utf16":{"start":{"line_number":10377,"utf16_col":20},"end":{"line_number":10377,"utf16_col":24}},"extent_utf16":{"start":{"line_number":10377,"utf16_col":0},"end":{"line_number":10377,"utf16_col":44}}},{"name":"host","kind":"method","ident_start":349147,"ident_end":349151,"extent_start":349120,"extent_end":349184,"fully_qualified_name":"Client::host","ident_utf16":{"start":{"line_number":10379,"utf16_col":27},"end":{"line_number":10379,"utf16_col":31}},"extent_utf16":{"start":{"line_number":10379,"utf16_col":0},"end":{"line_number":10379,"utf16_col":64}}},{"name":"port","kind":"method","ident_start":349205,"ident_end":349209,"extent_start":349186,"extent_end":349242,"fully_qualified_name":"Client::port","ident_utf16":{"start":{"line_number":10381,"utf16_col":19},"end":{"line_number":10381,"utf16_col":23}},"extent_utf16":{"start":{"line_number":10381,"utf16_col":0},"end":{"line_number":10381,"utf16_col":56}}},{"name":"is_socket_open","kind":"method","ident_start":349266,"ident_end":349280,"extent_start":349244,"extent_end":349323,"fully_qualified_name":"Client::is_socket_open","ident_utf16":{"start":{"line_number":10383,"utf16_col":22},"end":{"line_number":10383,"utf16_col":36}},"extent_utf16":{"start":{"line_number":10383,"utf16_col":0},"end":{"line_number":10383,"utf16_col":79}}},{"name":"socket","kind":"method","ident_start":349349,"ident_end":349355,"extent_start":349325,"extent_end":349390,"fully_qualified_name":"Client::socket","ident_utf16":{"start":{"line_number":10385,"utf16_col":24},"end":{"line_number":10385,"utf16_col":30}},"extent_utf16":{"start":{"line_number":10385,"utf16_col":0},"end":{"line_number":10385,"utf16_col":65}}},{"name":"set_hostname_addr_map","kind":"method","ident_start":349412,"ident_end":349433,"extent_start":349392,"extent_end":349534,"fully_qualified_name":"Client::set_hostname_addr_map","ident_utf16":{"start":{"line_number":10388,"utf16_col":8},"end":{"line_number":10388,"utf16_col":29}},"extent_utf16":{"start":{"line_number":10387,"utf16_col":0},"end":{"line_number":10390,"utf16_col":1}}},{"name":"set_default_headers","kind":"method","ident_start":349556,"ident_end":349575,"extent_start":349536,"extent_end":349645,"fully_qualified_name":"Client::set_default_headers","ident_utf16":{"start":{"line_number":10392,"utf16_col":20},"end":{"line_number":10392,"utf16_col":39}},"extent_utf16":{"start":{"line_number":10392,"utf16_col":0},"end":{"line_number":10394,"utf16_col":1}}},{"name":"set_header_writer","kind":"method","ident_start":349667,"ident_end":349684,"extent_start":349647,"extent_end":349787,"fully_qualified_name":"Client::set_header_writer","ident_utf16":{"start":{"line_number":10396,"utf16_col":20},"end":{"line_number":10396,"utf16_col":37}},"extent_utf16":{"start":{"line_number":10396,"utf16_col":0},"end":{"line_number":10399,"utf16_col":1}}},{"name":"set_address_family","kind":"method","ident_start":349809,"ident_end":349827,"extent_start":349789,"extent_end":349879,"fully_qualified_name":"Client::set_address_family","ident_utf16":{"start":{"line_number":10401,"utf16_col":20},"end":{"line_number":10401,"utf16_col":38}},"extent_utf16":{"start":{"line_number":10401,"utf16_col":0},"end":{"line_number":10403,"utf16_col":1}}},{"name":"set_tcp_nodelay","kind":"method","ident_start":349901,"ident_end":349916,"extent_start":349881,"extent_end":349956,"fully_qualified_name":"Client::set_tcp_nodelay","ident_utf16":{"start":{"line_number":10405,"utf16_col":20},"end":{"line_number":10405,"utf16_col":35}},"extent_utf16":{"start":{"line_number":10405,"utf16_col":0},"end":{"line_number":10405,"utf16_col":75}}},{"name":"set_socket_options","kind":"method","ident_start":349978,"ident_end":349996,"extent_start":349958,"extent_end":350085,"fully_qualified_name":"Client::set_socket_options","ident_utf16":{"start":{"line_number":10407,"utf16_col":20},"end":{"line_number":10407,"utf16_col":38}},"extent_utf16":{"start":{"line_number":10407,"utf16_col":0},"end":{"line_number":10409,"utf16_col":1}}},{"name":"set_connection_timeout","kind":"method","ident_start":350107,"ident_end":350129,"extent_start":350087,"extent_end":350201,"fully_qualified_name":"Client::set_connection_timeout","ident_utf16":{"start":{"line_number":10411,"utf16_col":20},"end":{"line_number":10411,"utf16_col":42}},"extent_utf16":{"start":{"line_number":10411,"utf16_col":0},"end":{"line_number":10413,"utf16_col":1}}},{"name":"set_read_timeout","kind":"method","ident_start":350223,"ident_end":350239,"extent_start":350203,"extent_end":350305,"fully_qualified_name":"Client::set_read_timeout","ident_utf16":{"start":{"line_number":10415,"utf16_col":20},"end":{"line_number":10415,"utf16_col":36}},"extent_utf16":{"start":{"line_number":10415,"utf16_col":0},"end":{"line_number":10417,"utf16_col":1}}},{"name":"set_write_timeout","kind":"method","ident_start":350327,"ident_end":350344,"extent_start":350307,"extent_end":350411,"fully_qualified_name":"Client::set_write_timeout","ident_utf16":{"start":{"line_number":10419,"utf16_col":20},"end":{"line_number":10419,"utf16_col":37}},"extent_utf16":{"start":{"line_number":10419,"utf16_col":0},"end":{"line_number":10421,"utf16_col":1}}},{"name":"set_basic_auth","kind":"method","ident_start":350433,"ident_end":350447,"extent_start":350413,"extent_end":350588,"fully_qualified_name":"Client::set_basic_auth","ident_utf16":{"start":{"line_number":10423,"utf16_col":20},"end":{"line_number":10423,"utf16_col":34}},"extent_utf16":{"start":{"line_number":10423,"utf16_col":0},"end":{"line_number":10426,"utf16_col":1}}},{"name":"set_bearer_token_auth","kind":"method","ident_start":350609,"ident_end":350630,"extent_start":350589,"extent_end":350698,"fully_qualified_name":"Client::set_bearer_token_auth","ident_utf16":{"start":{"line_number":10427,"utf16_col":20},"end":{"line_number":10427,"utf16_col":41}},"extent_utf16":{"start":{"line_number":10427,"utf16_col":0},"end":{"line_number":10429,"utf16_col":1}}},{"name":"set_digest_auth","kind":"method","ident_start":350753,"ident_end":350768,"extent_start":350733,"extent_end":350911,"fully_qualified_name":"Client::set_digest_auth","ident_utf16":{"start":{"line_number":10431,"utf16_col":20},"end":{"line_number":10431,"utf16_col":35}},"extent_utf16":{"start":{"line_number":10431,"utf16_col":0},"end":{"line_number":10434,"utf16_col":1}}},{"name":"set_keep_alive","kind":"method","ident_start":350940,"ident_end":350954,"extent_start":350920,"extent_end":350993,"fully_qualified_name":"Client::set_keep_alive","ident_utf16":{"start":{"line_number":10437,"utf16_col":20},"end":{"line_number":10437,"utf16_col":34}},"extent_utf16":{"start":{"line_number":10437,"utf16_col":0},"end":{"line_number":10437,"utf16_col":73}}},{"name":"set_follow_location","kind":"method","ident_start":351014,"ident_end":351033,"extent_start":350994,"extent_end":351079,"fully_qualified_name":"Client::set_follow_location","ident_utf16":{"start":{"line_number":10438,"utf16_col":20},"end":{"line_number":10438,"utf16_col":39}},"extent_utf16":{"start":{"line_number":10438,"utf16_col":0},"end":{"line_number":10440,"utf16_col":1}}},{"name":"set_url_encode","kind":"method","ident_start":351101,"ident_end":351115,"extent_start":351081,"extent_end":351154,"fully_qualified_name":"Client::set_url_encode","ident_utf16":{"start":{"line_number":10442,"utf16_col":20},"end":{"line_number":10442,"utf16_col":34}},"extent_utf16":{"start":{"line_number":10442,"utf16_col":0},"end":{"line_number":10442,"utf16_col":73}}},{"name":"set_compress","kind":"method","ident_start":351176,"ident_end":351188,"extent_start":351156,"extent_end":351225,"fully_qualified_name":"Client::set_compress","ident_utf16":{"start":{"line_number":10444,"utf16_col":20},"end":{"line_number":10444,"utf16_col":32}},"extent_utf16":{"start":{"line_number":10444,"utf16_col":0},"end":{"line_number":10444,"utf16_col":69}}},{"name":"set_decompress","kind":"method","ident_start":351247,"ident_end":351261,"extent_start":351227,"extent_end":351300,"fully_qualified_name":"Client::set_decompress","ident_utf16":{"start":{"line_number":10446,"utf16_col":20},"end":{"line_number":10446,"utf16_col":34}},"extent_utf16":{"start":{"line_number":10446,"utf16_col":0},"end":{"line_number":10446,"utf16_col":73}}},{"name":"set_interface","kind":"method","ident_start":351322,"ident_end":351335,"extent_start":351302,"extent_end":351393,"fully_qualified_name":"Client::set_interface","ident_utf16":{"start":{"line_number":10448,"utf16_col":20},"end":{"line_number":10448,"utf16_col":33}},"extent_utf16":{"start":{"line_number":10448,"utf16_col":0},"end":{"line_number":10450,"utf16_col":1}}},{"name":"set_proxy","kind":"method","ident_start":351415,"ident_end":351424,"extent_start":351395,"extent_end":351494,"fully_qualified_name":"Client::set_proxy","ident_utf16":{"start":{"line_number":10452,"utf16_col":20},"end":{"line_number":10452,"utf16_col":29}},"extent_utf16":{"start":{"line_number":10452,"utf16_col":0},"end":{"line_number":10454,"utf16_col":1}}},{"name":"set_proxy_basic_auth","kind":"method","ident_start":351515,"ident_end":351535,"extent_start":351495,"extent_end":351688,"fully_qualified_name":"Client::set_proxy_basic_auth","ident_utf16":{"start":{"line_number":10455,"utf16_col":20},"end":{"line_number":10455,"utf16_col":40}},"extent_utf16":{"start":{"line_number":10455,"utf16_col":0},"end":{"line_number":10458,"utf16_col":1}}},{"name":"set_proxy_bearer_token_auth","kind":"method","ident_start":351709,"ident_end":351736,"extent_start":351689,"extent_end":351810,"fully_qualified_name":"Client::set_proxy_bearer_token_auth","ident_utf16":{"start":{"line_number":10459,"utf16_col":20},"end":{"line_number":10459,"utf16_col":47}},"extent_utf16":{"start":{"line_number":10459,"utf16_col":0},"end":{"line_number":10461,"utf16_col":1}}},{"name":"set_proxy_digest_auth","kind":"method","ident_start":351865,"ident_end":351886,"extent_start":351845,"extent_end":352041,"fully_qualified_name":"Client::set_proxy_digest_auth","ident_utf16":{"start":{"line_number":10463,"utf16_col":20},"end":{"line_number":10463,"utf16_col":41}},"extent_utf16":{"start":{"line_number":10463,"utf16_col":0},"end":{"line_number":10466,"utf16_col":1}}},{"name":"enable_server_certificate_verification","kind":"method","ident_start":352104,"ident_end":352142,"extent_start":352084,"extent_end":352217,"fully_qualified_name":"Client::enable_server_certificate_verification","ident_utf16":{"start":{"line_number":10470,"utf16_col":20},"end":{"line_number":10470,"utf16_col":58}},"extent_utf16":{"start":{"line_number":10470,"utf16_col":0},"end":{"line_number":10472,"utf16_col":1}}},{"name":"enable_server_hostname_verification","kind":"method","ident_start":352239,"ident_end":352274,"extent_start":352219,"extent_end":352346,"fully_qualified_name":"Client::enable_server_hostname_verification","ident_utf16":{"start":{"line_number":10474,"utf16_col":20},"end":{"line_number":10474,"utf16_col":55}},"extent_utf16":{"start":{"line_number":10474,"utf16_col":0},"end":{"line_number":10476,"utf16_col":1}}},{"name":"set_server_certificate_verifier","kind":"method","ident_start":352368,"ident_end":352399,"extent_start":352348,"extent_end":352514,"fully_qualified_name":"Client::set_server_certificate_verifier","ident_utf16":{"start":{"line_number":10478,"utf16_col":20},"end":{"line_number":10478,"utf16_col":51}},"extent_utf16":{"start":{"line_number":10478,"utf16_col":0},"end":{"line_number":10481,"utf16_col":1}}},{"name":"set_logger","kind":"method","ident_start":352543,"ident_end":352553,"extent_start":352523,"extent_end":352611,"fully_qualified_name":"Client::set_logger","ident_utf16":{"start":{"line_number":10484,"utf16_col":20},"end":{"line_number":10484,"utf16_col":30}},"extent_utf16":{"start":{"line_number":10484,"utf16_col":0},"end":{"line_number":10486,"utf16_col":1}}},{"name":"set_ca_cert_path","kind":"method","ident_start":352667,"ident_end":352683,"extent_start":352647,"extent_end":352862,"fully_qualified_name":"Client::set_ca_cert_path","ident_utf16":{"start":{"line_number":10489,"utf16_col":20},"end":{"line_number":10489,"utf16_col":36}},"extent_utf16":{"start":{"line_number":10489,"utf16_col":0},"end":{"line_number":10492,"utf16_col":1}}},{"name":"set_ca_cert_store","kind":"method","ident_start":352884,"ident_end":352901,"extent_start":352864,"extent_end":353078,"fully_qualified_name":"Client::set_ca_cert_store","ident_utf16":{"start":{"line_number":10494,"utf16_col":20},"end":{"line_number":10494,"utf16_col":37}},"extent_utf16":{"start":{"line_number":10494,"utf16_col":0},"end":{"line_number":10500,"utf16_col":1}}},{"name":"load_ca_cert_store","kind":"method","ident_start":353100,"ident_end":353118,"extent_start":353080,"extent_end":353225,"fully_qualified_name":"Client::load_ca_cert_store","ident_utf16":{"start":{"line_number":10502,"utf16_col":20},"end":{"line_number":10502,"utf16_col":38}},"extent_utf16":{"start":{"line_number":10502,"utf16_col":0},"end":{"line_number":10504,"utf16_col":1}}},{"name":"get_openssl_verify_result","kind":"method","ident_start":353247,"ident_end":353272,"extent_start":353227,"extent_end":353438,"fully_qualified_name":"Client::get_openssl_verify_result","ident_utf16":{"start":{"line_number":10506,"utf16_col":20},"end":{"line_number":10506,"utf16_col":45}},"extent_utf16":{"start":{"line_number":10506,"utf16_col":0},"end":{"line_number":10511,"utf16_col":1}}}]}},"copilotInfo":null,"copilotAccessAllowed":false,"modelsAccessAllowed":false,"modelsRepoIntegrationEnabled":false,"csrf_tokens":{"/yhirose/cpp-httplib/branches":{"post":"V7cslwx5bUd47ODg8JpNAkEoWxXzSv_QBePD5fHWLL1dVFybwq3taHhk2WPiEqwsfoQMDxYpukLSNQ8znU5OTQ"},"/repos/preferences":{"post":"wJWNnV71qT0Q-SB954jiNG-5Xh1vsugwd-REnHQycvmDV1uvEpVFBZOrE_Sd1d7GS8H9u707dyICcgnMaI8ohA"}}},"title":"cpp-httplib/httplib.h at master · yhirose/cpp-httplib","appPayload":{"helpUrl":"https://docs.github.com","findFileWorkerPath":"/assets-cdn/worker/find-file-worker-7d7eb7c71814.js","findInFileWorkerPath":"/assets-cdn/worker/find-in-file-worker-1ae9fa256942.js","githubDevUrl":null,"enabled_features":{"code_nav_ui_events":false,"react_blob_overlay":false,"accessible_code_button":true,"github_models_repo_integration":false}}}</script>
  <div data-target="react-app.reactRoot"></div>
</react-app>
</turbo-frame>



  </div>

</turbo-frame>

    </main>
  </div>

  </div>

          <footer class="footer pt-8 pb-6 f6 color-fg-muted p-responsive" role="contentinfo" >
  <h2 class='sr-only'>Footer</h2>

  


  <div class="d-flex flex-justify-center flex-items-center flex-column-reverse flex-lg-row flex-wrap flex-lg-nowrap">
    <div class="d-flex flex-items-center flex-shrink-0 mx-2">
      <a aria-label="Homepage" title="GitHub" class="footer-octicon mr-2" href="https://github.com">
        <svg aria-hidden="true" height="24" viewBox="0 0 24 24" version="1.1" width="24" data-view-component="true" class="octicon octicon-mark-github">
    <path d="M12 1C5.9225 1 1 5.9225 1 12C1 16.8675 4.14875 20.9787 8.52125 22.4362C9.07125 22.5325 9.2775 22.2025 9.2775 21.9137C9.2775 21.6525 9.26375 20.7862 9.26375 19.865C6.5 20.3737 5.785 19.1912 5.565 18.5725C5.44125 18.2562 4.905 17.28 4.4375 17.0187C4.0525 16.8125 3.5025 16.3037 4.42375 16.29C5.29 16.2762 5.90875 17.0875 6.115 17.4175C7.105 19.0812 8.68625 18.6137 9.31875 18.325C9.415 17.61 9.70375 17.1287 10.02 16.8537C7.5725 16.5787 5.015 15.63 5.015 11.4225C5.015 10.2262 5.44125 9.23625 6.1425 8.46625C6.0325 8.19125 5.6475 7.06375 6.2525 5.55125C6.2525 5.55125 7.17375 5.2625 9.2775 6.67875C10.1575 6.43125 11.0925 6.3075 12.0275 6.3075C12.9625 6.3075 13.8975 6.43125 14.7775 6.67875C16.8813 5.24875 17.8025 5.55125 17.8025 5.55125C18.4075 7.06375 18.0225 8.19125 17.9125 8.46625C18.6138 9.23625 19.04 10.2125 19.04 11.4225C19.04 15.6437 16.4688 16.5787 14.0213 16.8537C14.42 17.1975 14.7638 17.8575 14.7638 18.8887C14.7638 20.36 14.75 21.5425 14.75 21.9137C14.75 22.2025 14.9563 22.5462 15.5063 22.4362C19.8513 20.9787 23 16.8537 23 12C23 5.9225 18.0775 1 12 1Z"></path>
</svg>
</a>
      <span>
        &copy; 2025 GitHub,&nbsp;Inc.
      </span>
    </div>

    <nav aria-label="Footer">
      <h3 class="sr-only" id="sr-footer-heading">Footer navigation</h3>

      <ul class="list-style-none d-flex flex-justify-center flex-wrap mb-2 mb-lg-0" aria-labelledby="sr-footer-heading">

          <li class="mx-2">
            <a data-analytics-event="{&quot;category&quot;:&quot;Footer&quot;,&quot;action&quot;:&quot;go to Terms&quot;,&quot;label&quot;:&quot;text:terms&quot;}" href="https://docs.github.com/site-policy/github-terms/github-terms-of-service" data-view-component="true" class="Link--secondary Link">Terms</a>
          </li>

          <li class="mx-2">
            <a data-analytics-event="{&quot;category&quot;:&quot;Footer&quot;,&quot;action&quot;:&quot;go to privacy&quot;,&quot;label&quot;:&quot;text:privacy&quot;}" href="https://docs.github.com/site-policy/privacy-policies/github-privacy-statement" data-view-component="true" class="Link--secondary Link">Privacy</a>
          </li>

          <li class="mx-2">
            <a data-analytics-event="{&quot;category&quot;:&quot;Footer&quot;,&quot;action&quot;:&quot;go to security&quot;,&quot;label&quot;:&quot;text:security&quot;}" href="https://github.com/security" data-view-component="true" class="Link--secondary Link">Security</a>
          </li>

          <li class="mx-2">
            <a data-analytics-event="{&quot;category&quot;:&quot;Footer&quot;,&quot;action&quot;:&quot;go to status&quot;,&quot;label&quot;:&quot;text:status&quot;}" href="https://www.githubstatus.com/" data-view-component="true" class="Link--secondary Link">Status</a>
          </li>

          <li class="mx-2">
            <a data-analytics-event="{&quot;category&quot;:&quot;Footer&quot;,&quot;action&quot;:&quot;go to docs&quot;,&quot;label&quot;:&quot;text:docs&quot;}" href="https://docs.github.com/" data-view-component="true" class="Link--secondary Link">Docs</a>
          </li>

          <li class="mx-2">
            <a data-analytics-event="{&quot;category&quot;:&quot;Footer&quot;,&quot;action&quot;:&quot;go to contact&quot;,&quot;label&quot;:&quot;text:contact&quot;}" href="https://support.github.com?tags=dotcom-footer" data-view-component="true" class="Link--secondary Link">Contact</a>
          </li>

          <li class="mx-2" >
  <cookie-consent-link>
    <button
      type="button"
      class="Link--secondary underline-on-hover border-0 p-0 color-bg-transparent"
      data-action="click:cookie-consent-link#showConsentManagement"
      data-analytics-event="{&quot;location&quot;:&quot;footer&quot;,&quot;action&quot;:&quot;cookies&quot;,&quot;context&quot;:&quot;subfooter&quot;,&quot;tag&quot;:&quot;link&quot;,&quot;label&quot;:&quot;cookies_link_subfooter_footer&quot;}"
    >
      Manage cookies
    </button>
  </cookie-consent-link>
</li>

<li class="mx-2">
  <cookie-consent-link>
    <button
      type="button"
      class="Link--secondary underline-on-hover border-0 p-0 color-bg-transparent"
      data-action="click:cookie-consent-link#showConsentManagement"
      data-analytics-event="{&quot;location&quot;:&quot;footer&quot;,&quot;action&quot;:&quot;dont_share_info&quot;,&quot;context&quot;:&quot;subfooter&quot;,&quot;tag&quot;:&quot;link&quot;,&quot;label&quot;:&quot;dont_share_info_link_subfooter_footer&quot;}"
    >
      Do not share my personal information
    </button>
  </cookie-consent-link>
</li>

      </ul>
    </nav>
  </div>
</footer>



    <ghcc-consent id="ghcc" class="position-fixed bottom-0 left-0" style="z-index: 999999" data-initial-cookie-consent-allowed="" data-cookie-consent-required="false"></ghcc-consent>



  <div id="ajax-error-message" class="ajax-error-message flash flash-error" hidden>
    <svg aria-hidden="true" height="16" viewBox="0 0 16 16" version="1.1" width="16" data-view-component="true" class="octicon octicon-alert">
    <path d="M6.457 1.047c.659-1.234 2.427-1.234 3.086 0l6.082 11.378A1.75 1.75 0 0 1 14.082 15H1.918a1.75 1.75 0 0 1-1.543-2.575Zm1.763.707a.25.25 0 0 0-.44 0L1.698 13.132a.25.25 0 0 0 .22.368h12.164a.25.25 0 0 0 .22-.368Zm.53 3.996v2.5a.75.75 0 0 1-1.5 0v-2.5a.75.75 0 0 1 1.5 0ZM9 11a1 1 0 1 1-2 0 1 1 0 0 1 2 0Z"></path>
</svg>
    <button type="button" class="flash-close js-ajax-error-dismiss" aria-label="Dismiss error">
      <svg aria-hidden="true" height="16" viewBox="0 0 16 16" version="1.1" width="16" data-view-component="true" class="octicon octicon-x">
    <path d="M3.72 3.72a.75.75 0 0 1 1.06 0L8 6.94l3.22-3.22a.749.749 0 0 1 1.275.326.749.749 0 0 1-.215.734L9.06 8l3.22 3.22a.749.749 0 0 1-.326 1.275.749.749 0 0 1-.734-.215L8 9.06l-3.22 3.22a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042L6.94 8 3.72 4.78a.75.75 0 0 1 0-1.06Z"></path>
</svg>
    </button>
    You can’t perform that action at this time.
  </div>

    <template id="site-details-dialog">
  <details class="details-reset details-overlay details-overlay-dark lh-default color-fg-default hx_rsm" open>
    <summary role="button" aria-label="Close dialog"></summary>
    <details-dialog class="Box Box--overlay d-flex flex-column anim-fade-in fast hx_rsm-dialog hx_rsm-modal">
      <button class="Box-btn-octicon m-0 btn-octicon position-absolute right-0 top-0" type="button" aria-label="Close dialog" data-close-dialog>
        <svg aria-hidden="true" height="16" viewBox="0 0 16 16" version="1.1" width="16" data-view-component="true" class="octicon octicon-x">
    <path d="M3.72 3.72a.75.75 0 0 1 1.06 0L8 6.94l3.22-3.22a.749.749 0 0 1 1.275.326.749.749 0 0 1-.215.734L9.06 8l3.22 3.22a.749.749 0 0 1-.326 1.275.749.749 0 0 1-.734-.215L8 9.06l-3.22 3.22a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042L6.94 8 3.72 4.78a.75.75 0 0 1 0-1.06Z"></path>
</svg>
      </button>
      <div class="octocat-spinner my-6 js-details-dialog-spinner"></div>
    </details-dialog>
  </details>
</template>

    <div class="Popover js-hovercard-content position-absolute" style="display: none; outline: none;">
  <div class="Popover-message Popover-message--bottom-left Popover-message--large Box color-shadow-large" style="width:360px;">
  </div>
</div>

    <template id="snippet-clipboard-copy-button">
  <div class="zeroclipboard-container position-absolute right-0 top-0">
    <clipboard-copy aria-label="Copy" class="ClipboardButton btn js-clipboard-copy m-2 p-0" data-copy-feedback="Copied!" data-tooltip-direction="w">
      <svg aria-hidden="true" height="16" viewBox="0 0 16 16" version="1.1" width="16" data-view-component="true" class="octicon octicon-copy js-clipboard-copy-icon m-2">
    <path d="M0 6.75C0 5.784.784 5 1.75 5h1.5a.75.75 0 0 1 0 1.5h-1.5a.25.25 0 0 0-.25.25v7.5c0 .138.112.25.25.25h7.5a.25.25 0 0 0 .25-.25v-1.5a.75.75 0 0 1 1.5 0v1.5A1.75 1.75 0 0 1 9.25 16h-7.5A1.75 1.75 0 0 1 0 14.25Z"></path><path d="M5 1.75C5 .784 5.784 0 6.75 0h7.5C15.216 0 16 .784 16 1.75v7.5A1.75 1.75 0 0 1 14.25 11h-7.5A1.75 1.75 0 0 1 5 9.25Zm1.75-.25a.25.25 0 0 0-.25.25v7.5c0 .138.112.25.25.25h7.5a.25.25 0 0 0 .25-.25v-7.5a.25.25 0 0 0-.25-.25Z"></path>
</svg>
      <svg aria-hidden="true" height="16" viewBox="0 0 16 16" version="1.1" width="16" data-view-component="true" class="octicon octicon-check js-clipboard-check-icon color-fg-success d-none m-2">
    <path d="M13.78 4.22a.75.75 0 0 1 0 1.06l-7.25 7.25a.75.75 0 0 1-1.06 0L2.22 9.28a.751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018L6 10.94l6.72-6.72a.75.75 0 0 1 1.06 0Z"></path>
</svg>
    </clipboard-copy>
  </div>
</template>
<template id="snippet-clipboard-copy-button-unpositioned">
  <div class="zeroclipboard-container">
    <clipboard-copy aria-label="Copy" class="ClipboardButton btn btn-invisible js-clipboard-copy m-2 p-0 d-flex flex-justify-center flex-items-center" data-copy-feedback="Copied!" data-tooltip-direction="w">
      <svg aria-hidden="true" height="16" viewBox="0 0 16 16" version="1.1" width="16" data-view-component="true" class="octicon octicon-copy js-clipboard-copy-icon">
    <path d="M0 6.75C0 5.784.784 5 1.75 5h1.5a.75.75 0 0 1 0 1.5h-1.5a.25.25 0 0 0-.25.25v7.5c0 .138.112.25.25.25h7.5a.25.25 0 0 0 .25-.25v-1.5a.75.75 0 0 1 1.5 0v1.5A1.75 1.75 0 0 1 9.25 16h-7.5A1.75 1.75 0 0 1 0 14.25Z"></path><path d="M5 1.75C5 .784 5.784 0 6.75 0h7.5C15.216 0 16 .784 16 1.75v7.5A1.75 1.75 0 0 1 14.25 11h-7.5A1.75 1.75 0 0 1 5 9.25Zm1.75-.25a.25.25 0 0 0-.25.25v7.5c0 .138.112.25.25.25h7.5a.25.25 0 0 0 .25-.25v-7.5a.25.25 0 0 0-.25-.25Z"></path>
</svg>
      <svg aria-hidden="true" height="16" viewBox="0 0 16 16" version="1.1" width="16" data-view-component="true" class="octicon octicon-check js-clipboard-check-icon color-fg-success d-none">
    <path d="M13.78 4.22a.75.75 0 0 1 0 1.06l-7.25 7.25a.75.75 0 0 1-1.06 0L2.22 9.28a.751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018L6 10.94l6.72-6.72a.75.75 0 0 1 1.06 0Z"></path>
</svg>
    </clipboard-copy>
  </div>
</template>




    </div>

    <div id="js-global-screen-reader-notice" class="sr-only mt-n1" aria-live="polite" aria-atomic="true" ></div>
    <div id="js-global-screen-reader-notice-assertive" class="sr-only mt-n1" aria-live="assertive" aria-atomic="true"></div>
  </body>
</html>

